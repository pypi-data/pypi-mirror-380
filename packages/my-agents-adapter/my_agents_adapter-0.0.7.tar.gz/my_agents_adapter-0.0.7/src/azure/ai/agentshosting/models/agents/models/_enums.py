# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class AgentContainerOperationStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Status of the container operation for a specific version of an agent."""

    NOT_STARTED = "NotStarted"
    """The container operation is not started."""
    IN_PROGRESS = "InProgress"
    """The container operation is in progress."""
    SUCCEEDED = "Succeeded"
    """The container operation has succeeded."""
    FAILED = "Failed"
    """The container operation has failed."""


class AgentContainerStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Status of the container of a specific version of an agent."""

    STARTING = "Starting"
    """The container is starting."""
    RUNNING = "Running"
    """The container is running."""
    STOPPING = "Stopping"
    """The container is stopping."""
    STOPPED = "Stopped"
    """The container is stopped."""
    FAILED = "Failed"
    """The container has failed."""
    DELETING = "Deleting"
    """The container is deleting."""
    DELETED = "Deleted"
    """The container is deleted."""
    UPDATING = "Updating"
    """The container is updating."""


class AgentEventHandlerDestinationType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Type of AgentEventHandlerDestinationType."""

    EVALS = "evals"


class AgentEventType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Type of AgentEventType."""

    RESPONSE_COMPLETED = "response.completed"


class AgentKind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Type of AgentKind."""

    PROMPT = "prompt"
    HOSTED = "hosted"
    CONTAINER_APP = "container_app"
    WORKFLOW = "workflow"


class AgentProtocol(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Type of AgentProtocol."""

    ACTIVITY_PROTOCOL = "activity_protocol"
    RESPONSES = "responses"


class OpenApiAuthType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Authentication type for OpenApi endpoint. Allowed types are:

    * Anonymous (no authentication required)
    * Project Connection (requires project_connection_id to endpoint, as setup in AI Foundry)
    * Managed_Identity (requires audience for identity based auth).
    """

    ANONYMOUS = "anonymous"
    PROJECT_CONNECTION = "project_connection"
    MANAGED_IDENTITY = "managed_identity"
