Metadata-Version: 2.4
Name: decisive-tree
Version: 0.1.0
Summary: A collection of very decisive decision trees
Author-email: Mateus Diniz <mateushmdiniz@gmail.com>
License: MIT License
        
        Copyright (c) 2025 Mateus Diniz
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/mateushmd/decisive-tree
Project-URL: Bug Tracker, https://github.com/mateushmd/decisive-tree/issues
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy==2.3.3
Requires-Dist: pandas==2.3.2
Requires-Dist: treelib==1.8.0
Requires-Dist: matplotlib==3.10.6
Requires-Dist: seaborn==0.13.2
Dynamic: license-file

# Decisive Tree
My own ID3, C4.5 and CART implementations from scratch using only Python and some helper libraries for a college assignment.
## Build & Run
> Using `requirements.txt`
```sh
python -m venv .venv

# Windows
.\.venv\Scripts\activate

# Linux macOS
source .venv/bin/activate

pip install -r requirements.txt
```
> Using `Poetry` (Requires Poetry installed)
```sh
poetry install
poetry shell
```
