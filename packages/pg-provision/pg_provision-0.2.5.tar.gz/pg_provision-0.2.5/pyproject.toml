[build-system]
requires = ["setuptools>=68,<77", "wheel", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "pg-provision"
dynamic = ["version"]
description = "Idempotent PostgreSQL provisioning as a Python package (wrapping portable shell scripts)"
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [{name="John Jenkins", email="scr1ptcat@protonmail.com"}]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Environment :: Console",
  "Topic :: System :: Systems Administration",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Operating System :: POSIX :: Linux",
  "Intended Audience :: System Administrators",
]

[project.scripts]
pgprovision = "pgprovision.cli:main"

[project.urls]
Homepage = "https://github.com/scr1ptcat/pg-provision"
Repository = "https://github.com/scr1ptcat/pg-provision"
Issues = "https://github.com/scr1ptcat/pg-provision/issues"
PyPI = "https://pypi.org/project/pg-provision/"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = false
license-files = ["LICENSE"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"pgprovision" = [
  "_sh/*.sh",
  "_sh/lib/*.sh",
  "_sh/os/*.sh",
  "_sh/profiles/*.conf"
]

[tool.pytest.ini_options]
addopts = "-ra"
testpaths = ["tests"]

[tool.setuptools_scm]
tag_regex = "^(?:v)?(?P<version>.*)$"
