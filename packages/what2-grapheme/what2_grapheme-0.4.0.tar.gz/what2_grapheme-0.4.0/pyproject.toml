[project]
name = "what2-grapheme"
version = "0.4.0"
description = "A pure Python implementation of the Unicode algorithm for breaking strings of text into extended grapheme clusters (\"user-perceived characters\")."
authors = [
    { name = "Marc Edwards", email = "marc@mlwhat.com" },
]
dependencies = [
    "what2-regex>=0.1.0",
]
requires-python = ">=3.13"
readme = "README.md"

[project.license]
text = "MIT"

[project.urls]
Repository = "https://github.com/alwaysmpe/what2_grapheme"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true

[tool.pytest.ini_options]
addopts = "--doctest-modules --doctest-ignore-import-errors --ignore=tasks.py --ignore=test_old --ignore=bm --tb=short "

[tool.pyright]
pythonVersion = "3.13"
useLibraryCodeForTypes = true
reportMissingTypeStubs = false
reportImplicitOverride = true
deprecateTypingAliases = true
reportNoOverloadImplementation = false
reportUnusedImport = false
typeCheckingMode = "strict"
exclude = [
    "**/.ipynb_checkpoints/*",
    "**/.venv/",
    "./tasks.py",
    "./tests/conftest.py",
    "./tests",
    "./bm",
]
ignore = [
    "**/.ipynb_checkpoints/*",
    "**/.venv/",
    "./tasks.py",
]

[tool.ruff]
line-length = 160
indent-width = 4
target-version = "py312"
exclude = [
    "**/.ipynb_checkpoints/*",
    "**/.venv/",
    "tasks.py",
    "exp.py",
    "bm/*",
    "**/conftest.py",
    "test_old/*",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

[tool.ruff.lint]
preview = true
select = [
    "ALL",
    "D213",
    "D215",
    "D404",
    "D405",
    "D406",
    "D407",
    "D408",
    "D408",
    "D409",
    "D410",
    "D411",
    "D417",
]
ignore = [
    "D",
    "TC001",
    "TC002",
    "TC003",
    "DOC",
    "FIX002",
    "TD002",
    "TD003",
    "PLR1714",
    "CPY001",
    "S101",
    "E261",
    "SIM108",
    "PLC0414",
    "TRY003",
    "EM101",
]
unfixable = [
    "ERA001",
    "PLR1714",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D",
    "FBT001",
    "FURB118",
    "ANN",
    "S101",
    "PLC2701",
    "RUF001",
    "ERA001",
    "TRY002",
    "S404",
    "S603",
    "T201",
]
"src/what2_grapheme/simple_sm/state.py" = [
    "N802",
]
"src/what2_grapheme/fast_sm/state.py" = [
    "N802",
    "PLR2004",
]
"src/what2_grapheme/fast_sm/break_gen.py" = [
    "SIM103",
    "PLR2004",
]

[tool.ruff.lint.flake8-quotes]
avoid-escape = false
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
force-sort-within-sections = true
forced-separate = [
    "what2*",
    "tests",
    "pytest",
    "_pytest",
]

[tool.ruff.lint.mccabe]
max-complexity = 14

[tool.ruff.lint.pylint]
max-branches = 14
max-returns = 14
max-locals = 20

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.pylama]
ignore = "E261,C901,W0611"
skip = "*.ipynb_checkpoints/*,"
max_line_length = 160
format = "pylint"

[dependency-groups]
dev = [
    "pytest>=8.3.3",
    "pytest-order>=1.3.0",
    "pytest-gitignore>=1.3",
    "setuptools>=75.2.0",
    "toml>=0.10.2",
    "rich>=13.9.3",
    "what2>=0.3.3",
    "ugrapheme>=0.8",
    "graphemeu==0.7.2",
    "what2-time>=0.3.1",
    "pandas-stubs>=2.2.3.241009",
    "pyuegc>=16.0.0",
    "deptry",
    "basedpyright",
    "ruff",
    "pylama",
    "darglint2",
    "pyicu>=2.15.3",
    "numpy>=2.1.2",
    "pandas>=2.2.3",
    "regex>=2025.9.18",
]
