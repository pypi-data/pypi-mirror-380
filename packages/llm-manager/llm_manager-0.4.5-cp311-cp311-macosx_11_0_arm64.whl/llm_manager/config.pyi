import pathlib
from configparser import ConfigParser
from typing import Any
from cryptography.fernet import Fernet

class EnvConfig:
    _config_path: pathlib.Path
    _fernet: Fernet
    @classmethod
    def init_configer(cls) -> ConfigParser: ...
    @classmethod
    def sections(cls) -> str: ...
    @classmethod
    def read(cls, sections: str | list[str] | None = None, configer: ConfigParser | None = None) -> str: ...
    @classmethod
    def write(cls, section: str, force: bool = False, **kwargs: Any) -> None: ...
    @classmethod
    def delete(cls, section: str) -> None: ...

class Configurator:
    @staticmethod
    def configer() -> ConfigParser: ...
    @classmethod
    def options(cls, section: str) -> list[str]: ...
    @classmethod
    def has_option(cls, section: str, option: str) -> bool: ...
    @classmethod
    def get(cls, section: str, option: str, default: Any = ...) -> str | None: ...
    @classmethod
    def getboolean(cls, section: str, option: str, default: Any = ...) -> bool | None: ...
    @classmethod
    def getint(cls, section: str, option: str, default: Any = ...) -> int | None: ...
    @classmethod
    def getfloat(cls, section: str, option: str, default: Any = ...) -> float | None: ...
    @classmethod
    def get_any(cls, section: str, option: str, default: Any = ...) -> str | bool | int | float | None: ...
