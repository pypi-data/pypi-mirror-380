<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns="http://casa.nrao.edu/schema/psetTypes.html" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<task type="function" name="msuvbinflag" category="flagging, manipulation, imaging" visibility="experimental">
  <shortdescription>An algorithm to identify outliers in the UV plane via the UV grid generated by msuvbin.
      Both msuvbin and msuvbinflag tasks are experimental
  </shortdescription>
  <description>
          Msuvbinflag is an automatic flagging algorithm for the identification
          of Radio Frequency Interference (RFI) in the UV plane. Prior to flagging,
          the visibilities in the input CASA Measurements Set (MS) have to be
          gridded onto a uniforme UV plane using the msuvbin task.

          The principle underlying this algorithm is that RFI typically appears as
          large scale ripples in the image domain, and therefore as compact structures
          in the UV domain. Astronomical sources tend to have the opposite behavior, i.e.,
          compact in the image domain and extended in the UV domain. Therefore by locating
          compact outlier structures in the UV domain it should be possible to flag RFI.

  </description>
  <input>
    <param type="string" name="binnedvis" mustexist="true">
       <shortdescription> Name of input binned MS from msuvbin task.</shortdescription>
       <description> Name of input binned visibility data (MS) (the output of the msuvbin task).
                    default: none;
                    example: binnedvis='SNR_binnedvis.ms'
       </description>
    </param>

    <param type="any" name="method" required="true">
        <shortdescription> Flagging algorithm (radial_per_plane, radial_mean_annular) </shortdescription>
       <description> There are currently two algorithm options to identify outliers in the UV domain: radial_per_plane, radial_mean_annular

       radial_per_plane: This algorithm works independently
       on each plane (channel, polarization) of the binned ms. A mean radial profile is
       generated by doing a weighted average of all data at a given
       UV-radius. A polynomial is fit to the radially averaged
       profile. All the binned UV points that are larger than the
       nsigma threshold are flagged. The threshold is calculated as :

       originalValue[u,v] > radialfitValue[r]+nsigma*rms

       where (u,v) are the UV coordinates, r is the radial distance from the
       center, and rms is the rms of the radial profile at radius r.


       radial_mean_annular: This algorithm combines all the planes in the
       binned MS on to a single UV grid. This combined grid is then
       divided into annular circles from 0 through the maximum UV radius
       in log-spaced intervals. A radial profile is constructed by
       calculating the median values within each annulus, as well as
       the median absolute deviation scaled to the standard deviation.
       Similar to the radial_per_plane method, each plane is then individually
       treated, and a point in the UV plane is flagged if it is greater than
       the nsigma threshold. The threshold is calculated as :

       originalValue[u,v] > radiatValue[n] + nsigma*rms[n]

       where (u,v) are the UV coordinates, and n is the nth annulus.

      <!--
      method='regionalMean': This algorithm is to compute the
      statistical mean, median and standard deviation for every point
      as a center within a square region which the size is defined by
      user. A point is treated as an outliers to be flagged if it is
      beyond the certain criteria threshold.  eg: originalValue[x,y])
      > regionalMean+sigma*regionalStd

      method='gradient': This algorithm is to compute the gradient for
      every point.  Then a point is treated as an outliers to be
      flagged if there is a sudden change of gradient sign over a few
      pixel in x and y directions.
      -->

      default: 'radial_per_plane'
      example: method='radial_mean_annular'
       </description>
            <value type="string">radial_per_plane</value>
            <allowed kind="enum">
              <value>radial_per_plane</value>
              <value>radial_mean_annular</value>
              <!--
                <value>regionalMean</value>
                <value>gradient</value>
                -->
            </allowed>
    </param>


      <param type="double" name="nsigma" subparam="true">
          <shortdescription> nsigma threshold above which to flag  </shortdescription>
          <description>
                          User defined nsigma value for flagging.
                          The default value is 5.
          </description>
          <value type="double">5.0</value>
      </param>

      <!--
      <param type="int" name="sizeRegion" subparam="true">
          <shortdescription>User defined local square regional size.</shortdescription>
          <description>
                        User defined local square regional size for "regionalMean" and "gradient" algorithm option.
          </description>
          <value type="int">20</value>
      </param>

      <param type="int" name="gradientflip" subparam="true">
          <shortdescription>User defined number of pixels value for gradient flip. </shortdescription>
          <description>
                          User defined radius value for gradient algorithm. It is double type.
                          The default value is 1.

          </description>
          <value type="int">1</value>
      </param>
      -->


<param type="bool" name="doplot" >
  <shortdescription>
    Generate plots of the radial profiles, useful for debugging. Warning : This can severely impact runtime performance.

  </shortdescription>
          <description>
              Generate plots of the radial profiles calculated prior to flagging. This can be useful to
              debug the performance of the algorithm, however it can severely impact runtime performance.
              In general you do not need to turn this option on.

              The default value is False.
          </description>
          <value type="bool">False</value>
      </param>

    <constraints>
         <when param="method">
           <equals type="string" value="radial_per_plane">
             <default param="nsigma"><value>5</value></default>
           </equals>

           <equals type="string" value="radial_mean_annular">
             <default param="nsigma"><value>5</value></default>
            </equals>

            <!--
            <equals type="string" value="regionalMean">
                <default param="sizeRegion"><value>20</value></default>
            </equals>
            <equals type="string" value="gradient">
                <default param="gradientflip"><value>1</value></default>
           </equals>
            -->
         </when>
    </constraints>


  </input>
<returns type="void"/>

<example>


      msuvbinflag(binnedvis='SNR_G55_10s.ms', method='radial_per_plane', nsigma=5)

       Keyword arguments:
       binnedvis -- Name of input binned visibility file which is output from msuvbin.
                    After msuvbinflag, binnedvis is modified with flagging info.

       method -- Three method options: "radian", "regional mean","median","gradient"
                default: 'radian'

       nsigma -- User set nsigma value for radial algorithm.
                default=5.0

 </example>
 </task>
 </casaxml>
