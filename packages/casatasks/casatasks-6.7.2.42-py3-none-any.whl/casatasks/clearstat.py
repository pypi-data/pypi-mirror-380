##################### generated by xml-casa (v2) from clearstat.xml #################
##################### 3306c11805fc900fa65aad4f02fa1b89 ##############################
from __future__ import absolute_import
import numpy
from casatools.typecheck import CasaValidator as _val_ctor
_pc = _val_ctor( )
from casatools.coercetype import coerce as _coerce
from casatools.errors import create_error_string
from .private.task_clearstat import clearstat as _clearstat_t
from casatasks.private.task_logging import start_log as _start_log
from casatasks.private.task_logging import end_log as _end_log
from casatasks.private.task_logging import except_log as _except_log

class _clearstat:
    """
    clearstat ---- Clear all autolock locks

    
    This task is useful if another task that is running indicates
    that it is trying to obtain a lock on a file.
    
    Typing 'go clearstat()'  will not change the current task being scrutinized
    Typing 'clearstat()'     will change the current task assignment to clearpstat
    which is generally not what is desired.

    --------- parameter descriptions ---------------------------------------------


    [1;42mRETURNS[1;m    void



    """

    _info_group_ = """manipulation"""
    _info_desc_ = """Clear all autolock locks"""

    def __call__( self ):
        schema = { }
        doc = { }
        assert _pc.validate(doc,schema), create_error_string(_pc.errors)
        _logging_state_ = _start_log( 'clearstat', [  ] )
        task_result = None
        try:
            task_result = _clearstat_t(  )
        except Exception as exc:
            _except_log('clearstat', exc)
            raise
        finally:
            task_result = _end_log( _logging_state_, 'clearstat', task_result )
        return task_result

clearstat = _clearstat( )

