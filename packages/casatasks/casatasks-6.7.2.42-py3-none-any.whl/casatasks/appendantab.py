##################### generated by xml-casa (v2) from appendantab.xml ###############
##################### 162382ab45cd75da8b2d00f491610e97 ##############################
from __future__ import absolute_import
import numpy
from casatools.typecheck import CasaValidator as _val_ctor
_pc = _val_ctor( )
from casatools.coercetype import coerce as _coerce
from casatools.errors import create_error_string
from .private.task_appendantab import appendantab as _appendantab_t
from casatasks.private.task_logging import start_log as _start_log
from casatasks.private.task_logging import end_log as _end_log
from casatasks.private.task_logging import except_log as _except_log

class _appendantab:
    """
    appendantab ---- Append syscal and gaincurve data from an antab file

    
    Provide an MS created from a fitsidi file using importfitsidi and an antab file associated with that data.
    This task will parse the antab file file and fill the MS SYSCAL and GAIN_CURVE subtables based on the information
    in the antab file.

    --------- parameter descriptions ---------------------------------------------

    vis         Name of input visibility file
                Default: none
                
                   Example: vis='ngc5921.ms'
    outvis      Name of output visibility file. If the file name specified already exists it will be replaced
                Default: none
                
                   Example: caltable='ngc5921.ms'
    antab       Name of antab file to append info from
                Default: none
                
                   Example: caltable='bc246b.antab'
    overwrite   Allows the outvis file to be overwritten
                Default: False
    append_tsys Use the information from the antab file to create and fill the SYSCAL subtable
                Default: True
    append_gc   Use the information from the antab file to create and fill the GAIN_CURVE subtable
                Default: True

    --------- examples -----------------------------------------------------------

    
    
    For more information, see the task pages of appendantab in CASA Docs:
    
    https://casa.nrao.edu/casadocs/


    """

    _info_group_ = """calibration"""
    _info_desc_ = """Append syscal and gaincurve data from an antab file"""

    def __call__( self, vis='', outvis='', antab='', overwrite=False, append_tsys=True, append_gc=True ):
        schema = {'vis': {'type': 'cReqPath', 'coerce': _coerce.expand_path}, 'outvis': {'type': 'cStr', 'coerce': _coerce.to_str}, 'antab': {'type': 'cReqPath', 'coerce': _coerce.expand_path}, 'overwrite': {'type': 'cBool'}, 'append_tsys': {'type': 'cBool'}, 'append_gc': {'type': 'cBool'}}
        doc = {'vis': vis, 'outvis': outvis, 'antab': antab, 'overwrite': overwrite, 'append_tsys': append_tsys, 'append_gc': append_gc}
        assert _pc.validate(doc,schema), create_error_string(_pc.errors)
        _logging_state_ = _start_log( 'appendantab', [ 'vis=' + repr(_pc.document['vis']), 'outvis=' + repr(_pc.document['outvis']), 'antab=' + repr(_pc.document['antab']), 'overwrite=' + repr(_pc.document['overwrite']), 'append_tsys=' + repr(_pc.document['append_tsys']), 'append_gc=' + repr(_pc.document['append_gc']) ] )
        task_result = None
        try:
            task_result = _appendantab_t( _pc.document['vis'], _pc.document['outvis'], _pc.document['antab'], _pc.document['overwrite'], _pc.document['append_tsys'], _pc.document['append_gc'] )
        except Exception as exc:
            _except_log('appendantab', exc)
            raise
        finally:
            task_result = _end_log( _logging_state_, 'appendantab', task_result )
        return task_result

appendantab = _appendantab( )

