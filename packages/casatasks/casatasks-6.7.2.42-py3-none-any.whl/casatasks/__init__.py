###########################################################################
########################## generated by setup.py ##########################
###########################################################################
from __future__ import absolute_import
from casatools import logsink as _logsink
import os as __os
__cwd = __os.path.dirname(__os.path.abspath(__file__))
__name__ = 'casatasks'
__all__ = [ "casalog", "version", "version_string",
            'imhead',
            'immoments',
            'imhistory',
            'appendantab',
            'applycal',
            'bandpass',
            'blcal',
            'calstat',
            'defintent',
            'concat',
            'split',
            'listobs',
            'flagdata',
            'flagcmd',
            'getephemtable',
            'setjy',
            'cvel',
            'cvel2',
            'importuvfits',
            'importfits',
            'exportfits',
            'exportuvfits',
            'partition',
            'listpartition',
            'flagmanager',
            'mstransform',
            'msuvbin',
            'tclean',
            'deconvolve',
            'immath',
            'vishead',
            'uvsub',
            'spxfit',
            'splattotable',
            'specsmooth',
            'specflux',
            'smoothcal',
            'specfit',
            'imstat',
            'slsearch',
            'delmod',
            'imsubimage',
            'accor',
            'asdmsummary',
            'clearcal',
            'conjugatevis',
            'exportasdm',
            'importasdm',
            'clearstat',
            'fixplanets',
            'fixvis',
            'phaseshift',
            'fluxscale',
            'ft',
            'gaincal',
            'gencal',
            'getantposalma',
            'testconcat',
            'apparentsens',
            'getcalmodvla',
            'hanningsmooth',
            'imcollapse',
            'imcontsub',
            'imdev',
            'imfit',
            'impbcor',
            'importasap',
            'importatca',
            'importfitsidi',
            'importgmrt',
            'importnro',
            'importvla',
            'impv',
            'imrebin',
            'imreframe',
            'imregrid',
            'imsmooth',
            'imtrans',
            'imval',
            'initweights',
            'listcal',
            'listfits',
            'listhistory',
            'listsdm',
            'listvis',
            'makemask',
            'polcal',
            'polfromgain',
            'predictcomp',
            'rerefant',
            'rmfit',
            'rmtables',
            'sdatmcor',
            'sdbaseline',
            'sdcal',
            'sdfit',
            'sdfixscan',
            'sdgaincal',
            'sdimaging',
            'sdsmooth',
            'tsdimaging',
            'nrobeamaverage',
            'sdtimeaverage',
            'simanalyze',
            'simobserve',
            'feather',
            'simalma',
            'statwt',
            'virtualconcat',
            'uvcontsub_old',
            'uvcontsub',
            'uvmodelfit',
            'visstat',
            'widebandpbcor',
            'importmiriad',
            'plotweather',
            'plotants',
            'fringefit',
            'plotbandpass',
            'sdintimaging',
            'sdpolaverage',
            'sdsidebandsplit',
            'plotprofilemap',
            'imbaseline',
            'msuvbinflag',
            'wvrgcal',
          ]

from casaconfig import config
casalog = _logsink( config.logfile )

from .imhead import imhead
from .immoments import immoments
from .imhistory import imhistory
from .appendantab import appendantab
from .applycal import applycal
from .bandpass import bandpass
from .blcal import blcal
from .calstat import calstat
from .defintent import defintent
from .concat import concat
from .split import split
from .listobs import listobs
from .flagdata import flagdata
from .flagcmd import flagcmd
from .getephemtable import getephemtable
from .setjy import setjy
from .cvel import cvel
from .cvel2 import cvel2
from .importuvfits import importuvfits
from .importfits import importfits
from .exportfits import exportfits
from .exportuvfits import exportuvfits
from .partition import partition
from .listpartition import listpartition
from .flagmanager import flagmanager
from .mstransform import mstransform
from .msuvbin import msuvbin
from .tclean import tclean
from .deconvolve import deconvolve
from .immath import immath
from .vishead import vishead
from .uvsub import uvsub
from .spxfit import spxfit
from .splattotable import splattotable
from .specsmooth import specsmooth
from .specflux import specflux
from .smoothcal import smoothcal
from .specfit import specfit
from .imstat import imstat
from .slsearch import slsearch
from .delmod import delmod
from .imsubimage import imsubimage
from .accor import accor
from .asdmsummary import asdmsummary
from .clearcal import clearcal
from .conjugatevis import conjugatevis
from .exportasdm import exportasdm
from .importasdm import importasdm
from .clearstat import clearstat
from .fixplanets import fixplanets
from .fixvis import fixvis
from .phaseshift import phaseshift
from .fluxscale import fluxscale
from .ft import ft
from .gaincal import gaincal
from .gencal import gencal
from .getantposalma import getantposalma
from .testconcat import testconcat
from .apparentsens import apparentsens
from .getcalmodvla import getcalmodvla
from .hanningsmooth import hanningsmooth
from .imcollapse import imcollapse
from .imcontsub import imcontsub
from .imdev import imdev
from .imfit import imfit
from .impbcor import impbcor
from .importasap import importasap
from .importatca import importatca
from .importfitsidi import importfitsidi
from .importgmrt import importgmrt
from .importnro import importnro
from .importvla import importvla
from .impv import impv
from .imrebin import imrebin
from .imreframe import imreframe
from .imregrid import imregrid
from .imsmooth import imsmooth
from .imtrans import imtrans
from .imval import imval
from .initweights import initweights
from .listcal import listcal
from .listfits import listfits
from .listhistory import listhistory
from .listsdm import listsdm
from .listvis import listvis
from .makemask import makemask
from .polcal import polcal
from .polfromgain import polfromgain
from .predictcomp import predictcomp
from .rerefant import rerefant
from .rmfit import rmfit
from .rmtables import rmtables
from .sdatmcor import sdatmcor
from .sdbaseline import sdbaseline
from .sdcal import sdcal
from .sdfit import sdfit
from .sdfixscan import sdfixscan
from .sdgaincal import sdgaincal
from .sdimaging import sdimaging
from .sdsmooth import sdsmooth
from .tsdimaging import tsdimaging
from .nrobeamaverage import nrobeamaverage
from .sdtimeaverage import sdtimeaverage
from .simanalyze import simanalyze
from .simobserve import simobserve
from .feather import feather
from .simalma import simalma
from .statwt import statwt
from .virtualconcat import virtualconcat
from .uvcontsub_old import uvcontsub_old
from .uvcontsub import uvcontsub
from .uvmodelfit import uvmodelfit
from .visstat import visstat
from .widebandpbcor import widebandpbcor
from .importmiriad import importmiriad
from .plotweather import plotweather
from .plotants import plotants
from .fringefit import fringefit
from .plotbandpass import plotbandpass
from .sdintimaging import sdintimaging
from .sdpolaverage import sdpolaverage
from .sdsidebandsplit import sdsidebandsplit
from .plotprofilemap import plotprofilemap
from .imbaseline import imbaseline
from .msuvbinflag import msuvbinflag
from .wvrgcal import wvrgcal

def version( ): return [ 6, 7, 2, 42 ]
def version_string( ): return "6.7.2.42"
casalog.setglobal(True)

def xml_interface_defs( ): return { 'imhead': __os.path.join(__cwd,'__xml__/imhead.xml'), 'immoments': __os.path.join(__cwd,'__xml__/immoments.xml'), 'imhistory': __os.path.join(__cwd,'__xml__/imhistory.xml'), 'appendantab': __os.path.join(__cwd,'__xml__/appendantab.xml'), 'applycal': __os.path.join(__cwd,'__xml__/applycal.xml'), 'bandpass': __os.path.join(__cwd,'__xml__/bandpass.xml'), 'blcal': __os.path.join(__cwd,'__xml__/blcal.xml'), 'calstat': __os.path.join(__cwd,'__xml__/calstat.xml'), 'defintent': __os.path.join(__cwd,'__xml__/defintent.xml'), 'concat': __os.path.join(__cwd,'__xml__/concat.xml'), 'split': __os.path.join(__cwd,'__xml__/split.xml'), 'listobs': __os.path.join(__cwd,'__xml__/listobs.xml'), 'flagdata': __os.path.join(__cwd,'__xml__/flagdata.xml'), 'flagcmd': __os.path.join(__cwd,'__xml__/flagcmd.xml'), 'getephemtable': __os.path.join(__cwd,'__xml__/getephemtable.xml'), 'setjy': __os.path.join(__cwd,'__xml__/setjy.xml'), 'cvel': __os.path.join(__cwd,'__xml__/cvel.xml'), 'cvel2': __os.path.join(__cwd,'__xml__/cvel2.xml'), 'importuvfits': __os.path.join(__cwd,'__xml__/importuvfits.xml'), 'importfits': __os.path.join(__cwd,'__xml__/importfits.xml'), 'exportfits': __os.path.join(__cwd,'__xml__/exportfits.xml'), 'exportuvfits': __os.path.join(__cwd,'__xml__/exportuvfits.xml'), 'partition': __os.path.join(__cwd,'__xml__/partition.xml'), 'listpartition': __os.path.join(__cwd,'__xml__/listpartition.xml'), 'flagmanager': __os.path.join(__cwd,'__xml__/flagmanager.xml'), 'mstransform': __os.path.join(__cwd,'__xml__/mstransform.xml'), 'msuvbin': __os.path.join(__cwd,'__xml__/msuvbin.xml'), 'tclean': __os.path.join(__cwd,'__xml__/tclean.xml'), 'deconvolve': __os.path.join(__cwd,'__xml__/deconvolve.xml'), 'immath': __os.path.join(__cwd,'__xml__/immath.xml'), 'vishead': __os.path.join(__cwd,'__xml__/vishead.xml'), 'uvsub': __os.path.join(__cwd,'__xml__/uvsub.xml'), 'spxfit': __os.path.join(__cwd,'__xml__/spxfit.xml'), 'splattotable': __os.path.join(__cwd,'__xml__/splattotable.xml'), 'specsmooth': __os.path.join(__cwd,'__xml__/specsmooth.xml'), 'specflux': __os.path.join(__cwd,'__xml__/specflux.xml'), 'smoothcal': __os.path.join(__cwd,'__xml__/smoothcal.xml'), 'specfit': __os.path.join(__cwd,'__xml__/specfit.xml'), 'imstat': __os.path.join(__cwd,'__xml__/imstat.xml'), 'slsearch': __os.path.join(__cwd,'__xml__/slsearch.xml'), 'delmod': __os.path.join(__cwd,'__xml__/delmod.xml'), 'imsubimage': __os.path.join(__cwd,'__xml__/imsubimage.xml'), 'accor': __os.path.join(__cwd,'__xml__/accor.xml'), 'asdmsummary': __os.path.join(__cwd,'__xml__/asdmsummary.xml'), 'clearcal': __os.path.join(__cwd,'__xml__/clearcal.xml'), 'conjugatevis': __os.path.join(__cwd,'__xml__/conjugatevis.xml'), 'exportasdm': __os.path.join(__cwd,'__xml__/exportasdm.xml'), 'importasdm': __os.path.join(__cwd,'__xml__/importasdm.xml'), 'clearstat': __os.path.join(__cwd,'__xml__/clearstat.xml'), 'fixplanets': __os.path.join(__cwd,'__xml__/fixplanets.xml'), 'fixvis': __os.path.join(__cwd,'__xml__/fixvis.xml'), 'phaseshift': __os.path.join(__cwd,'__xml__/phaseshift.xml'), 'fluxscale': __os.path.join(__cwd,'__xml__/fluxscale.xml'), 'ft': __os.path.join(__cwd,'__xml__/ft.xml'), 'gaincal': __os.path.join(__cwd,'__xml__/gaincal.xml'), 'gencal': __os.path.join(__cwd,'__xml__/gencal.xml'), 'getantposalma': __os.path.join(__cwd,'__xml__/getantposalma.xml'), 'testconcat': __os.path.join(__cwd,'__xml__/testconcat.xml'), 'apparentsens': __os.path.join(__cwd,'__xml__/apparentsens.xml'), 'getcalmodvla': __os.path.join(__cwd,'__xml__/getcalmodvla.xml'), 'hanningsmooth': __os.path.join(__cwd,'__xml__/hanningsmooth.xml'), 'imcollapse': __os.path.join(__cwd,'__xml__/imcollapse.xml'), 'imcontsub': __os.path.join(__cwd,'__xml__/imcontsub.xml'), 'imdev': __os.path.join(__cwd,'__xml__/imdev.xml'), 'imfit': __os.path.join(__cwd,'__xml__/imfit.xml'), 'impbcor': __os.path.join(__cwd,'__xml__/impbcor.xml'), 'importasap': __os.path.join(__cwd,'__xml__/importasap.xml'), 'importatca': __os.path.join(__cwd,'__xml__/importatca.xml'), 'importfitsidi': __os.path.join(__cwd,'__xml__/importfitsidi.xml'), 'importgmrt': __os.path.join(__cwd,'__xml__/importgmrt.xml'), 'importnro': __os.path.join(__cwd,'__xml__/importnro.xml'), 'importvla': __os.path.join(__cwd,'__xml__/importvla.xml'), 'impv': __os.path.join(__cwd,'__xml__/impv.xml'), 'imrebin': __os.path.join(__cwd,'__xml__/imrebin.xml'), 'imreframe': __os.path.join(__cwd,'__xml__/imreframe.xml'), 'imregrid': __os.path.join(__cwd,'__xml__/imregrid.xml'), 'imsmooth': __os.path.join(__cwd,'__xml__/imsmooth.xml'), 'imtrans': __os.path.join(__cwd,'__xml__/imtrans.xml'), 'imval': __os.path.join(__cwd,'__xml__/imval.xml'), 'initweights': __os.path.join(__cwd,'__xml__/initweights.xml'), 'listcal': __os.path.join(__cwd,'__xml__/listcal.xml'), 'listfits': __os.path.join(__cwd,'__xml__/listfits.xml'), 'listhistory': __os.path.join(__cwd,'__xml__/listhistory.xml'), 'listsdm': __os.path.join(__cwd,'__xml__/listsdm.xml'), 'listvis': __os.path.join(__cwd,'__xml__/listvis.xml'), 'makemask': __os.path.join(__cwd,'__xml__/makemask.xml'), 'polcal': __os.path.join(__cwd,'__xml__/polcal.xml'), 'polfromgain': __os.path.join(__cwd,'__xml__/polfromgain.xml'), 'predictcomp': __os.path.join(__cwd,'__xml__/predictcomp.xml'), 'rerefant': __os.path.join(__cwd,'__xml__/rerefant.xml'), 'rmfit': __os.path.join(__cwd,'__xml__/rmfit.xml'), 'rmtables': __os.path.join(__cwd,'__xml__/rmtables.xml'), 'sdatmcor': __os.path.join(__cwd,'__xml__/sdatmcor.xml'), 'sdbaseline': __os.path.join(__cwd,'__xml__/sdbaseline.xml'), 'sdcal': __os.path.join(__cwd,'__xml__/sdcal.xml'), 'sdfit': __os.path.join(__cwd,'__xml__/sdfit.xml'), 'sdfixscan': __os.path.join(__cwd,'__xml__/sdfixscan.xml'), 'sdgaincal': __os.path.join(__cwd,'__xml__/sdgaincal.xml'), 'sdimaging': __os.path.join(__cwd,'__xml__/sdimaging.xml'), 'sdsmooth': __os.path.join(__cwd,'__xml__/sdsmooth.xml'), 'tsdimaging': __os.path.join(__cwd,'__xml__/tsdimaging.xml'), 'nrobeamaverage': __os.path.join(__cwd,'__xml__/nrobeamaverage.xml'), 'sdtimeaverage': __os.path.join(__cwd,'__xml__/sdtimeaverage.xml'), 'simanalyze': __os.path.join(__cwd,'__xml__/simalma.xml'), 'simobserve': __os.path.join(__cwd,'__xml__/simobserve.xml'), 'feather': __os.path.join(__cwd,'__xml__/simanalyze.xml'), 'simalma': __os.path.join(__cwd,'__xml__/feather.xml'), 'statwt': __os.path.join(__cwd,'__xml__/statwt.xml'), 'virtualconcat': __os.path.join(__cwd,'__xml__/virtualconcat.xml'), 'uvcontsub_old': __os.path.join(__cwd,'__xml__/uvcontsub_old.xml'), 'uvcontsub': __os.path.join(__cwd,'__xml__/uvcontsub.xml'), 'uvmodelfit': __os.path.join(__cwd,'__xml__/uvmodelfit.xml'), 'visstat': __os.path.join(__cwd,'__xml__/visstat.xml'), 'widebandpbcor': __os.path.join(__cwd,'__xml__/widebandpbcor.xml'), 'importmiriad': __os.path.join(__cwd,'__xml__/importmiriad.xml'), 'plotweather': __os.path.join(__cwd,'__xml__/plotweather.xml'), 'plotants': __os.path.join(__cwd,'__xml__/plotants.xml'), 'fringefit': __os.path.join(__cwd,'__xml__/fringefit.xml'), 'plotbandpass': __os.path.join(__cwd,'__xml__/plotbandpass.xml'), 'sdintimaging': __os.path.join(__cwd,'__xml__/sdintimaging.xml'), 'sdpolaverage': __os.path.join(__cwd,'__xml__/sdpolaverage.xml'), 'sdsidebandsplit': __os.path.join(__cwd,'__xml__/sdsidebandsplit.xml'), 'plotprofilemap': __os.path.join(__cwd,'__xml__/plotprofilemap.xml'), 'imbaseline': __os.path.join(__cwd,'__xml__/imbaseline.xml'), 'msuvbinflag': __os.path.join(__cwd,'__xml__/msuvbinflag.xml'), 'wvrgcal': __os.path.join(__cwd,'__xml__/wvrgcal.xml') }

mpi_env_found=False
try:
    from casampi.MPIEnvironment import MPIEnvironment
    mpi_env_found=True
except:
    mpi_env_found=False
# When in MPI mode, this will put servers into their serve() loop.
# From this point on user scripts can use tclean parallelization, Tier0 parallelization,
# and MMS-parallel tasks
try:
    import importlib
    _clith_spec = importlib.util.find_spec('casalith')
    # Defer to later if in casalith
    if _clith_spec is None:
        import casampi.private.start_mpi
except ImportError:
    pass
package_variant='modular'
try:
  if _clith_spec is not None:
    package_variant='casalith'
except:
  pass
try:
  _pipe_spec = importlib.util.find_spec('pipeline')
  if _pipe_spec is not None:
    package_variant='pipeline'
except:
  pass
import platform
if mpi_env_found and MPIEnvironment.is_mpi_enabled:
    if MPIEnvironment.is_mpi_client:
        try:
            casalog.post("Python version " + platform.python_version())
            casalog.post("CASA Version " + package_variant.upper() + " 6.7.2.42")
            casalog.post("MPI Enabled")
        except:
            print("Error: the logfile is not writable")
else:
    try:
        casalog.post("Python version " + platform.python_version())
        casalog.post("CASA Version " + package_variant.upper() + " 6.7.2.42")
    except:
        print("Error: the logfile is not writable")

