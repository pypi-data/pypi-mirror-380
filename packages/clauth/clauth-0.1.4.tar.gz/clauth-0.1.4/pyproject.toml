[project]
name = "clauth"
version = "0.1.4"
description = "Streamlined AWS Bedrock setup for Claude Code - automated SSO, model discovery, and environment configuration"
keywords = ["aws", "bedrock", "claude", "ai", "sso", "authentication", "cli", "anthropic", "llm"]
readme = "README.release.md"
long_description_content_type = "text/markdown"
license = {text = "MIT"}
authors = [
    { name = "Mahmood Khordoo" }
]
requires-python = ">=3.10"
dependencies = [
    "boto3>=1.40.31",
    "inquirerpy>=0.3.4",
    "typer>=0.17.4",
    "pydantic>=2.0.0",
    "toml>=0.10.2",
    "pyfiglet>=1.0.4",
    "rich>=13.7.1",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Internet :: WWW/HTTP :: Session",
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.urls]
Homepage = "https://github.com/khordoo/clauth"
Repository = "https://github.com/khordoo/clauth"
Documentation = "https://github.com/khordoo/clauth#readme"
"Bug Tracker" = "https://github.com/khordoo/clauth/issues"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "moto>=4.0.0",  # Mock AWS services
]
dev = [
    "moto>=5.1.12",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.1",
]

[project.scripts]
clauth = "clauth.cli:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=clauth",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=83",
]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "unit: marks tests as unit tests",
    "aws: marks tests that interact with AWS services",
]

[tool.coverage.run]
source = ["clauth"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",

]
