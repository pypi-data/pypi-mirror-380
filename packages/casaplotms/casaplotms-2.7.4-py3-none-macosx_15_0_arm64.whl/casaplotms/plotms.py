##################### generated by xml-casa (v2) from plotms.xml ####################
##################### efae38a9b6d9a736c50fa0d22e1e02de ##############################
from __future__ import absolute_import
import numpy
from casatools.typecheck import CasaValidator as _val_ctor
_pc = _val_ctor( )
from casatools.coercetype import coerce as _coerce
from casatools.errors import create_error_string
from .private.task_plotms import plotms as _plotms_t
from casatasks.private.task_logging import start_log as _start_log
from casatasks.private.task_logging import end_log as _end_log
from casatasks.private.task_logging import except_log as _except_log

class _plotms:
    """
    plotms ---- A plotter/interactive flagger for visibility data.

    
    
    Task for plotting and interacting with visibility data and
    calibration tables.
    
    Plotms provides a variety of axis choices (including data column)
    along with selection, averaging, and transformation options for
    MeasurementSets.  Flag extension parameters are also available for
    interactive flagging operations in the plotter.
    
    All of the provided parameters can also be set using the GUI once
    the application has been launched or through the plotms tool (pm).
    
    Most of the basic plotms functions will work for calibration tables.
    The correlation selection string may be used to select polarization
    in a cal table, including ratio plots ("/"), or use
    polarization selection.  The antenna selection string is used to
    select antenna1 only, rather than baselines as in an MS. When
    plotting parameterized CalTables, such as delays, antpos, gaincurve,
    or opacity, plotms will plot the simple parameters contained in the
    table, not the effective amplitudes or phases sampled at observing
    times, frequencies etc.  BPOLY and GSPLINE tables are supported but
    interactive flagging is not allowed.  Features currently unsupported
    for CalTables include transformations (velocity conversions, etc.)
    and some axis and selection options which do not exist in these
    tables. In the plotms GUI, many options irrelevant for CalTables are
    not hidden when interacting with a CalTable, and such settings will
    be ignored (when benign) or cause an error message.
    

    --------- parameter descriptions ---------------------------------------------

    vis                  Input MS or CalTable (blank for none)
    caltable             Input CalTable (blank for none)
    gridrows             Number of subplot rows
    gridcols             Number of subplot columns
    rowindex             Row location of the plot (0-based)
    colindex             Column location of the plot (0-based)
    plotindex            Index to address a subplot (0-based)
    xaxis                Plot x-axis (blank for default/current)
    xdatacolumn          Data column to use for x-axis (blank for default/current).  Note that unspecified residuals are complex (vector) differences or ratios.
    xframe               Coordinate frame to use for x-axis
    xinterp              Interpolation method for x-axis
    yaxis                Plot y-axis (blank for default/current)
    ydatacolumn          Data column to use for y-axis (blank for default/current). Note that unspecified residuals are complex (vector) differences or ratios.
    yframe               Coordinate frame to use for y-axis
    yinterp              Interpolation method for y-axis
    yaxislocation        Location of the y-axis (blank for default: left)
    selectdata           Enable data selection parameters
    field                Field names or ids (blank for all)
    spw                  Spectral windows:channels (blank for all)
    timerange            Time range (blank for all)
    uvrange              UV range (blank for all)
    antenna              Baseline/antenna names or ids (blank for all)
    scan                 Scan numbers (blank for all)
    correlation          Correlations/polarizations (blank for all)
    polarization         Polarizations (blank for all)
    antpos               Antenna positions (blank for all)
    array                (Sub)array numbers (blank for all)
    observation          Observation IDs (blank for all)
    intent               Observing intent (blank for all)
    feed                 Feed numbers (blank for all)
    msselect             MSSelection TaQL string (blank for none)
    averagedata          Enable data averaging parameters
    avgchannel           Average over channel (blank = False, otherwise value in channels)
    avgtime              Average over time (blank = False, otherwise value in seconds)
    avgscan              Average over scans. Only valid with time averaging
    avgfield             Average over fields. Only valid with time averaging
    avgbaseline          Average over all baselines (mutually exclusive with avgantenna)
    avgantenna           Average per antenna (mutually exclusive with avgbaseline)
    avgspw               Average over all spectral windows
    scalar               Scalar averaging (False=vector averaging)
    transform            Enable data transformations
    freqframe            The frame in which to render frequency and velocity axes
    restfreq             Rest frequency to use for velocity conversions
    veldef               The definition in which to render velocity
    phasecenter          The direction coordinates of the desired center
    extendflag           Extend flagging to other data points not plotted
    extcorr              Extend flags based on correlation
    extchannel           Extend flags based on channel
    iteraxis             The axis over which to iterate
    xselfscale           When True, iterated plots have a common x-axis range (scale).
    yselfscale           When True, iterated plots have a common y-axis range (scale).
    xsharedaxis          Iterated plots on a grid share a common external x-axis per column. Must also set xselfscale=True and gridrows>1.
    ysharedaxis          Iterated plots on a grid share a common external y-axis per row. Must also set yselfscale=True and gridcols>1.
    customsymbol         Enable custom symbol(s) for unflagged points
    symbolshape          Shape of plotted unflagged symbols
    symbolsize           Size of plotted unflagged symbols
    symbolcolor          Color (name or hex code) of plotted unflagged symbols
    symbolfill           Fill type of plotted unflagged symbols
    symboloutline        Outline plotted unflagged symbols
    coloraxis            Selects data axis for colorizing
    customflaggedsymbol  Enable custom symbol(s) for flagged points
    flaggedsymbolshape   Shape of plotted flagged symbols
    flaggedsymbolsize    Size of plotted flagged symbols
    flaggedsymbolcolor   Color (name or hex code) of plotted flagged symbols
    flaggedsymbolfill    Fill type of plotted flagged symbols
    flaggedsymboloutline Outline plotted flagged symbols
    xconnector           Set connector for data points (blank="none"; "line","step")
    timeconnector        Connect points by time rather than x-axis
    plotrange            Plot axes ranges: [xmin,xmax,ymin,ymax]
    title                Title at top of plot
    titlefont            Font size for plot title
    xlabel               Text for horizontal x-axis. Blank for default.
    xaxisfont            Font size for x-axis label
    ylabel               Text for vertical y-axis. Blank for default.
    yaxisfont            Font size for y-axis label
    showmajorgrid        Show major grid lines
    majorwidth           Line width in pixels of major grid lines
    majorstyle           Major grid line style
    majorcolor           Color (name or hex code) of major grid lines
    showminorgrid        Show minor grid lines
    minorwidth           Line width in pixels of minor grid lines
    minorstyle           Minor grid line style
    minorcolor           Color (name or hex code) of minor grid lines
    showlegend           Show a legend on the plot.
    legendposition       Legend position, default upperRight.
    plotfile             Name of plot file to save automatically
    expformat            Export format type. If not provided, plotfile extension will be used to determine type.
    verbose              Include metadata in text export
    exprange             Range of iteration plots to export, one plotfile per page.  Multipage pdf exports are not supported.
    highres              Use high resolution
    dpi                  DPI of exported plot
    width                Width in pixels of exported plot
    height               Height in pixels of exported plot
    overwrite            Overwrite plot file if it already exists
    showgui              Show GUI
    clearplots           Remove any existing plots so new ones can replace them.
    callib               Calibration library string or filename for on-the-fly calibration.
    headeritems          Comma-separated list of pre-defined page header items.
    showatm              Compute and overlay the atmospheric transmission curve
    showtsky             Compute and overlay the sky temperature curve
    showimage            Compute and overlay the image sideband curve
    colorizeoverlay      Colorize the curve overlay using coloraxis
    [1;42mRETURNS[1;m                 void

    --------- examples -----------------------------------------------------------

    
    
    Task for plotting and interacting with visibility
    data.  Limited support for caltable plotting is also
    included as of CASA v4.1.
    
    A variety of axes choices (including data column) along
    with MS selection and averaging options are provided for data
    selection.  Flag extension parameters are also available for
    flagging operations in the plotter.
    
    All of the provided parameters can also be set using the GUI once
    the application has been launched.  Additional and more specific
    operations are available through the GUI and/or through the plotms
    tool (pm).
    
    Most basic functions (plotting, iteration, locate, flagging)
    will work for most CalTables. Parameterized CalTables
    (delays, antpos, gaincurve, opacity), will, at best, currently
    just plot the simple parameters contained in the
    table, not the effective amplitudes or phases sampled at
    observing times, frequencies etc.  BPOLY and GSPLINE tables
    are supported.   Features currently unsupported for
    CalTables include transformation options, some selection options
    depending on table type, and MS-based axes choices.  In the plotms
    GUI, many options irrelevant for CalTables are not hidden when
    interacting with a CalTable, and such settings will be ignored
    (when benign) or cause an error message.
    
    Keyword arguments:
    vis -- input MS or CalTable
    default: ''  (will merely launch the gui unless caltable set)
    caltable -- input CalTable
    default: ''  (will merely launch the gui unless vis set)
    gridrows -- Number of subplot rows
    default: 1
    gridcols -- Number of subplot columns
    default: 1
    rowindex -- Row location of the subplot (0-based).
    default: 0
    colindex -- Column location of the subplot (0-based).
    default: 0
    plotindex -- Index to address a subplot (0-based).
    default: 0
    xaxis, yaxis -- what to plot on the two axes
    default: '' (defaults are xaxis='time',
    yaxis='amp' on first execution;
    thereafter the most recent
    settings are used)
    valid options (=indicates valid synonyms):
    MS Ids and other meta info:
    'scan'   (number)
    'field'  (index)
    'time',
    'interval'='timeint'='timeinterval'='time_interval'
    'spw'    (index)
    'chan'='channel'    (index)
    'freq'='frequency'  (GHz)
    'vel'='velocity'   (km/s)
    'corr'='correlation'  (index)
    'ant1'='antenna1'   (index)
    'ant2'='antenna2'   (index)
    'baseline'  (a baseline index)
    'row'   (absoute row Id from the MS)
    'observation' (index)
    'intent'      (index)
    'feed1'       (index)
    'feed2'       (index)
    Visibility values, flags:
    'amp'='amplitude'
    'phase'  (deg)
    'real'
    'imag'='imaginary'
    'wt'='weight'  (unchannelized)
    'wtsp'='weightspectrum'
    'flag'
    'flagrow'
    Observational geometry:
    'uvdist'  (meters)
    'uvwave'='uvdistl'='uvdist_l'  (wavelengths, per channel)
    'u'  (meters)
    'v'  (meters)
    'w'  (meters)
    'uwave'  ('u' in wavelengths, per channel)
    'vwave'  ('v' in wavelengths, per channel)
    'wwave'  ('w' in wavelengths, per channel)
    'azimuth'  (at array reference; degrees)
    'elevation'  (at array reference; degrees)
    'hourang'='hourangle'  (at array reference; hours)
    'parang'='parangle'='parallacticangle'  (at array reference; degrees)
    Antenna-based:
    'ant'='antenna'
    'ant-azimuth'
    'ant-elevation'
    'ant-ra'
    'ant-dec'
    'ant-parang'='ant-parangle'
    Calibration:
    'gainamp'='gamp'
    'gainphase'='gphase'
    'gainreal'='greal'
    'gainimag'='gimag'
    'delay'='del'
    'opacity'='opac'
    'swpower'='swp'='switchedpower'='spgain'
    'poln'='polarization'  (index)
    'antpos'='AntPos'
    
    
    >>> xaxis, yaxis expandable parameters
    xdatacolumn,
    ydatacolumn  -- data column to use for Visibility values:
    default: '' ('data' on first execution;
    thereafter the most recent
    setting is used)
    valid options:  'data'      (observed)
    'corrected'='corr'
    'model'
    'residual'  (aliases 'corrected-model')
    'corrected-model'
    'data-model'
    'data/model'
    'corected/model'
    'float'
    Note that residuals are complex (vector) differences or ratios.
    
    selectdata -- data selection parameters flag
    default: True  (reveals data selection parameters
    described below)
    Consult listobs output for data selection values,
    and see help par.selectdata for more detailed
    information on syntax; also, visit
    http://casa.nrao.edu/other_doc.shtml and click
    on "Measurement Set selection syntax" for more
    tips on using data selection parameters in CASA)
    
    >>> selectdata expandable parameters:
    
    field -- Select field using field id(s) or field name(s).
    default: ''=all fields
    If field string is a non-negative integer, it is assumed a
    field index,  otherwise, it is assumed a field name
    field='0~2'; field ids 0,1,2
    field='0,4,5~7'; field ids 0,4,5,6,7
    field='3C286,3C295'; field named 3C286 and 3C295
    field = '3,4C*'; field id 3, all names starting with 4C
    spw -- Select spectral window/channels
    type 'help par.selection' for more examples.
    spw='0~2,4'; spectral windows 0,1,2,4 (all channels)
    spw='<2';  spectral windows less than 2 (i.e. 0,1)
    spw='0:5~61'; spw 0, channels 5 to 61, INCLUSIVE
    spw='*:5~61'; all spw with channels 5 to 61
    spw='0,10,3:3~45'; spw 0,10 all channels, spw 3, channels 3 to 45.
    spw='0~2:2~6'; spw 0,1,2 with channels 2 through 6 in each.
    spw='0:0~10;15~60'; spectral window 0 with channels 0-10,15-60
    NOTE ';' to separate channel selections
    
    timerange  -- Select data based on time range:
    default = '' (all); examples,
    timerange = 'YYYY/MM/DD/hh:mm:ss~YYYY/MM/DD/hh:mm:ss'
    Note: if YYYY/MM/DD is missing date defaults to first day in data set
    timerange='09:14:0~09:54:0' picks 40 min on first day
    timerange= '25:00:00~27:30:00' picks 1 hr to 3 hr 30min on NEXT day
    timerange='09:44:00' pick data within one integration of time
    timerange='>10:24:00' data after this time
    uvrange -- Select data within uvrange (default units meters)
    default: '' (all); example:
    uvrange='0~1000klambda'; uvrange from 0-1000 kilo-lambda
    uvrange='>4klambda';uvranges greater than 4 kilo lambda
    
    antenna -- Select data based on antenna/baseline
    default: '' (all, including auto-correlations, if present)
    If antenna string is a non-negative integer, it is assumed an
    antenna index, otherwise, it is assumed as an antenna name
    antenna='5&6'; baseline between antenna index 5 and index 6.
    antenna='!ea02'; exclude EVLA antenna 2.
    antenna='ea13;!ea22'; EVLA antenna 13, excluding antenna 22.
    antenna='VA05&VA06'; baseline between VLA antenna 5 and 6.
    antenna='5&6;7&8'; baselines with indices 5-6 and 7-8
    antenna='5'; all baselines with antenna index 5
    antenna='05'; all baselines with antenna number 05 (VLA old name)
    antenna='5,6,10'; all baselines with antennas 5,6,10 index numbers
    NB: For explicit selections, use a single ampersand (&) to
    select only cross-correlations among the specified antennas,
    double ampersands (&&) to select cross- and
    auto-correlations among the specified antennas, and
    triple ampersands (&&&) to select only
    auto-correlations.  E.g.:
    antenna='*&'; selects all cross-correlation baseline
    (excludes all auto-correlations)
    antenna='*&&&'; selects all auto-correlation baselines
    (excludes all cross-correlations)
    antenna='1&&1,2,3'; selects baselines 1-1 (auto), 1-2,1-3 (cross)
    antenna='VA05&&&'; selects the VA05 autocorrelation
    See the link noted above for more information.
    scan -- Scan numbers or ranges.
    default: ''  (all scans)
    scan='1,2,6,43'; scans 1, 2, 6, and 43
    scan='3~14'; scans 3 through 14, inclusive
    correlation -- Select by correlation (polarization when plotting cal tables)
    default: ''  (all correlations/polarizations)
    For measurement sets: 'RR','RL','LR','LL','XX','XY','YX','YY'
    For Stokes parameters and polarization quantities: 'I', 'Q', 'U', 'V',
    'Ptotal', 'Plinear', 'PFtotal', 'PFlinear', 'Pangle'
    For cal tables: 'R','L','RL','X','Y','XY','/' (for ratio plots)
    or any comma-separated combination; use basis (R/L or X/Y)
    appropriate to the table
    polarization -- Select by polarization when plotting cal tables
    default: ''  (all polarizations)
    options: 'R','L','RL','X','Y','XY','/' (for ratio plots)
    use basis (R/L or X/Y) appropriate to the table
    antpos -- Select by antenna position when plotting KAntPos Jones cal tables.
    Ignored for MS and other cal table types.
    default: ''  (all positions)
    antenna position options for KAntPos Jones table: 'X','Y','Z'
    or a combination 'XY', 'XZ', 'YZ', 'XYZ'
    array -- Select the array id
    default: ''  (all array ids)
    observation -- Select by observation ID(s).
    default: ''-->all;
    observation='0' (select obsID 0)
    intent -- Select observing intent
    default: ''  (no selection by intent)
    intent='*BANDPASS*'  (selects data labelled with
    BANDPASS intent)
    feed -- Select by feed IDs
    default: '' (all feeds)
    feed='1~2'
    msselect -- Optional TaQL data selection
    
    averagedata -- data averaging parameters flag
    default: True   (reveals expandable parameters
    described below)
    >>> averagedata expandable parameters
    avgchannel -- average over channel?  either blank for none, or a value
    in channels.
    default: '' (no channel averaging).
    avgtime -- average over time?  either blank for none, or a value in
    seconds.
    default: '' (no time averaging).
    avgscan -- average over scans?  only valid if time averaging is turned
    on.
    default: False.
    avgfield -- average over fields?  only valid if time averaging is
    turned on.
    default: False.
    avgbaseline -- average over selected baselines; mutually
    exclusive with avgantenna.
    default: False.  (no averaging over baseline)
    avgantenna -- form per-antenna averages; mutually exclusive with
    avgbaseline.
    default: False.   (no per-antenna averaging)
    avgspw -- average over selected spectral windows?
    default: False.  (no average of spectral windows)
    scalar -- scalar averaging?
    default: False  (i.e., do vector averaging)
    
    transform -- apply various transformations on data for plotting
    default: True
    >>> transform expandable parameters
    freqframe -- the coordinate frame in which to render frequency and velocity axes
    default: ''  (unspecified: will use frame in which data were taken)
    options: LSRK, LSRD, BARY, GEO, TOPO, GALACTO, LGROUP, CMB
    restfreq -- the rest frequency to use in velocity conversions (MHz)
    default: '' (use spw central frequency and show relative velocity)
    example: '22235.08MHz'
    veldef -- the velocity definition to use
    default: 'RADIO'
    options: 'RADIO','OPT','TRUE'
    phasecenter -- the direction coordinate of the desired center.
    default: '' (use phasecenter in MeasurementSet)
    
    extendflag -- have flagging extend to other data points?
    default: False.
    >>> extendflag expandable parameters
    extcorr -- extend flags based on correlation?
    default: False.
    extchannel -- extend flags based on channel?
    
    iteraxis -- axis upon which iterate plots (one plot per page, for now)
    default: '' (no iteration)
    options: 'scan','field','spw','baseline','antenna','time','corr'
    additional caltable options: 'poln','antpos' (for KAntPos Jones tables)
    >>> iteraxis expandable parameters
    xselfscale -- When True, iterated plots have a common x-axis range (scale).
    yselfscale -- When True, iterated plots have a common y-axis range (scale).
    default: false, which will scale all plots individually
    xsharedaxis -- Iterated plots on a grid share a common external x-axis per column (must also set xselfscale=True and gridcols>1)
    default: false, each plot will have its own x-axis.
    ysharedaxis -- Iterated plots on a grid share a common external y-axis per row (must also set yselfscale=True and gridrows>1)
    default: false, each plot will have its own y-axis.
    
    customsymbol -- If true, use a custom symbol for drawing unflagged points
    default: False
    >>> customsymbol expandable parameters
    symbolshape -- If true, use a custom shape to draw unflagged symbols
    default: 'autoscaling' (ignores symbolsize)
    options: 'autoscaling', 'circle', 'square', 'diamond', 'pixel', 'nosymbol'
    symbolsize -- size of the unflagged symbols in pixels
    default: 2
    symbolcolor -- color to use for unflagged symbols; can be a RGB hex code or a color name
    default: '0000ff'
    example: 'purple'
    symbolfill -- type of fill to use for unflagged symbols
    default: 'fill'
    options: 'fill', 'mesh1', 'mesh2', 'mesh3', 'nofill'
    symboloutline -- If true, outline unflagged symbols in black
    
    coloraxis -- axis upon which to colorize the plotted points
    default: ''  (use a single color for all points)
    options (= indicates synonyms):
    'scan',  'field',  'spw',  'antenna1'='ant1',  'antenna2'='ant2',
    'baseline',  'channel'='chan',  'corr'='correlation', 'time',
    'observation', 'intent'
    additional caltable options: 'poln'='polarization','antpos' (for KAntPos Jones tables)
    
    customflaggedsymbol -- If true, use a custom symbol for drawing flagged points
    default: False
    >>> customflaggedsymbol expandable parameters
    symbolshape -- If true, use a custom shape to draw flagged symbols
    default: 'nosymbol'
    options: 'autoscaling', 'circle', 'square', 'diamond', 'pixel', 'nosymbol'
    symbolsize -- size of the flagged symbols in pixels
    default: 2
    symbolcolor -- color to use for flagged symbols; can be a RGB hex code or a color name
    default: '0000ff'
    example: 'purple'
    symbolfill -- type of fill to use for flagged symbols
    default: 'fill'
    options: 'fill', 'mesh1', 'mesh2', 'mesh3', 'nofill'
    symboloutline -- If true, outline flagged symbols in black
    
    plotrange -- manual plot axis ranges: [xmin,xmax,ymin,ymax]
    Does not affect data selection.
    default: []; both axes will be autoscaled according
    to the ranges found in the selected data
    If xmin=xmax (or ymin=ymax) then that axis will
    be autoscaled, e.g.:
    [0,0,-2.0,14.0]; autoscale the xaxis, and use
    ymin=-2.0, ymax=14.0
    
    title  -- title along top of plot (called "canvas" in some places)
    titlefont -- plot title font size
    default: 0 (autosize depending on grid)
    xlabel -- text to label horizontal axis, with formatting using '%%'
    xaxisfont -- x-axis font size
    default: 0 (autosize)
    ylabel -- text to label horizontal axis, with formatting using '%%'
    yaxisfont -- y-axis font size
    default: 0 (autosize)
    
    
    showmajorgrid  -- show major grid lines
    default: False
    >>>  showmajorgrid expandable parameters
    majorwidth  -- line width in pixels of major grid lines
    majorstyle  -- major grid line style: solid dash dot none
    majorcolor  -- color in hex code of major grid lines
    
    showminorgrid  -- show minor grid lines
    default: False
    >>>  showminorgrid expandable parameters
    minorwidth  --  line width in pixels of minor grid lines
    minorstyle  --  minor grid line style: solid dash dot none
    minorcolor  --  color in hex code of minor grid lines
    
    plotfile -- name of plot file to save automatically
    default: ''  (i.e., draw an interactive plot in the gui)
    >>> plotfile expandable parameters
    expformat -- export format type; if 'txt' is used an ASCII dump of the plotted points is generated (also available in the export tab)
    default:  ''   (plotfile extension will be used)
    options: 'jpg', 'png', 'ps', 'pdf', 'txt'
    verbose -- when export format is 'txt', print metadata for x and y values
    default: True
    exprange -- pages to export for iteration plots
    default:   ''
    options: 'current', 'all'
    highres -- use high resolution in exported plot
    default: False (use screen resolution)
    dpi -- DPI of exported plot
    default: -1 (not set)
    width -- width of exported plot
    default: -1 (not set)
    height -- height of exported plot
    default: -1 (not set)
    overwrite -- overwrite plot file if it already exists
    default: False
    
    callib -- calibration library string, list of strings, or filename
    default: ''
    
    showgui - Whether or not to display the plotting GUI
    default: True
    
    headeritems -- append header items specific to this plot to the current list
    of page header items.
    Comma-separated string of header item selection keywords.
    Allowed keywords: 'obsdate','obstime','filename','projid',
    'targname','targdir','telescope','observer',
    'ycolumn'
    default: ''
    example: 'filename,projid,targname'


    """

    _info_group_ = """visualization, information,editing, manipulation"""
    _info_desc_ = """A plotter/interactive flagger for visibility data."""

    def __call__( self, vis='', caltable='', gridrows=int(1), gridcols=int(1), rowindex=int(0), colindex=int(0), plotindex=int(0), xaxis='', xdatacolumn='', xframe='', xinterp='', yaxis='', ydatacolumn='', yframe='', yinterp='', yaxislocation='', selectdata=True, field='', spw='', timerange='', uvrange='', antenna='', scan='', correlation='', polarization='', antpos='', array='', observation='', intent='', feed='', msselect='', averagedata=True, avgchannel='', avgtime='', avgscan=False, avgfield=False, avgbaseline=False, avgantenna=False, avgspw=False, scalar=False, transform=True, freqframe='', restfreq='', veldef='RADIO', phasecenter='', extendflag=False, extcorr=False, extchannel=False, iteraxis='', xselfscale=False, yselfscale=False, xsharedaxis=False, ysharedaxis=False, customsymbol=[ ], symbolshape='autoscaling', symbolsize=int(2), symbolcolor='0000ff', symbolfill='fill', symboloutline=False, coloraxis='', customflaggedsymbol=False, flaggedsymbolshape='circle', flaggedsymbolsize=int(2), flaggedsymbolcolor='ff0000', flaggedsymbolfill='fill', flaggedsymboloutline=False, xconnector='', timeconnector=False, plotrange=[  ], title='', titlefont=int(0), xlabel='', xaxisfont=int(0), ylabel='', yaxisfont=int(0), showmajorgrid=False, majorwidth=int(1), majorstyle='', majorcolor='B0B0B0', showminorgrid=False, minorwidth=int(1), minorstyle='', minorcolor='D0D0D0', showlegend=False, legendposition='', plotfile='', expformat='', verbose=True, exprange='', highres=False, dpi=int(-1), width=int(-1), height=int(-1), overwrite=False, showgui=True, clearplots=True, callib=[  ], headeritems='', showatm=False, showtsky=False, showimage=False, colorizeoverlay=False ):
        schema = {'vis': {'type': 'cStr', 'coerce': _coerce.to_str}, 'caltable': {'type': 'cStr', 'coerce': _coerce.to_str}, 'gridrows': {'type': 'cInt'}, 'gridcols': {'type': 'cInt'}, 'rowindex': {'type': 'cInt'}, 'colindex': {'type': 'cInt'}, 'plotindex': {'type': 'cInt'}, 'xaxis': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'parangle', 'baseline', 'delay', 'antenna position', 'swp', 'u', 'tec', 'ant-parang', 'gamp', 'Antenna1', 'UVdist', 'WeightSpectrum', 'Baseline', 'flag', 'Real', 'switchedpower', 'timeint', 'WtSp', 'Ant-Elevation', 'GainReal', 'time_interval', 'uvdist_l', 'GainAmp', 'ant1', 'flagrow', 'Wt', 'Velocity', 'opac', 'Feed2', 'corr', 'imaginary', 'gainamp', 'Vwave', 'wwave', 'Frequency', 'observation', 'feed1', 'ant-azimuth', 'rate', 'Elevation', 'Intent', 'Row', 'swpower', 'antpos', 'ant-elevation', 'antenna', 'v', 'V', 'interval', 'sigmaspectrum', 'DelayRate', 'tsys', 'gainphase', 'Ant-Parangle', 'imag', 'Radial Velocity', 'UVwave', 'Observation', 'Poln', 'W', 'timeinterval', 'Channel', 'snr', 'SNR', 'frequency', 'Interval', 'uvdistl', 'disp', 'Imag', 'dispdelay', 'Feed1', 'rho', 'Ant-RA', 'delayrate', 'spgain', 'Antenna', 'Uwave', 'SigmaSpectrum', 'Azimuth', 'Scan', 'Tsys', 'polarization', 'intent', 'phase', 'amp', 'ant-parangle', 'SigmaSp', 'freq', 'wt*amp', 'channel', 'uwave', 'Flag', 'correlation', 'FlagRow', 'TEC', 'SwPower', 'GainPhase', 'GainImag', 'ant-parallacticangle', 'real', 'Time', 'weight', 'antenna2', 'gainimag', 'gimag', 'Antenna2', 'spw', 'gphase', 'Opac', 'parang', 'Amp', 'ant-ra', 'Sigma', 'amplitude', 'Ant-DEC', 'HourAngle', 'U', 'row', 'Wt*Amp', 'gainreal', 'chan', 'Field', 'DispDelay', 'hourang', 'vwave', 'radialvelocity', 'sigma', 'Antenna Position', 'Delay', 'uvwave', 'vel', 'uvdist', 'velocity', 'hourangle', 'poln', 'ant2', 'Phase', 'azimuth', 'Corr', 'parallacticangle', 'weightspectrum', 'Ant-Azimuth', 'wtsp', '', 'Distance', 'opacity', 'antenna1', 'feed2', 'sigmasp', 'time', 'w', 'wt', 'field', 'greal', 'elevation', 'del', 'ant', 'ant-dec', 'Spw', 'scan', 'Wwave', 'ParAngle' ]}, 'xdatacolumn': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'model', 'corrected', 'data-model_vector', 'data-model', 'corrected/model_vector', 'residual', 'corrected-model', 'data/model', 'data/model_scalar', 'float', 'corrected/model_scalar', 'corrected/model', '', 'corrected-model_vector', 'data-model_scalar', 'corrected-model_scalar', 'data', 'data/model_vector' ]}, 'xframe': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'icrs', 'azelgeo', 'b1950', 'galactic', '', 'j2000' ]}, 'xinterp': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ '', 'nearest', 'cubic spline', 'spline' ]}, 'yaxis': {'type': 'cVariant', 'coerce': [_coerce.to_variant] # <allowed> IS NOT ALLOWED FOR A PARAMETER OF TYPE any
}, 'ydatacolumn': {'type': 'cVariant', 'coerce': [_coerce.to_variant] # <allowed> IS NOT ALLOWED FOR A PARAMETER OF TYPE any
}, 'yframe': {'type': 'cVariant', 'coerce': [_coerce.to_variant] # <allowed> IS NOT ALLOWED FOR A PARAMETER OF TYPE any
}, 'yinterp': {'type': 'cVariant', 'coerce': [_coerce.to_variant] # <allowed> IS NOT ALLOWED FOR A PARAMETER OF TYPE any
}, 'yaxislocation': {'type': 'cVariant', 'coerce': [_coerce.to_variant] # <allowed> IS NOT ALLOWED FOR A PARAMETER OF TYPE any
}, 'selectdata': {'type': 'cBool'}, 'field': {'type': 'cStr', 'coerce': _coerce.to_str}, 'spw': {'type': 'cStr', 'coerce': _coerce.to_str}, 'timerange': {'type': 'cStr', 'coerce': _coerce.to_str}, 'uvrange': {'type': 'cStr', 'coerce': _coerce.to_str}, 'antenna': {'type': 'cStr', 'coerce': _coerce.to_str}, 'scan': {'type': 'cStr', 'coerce': _coerce.to_str}, 'correlation': {'type': 'cStr', 'coerce': _coerce.to_str}, 'polarization': {'type': 'cStr', 'coerce': _coerce.to_str}, 'antpos': {'type': 'cStr', 'coerce': _coerce.to_str}, 'array': {'type': 'cStr', 'coerce': _coerce.to_str}, 'observation': {'type': 'cStr', 'coerce': _coerce.to_str}, 'intent': {'type': 'cStr', 'coerce': _coerce.to_str}, 'feed': {'type': 'cStr', 'coerce': _coerce.to_str}, 'msselect': {'type': 'cStr', 'coerce': _coerce.to_str}, 'averagedata': {'type': 'cBool'}, 'avgchannel': {'type': 'cStr', 'coerce': _coerce.to_str}, 'avgtime': {'type': 'cStr', 'coerce': _coerce.to_str}, 'avgscan': {'type': 'cBool'}, 'avgfield': {'type': 'cBool'}, 'avgbaseline': {'type': 'cBool'}, 'avgantenna': {'type': 'cBool'}, 'avgspw': {'type': 'cBool'}, 'scalar': {'type': 'cBool'}, 'transform': {'type': 'cBool'}, 'freqframe': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'LSRK', 'CMB', 'GALACTO', 'GEO', 'TOPO', 'LSRD', 'LGROUP', 'BARY', '' ]}, 'restfreq': {'type': 'cStr', 'coerce': _coerce.to_str}, 'veldef': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'RADIO', 'OPTICAL', 'TRUE' ]}, 'phasecenter': {'type': 'cStr', 'coerce': _coerce.to_str}, 'extendflag': {'type': 'cBool'}, 'extcorr': {'type': 'cBool'}, 'extchannel': {'type': 'cBool'}, 'iteraxis': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'baseline', 'Baseline', 'corr', 'antpos', 'antenna', 'Poln', 'AntPos', 'Antenna', 'Scan', 'polarization', 'correlation', 'Time', 'spw', 'Field', 'poln', 'Corr', '', 'time', 'field', 'Spw', 'scan' ]}, 'xselfscale': {'type': 'cBool'}, 'yselfscale': {'type': 'cBool'}, 'xsharedaxis': {'type': 'cBool'}, 'ysharedaxis': {'type': 'cBool'}, 'customsymbol': {'type': 'cVariant', 'coerce': [_coerce.to_variant]}, 'symbolshape': {'type': 'cVariant', 'coerce': [_coerce.to_variant] # <allowed> IS NOT ALLOWED FOR A PARAMETER OF TYPE any
}, 'symbolsize': {'type': 'cVariant', 'coerce': [_coerce.to_variant]}, 'symbolcolor': {'type': 'cVariant', 'coerce': [_coerce.to_variant]}, 'symbolfill': {'type': 'cVariant', 'coerce': [_coerce.to_variant] # <allowed> IS NOT ALLOWED FOR A PARAMETER OF TYPE any
}, 'symboloutline': {'type': 'cVariant', 'coerce': [_coerce.to_variant]}, 'coloraxis': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'baseline', 'Antenna1', 'Baseline', 'ant1', 'corr', 'observation', 'Intent', 'antpos', 'Observation', 'Poln', 'Channel', 'AntPos', 'Scan', 'polarization', 'intent', 'channel', 'correlation', 'Time', 'antenna2', 'Antenna2', 'spw', 'chan', 'Field', 'poln', 'ant2', 'Corr', '', 'antenna1', 'time', 'field', 'Spw', 'scan' ]}, 'customflaggedsymbol': {'type': 'cVariant', 'coerce': [_coerce.to_variant]}, 'flaggedsymbolshape': {'type': 'cVariant', 'coerce': [_coerce.to_variant] # <allowed> IS NOT ALLOWED FOR A PARAMETER OF TYPE any
}, 'flaggedsymbolsize': {'type': 'cVariant', 'coerce': [_coerce.to_variant]}, 'flaggedsymbolcolor': {'type': 'cVariant', 'coerce': [_coerce.to_variant]}, 'flaggedsymbolfill': {'type': 'cVariant', 'coerce': [_coerce.to_variant] # <allowed> IS NOT ALLOWED FOR A PARAMETER OF TYPE any
}, 'flaggedsymboloutline': {'type': 'cVariant', 'coerce': [_coerce.to_variant]}, 'xconnector': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ '', 'none', 'line', 'step' ]}, 'timeconnector': {'type': 'cBool'}, 'plotrange': {'type': 'cFloatVec', 'coerce': [_coerce.to_list,_coerce.to_floatvec]}, 'title': {'type': 'cStr', 'coerce': _coerce.to_str}, 'titlefont': {'type': 'cInt'}, 'xlabel': {'type': 'cStr', 'coerce': _coerce.to_str}, 'xaxisfont': {'type': 'cInt'}, 'ylabel': {'type': 'cStr', 'coerce': _coerce.to_str}, 'yaxisfont': {'type': 'cInt'}, 'showmajorgrid': {'type': 'cBool'}, 'majorwidth': {'type': 'cInt'}, 'majorstyle': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'none', 'dot', 'solid', 'dash', '' ]}, 'majorcolor': {'type': 'cStr', 'coerce': _coerce.to_str}, 'showminorgrid': {'type': 'cBool'}, 'minorwidth': {'type': 'cInt'}, 'minorstyle': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'none', 'dot', 'solid', 'dash', '' ]}, 'minorcolor': {'type': 'cStr', 'coerce': _coerce.to_str}, 'showlegend': {'type': 'cBool'}, 'legendposition': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'exteriorRight', 'lowerRight', 'exteriorTop', 'exteriorLeft', 'lowerLeft', 'upperRight', 'upperLeft', 'exteriorBottom', '' ]}, 'plotfile': {'type': 'cStr', 'coerce': _coerce.to_str}, 'expformat': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'pdf', 'jpg', 'png', 'txt', 'ps', '' ]}, 'verbose': {'type': 'cBool'}, 'exprange': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ '', 'current', 'all' ]}, 'highres': {'type': 'cBool'}, 'dpi': {'type': 'cInt'}, 'width': {'type': 'cInt'}, 'height': {'type': 'cInt'}, 'overwrite': {'type': 'cBool'}, 'showgui': {'type': 'cBool'}, 'clearplots': {'type': 'cBool'}, 'callib': {'type': 'cStrVec', 'coerce': [_coerce.to_list,_coerce.to_strvec]}, 'headeritems': {'type': 'cStr', 'coerce': _coerce.to_str}, 'showatm': {'type': 'cBool'}, 'showtsky': {'type': 'cBool'}, 'showimage': {'type': 'cBool'}, 'colorizeoverlay': {'type': 'cBool'}}
        doc = {'vis': vis, 'caltable': caltable, 'gridrows': gridrows, 'gridcols': gridcols, 'rowindex': rowindex, 'colindex': colindex, 'plotindex': plotindex, 'xaxis': xaxis, 'xdatacolumn': xdatacolumn, 'xframe': xframe, 'xinterp': xinterp, 'yaxis': yaxis, 'ydatacolumn': ydatacolumn, 'yframe': yframe, 'yinterp': yinterp, 'yaxislocation': yaxislocation, 'selectdata': selectdata, 'field': field, 'spw': spw, 'timerange': timerange, 'uvrange': uvrange, 'antenna': antenna, 'scan': scan, 'correlation': correlation, 'polarization': polarization, 'antpos': antpos, 'array': array, 'observation': observation, 'intent': intent, 'feed': feed, 'msselect': msselect, 'averagedata': averagedata, 'avgchannel': avgchannel, 'avgtime': avgtime, 'avgscan': avgscan, 'avgfield': avgfield, 'avgbaseline': avgbaseline, 'avgantenna': avgantenna, 'avgspw': avgspw, 'scalar': scalar, 'transform': transform, 'freqframe': freqframe, 'restfreq': restfreq, 'veldef': veldef, 'phasecenter': phasecenter, 'extendflag': extendflag, 'extcorr': extcorr, 'extchannel': extchannel, 'iteraxis': iteraxis, 'xselfscale': xselfscale, 'yselfscale': yselfscale, 'xsharedaxis': xsharedaxis, 'ysharedaxis': ysharedaxis, 'customsymbol': customsymbol, 'symbolshape': symbolshape, 'symbolsize': symbolsize, 'symbolcolor': symbolcolor, 'symbolfill': symbolfill, 'symboloutline': symboloutline, 'coloraxis': coloraxis, 'customflaggedsymbol': customflaggedsymbol, 'flaggedsymbolshape': flaggedsymbolshape, 'flaggedsymbolsize': flaggedsymbolsize, 'flaggedsymbolcolor': flaggedsymbolcolor, 'flaggedsymbolfill': flaggedsymbolfill, 'flaggedsymboloutline': flaggedsymboloutline, 'xconnector': xconnector, 'timeconnector': timeconnector, 'plotrange': plotrange, 'title': title, 'titlefont': titlefont, 'xlabel': xlabel, 'xaxisfont': xaxisfont, 'ylabel': ylabel, 'yaxisfont': yaxisfont, 'showmajorgrid': showmajorgrid, 'majorwidth': majorwidth, 'majorstyle': majorstyle, 'majorcolor': majorcolor, 'showminorgrid': showminorgrid, 'minorwidth': minorwidth, 'minorstyle': minorstyle, 'minorcolor': minorcolor, 'showlegend': showlegend, 'legendposition': legendposition, 'plotfile': plotfile, 'expformat': expformat, 'verbose': verbose, 'exprange': exprange, 'highres': highres, 'dpi': dpi, 'width': width, 'height': height, 'overwrite': overwrite, 'showgui': showgui, 'clearplots': clearplots, 'callib': callib, 'headeritems': headeritems, 'showatm': showatm, 'showtsky': showtsky, 'showimage': showimage, 'colorizeoverlay': colorizeoverlay}
        assert _pc.validate(doc,schema), create_error_string(_pc.errors)
        _logging_state_ = _start_log( 'plotms', [ 'vis=' + repr(_pc.document['vis']), 'caltable=' + repr(_pc.document['caltable']), 'gridrows=' + repr(_pc.document['gridrows']), 'gridcols=' + repr(_pc.document['gridcols']), 'rowindex=' + repr(_pc.document['rowindex']), 'colindex=' + repr(_pc.document['colindex']), 'plotindex=' + repr(_pc.document['plotindex']), 'xaxis=' + repr(_pc.document['xaxis']), 'xdatacolumn=' + repr(_pc.document['xdatacolumn']), 'xframe=' + repr(_pc.document['xframe']), 'xinterp=' + repr(_pc.document['xinterp']), 'yaxis=' + repr(_pc.document['yaxis']), 'ydatacolumn=' + repr(_pc.document['ydatacolumn']), 'yframe=' + repr(_pc.document['yframe']), 'yinterp=' + repr(_pc.document['yinterp']), 'yaxislocation=' + repr(_pc.document['yaxislocation']), 'selectdata=' + repr(_pc.document['selectdata']), 'field=' + repr(_pc.document['field']), 'spw=' + repr(_pc.document['spw']), 'timerange=' + repr(_pc.document['timerange']), 'uvrange=' + repr(_pc.document['uvrange']), 'antenna=' + repr(_pc.document['antenna']), 'scan=' + repr(_pc.document['scan']), 'correlation=' + repr(_pc.document['correlation']), 'polarization=' + repr(_pc.document['polarization']), 'antpos=' + repr(_pc.document['antpos']), 'array=' + repr(_pc.document['array']), 'observation=' + repr(_pc.document['observation']), 'intent=' + repr(_pc.document['intent']), 'feed=' + repr(_pc.document['feed']), 'msselect=' + repr(_pc.document['msselect']), 'averagedata=' + repr(_pc.document['averagedata']), 'avgchannel=' + repr(_pc.document['avgchannel']), 'avgtime=' + repr(_pc.document['avgtime']), 'avgscan=' + repr(_pc.document['avgscan']), 'avgfield=' + repr(_pc.document['avgfield']), 'avgbaseline=' + repr(_pc.document['avgbaseline']), 'avgantenna=' + repr(_pc.document['avgantenna']), 'avgspw=' + repr(_pc.document['avgspw']), 'scalar=' + repr(_pc.document['scalar']), 'transform=' + repr(_pc.document['transform']), 'freqframe=' + repr(_pc.document['freqframe']), 'restfreq=' + repr(_pc.document['restfreq']), 'veldef=' + repr(_pc.document['veldef']), 'phasecenter=' + repr(_pc.document['phasecenter']), 'extendflag=' + repr(_pc.document['extendflag']), 'extcorr=' + repr(_pc.document['extcorr']), 'extchannel=' + repr(_pc.document['extchannel']), 'iteraxis=' + repr(_pc.document['iteraxis']), 'xselfscale=' + repr(_pc.document['xselfscale']), 'yselfscale=' + repr(_pc.document['yselfscale']), 'xsharedaxis=' + repr(_pc.document['xsharedaxis']), 'ysharedaxis=' + repr(_pc.document['ysharedaxis']), 'customsymbol=' + repr(_pc.document['customsymbol']), 'symbolshape=' + repr(_pc.document['symbolshape']), 'symbolsize=' + repr(_pc.document['symbolsize']), 'symbolcolor=' + repr(_pc.document['symbolcolor']), 'symbolfill=' + repr(_pc.document['symbolfill']), 'symboloutline=' + repr(_pc.document['symboloutline']), 'coloraxis=' + repr(_pc.document['coloraxis']), 'customflaggedsymbol=' + repr(_pc.document['customflaggedsymbol']), 'flaggedsymbolshape=' + repr(_pc.document['flaggedsymbolshape']), 'flaggedsymbolsize=' + repr(_pc.document['flaggedsymbolsize']), 'flaggedsymbolcolor=' + repr(_pc.document['flaggedsymbolcolor']), 'flaggedsymbolfill=' + repr(_pc.document['flaggedsymbolfill']), 'flaggedsymboloutline=' + repr(_pc.document['flaggedsymboloutline']), 'xconnector=' + repr(_pc.document['xconnector']), 'timeconnector=' + repr(_pc.document['timeconnector']), 'plotrange=' + repr(_pc.document['plotrange']), 'title=' + repr(_pc.document['title']), 'titlefont=' + repr(_pc.document['titlefont']), 'xlabel=' + repr(_pc.document['xlabel']), 'xaxisfont=' + repr(_pc.document['xaxisfont']), 'ylabel=' + repr(_pc.document['ylabel']), 'yaxisfont=' + repr(_pc.document['yaxisfont']), 'showmajorgrid=' + repr(_pc.document['showmajorgrid']), 'majorwidth=' + repr(_pc.document['majorwidth']), 'majorstyle=' + repr(_pc.document['majorstyle']), 'majorcolor=' + repr(_pc.document['majorcolor']), 'showminorgrid=' + repr(_pc.document['showminorgrid']), 'minorwidth=' + repr(_pc.document['minorwidth']), 'minorstyle=' + repr(_pc.document['minorstyle']), 'minorcolor=' + repr(_pc.document['minorcolor']), 'showlegend=' + repr(_pc.document['showlegend']), 'legendposition=' + repr(_pc.document['legendposition']), 'plotfile=' + repr(_pc.document['plotfile']), 'expformat=' + repr(_pc.document['expformat']), 'verbose=' + repr(_pc.document['verbose']), 'exprange=' + repr(_pc.document['exprange']), 'highres=' + repr(_pc.document['highres']), 'dpi=' + repr(_pc.document['dpi']), 'width=' + repr(_pc.document['width']), 'height=' + repr(_pc.document['height']), 'overwrite=' + repr(_pc.document['overwrite']), 'showgui=' + repr(_pc.document['showgui']), 'clearplots=' + repr(_pc.document['clearplots']), 'callib=' + repr(_pc.document['callib']), 'headeritems=' + repr(_pc.document['headeritems']), 'showatm=' + repr(_pc.document['showatm']), 'showtsky=' + repr(_pc.document['showtsky']), 'showimage=' + repr(_pc.document['showimage']), 'colorizeoverlay=' + repr(_pc.document['colorizeoverlay']) ] )
        task_result = None
        try:
            task_result = _plotms_t( _pc.document['vis'], _pc.document['caltable'], _pc.document['gridrows'], _pc.document['gridcols'], _pc.document['rowindex'], _pc.document['colindex'], _pc.document['plotindex'], _pc.document['xaxis'], _pc.document['xdatacolumn'], _pc.document['xframe'], _pc.document['xinterp'], _pc.document['yaxis'], _pc.document['ydatacolumn'], _pc.document['yframe'], _pc.document['yinterp'], _pc.document['yaxislocation'], _pc.document['selectdata'], _pc.document['field'], _pc.document['spw'], _pc.document['timerange'], _pc.document['uvrange'], _pc.document['antenna'], _pc.document['scan'], _pc.document['correlation'], _pc.document['polarization'], _pc.document['antpos'], _pc.document['array'], _pc.document['observation'], _pc.document['intent'], _pc.document['feed'], _pc.document['msselect'], _pc.document['averagedata'], _pc.document['avgchannel'], _pc.document['avgtime'], _pc.document['avgscan'], _pc.document['avgfield'], _pc.document['avgbaseline'], _pc.document['avgantenna'], _pc.document['avgspw'], _pc.document['scalar'], _pc.document['transform'], _pc.document['freqframe'], _pc.document['restfreq'], _pc.document['veldef'], _pc.document['phasecenter'], _pc.document['extendflag'], _pc.document['extcorr'], _pc.document['extchannel'], _pc.document['iteraxis'], _pc.document['xselfscale'], _pc.document['yselfscale'], _pc.document['xsharedaxis'], _pc.document['ysharedaxis'], _pc.document['customsymbol'], _pc.document['symbolshape'], _pc.document['symbolsize'], _pc.document['symbolcolor'], _pc.document['symbolfill'], _pc.document['symboloutline'], _pc.document['coloraxis'], _pc.document['customflaggedsymbol'], _pc.document['flaggedsymbolshape'], _pc.document['flaggedsymbolsize'], _pc.document['flaggedsymbolcolor'], _pc.document['flaggedsymbolfill'], _pc.document['flaggedsymboloutline'], _pc.document['xconnector'], _pc.document['timeconnector'], _pc.document['plotrange'], _pc.document['title'], _pc.document['titlefont'], _pc.document['xlabel'], _pc.document['xaxisfont'], _pc.document['ylabel'], _pc.document['yaxisfont'], _pc.document['showmajorgrid'], _pc.document['majorwidth'], _pc.document['majorstyle'], _pc.document['majorcolor'], _pc.document['showminorgrid'], _pc.document['minorwidth'], _pc.document['minorstyle'], _pc.document['minorcolor'], _pc.document['showlegend'], _pc.document['legendposition'], _pc.document['plotfile'], _pc.document['expformat'], _pc.document['verbose'], _pc.document['exprange'], _pc.document['highres'], _pc.document['dpi'], _pc.document['width'], _pc.document['height'], _pc.document['overwrite'], _pc.document['showgui'], _pc.document['clearplots'], _pc.document['callib'], _pc.document['headeritems'], _pc.document['showatm'], _pc.document['showtsky'], _pc.document['showimage'], _pc.document['colorizeoverlay'] )
        except Exception as exc:
            _except_log('plotms', exc)
            raise
        finally:
            task_result = _end_log( _logging_state_, 'plotms', task_result )
        return task_result

plotms = _plotms( )

