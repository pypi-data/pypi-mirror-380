[project]
name = "isotropic"
authors = [
    { name = "Anurag Saha Roy", email = "contact@anuragsaharoy.me"}]
version = "0.5.0"
license = "Apache-2.0"
description = "A Python package for isotropic error analysis in quantum computing"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "jax>=0.7.0",
    "scipy>=1.16.0",
]

[project.optional-dependencies]
dev = [
    "ipykernel>=6.30.1",
    "joblib>=1.5.2",
    "jupyter>=1.1.1",
    "matplotlib>=3.10.6",
    "mypy>=1.17.0",
    "pre-commit>=4.2.0",
    "pylatexenc>=2.10",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-xdist>=3.8.0",
    "ruff>=0.12.5",
]
algo = [
    "qiskit~=1.2.4",
    "qiskit-aer~=0.15.1",
]
all = ["isotropic[dev,algo]"]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.20",
    "mkdocstrings-python>=1.18.2",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.numpydoc_validation]
checks = [
    "all", # check all except the following
    "ES01", # No extended summary found
    "SA01", # See Also section not found
    "EX01", # No examples section found
    "GL08", # The object does not have a docstring
]
exclude = [  # don't report on objects that match any of these regex
    '\.__init__$',
    '\.__call__$',
    '\._tree_flatten$',
    '\._tree_unflatten$',
    'test_*',
]
