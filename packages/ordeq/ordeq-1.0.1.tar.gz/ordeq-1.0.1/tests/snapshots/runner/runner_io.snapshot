Output:
NodeGraph:
  Edges:
     runner_io:decrement -> []
     runner_io:increment -> [runner_io:decrement]
  Nodes:
     Node(name=runner_io:decrement, inputs=[StringBuffer(_buffer=<_io.StringIO object at HASH1>), StringBuffer(_buffer=<_io.StringIO object at HASH2>)], outputs=[StringBuffer(_buffer=<_io.StringIO object at HASH3>)])
     Node(name=runner_io:increment, inputs=[Static(value=1)], outputs=[StringBuffer(_buffer=<_io.StringIO object at HASH1>)])
{StringBuffer(_buffer=<_io.StringIO object at HASH1>): '2', StringBuffer(_buffer=<_io.StringIO object at HASH3>): '0'}
NodeGraph:
  Edges:
     runner_io:decrement -> []
     runner_io:increment -> [runner_io:decrement]
  Nodes:
     Node(name=runner_io:decrement, inputs=[StringBuffer(_buffer=<_io.StringIO object at HASH1>), StringBuffer(_buffer=<_io.StringIO object at HASH2>)], outputs=[StringBuffer(_buffer=<_io.StringIO object at HASH3>)])
     Node(name=runner_io:increment, inputs=[Static(value=1)], outputs=[StringBuffer(_buffer=<_io.StringIO object at HASH1>)])
{StringBuffer(_buffer=<_io.StringIO object at HASH1>): '3', StringBuffer(_buffer=<_io.StringIO object at HASH3>): '-30'}

Logging:
INFO	ordeq.framework.io	Loading Static(value=1)
INFO	ordeq.framework.runner	Running node Node(name=runner_io:increment, inputs=[Static(value=1)], outputs=[StringBuffer(_buffer=<_io.StringIO object at HASH1>)])
INFO	ordeq.framework.io	Saving StringBuffer(_buffer=<_io.StringIO object at HASH1>)
INFO	ordeq.framework.io	Loading StringBuffer(_buffer=<_io.StringIO object at HASH2>)
INFO	ordeq.framework.runner	Running node Node(name=runner_io:decrement, inputs=[StringBuffer(_buffer=<_io.StringIO object at HASH1>), StringBuffer(_buffer=<_io.StringIO object at HASH2>)], outputs=[StringBuffer(_buffer=<_io.StringIO object at HASH3>)])
INFO	ordeq.framework.io	Saving StringBuffer(_buffer=<_io.StringIO object at HASH3>)
INFO	ordeq.framework.io	Loading Static(value=2)
INFO	ordeq.framework.runner	Running node Node(name=runner_io:increment, inputs=[Static(value=2)], outputs=[StringBuffer(_buffer=<_io.StringIO object at HASH1>)])
INFO	ordeq.framework.io	Saving StringBuffer(_buffer=<_io.StringIO object at HASH1>)
INFO	ordeq.framework.io	Loading Static(value='33')
INFO	ordeq.framework.runner	Running node Node(name=runner_io:decrement, inputs=[StringBuffer(_buffer=<_io.StringIO object at HASH1>), Static(value='33')], outputs=[StringBuffer(_buffer=<_io.StringIO object at HASH4>)])
INFO	ordeq.framework.io	Saving StringBuffer(_buffer=<_io.StringIO object at HASH4>)

Typing:
packages/ordeq/tests/resources/runner/runner_io.py:29: error: Argument "io" to "run" has incompatible type "dict[object, object]"; expected "dict[Input[Never] | Output[Never], Input[Never] | Output[Never]] | None"  [arg-type]
Found 1 error in 1 file (checked 1 source file)