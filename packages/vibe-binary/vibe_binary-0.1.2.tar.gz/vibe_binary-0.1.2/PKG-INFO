Metadata-Version: 2.4
Name: vibe-binary
Version: 0.1.2
Summary: –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –±–∏–Ω–∞—Ä–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ —Å AI-–º–∞–≥–∏–µ–π
Author-email: Your Name <your.email@example.com>
License: MIT
Project-URL: Homepage, https://github.com/yourusername/vibe-binary
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Description-Content-Type: text/markdown
Requires-Dist: requests>=2.25.0
Requires-Dist: python-dotenv>=1.0.0

# Vibe Binary üîÆ

**–£–º–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –±–∏–Ω–∞—Ä–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é –¥–ª—è —É–≥–∞–¥—ã–≤–∞–Ω–∏—è —á–∏—Å–µ–ª**

![Python Version](https://img.shields.io/badge/python-3.7%2B-blue)
![License](https://img.shields.io/badge/License-MIT-yellow.svg)
![PyPI](https://img.shields.io/pypi/v/vibe-binary)

## üåü –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏

- **üîç –£–º–Ω—ã–π –±–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫** —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π –ø—Ä–æ—Ü–µ—Å—Å–∞
- **üß† –ù–µ–π—Ä–æ—Å–µ—Ç—å –¥–ª—è —É–≥–∞–¥—ã–≤–∞–Ω–∏—è —á–∏—Å–µ–ª** —á–µ—Ä–µ–∑ OpenRouter API
- **üéØ –î–≤–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã**: –ø–æ–¥—Ä–æ–±–Ω—ã–π –∏ —Ç–∏—Ö–∏–π (—Å —Å—É—Ñ—Ñ–∏–∫—Å–æ–º `.c`)
- **üöÄ –†–∞–±–æ—Ç–∞–µ—Ç –∏–∑ –∫–æ—Ä–æ–±–∫–∏** - –Ω–µ —Ç—Ä–µ–±—É–µ—Ç API –∫–ª—é—á–µ–π –¥–ª—è –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞

## üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞

```bash
pip install vibe-binary
```
‚ö° –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
–ë–∞–∑–æ–≤—ã–π –±–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫
```python
from vibe_binary import binary_search, binary_search_c

numbers = [5, 2, 8, 1, 9, 3, 7, 4, 6]

# –° –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º –ø—Ä–æ—Ü–µ—Å—Å–∞
result = binary_search(numbers, 7, verbose=True)
# üì¶ –°–æ—Ä—Ç–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤...
# üîç –ò—â–µ–º 7 –≤ –º–∞—Å—Å–∏–≤–µ –∏–∑ 9 —ç–ª–µ–º–µ–Ω—Ç–æ–≤
# –®–∞–≥ 1: [0-8] mid=4 ‚Üí 5
#    ‚û°Ô∏è –ò–¥—ë–º –≤–ø—Ä–∞–≤–æ
# –®–∞–≥ 2: [5-8] mid=6 ‚Üí 7
# ‚úÖ –ù–∞–π–¥–µ–Ω–æ! –ò–Ω–¥–µ–∫—Å: 6

# –ß–∏—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ –≤—ã–≤–æ–¥–∞ (–¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞)
result = binary_search_c(numbers, 7)
print(result)  # 6
```
# –£–≥–∞–¥—ã–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é
```python
from vibe_binary import neural_guess_number, neural_guess_c

# –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é
neural_guess_number(100)  # –£–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100

# –¢–∏—Ö–∞—è –≤–µ—Ä—Å–∏—è
neural_guess_c(50)  # –£–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 50
```
–ü—Ä–∏–º–µ—Ä –∏–≥—Ä—ã:

```text
üîÆ Vibe Binary —Å –ù–ï–ô–†–û–°–ï–¢–¨–Æ —É–≥–∞–¥–∞–µ—Ç —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100!
–ü—Ä–∞–≤–∏–ª–∞: + (–º–æ–µ —á–∏—Å–ª–æ –ë–û–õ–¨–®–ï), - (–º–æ–µ —á–∏—Å–ª–æ –ú–ï–ù–¨–®–ï), = (—É–≥–∞–¥–∞–ª)
üí´ –†–µ–∂–∏–º: –ù–ê–°–¢–û–Ø–©–ê–Ø –ù–ï–ô–†–û–°–ï–¢–¨ —á–µ—Ä–µ–∑ API
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
ü§î –ù–µ–π—Ä–æ—Å–µ—Ç—å –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç: 50
–¢–≤–æ–π –æ—Ç–≤–µ—Ç (+, -, =): -
ü§î –ù–µ–π—Ä–æ—Å–µ—Ç—å –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç: 25
–¢–≤–æ–π –æ—Ç–≤–µ—Ç (+, -, =): +
ü§î –ù–µ–π—Ä–æ—Å–µ—Ç—å –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç: 37
–¢–≤–æ–π –æ—Ç–≤–µ—Ç (+, -, =): =
üéâ –ù–µ–π—Ä–æ—Å–µ—Ç—å —É–≥–∞–¥–∞–ª–∞ –∑–∞ 3 –ø–æ–ø—ã—Ç–æ–∫!
```
üõ† API Reference
–§—É–Ω–∫—Ü–∏–∏ –ø–æ–∏—Å–∫–∞
```binary_search(arr, target, verbose=False, auto_sort=True) ```
–ë–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫ —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π –ø—Ä–æ—Ü–µ—Å—Å–∞.

–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:

arr - –º–∞—Å—Å–∏–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞

target - –∏—Å–∫–æ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç

verbose - –≤—ã–≤–æ–¥ –ø—Ä–æ—Ü–µ—Å—Å–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é False)

auto_sort - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é True)

–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–ª–∏ -1 –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω

binary_search_c(arr, target, auto_sort=True)
–ß–∏—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –±–µ–∑ –≤—ã–≤–æ–¥–∞.

–§—É–Ω–∫—Ü–∏–∏ —É–≥–∞–¥—ã–≤–∞–Ω–∏—è
neural_guess_number(max_number=100, use_real_ai=True)
–£–≥–∞–¥—ã–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ —Å –ø–æ–º–æ—â—å—é –Ω–µ–π—Ä–æ—Å–µ—Ç–∏.

–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:

max_number - –≤–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 100)

use_real_ai - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—Å—Ç–æ—è—â—É—é –Ω–µ–π—Ä–æ—Å–µ—Ç—å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é True)

neural_guess_c(max_number=100)
–ß–∏—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è —É–≥–∞–¥—ã–≤–∞–Ω–∏—è —á–∏—Å–µ–ª.

–ö–ª–∞—Å—Å—ã
NeuralGuesser(max_number=100, use_real_ai=True)
–ö–ª–∞—Å—Å –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –∏–≥—Ä –≤ —É–≥–∞–¥—ã–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª.

```python
from vibe_binary import NeuralGuesser

guesser = NeuralGuesser(max_number=1000, use_real_ai=True)
guesser.start_game()
```
üöÄ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
–ö–∞—Å—Ç–æ–º–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏
```python
from vibe_binary import NeuralAPI

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
ai = NeuralAPI()
guess = ai.ask_neural_guess([(50, '-'), (25, '+')], 100)
print(f"–°–ª–µ–¥—É—é—â–µ–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {guess}")
```
–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏
```python
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –≤–º–µ—Å—Ç–æ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏
neural_guess_number(100, use_real_ai=False)
```
üîß –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞
–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
```bash
git clone https://github.com/yourusername/vibe-binary.git
cd vibe-binary
pip install -e .
```
–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
```bash
python -m pytest tests/
```
ü§ù –í–∫–ª–∞–¥ –≤ –ø—Ä–æ–µ–∫—Ç
–ú—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∫–ª–∞–¥—ã! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞:

–§–æ—Ä–∫–Ω–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π

–°–æ–∑–¥–∞–π—Ç–µ –≤–µ—Ç–∫—É –¥–ª—è —Ñ–∏—á–∏ (git checkout -b feature/amazing-feature)

–ó–∞–∫–æ–º–º–∏—Ç—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è (git commit -m 'Add amazing feature')

–ó–∞–ø—É—à—å—Ç–µ –≤ –≤–µ—Ç–∫—É (git push origin feature/amazing-feature)

–û—Ç–∫—Ä–æ–π—Ç–µ Pull Request

üìÑ –õ–∏—Ü–µ–Ω–∑–∏—è
–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –ø–æ–¥ –ª–∏—Ü–µ–Ω–∑–∏–µ–π MIT. –ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤ —Ñ–∞–π–ª–µ LICENSE.

### ‚ö†Ô∏è –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ
–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç OpenRouter API –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º. –î–ª—è –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á, –Ω–æ –¥–ª—è production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π API –∫–ª—é—á –Ω–∞ OpenRouter.

### –°–¥–µ–ª–∞–Ω–æ —Å ‚ù§Ô∏è –∏ –±–∏–Ω–∞—Ä–Ω–æ–π –º–∞–≥–∏–µ–π
