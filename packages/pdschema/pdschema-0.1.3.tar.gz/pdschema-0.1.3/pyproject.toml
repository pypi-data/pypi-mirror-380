[tool.poetry]
name = "pdschema"
version = "0.1.3"
description = "A Python library for validating pandas DataFrames using schemas"
authors = ["pdschema contributors"]
readme = "README.md"
packages = [{ include = "pdschema" }]
license = "MIT"
repository = "https://github.com/inquilabee/pdschema"
documentation = "https://github.com/inquilabee/pdschema#readme"
keywords = ["pandas", "schema", "validation", "dataframe", "pyarrow"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
pandas = ">=1.3.0"
pyarrow = ">=7.0.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0.0"
pytest-cov = ">=4.0.0"
black = ">=24.2.0"
isort = ">=5.13.2"
ruff = ">=0.3.0"
pre-commit = ">=3.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120

[tool.ruff]
line-length = 120
target-version = "py38"

[tool.ruff.lint]
select = ["E", "F", "B", "I", "N", "UP", "PL", "RUF"]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["pdschema"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=pdschema"
