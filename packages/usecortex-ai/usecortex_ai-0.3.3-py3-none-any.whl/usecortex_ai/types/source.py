# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class Source(UniversalBaseModel):
    id: str = pydantic.Field()
    """
    Unique identifier for the source document
    """

    title: str = pydantic.Field()
    """
    Display title of the source document
    """

    type: str = pydantic.Field()
    """
    Type of content (document, file, text, etc.)
    """

    timestamp: str = pydantic.Field()
    """
    When the source was originally created or uploaded
    """

    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    Brief summary or description of the source content
    """

    document_metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    Additional metadata specific to the document
    """

    tenant_metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    Metadata related to the tenant and organizational context
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
