# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class DeleteMemoryRequest(UniversalBaseModel):
    tenant_id: str = pydantic.Field()
    """
    Unique identifier for the tenant/organization
    """

    source_ids: typing.List[str] = pydantic.Field()
    """
    List of source IDs to delete
    """

    sub_tenant_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional sub-tenant identifier used to organize data within a tenant. If omitted, the default sub-tenant created during tenant setup will be used.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
