# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class EmbeddingsCreateCollectionData(UniversalBaseModel):
    tenant_id: str = pydantic.Field()
    """
    Identifier for the tenant/organization
    """

    sub_tenant_id: str = pydantic.Field()
    """
    Identifier for the sub-tenant within the tenant
    """

    success: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Indicates whether the embeddings tenant creation completed successfully
    """

    message: typing.Optional[str] = pydantic.Field(default=None)
    """
    Status message about the tenant creation operation
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
