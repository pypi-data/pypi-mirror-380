# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class EmbeddingsDeleteData(UniversalBaseModel):
    total_deleted: int = pydantic.Field()
    """
    Total number of embeddings that were successfully deleted
    """

    status: typing.Dict[str, bool] = pydantic.Field()
    """
    Dictionary mapping chunk IDs to their deletion status (true if deleted successfully). Example: {'chunk_1234': true}
    """

    success: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Indicates whether the embeddings deletion operation completed successfully
    """

    message: typing.Optional[str] = pydantic.Field(default=None)
    """
    Status message about the deletion operation
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
