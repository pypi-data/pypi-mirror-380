# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .source import Source


class ListSourcesResponse(UniversalBaseModel):
    sources: typing.List[typing.Optional[Source]] = pydantic.Field()
    """
    List of source documents retrieved
    """

    success: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Indicates whether the request was successful
    """

    message: typing.Optional[str] = pydantic.Field(default=None)
    """
    Response message describing the operation result
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
