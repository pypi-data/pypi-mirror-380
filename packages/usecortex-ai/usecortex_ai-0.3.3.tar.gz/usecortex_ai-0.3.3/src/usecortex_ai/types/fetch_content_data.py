# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class FetchContentData(UniversalBaseModel):
    file_id: str = pydantic.Field()
    """
    Unique identifier for the file being fetched
    """

    file_content: typing.Optional[str] = pydantic.Field(default=None)
    """
    Content of the fetched file
    """

    success: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Indicates whether the fetch operation completed successfully
    """

    message: typing.Optional[str] = pydantic.Field(default=None)
    """
    Status message about the fetch operation
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
