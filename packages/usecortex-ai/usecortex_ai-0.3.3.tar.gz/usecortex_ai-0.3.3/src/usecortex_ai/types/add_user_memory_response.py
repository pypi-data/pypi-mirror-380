# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class AddUserMemoryResponse(UniversalBaseModel):
    """
    Response model for adding a new user memory.
    """

    success: bool = pydantic.Field()
    """
    Indicates whether the memory addition operation was successful
    """

    user_memory_added: bool = pydantic.Field()
    """
    Confirms whether the memory was successfully stored in the system
    """

    memory_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Unique identifier assigned to the newly created memory
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
