name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  id-token: write

jobs:
  publish-univer-use:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build sdist and wheel (univer-use)
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          python -m build
          python -m twine check dist/*

      - name: Publish univer-use to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          packages-dir: dist/

  publish-spreadsheet-use:
    runs-on: ubuntu-latest
    needs: publish-univer-use
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Derive release version from tag
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Wait for univer-use to be available on PyPI
        run: |
          echo "Waiting for univer-use version $RELEASE_VERSION to be available on PyPI..."
          for i in {1..30}; do
            if pip index versions univer-use | grep -q "$RELEASE_VERSION"; then
              echo "univer-use version $RELEASE_VERSION is available on PyPI"
              break
            fi
            echo "Attempt $i: univer-use version $RELEASE_VERSION not yet available, waiting..."
            sleep 30
          done

      - name: Build sdist and wheel (spreadsheet-use)
        env:
          SETUPTOOLS_SCM_PRETEND_VERSION: ${{ env.RELEASE_VERSION }}
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          mv pyproject-spreadsheet.toml pyproject.toml
          echo "üîß Setting dependency to univer-use==$RELEASE_VERSION"
          echo "Before replacement:"
          grep "univer-use" pyproject.toml
          sed -i "s/univer-use>=0\.1\.0/univer-use==$RELEASE_VERSION/" pyproject.toml
          echo "After replacement:"
          grep "univer-use" pyproject.toml
          echo "üîß Building with version: $RELEASE_VERSION"
          python -m build
          python -m twine check dist/*
          echo "üîç Verifying package dependencies..."
          WHEEL_FILE=$(ls dist/spreadsheet_use-*.whl | head -1)
          echo "Checking wheel file: $WHEEL_FILE"
          unzip -p "$WHEEL_FILE" "*/METADATA" | grep "Requires-Dist: univer-use" || echo "Warning: Could not verify dependency"

      - name: Publish spreadsheet-use to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          packages-dir: dist/
