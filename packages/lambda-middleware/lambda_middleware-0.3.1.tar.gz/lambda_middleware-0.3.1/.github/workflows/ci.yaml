name: CI

on:
  push:
    branches: [dev, main]
  pull_request:
    branches: [dev, main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        run: uv python install

      - name: Install dependencies
        run: uv sync --locked --dev

      - name: Run unit tests
        run: uv run pytest

  build:
    runs-on: ubuntu-latest
    needs: test
    # Only build on push to branches, not on PRs
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from pyproject.toml
        id: version
        run: |
          VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Extract branch name
        id: branch
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "Branch: $BRANCH"

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        run: uv python install

      - name: Build distribution
        run: uv build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lambda-middleware-${{ steps.version.outputs.version }}-${{ steps.branch.outputs.branch }}
          path: dist/
          retention-days: 30
