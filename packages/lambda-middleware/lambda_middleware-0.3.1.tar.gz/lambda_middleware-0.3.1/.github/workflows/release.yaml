name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    environment: pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write  # Required for trusted publishing to PyPI
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          VERSION=${TAG_NAME#v}
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Tag: $TAG_NAME, Version: $VERSION"

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        run: uv python install

      - name: Build distribution
        run: uv build

      - name: Run smoke test (wheel)
        run: uv run --isolated --no-project --with dist/*.whl tests/smoke_test.py

      - name: Run smoke test (source distribution)
        run: uv run --isolated --no-project --with dist/*.tar.gz tests/smoke_test.py

      - name: Check if release already exists
        id: check_release
        run: |
          if gh release view ${{ steps.version.outputs.tag }} >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "⚠️ Release already exists, deleting..."
            gh release delete ${{ steps.version.outputs.tag }} --yes --cleanup-tag
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "✅ Release does not exist"
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Create GitHub Release
        run: |
          gh release create ${{ steps.version.outputs.tag }} \
            dist/*.tar.gz \
            dist/*.whl \
            --title "Release ${{ steps.version.outputs.tag }}" \
            --generate-notes
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Publish to PyPI
        run: uv publish
