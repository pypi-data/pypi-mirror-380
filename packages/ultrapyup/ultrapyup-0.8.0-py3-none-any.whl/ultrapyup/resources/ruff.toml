line-length = 120
indent-width = 4

# Target Python 3.9+ for broad compatibility
target-version = "py39"

# Exclude common directories that shouldn't be linted
lint.exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

lint.select = [
    "A",
    "ANN",
    "ARG",
    "B",
    "C",
    "D",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
lint.ignore = [
    "D100",   # Allow missing docstring in top level module
    "D104",   # Allow missing docstring in public package
    "D105",   # Allow missing docstring in magic method
    "D203",   # Allow docstring directly below class definition (as enforced by D211)
    "D213",   # Allow multi-line-summary on first line of docstring (as enforced by D212)
    "D413",   # Allow no new line at end of docstring.
    "EM101",  # Allow `raise ValueError(msg)`
    "EM102",  # Allow f strings in `raise` statements
    "FBT003", # Allow boolean positional values in function calls, like `dict.get(... True)`
    "S603",   # Subprocess validation input -> Subject to false positives
]

# Allow fix for all enabled rules when --fix is provided
lint.fixable = ["ALL"]
lint.unfixable = ["F401"]

# Allow unused variables when underscore-prefixed
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[lint.per-file-ignores]
"tests/**/*.py" = [
    "S101",    # Allow assert statements
    "PLR2004", # Allow magic values in tests
    "SLF001",  # Allow private member access
]

# Configuration files can use exec
"**/settings/*.py" = ["S102"]
"**/config/*.py" = ["S102"]

[lint.isort]
# Organize imports cleanly
force-single-line = false
lines-after-imports = 2

[lint.mccabe]
# Complexity threshold
max-complexity = 10

[lint.pydocstyle]
# Use Google-style docstrings
convention = "google"

[format]
# Black-compatible formatting
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Enable docstring formatting (opt-in)
docstring-code-format = true
docstring-code-line-length = "dynamic"
