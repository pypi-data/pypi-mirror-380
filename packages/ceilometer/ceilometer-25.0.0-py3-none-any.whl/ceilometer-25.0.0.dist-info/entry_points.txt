[ceilometer.compute.virt]
libvirt = ceilometer.compute.virt.libvirt.inspector:LibvirtInspector

[ceilometer.discover.central]
alarm = ceilometer.alarm.discovery:AlarmDiscovery
barbican = ceilometer.polling.discovery.non_openstack_credentials_discovery:NonOpenStackCredentialsDiscovery
endpoint = ceilometer.polling.discovery.endpoint:EndpointDiscovery
fip_services = ceilometer.network.services.discovery:FloatingIPDiscovery
fw_policy = ceilometer.network.services.discovery:FirewallPolicyDiscovery
fw_services = ceilometer.network.services.discovery:FirewallDiscovery
images = ceilometer.image.discovery:ImagesDiscovery
ipsec_connections = ceilometer.network.services.discovery:IPSecConnectionsDiscovery
tenant = ceilometer.polling.discovery.tenant:TenantDiscovery
volume_backups = ceilometer.volume.discovery:VolumeBackupsDiscovery
volume_pools = ceilometer.volume.discovery:VolumePoolsDiscovery
volume_snapshots = ceilometer.volume.discovery:VolumeSnapshotsDiscovery
volumes = ceilometer.volume.discovery:VolumeDiscovery
vpn_services = ceilometer.network.services.discovery:VPNServicesDiscovery

[ceilometer.discover.compute]
local_instances = ceilometer.compute.discovery:InstanceDiscovery
local_node = ceilometer.polling.discovery.localnode:LocalNodeDiscovery

[ceilometer.discover.ipmi]
local_node = ceilometer.polling.discovery.localnode:LocalNodeDiscovery

[ceilometer.event.publisher]
file = ceilometer.publisher.file:FilePublisher
gnocchi = ceilometer.publisher.gnocchi:GnocchiPublisher
http = ceilometer.publisher.http:HttpPublisher
https = ceilometer.publisher.http:HttpPublisher
notifier = ceilometer.publisher.messaging:EventNotifierPublisher
test = ceilometer.publisher.test:TestPublisher
zaqar = ceilometer.publisher.zaqar:ZaqarPublisher

[ceilometer.event.trait_plugin]
bitfield = ceilometer.event.trait_plugins:BitfieldTraitPlugin
map = ceilometer.event.trait_plugins:MapTraitPlugin
split = ceilometer.event.trait_plugins:SplitterTraitPlugin
timedelta = ceilometer.event.trait_plugins:TimedeltaPlugin

[ceilometer.notification.pipeline]
event = ceilometer.pipeline.event:EventPipelineManager
meter = ceilometer.pipeline.sample:SamplePipelineManager

[ceilometer.poll.central]
alarm.evaluation_result = ceilometer.alarm.aodh:EvaluationResultPollster
image.size = ceilometer.image.glance:ImageSizePollster
ip.floating = ceilometer.network.floatingip:FloatingIPPollster
network.services.firewall = ceilometer.network.services.fwaas:FirewallPollster
network.services.firewall.policy = ceilometer.network.services.fwaas:FirewallPolicyPollster
network.services.vpn = ceilometer.network.services.vpnaas:VPNServicesPollster
network.services.vpn.connections = ceilometer.network.services.vpnaas:IPSecConnectionsPollster
radosgw.containers.objects = ceilometer.objectstore.rgw:ContainersObjectsPollster
radosgw.containers.objects.size = ceilometer.objectstore.rgw:ContainersSizePollster
radosgw.objects = ceilometer.objectstore.rgw:ObjectsPollster
radosgw.objects.containers = ceilometer.objectstore.rgw:ObjectsContainersPollster
radosgw.objects.size = ceilometer.objectstore.rgw:ObjectsSizePollster
radosgw.usage = ceilometer.objectstore.rgw:UsagePollster
storage.containers.objects = ceilometer.objectstore.swift:ContainersObjectsPollster
storage.containers.objects.size = ceilometer.objectstore.swift:ContainersSizePollster
storage.objects = ceilometer.objectstore.swift:ObjectsPollster
storage.objects.containers = ceilometer.objectstore.swift:ObjectsContainersPollster
storage.objects.size = ceilometer.objectstore.swift:ObjectsSizePollster
volume.backup.size = ceilometer.volume.cinder:VolumeBackupSize
volume.provider.pool.capacity.allocated = ceilometer.volume.cinder:VolumeProviderPoolCapacityAllocated
volume.provider.pool.capacity.free = ceilometer.volume.cinder:VolumeProviderPoolCapacityFree
volume.provider.pool.capacity.provisioned = ceilometer.volume.cinder:VolumeProviderPoolCapacityProvisioned
volume.provider.pool.capacity.total = ceilometer.volume.cinder:VolumeProviderPoolCapacityTotal
volume.provider.pool.capacity.virtual_free = ceilometer.volume.cinder:VolumeProviderPoolCapacityVirtualFree
volume.size = ceilometer.volume.cinder:VolumeSizePollster
volume.snapshot.size = ceilometer.volume.cinder:VolumeSnapshotSize

[ceilometer.poll.compute]
cpu = ceilometer.compute.pollsters.instance_stats:CPUPollster
disk.device.allocation = ceilometer.compute.pollsters.disk:PerDeviceAllocationPollster
disk.device.capacity = ceilometer.compute.pollsters.disk:PerDeviceCapacityPollster
disk.device.read.bytes = ceilometer.compute.pollsters.disk:PerDeviceReadBytesPollster
disk.device.read.latency = ceilometer.compute.pollsters.disk:PerDeviceDiskReadLatencyPollster
disk.device.read.requests = ceilometer.compute.pollsters.disk:PerDeviceReadRequestsPollster
disk.device.usage = ceilometer.compute.pollsters.disk:PerDevicePhysicalPollster
disk.device.write.bytes = ceilometer.compute.pollsters.disk:PerDeviceWriteBytesPollster
disk.device.write.latency = ceilometer.compute.pollsters.disk:PerDeviceDiskWriteLatencyPollster
disk.device.write.requests = ceilometer.compute.pollsters.disk:PerDeviceWriteRequestsPollster
disk.ephemeral.size = ceilometer.compute.pollsters.disk:EphemeralSizePollster
disk.root.size = ceilometer.compute.pollsters.disk:RootSizePollster
memory = ceilometer.compute.pollsters.instance_stats:MemoryPollster
memory.available = ceilometer.compute.pollsters.instance_stats:MemoryAvailablePollster
memory.resident = ceilometer.compute.pollsters.instance_stats:MemoryResidentPollster
memory.swap.in = ceilometer.compute.pollsters.instance_stats:MemorySwapInPollster
memory.swap.out = ceilometer.compute.pollsters.instance_stats:MemorySwapOutPollster
memory.usage = ceilometer.compute.pollsters.instance_stats:MemoryUsagePollster
network.incoming.bytes = ceilometer.compute.pollsters.net:IncomingBytesPollster
network.incoming.bytes.delta = ceilometer.compute.pollsters.net:IncomingBytesDeltaPollster
network.incoming.bytes.rate = ceilometer.compute.pollsters.net:IncomingBytesRatePollster
network.incoming.packets = ceilometer.compute.pollsters.net:IncomingPacketsPollster
network.incoming.packets.drop = ceilometer.compute.pollsters.net:IncomingDropPollster
network.incoming.packets.error = ceilometer.compute.pollsters.net:IncomingErrorsPollster
network.outgoing.bytes = ceilometer.compute.pollsters.net:OutgoingBytesPollster
network.outgoing.bytes.delta = ceilometer.compute.pollsters.net:OutgoingBytesDeltaPollster
network.outgoing.bytes.rate = ceilometer.compute.pollsters.net:OutgoingBytesRatePollster
network.outgoing.packets = ceilometer.compute.pollsters.net:OutgoingPacketsPollster
network.outgoing.packets.drop = ceilometer.compute.pollsters.net:OutgoingDropPollster
network.outgoing.packets.error = ceilometer.compute.pollsters.net:OutgoingErrorsPollster
perf.cache.misses = ceilometer.compute.pollsters.instance_stats:PerfCacheMissesPollster
perf.cache.references = ceilometer.compute.pollsters.instance_stats:PerfCacheReferencesPollster
perf.cpu.cycles = ceilometer.compute.pollsters.instance_stats:PerfCPUCyclesPollster
perf.instructions = ceilometer.compute.pollsters.instance_stats:PerfInstructionsPollster
power.state = ceilometer.compute.pollsters.instance_stats:PowerStatePollster
vcpus = ceilometer.compute.pollsters.instance_stats:VCPUsPollster

[ceilometer.poll.ipmi]
hardware.ipmi.current = ceilometer.ipmi.pollsters.sensor:CurrentSensorPollster
hardware.ipmi.fan = ceilometer.ipmi.pollsters.sensor:FanSensorPollster
hardware.ipmi.power = ceilometer.ipmi.pollsters.sensor:PowerSensorPollster
hardware.ipmi.temperature = ceilometer.ipmi.pollsters.sensor:TemperatureSensorPollster
hardware.ipmi.voltage = ceilometer.ipmi.pollsters.sensor:VoltageSensorPollster

[ceilometer.sample.endpoint]
_sample = ceilometer.telemetry.notifications:TelemetryIpc
hardware.ipmi.current = ceilometer.ipmi.notifications.ironic:CurrentSensorNotification
hardware.ipmi.fan = ceilometer.ipmi.notifications.ironic:FanSensorNotification
hardware.ipmi.temperature = ceilometer.ipmi.notifications.ironic:TemperatureSensorNotification
hardware.ipmi.voltage = ceilometer.ipmi.notifications.ironic:VoltageSensorNotification
http.request = ceilometer.middleware:HTTPRequest
http.response = ceilometer.middleware:HTTPResponse
meter = ceilometer.meter.notifications:ProcessMeterNotifications

[ceilometer.sample.publisher]
file = ceilometer.publisher.file:FilePublisher
gnocchi = ceilometer.publisher.gnocchi:GnocchiPublisher
http = ceilometer.publisher.http:HttpPublisher
https = ceilometer.publisher.http:HttpPublisher
notifier = ceilometer.publisher.messaging:SampleNotifierPublisher
opentelemetryhttp = ceilometer.publisher.opentelemetry_http:OpentelemetryHttpPublisher
prometheus = ceilometer.publisher.prometheus:PrometheusPublisher
tcp = ceilometer.publisher.tcp:TCPPublisher
test = ceilometer.publisher.test:TestPublisher
udp = ceilometer.publisher.udp:UDPPublisher
zaqar = ceilometer.publisher.zaqar:ZaqarPublisher

[console_scripts]
ceilometer-agent-notification = ceilometer.cmd.agent_notification:main
ceilometer-polling = ceilometer.cmd.polling:main
ceilometer-rootwrap = oslo_rootwrap.cmd:main
ceilometer-send-sample = ceilometer.cmd.sample:send_sample
ceilometer-status = ceilometer.cmd.status:main
ceilometer-upgrade = ceilometer.cmd.storage:upgrade

[oslo.config.opts]
ceilometer = ceilometer.opts:list_opts
ceilometer-auth = ceilometer.opts:list_keystoneauth_opts
