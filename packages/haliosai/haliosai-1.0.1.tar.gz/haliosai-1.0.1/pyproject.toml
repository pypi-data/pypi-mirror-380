[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "haliosai"
version = "1.0.1"
description = "Advanced AI Guardrails SDK for LLM applications"
readme = "README.md"
license = "MIT"
authors = [
    {name = "HaliosLabs", email = "support@halioslabs.com"}
]
maintainers = [
    {name = "HaliosLabs", email = "support@halioslabs.com"}
]
keywords = [
    "ai", "guardrails", "llm", "safety", "content-moderation", 
    "openai", "anthropic", "agents", "streaming", "parallel"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Security",
]
requires-python = ">=3.8"
dependencies = [
    "httpx>=0.24.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
openai = ["openai>=1.0.0"]
anthropic = ["anthropic>=0.25.0"]
agents = ["openai-agents>=0.1.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "twine>=4.0.0",
    "build>=0.10.0",
]
all = [
    "haliosai[openai,anthropic,agents]"
]

[project.urls]
Homepage = "https://github.com/HaliosAI/haliosai-python-sdk"
Documentation = "https://docs.halioslabs.com"
Repository = "https://github.com/HaliosAI/haliosai-python-sdk"
Changelog = "https://github.com/HaliosAI/haliosai-python-sdk/releases"
"Bug Reports" = "https://github.com/HaliosAI/haliosai-python-sdk/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["haliosai*"]

[tool.setuptools.package-data]
haliosai = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
strict = false
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = [
    "openai.*",
    "anthropic.*",
    "agents.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "integration: marks tests as integration tests",
]
