"use strict";(self.webpackChunkjupyter_openwebui=self.webpackChunkjupyter_openwebui||[]).push([[497],{497:(e,n,t)=>{t.r(n),t.d(n,{default:()=>c});var o=t(273),l=t(256),a=t(222);const i=JSON.parse('{"cF":"http://localhost:8080","ho":"http://localhost:8001","DD":"üí¨ Chat Open WebUI","qK":"jp-Icon jp-Ic on-32"}'),c={id:"jupyter-openwebui:plugin",description:"Open webui frontend to JupyterLab extension.",autoStart:!0,requires:[o.ILauncher],activate:async(e,n)=>{console.log("JupyterLab extension jupyter-openwebui is activated!");const t=async()=>{try{const e=await fetch("/api/contents/open_webui_url.txt"),n=(await e.json()).content.trim();return console.log(`Open WebUI URL: ${n}`),n}catch(e){return console.warn("URL file not found, using fallback"),"http://localhost:8080"}},o=async()=>{try{const e=await fetch("/api/contents/adk_app_url.txt"),n=(await e.json()).content.trim();return console.log(`ADK App URL: ${n}`),n}catch(e){return console.warn("ADK App URL file not found, using fallback"),"http://localhost:8001"}},c=await t()||i.cF||"http://localhost:8080",d=await o()||i.ho||"http://localhost:8001",s=new l.Widget;s.id="openwebui-chat",s.title.label=i.DD||"Open WebUI",s.title.closable=!0,s.title.iconClass=i.qK||"";let r,p,u=0,h=!1;const g=async()=>{try{await fetch(c,{method:"HEAD",mode:"no-cors"})}catch(e){if(u<8)return void(p=setTimeout(()=>{g()},5e3))}r&&clearTimeout(r),p&&clearTimeout(p),u++,console.log("Before loading, showing loading page"),s.node.innerHTML=`\n        <div style="display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%; padding: 20px; color: #666;">\n          <div style="font-size: 18px; margin-bottom: 10px;">üí¨ Loading OpenWebUI...</div>\n          <div style="font-size: 14px;">Connecting to ${c}</div>\n          <div style="margin-top: 15px; font-size: 12px;">Attempt ${u+1} of 8</div>\n          <div style="margin-top: 10px; font-size: 12px; color: #999;">Please wait...</div>\n        </div>\n      `,setTimeout(()=>{console.log("Creating iframe");const e=document.createElement("iframe");e.src=c,e.style.width="100%",e.style.height="100%",e.style.border="none",e.style.display="none";let n=!1;e.onload=()=>{var t,o;console.log("OpenWebUI loaded successfully");try{const n=e.contentDocument||(null===(t=e.contentWindow)||void 0===t?void 0:t.document),l=(null==n?void 0:n.title)||"",a=(null===(o=null==n?void 0:n.body)||void 0===o?void 0:o.innerText)||"";if(l.includes("Êó†Ê≥ïËÆøÈóÆ")||l.includes("This site can't be reached")||a.includes("ERR_EMPTY_RESPONSE")||a.includes("ERR_CONNECTION_REFUSED")||a.includes("ERR_CONNECTION_TIMED_OUT"))return void console.log("Detected Chrome error page, treating as load failure")}catch(e){console.log("Cross-origin iframe, assuming real service loaded")}r&&clearTimeout(r),p&&clearTimeout(p),n=!0,e.onload=null,s.node.innerHTML="",e.style.display="block",s.node.appendChild(e)},s.node.appendChild(e),r=setTimeout(()=>{n||(console.log(`OpenWebUI load timeout, attempt ${u}/8`),e.parentNode&&e.parentNode.removeChild(e),u<8?p=setTimeout(()=>{g()},5e3):s.node.innerHTML=`\n                <div style="padding: 20px; text-align: center; color: #d32f2f;">\n                  <h3>‚ùå Unable to connect to OpenWebUI</h3>\n                  <p>URL: ${c}</p>\n                  <p>Service may not be running. Please start OpenWebUI and refresh.</p>\n                  <button onclick="location.reload()" style="margin-top: 10px; padding: 8px 16px; background: #1976d2; color: white; border: none; border-radius: 4px; cursor: pointer;">\n                    Refresh Page\n                  </button>\n                </div>\n              `)},4e4)},3e3)},m=new l.Widget;m.id="Google-adkWeb",m.title.label="ü§ñ Agent ADK App",m.title.closable=!0,m.title.iconClass=i.qK||"";const b=async()=>{try{await fetch(d,{method:"HEAD",mode:"no-cors"})}catch(e){console.warn("ADK App not accessible")}m.node.innerHTML=`\n        <div style="display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%; padding: 20px;">\n          <div style="font-size: 18px; margin-bottom: 10px;">ü§ñ Loading ADK App...</div>\n          <div style="font-size: 14px;">Connecting to ${d}</div>\n        </div>\n      `,setTimeout(()=>{const e=document.createElement("iframe");e.src=d,e.style.width="100%",e.style.height="100%",e.style.border="none",e.style.display="none";let n=!1;e.onload=()=>{console.log("ADK App loaded successfully"),n||(n=!0,e.onload=null,e.style.display="block",m.node.innerHTML="",m.node.appendChild(e))},m.node.appendChild(e)},3e3)};console.log("Adding command to launcher"),e.commands.addCommand("openwebui:activate",{label:"OpenWebUI Frontend",caption:"Open WebUI Chat Webpage",icon:a.buildIcon,execute:async()=>{const e=await t();console.log(`Opening: ${e}`),window.open(e,"_blank")}}),console.log("Command added to launcher"),n.add({command:"openwebui:activate",category:"Other",rank:5}),console.log("Launcher item added"),e.commands.addCommand("adkapp:activate",{label:"ADK App",caption:"Open ADK Application",icon:a.buildIcon,execute:async()=>{const e=await o();window.open(e,"_blank")}}),n.add({command:"adkapp:activate",category:"Other",rank:8}),console.log("Initializing iframe"),h||(console.log("Launcher setup complete"),e.shell.add(s,"left",{rank:5}),e.shell.add(m,"left",{rank:8}),console.log("Content added to shell"),e.restored.then(()=>{e.shell.activateById(s.id),g(),b()}).catch(e=>{console.error("Failed to restore JupyterLab:",e),g(),b()}),h=!0)}}}}]);