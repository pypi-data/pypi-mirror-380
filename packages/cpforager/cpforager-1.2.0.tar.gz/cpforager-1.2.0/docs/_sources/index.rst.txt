.. seabird-movement-cpf documentation master file, created by
   sphinx-quickstart on Tue May 20 11:11:06 2025.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Overview
==================================

.. only:: html
      
      .. image:: _static/images/logo_cpforager_color.png
         :width: 150 px
         :align: center

|

Are you a scientist involved in movement ecology working with biologging data collected from central-place foraging seabirds? 
**cpforager** is a Python package designed to help you manipulate, process, analyse and visualise the biologging datasets with ease.

The main objectives of **cpforager** package are :  

   1. Efficiently handle large-scale biologging datasets, including high-resolution sensor data (*e.g.* accelerometers).
   2. Provide a modular and extensible architecture, allowing users to tailor the code to their specific research needs.
   3. Facilitate a smooth transition to Python for movement ecology researchers familiar with other languages (*e.g.* R).

**cpforager** package supports various biologging sensor types commonly used in movement ecology and provides the following core classes:

   * ``GPS`` : for handling position recordings. 
   * ``TDR`` : for handling pressure recordings.
   * ``AXY`` : for handling tri-axial acceleration recordings at high resolution combined with lower resolution position and pressure recordings.
   * ``GPS_TDR`` : for handling position and pressure recordings.
  
**cpforager** also allows to deal with a list of sensors using the following classes:

   * ``GPS_Collection`` : for working with datasets composed of multiple GPS loggers.
   * ``TDR_Collection`` : for working with datasets composed of multiple TDR loggers.
   * ``AXY_Collection`` : for working with datasets composed of multiple AXY loggers.
   * ``GPS_TDR_Collection`` : for working with datasets composed of multiple GPS_TDR loggers.

Each class automatically enhances raw data but also computes key features specific to each biologger (*e.g.* trip segmentation for GPS, dive segmentation for TDR, ODBA calculation for AXY). They are also accompanied with methods for data processing and visualisation.

|

.. toctree::
   :maxdepth: 1
   :caption: Documentation
   :numbered:

   userguide.rst
   classes.rst
   parameters.rst
   processing.rst
   diagnostic.rst
   utils.rst
   misc.rst
   checks.rst
   examples.rst
   
|

Infos
==================================
* Python version used is 3.13.3.
* OS used is Ubuntu 20.04.
* The graphic design of the logos was done by `Lisa Brunel <https://www.linkedin.com/in/lisa-brunel-60b217230?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=ios_app>`_.