[project]
name = "epymorph"

dynamic = ["version"]

authors = [
  { name = "Tyler Coles", email = "tyler.coles@nau.edu" },
  { name = "Jeffrey Covington", email = "jeffrey.covington@nau.edu" },
  { name = "Ye Chen", email = "ye.chen@nau.edu" },
  { name = "Eck Doerry", email = "eck.doerry@nau.edu" },
  { name = "Joseph Mihaljevic", email = "joseph.mihaljevic@nau.edu" },
]

description = "EpiMoRPH spatial disease modeling"

readme = "README.md"

requires-python = ">=3.11"

license = {text="GPL-3.0-only"}

keywords = ["epidemiology", "disease modeling", "metapopulation"]

classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Operating System :: OS Independent",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Bio-Informatics",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Typing :: Typed",
  "Development Status :: 5 - Production/Stable",
]

dependencies = [
  "matplotlib~=3.9.0",
  "numpy~=1.26.4",
  "sympy~=1.12.1",
  "psutil~=5.9.8",
  "pandas[excel]~=2.2.2",
  "geopandas~=0.14.4",
  "census~=0.8.22",
  "jsonpickle~=3.2.1",
  "platformdirs~=4.2.2",
  "graphviz~=0.20.3",
  "typing_extensions~=4.12.2",
  "ipython~=8.26.0",
  "rasterio~=1.3.11",
  "humanize~=4.10.0",
  "sparklines~=0.5.0",
  "scipy~=1.14.1",
]

[dependency-groups]
dev = [
  # Jupyter
  "ipykernel>=6.29.5",
  # Linting/formatting
  "ruff>=0.9.0",
  # Testing
  "pytest>=8.3.4",
  "pytest-cov>=6.0.0",
  "vcrpy>=7.0.0",
  # Build
  "setuptools-scm>=8.1.0",
  # Documentation
  "mkdocs>=1.6.1",
  "mkdocs-material>=9.6.12",
  "mkdocs-gen-files>=0.5.0",
  "mkdocstrings[python]>=0.29.1",
  "griffe-inherited-docstrings>=1.1.1",
]

[project.urls]
Homepage = "https://docs.www.epimorph.org"
Source = "https://github.com/NAU-CCL/Epymorph"
Issues = "https://github.com/NAU-CCL/Epymorph/issues"

[project.scripts]
epymorph = "epymorph.__main__:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--import-mode=importlib",
]

[build-system]
requires = ["setuptools>=74.0.0", "setuptools-scm>=8.1.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
# squash addition of license-files metadata field
# because PyPI complains if it's there? idk
# https://github.com/pypa/setuptools/issues/4759#issuecomment-2547778989
license-files = []

[tool.setuptools.packages.find]
include = ["epymorph*"]

[tool.setuptools.package-data]
"epymorph" = ["py.typed"]

[tool.setuptools_scm]
# enable setuptools_scm

[tool.pyright]
exclude = [
  "**/__pycache__",
  "**/.*",
  "build",
]
typeCheckingMode = "standard"
# Pyright doesn't seem to be able to handle sympy operators,
# so until that's fixed ignore operator errors.
reportOperatorIssue = "none"

[tool.ruff]
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = [
  "F", # (basic pyflakes lints)
  "E", # (basic pycodestyle lints)
  "A", # (don't shadow builtins)
  "I", # (sort imports)
  "T10", # (no debugger directives laying around)
  "ISC", # (clean string concat usage)
  "PIE", # (general improvements)
  "PERF", # (performance traps)
  "PTH", # (prefer pathlib)
  "NPY", # (numpy linting)
  "PD", # (pandas linting)
  "W", # (no extra whitespace)
  "S", # (security rules)
  "BLE", # (catching Exception is too general)
  "PT", # (pytest)
  "T20", # (no extra print statements laying around)
  "ERA", # (no commented code)
  "FURB", # (use modern python)
  "N", # (naming conventions)

  # NOTE: rules I'd like to enable some day are below, commented out
  # "C4", # (clean comprehensions usage)
  # "UP", (use modern python)
  # "B", (possible bugs)
  # "D", (enforced documentation)
  # "DOC", (enforced documentation; complementary with D)
  # "ANN", (enforced type annotations)
  # "RET", (clean return handling)
  # "SIM", (code simplifications)
  # "SLF", (prevent private member access)
  # "ARG", (unused args)
  # "COM", (comma consistency; maybe: is there a way to stop this from demanding trailing commas in function calls?)
  # "TD", (rigorous formatting of TODO comments)
  # "RUF", (general linting)
  # "TRY", (error handling; might need to be selective with this one)
]

ignore = [
  "E741", # (ambiguous names: false positives for common compartment name "I")
]

[tool.ruff.lint.extend-per-file-ignores]
# Allow star imports in tests and notebooks.
# S101 we are allowed to use `assert` in pytest
# I001 (import sort) appears to be broken in notebooks.
# T201 allow prints in notebooks.
# N806 allow non-PEP8-compliant names in IPMs
"tests/**/*_test.py" = ["F403", "F405", "S101"]
"*.ipynb" = ["F403", "F405", "I001", "T201"]
"epymorph/data/ipm/*" = ["N806"]

[tool.ruff.lint.pep8-naming]
# These variable names are very convenient for describing simulation dimensions,
# so we'll special-case them.
extend-ignore-names = ["T", "S", "C", "E", "N", "X"]
