# Runs unit tests with a matrix of Python versions and operating systems

name: Test matrix
on: workflow_dispatch

jobs:
  test-matrix:
    name: Test matrix

    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.11", "3.12", "3.13"]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          version: ${{ vars.UV_VERSION }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup cache folder (bash)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir -p .cache
          echo "EPYMORPH_CACHE_PATH=$(realpath .cache)" >> $GITHUB_ENV

      - name: Setup cache folder (PowerShell)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path .cache | Out-Null
          $cachePath = Resolve-Path .cache
          echo "EPYMORPH_CACHE_PATH=$cachePath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Configure AWS Credentials
        if: vars.SIDELOAD_CACHE == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Download cache files from S3
        if: vars.SIDELOAD_CACHE == 'true'
        run: aws s3 sync s3://epymorph-gha-cache .cache

      - name: Install dependencies
        run: uv sync --frozen --all-extras --dev

      - name: Run unit tests
        run: uv run pytest tests/fast --vcr-mode=replay
