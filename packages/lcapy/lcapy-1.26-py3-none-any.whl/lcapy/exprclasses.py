
# This file is automatically generated by makeclasses.py

from .units import units, u as uu
from .voltagemixin import VoltageMixin
from .currentmixin import CurrentMixin
from .admittancemixin import AdmittanceMixin
from .impedancemixin import ImpedanceMixin
from .transfermixin import TransferMixin
from .voltagesquaredmixin import VoltageSquaredMixin
from .currentsquaredmixin import CurrentSquaredMixin
from .admittancesquaredmixin import AdmittanceSquaredMixin
from .impedancesquaredmixin import ImpedanceSquaredMixin
from .powermixin import PowerMixin
from sympy import sqrt, S
from .cexpr import ConstantDomainExpression
from .cexpr import ConstantTimeDomainExpression
from .cexpr import ConstantFrequencyResponseDomainExpression
from .fexpr import FourierDomainExpression
from .jfexpr import FrequencyResponseDomainExpression
from .jomegaexpr import AngularFrequencyResponseDomainExpression
from .kexpr import DiscreteFourierDomainExpression
from .nexpr import DiscreteTimeDomainExpression
from .noisefexpr import FourierNoiseDomainExpression
from .noiseomegaexpr import AngularFourierNoiseDomainExpression
from .normfexpr import NormFourierDomainExpression
from .normomegaexpr import NormAngularFourierDomainExpression
from .omegaexpr import AngularFourierDomainExpression
from .phasor import PhasorDomainExpression, PhasorRatioDomainExpression
from .sexpr import LaplaceDomainExpression
from .texpr import TimeDomainExpression
from .uexpr import UndefinedDomainExpression
from .zexpr import ZDomainExpression

__all__ = ('UndefinedDomainVoltage', 'UndefinedDomainCurrent', 'UndefinedDomainAdmittance', 'UndefinedDomainImpedance', 'UndefinedDomainTransferFunction', 'UndefinedDomainVoltagesquared', 'UndefinedDomainCurrentsquared', 'UndefinedDomainAdmittancesquared', 'UndefinedDomainImpedancesquared', 'UndefinedDomainPower', 'ConstantDomainVoltage', 'ConstantDomainCurrent', 'ConstantDomainAdmittance', 'ConstantDomainImpedance', 'ConstantDomainTransferFunction', 'ConstantDomainVoltagesquared', 'ConstantDomainCurrentsquared', 'ConstantDomainAdmittancesquared', 'ConstantDomainImpedancesquared', 'ConstantDomainPower', 'ConstantTimeDomainVoltage', 'ConstantTimeDomainCurrent', 'ConstantTimeDomainAdmittance', 'ConstantTimeDomainImpedance', 'ConstantTimeDomainTransferFunction', 'ConstantTimeDomainVoltagesquared', 'ConstantTimeDomainCurrentsquared', 'ConstantTimeDomainAdmittancesquared', 'ConstantTimeDomainImpedancesquared', 'ConstantTimeDomainPower', 'ConstantFrequencyResponseDomainVoltage', 'ConstantFrequencyResponseDomainCurrent', 'ConstantFrequencyResponseDomainAdmittance', 'ConstantFrequencyResponseDomainImpedance', 'ConstantFrequencyResponseDomainTransferFunction', 'ConstantFrequencyResponseDomainVoltagesquared', 'ConstantFrequencyResponseDomainCurrentsquared', 'ConstantFrequencyResponseDomainAdmittancesquared', 'ConstantFrequencyResponseDomainImpedancesquared', 'ConstantFrequencyResponseDomainPower', 'TimeDomainVoltage', 'TimeDomainCurrent', 'TimeDomainAdmittance', 'TimeDomainImpedance', 'TimeDomainTransferFunction', 'TimeDomainVoltagesquared', 'TimeDomainCurrentsquared', 'TimeDomainAdmittancesquared', 'TimeDomainImpedancesquared', 'TimeDomainPower', 'LaplaceDomainVoltage', 'LaplaceDomainCurrent', 'LaplaceDomainAdmittance', 'LaplaceDomainImpedance', 'LaplaceDomainTransferFunction', 'LaplaceDomainVoltagesquared', 'LaplaceDomainCurrentsquared', 'LaplaceDomainAdmittancesquared', 'LaplaceDomainImpedancesquared', 'LaplaceDomainPower', 'FourierDomainVoltage', 'FourierDomainCurrent', 'FourierDomainAdmittance', 'FourierDomainImpedance', 'FourierDomainTransferFunction', 'FourierDomainVoltagesquared', 'FourierDomainCurrentsquared', 'FourierDomainAdmittancesquared', 'FourierDomainImpedancesquared', 'FourierDomainPower', 'NormFourierDomainVoltage', 'NormFourierDomainCurrent', 'NormFourierDomainAdmittance', 'NormFourierDomainImpedance', 'NormFourierDomainTransferFunction', 'NormFourierDomainVoltagesquared', 'NormFourierDomainCurrentsquared', 'NormFourierDomainAdmittancesquared', 'NormFourierDomainImpedancesquared', 'NormFourierDomainPower', 'AngularFourierDomainVoltage', 'AngularFourierDomainCurrent', 'AngularFourierDomainAdmittance', 'AngularFourierDomainImpedance', 'AngularFourierDomainTransferFunction', 'AngularFourierDomainVoltagesquared', 'AngularFourierDomainCurrentsquared', 'AngularFourierDomainAdmittancesquared', 'AngularFourierDomainImpedancesquared', 'AngularFourierDomainPower', 'NormAngularFourierDomainVoltage', 'NormAngularFourierDomainCurrent', 'NormAngularFourierDomainAdmittance', 'NormAngularFourierDomainImpedance', 'NormAngularFourierDomainTransferFunction', 'NormAngularFourierDomainVoltagesquared', 'NormAngularFourierDomainCurrentsquared', 'NormAngularFourierDomainAdmittancesquared', 'NormAngularFourierDomainImpedancesquared', 'NormAngularFourierDomainPower', 'FrequencyResponseDomainVoltage', 'FrequencyResponseDomainCurrent', 'FrequencyResponseDomainAdmittance', 'FrequencyResponseDomainImpedance', 'FrequencyResponseDomainTransferFunction', 'FrequencyResponseDomainVoltagesquared', 'FrequencyResponseDomainCurrentsquared', 'FrequencyResponseDomainAdmittancesquared', 'FrequencyResponseDomainImpedancesquared', 'FrequencyResponseDomainPower', 'AngularFrequencyResponseDomainVoltage', 'AngularFrequencyResponseDomainCurrent', 'AngularFrequencyResponseDomainAdmittance', 'AngularFrequencyResponseDomainImpedance', 'AngularFrequencyResponseDomainTransferFunction', 'AngularFrequencyResponseDomainVoltagesquared', 'AngularFrequencyResponseDomainCurrentsquared', 'AngularFrequencyResponseDomainAdmittancesquared', 'AngularFrequencyResponseDomainImpedancesquared', 'AngularFrequencyResponseDomainPower', 'PhasorDomainVoltage', 'PhasorDomainCurrent', 'PhasorDomainAdmittance', 'PhasorDomainImpedance', 'PhasorDomainTransferFunction', 'PhasorDomainVoltagesquared', 'PhasorDomainCurrentsquared', 'PhasorDomainAdmittancesquared', 'PhasorDomainImpedancesquared', 'PhasorDomainPower', 'PhasorRatioDomainVoltage', 'PhasorRatioDomainCurrent', 'PhasorRatioDomainAdmittance', 'PhasorRatioDomainImpedance', 'PhasorRatioDomainTransferFunction', 'PhasorRatioDomainVoltagesquared', 'PhasorRatioDomainCurrentsquared', 'PhasorRatioDomainAdmittancesquared', 'PhasorRatioDomainImpedancesquared', 'PhasorRatioDomainPower', 'FourierNoiseDomainVoltage', 'FourierNoiseDomainCurrent', 'FourierNoiseDomainAdmittance', 'FourierNoiseDomainImpedance', 'FourierNoiseDomainTransferFunction', 'FourierNoiseDomainVoltagesquared', 'FourierNoiseDomainCurrentsquared', 'FourierNoiseDomainAdmittancesquared', 'FourierNoiseDomainImpedancesquared', 'FourierNoiseDomainPower', 'AngularFourierNoiseDomainVoltage', 'AngularFourierNoiseDomainCurrent', 'AngularFourierNoiseDomainAdmittance', 'AngularFourierNoiseDomainImpedance', 'AngularFourierNoiseDomainTransferFunction', 'AngularFourierNoiseDomainVoltagesquared', 'AngularFourierNoiseDomainCurrentsquared', 'AngularFourierNoiseDomainAdmittancesquared', 'AngularFourierNoiseDomainImpedancesquared', 'AngularFourierNoiseDomainPower', 'DiscreteTimeDomainVoltage', 'DiscreteTimeDomainCurrent', 'DiscreteTimeDomainAdmittance', 'DiscreteTimeDomainImpedance', 'DiscreteTimeDomainTransferFunction', 'DiscreteTimeDomainVoltagesquared', 'DiscreteTimeDomainCurrentsquared', 'DiscreteTimeDomainAdmittancesquared', 'DiscreteTimeDomainImpedancesquared', 'DiscreteTimeDomainPower', 'DiscreteFourierDomainVoltage', 'DiscreteFourierDomainCurrent', 'DiscreteFourierDomainAdmittance', 'DiscreteFourierDomainImpedance', 'DiscreteFourierDomainTransferFunction', 'DiscreteFourierDomainVoltagesquared', 'DiscreteFourierDomainCurrentsquared', 'DiscreteFourierDomainAdmittancesquared', 'DiscreteFourierDomainImpedancesquared', 'DiscreteFourierDomainPower', 'ZDomainVoltage', 'ZDomainCurrent', 'ZDomainAdmittance', 'ZDomainImpedance', 'ZDomainTransferFunction', 'ZDomainVoltagesquared', 'ZDomainCurrentsquared', 'ZDomainAdmittancesquared', 'ZDomainImpedancesquared', 'ZDomainPower')



class UndefinedDomainVoltage(VoltageMixin, UndefinedDomainExpression):
    """Undefined-domain voltage (units V)."""

    _default_units = uu.volt


class UndefinedDomainCurrent(CurrentMixin, UndefinedDomainExpression):
    """Undefined-domain current (units A)."""

    _default_units = uu.ampere


class UndefinedDomainAdmittance(AdmittanceMixin, UndefinedDomainExpression):
    """Undefined-domain admittance (units S)."""

    _default_units = uu.siemens


class UndefinedDomainImpedance(ImpedanceMixin, UndefinedDomainExpression):
    """Undefined-domain impedance (units ohm)."""

    _default_units = uu.ohm


class UndefinedDomainTransferFunction(TransferMixin, UndefinedDomainExpression):
    """Undefined-domain transfer (units )."""

    _default_units = S.One


class UndefinedDomainVoltagesquared(VoltageSquaredMixin, UndefinedDomainExpression):
    """Undefined-domain voltagesquared (units V^2)."""

    _default_units = uu.volt**2


class UndefinedDomainCurrentsquared(CurrentSquaredMixin, UndefinedDomainExpression):
    """Undefined-domain currentsquared (units A^2)."""

    _default_units = uu.ampere**2


class UndefinedDomainAdmittancesquared(AdmittanceSquaredMixin, UndefinedDomainExpression):
    """Undefined-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class UndefinedDomainImpedancesquared(ImpedanceSquaredMixin, UndefinedDomainExpression):
    """Undefined-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class UndefinedDomainPower(PowerMixin, UndefinedDomainExpression):
    """Undefined-domain power (units W)."""

    _default_units = uu.watt


class ConstantDomainVoltage(VoltageMixin, ConstantDomainExpression):
    """-domain voltage (units V)."""

    _default_units = uu.volt


class ConstantDomainCurrent(CurrentMixin, ConstantDomainExpression):
    """-domain current (units A)."""

    _default_units = uu.ampere


class ConstantDomainAdmittance(AdmittanceMixin, ConstantDomainExpression):
    """-domain admittance (units S)."""

    _default_units = uu.siemens


class ConstantDomainImpedance(ImpedanceMixin, ConstantDomainExpression):
    """-domain impedance (units ohm)."""

    _default_units = uu.ohm


class ConstantDomainTransferFunction(TransferMixin, ConstantDomainExpression):
    """-domain transfer (units )."""

    _default_units = S.One


class ConstantDomainVoltagesquared(VoltageSquaredMixin, ConstantDomainExpression):
    """-domain voltagesquared (units V^2)."""

    _default_units = uu.volt**2


class ConstantDomainCurrentsquared(CurrentSquaredMixin, ConstantDomainExpression):
    """-domain currentsquared (units A^2)."""

    _default_units = uu.ampere**2


class ConstantDomainAdmittancesquared(AdmittanceSquaredMixin, ConstantDomainExpression):
    """-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class ConstantDomainImpedancesquared(ImpedanceSquaredMixin, ConstantDomainExpression):
    """-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class ConstantDomainPower(PowerMixin, ConstantDomainExpression):
    """-domain power (units W)."""

    _default_units = uu.watt


class ConstantTimeDomainVoltage(VoltageMixin, ConstantTimeDomainExpression):
    """-domain voltage (units V)."""

    _default_units = uu.volt


class ConstantTimeDomainCurrent(CurrentMixin, ConstantTimeDomainExpression):
    """-domain current (units A)."""

    _default_units = uu.ampere


class ConstantTimeDomainAdmittance(AdmittanceMixin, ConstantTimeDomainExpression):
    """-domain admittance (units S)."""

    _default_units = uu.siemens


class ConstantTimeDomainImpedance(ImpedanceMixin, ConstantTimeDomainExpression):
    """-domain impedance (units ohm)."""

    _default_units = uu.ohm


class ConstantTimeDomainTransferFunction(TransferMixin, ConstantTimeDomainExpression):
    """-domain transfer (units )."""

    _default_units = S.One


class ConstantTimeDomainVoltagesquared(VoltageSquaredMixin, ConstantTimeDomainExpression):
    """-domain voltagesquared (units V^2)."""

    _default_units = uu.volt**2


class ConstantTimeDomainCurrentsquared(CurrentSquaredMixin, ConstantTimeDomainExpression):
    """-domain currentsquared (units A^2)."""

    _default_units = uu.ampere**2


class ConstantTimeDomainAdmittancesquared(AdmittanceSquaredMixin, ConstantTimeDomainExpression):
    """-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class ConstantTimeDomainImpedancesquared(ImpedanceSquaredMixin, ConstantTimeDomainExpression):
    """-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class ConstantTimeDomainPower(PowerMixin, ConstantTimeDomainExpression):
    """-domain power (units W)."""

    _default_units = uu.watt


class ConstantFrequencyResponseDomainVoltage(VoltageMixin, ConstantFrequencyResponseDomainExpression):
    """-domain voltage (units V)."""

    _default_units = uu.volt


class ConstantFrequencyResponseDomainCurrent(CurrentMixin, ConstantFrequencyResponseDomainExpression):
    """-domain current (units A)."""

    _default_units = uu.ampere


class ConstantFrequencyResponseDomainAdmittance(AdmittanceMixin, ConstantFrequencyResponseDomainExpression):
    """-domain admittance (units S)."""

    _default_units = uu.siemens


class ConstantFrequencyResponseDomainImpedance(ImpedanceMixin, ConstantFrequencyResponseDomainExpression):
    """-domain impedance (units ohm)."""

    _default_units = uu.ohm


class ConstantFrequencyResponseDomainTransferFunction(TransferMixin, ConstantFrequencyResponseDomainExpression):
    """-domain transfer (units )."""

    _default_units = S.One


class ConstantFrequencyResponseDomainVoltagesquared(VoltageSquaredMixin, ConstantFrequencyResponseDomainExpression):
    """-domain voltagesquared (units V^2)."""

    _default_units = uu.volt**2


class ConstantFrequencyResponseDomainCurrentsquared(CurrentSquaredMixin, ConstantFrequencyResponseDomainExpression):
    """-domain currentsquared (units A^2)."""

    _default_units = uu.ampere**2


class ConstantFrequencyResponseDomainAdmittancesquared(AdmittanceSquaredMixin, ConstantFrequencyResponseDomainExpression):
    """-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class ConstantFrequencyResponseDomainImpedancesquared(ImpedanceSquaredMixin, ConstantFrequencyResponseDomainExpression):
    """-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class ConstantFrequencyResponseDomainPower(PowerMixin, ConstantFrequencyResponseDomainExpression):
    """-domain power (units W)."""

    _default_units = uu.watt


class TimeDomainVoltage(VoltageMixin, TimeDomainExpression):
    """Time-domain voltage (units V)."""

    _default_units = uu.volt


class TimeDomainCurrent(CurrentMixin, TimeDomainExpression):
    """Time-domain current (units A)."""

    _default_units = uu.ampere


class TimeDomainAdmittance(AdmittanceMixin, TimeDomainExpression):
    """Time-domain admittance (units S/s)."""

    _default_units = uu.siemens / uu.s


class TimeDomainImpedance(ImpedanceMixin, TimeDomainExpression):
    """Time-domain impedance (units ohm/s)."""

    _default_units = uu.ohm / uu.s


class TimeDomainTransferFunction(TransferMixin, TimeDomainExpression):
    """Time-domain transfer (units /s)."""

    _default_units = 1 / uu.s


class TimeDomainVoltagesquared(VoltageSquaredMixin, TimeDomainExpression):
    """Time-domain voltagesquared (units V^2)."""

    _default_units = uu.volt**2


class TimeDomainCurrentsquared(CurrentSquaredMixin, TimeDomainExpression):
    """Time-domain currentsquared (units A^2)."""

    _default_units = uu.ampere**2


class TimeDomainAdmittancesquared(AdmittanceSquaredMixin, TimeDomainExpression):
    """Time-domain admittancesquared (units S^2/s^2)."""

    _default_units = (uu.siemens / uu.s)**2


class TimeDomainImpedancesquared(ImpedanceSquaredMixin, TimeDomainExpression):
    """Time-domain impedancesquared (units ohm^2/s^2)."""

    _default_units = (uu.ohm / uu.s)**2


class TimeDomainPower(PowerMixin, TimeDomainExpression):
    """Time-domain power (units W)."""

    _default_units = uu.watt


class LaplaceDomainVoltage(VoltageMixin, LaplaceDomainExpression):
    """Angular frequency-domain voltage (units V/Hz)."""

    _default_units = uu.volt / uu.Hz


class LaplaceDomainCurrent(CurrentMixin, LaplaceDomainExpression):
    """Angular frequency-domain current (units A/Hz)."""

    _default_units = uu.ampere / uu.Hz


class LaplaceDomainAdmittance(AdmittanceMixin, LaplaceDomainExpression):
    """Angular frequency-domain admittance (units S)."""

    _default_units = uu.siemens


class LaplaceDomainImpedance(ImpedanceMixin, LaplaceDomainExpression):
    """Angular frequency-domain impedance (units ohm)."""

    _default_units = uu.ohm


class LaplaceDomainTransferFunction(TransferMixin, LaplaceDomainExpression):
    """Angular frequency-domain transfer (units )."""

    _default_units = S.One


class LaplaceDomainVoltagesquared(VoltageSquaredMixin, LaplaceDomainExpression):
    """Angular frequency-domain voltagesquared (units V^2/Hz^2)."""

    _default_units = (uu.volt / uu.Hz)**2


class LaplaceDomainCurrentsquared(CurrentSquaredMixin, LaplaceDomainExpression):
    """Angular frequency-domain currentsquared (units A^2/Hz^2)."""

    _default_units = (uu.ampere / uu.Hz)**2


class LaplaceDomainAdmittancesquared(AdmittanceSquaredMixin, LaplaceDomainExpression):
    """Angular frequency-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class LaplaceDomainImpedancesquared(ImpedanceSquaredMixin, LaplaceDomainExpression):
    """Angular frequency-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class LaplaceDomainPower(PowerMixin, LaplaceDomainExpression):
    """Angular frequency-domain power (units W)."""

    _default_units = uu.watt


class FourierDomainVoltage(VoltageMixin, FourierDomainExpression):
    """Frequency-domain voltage (units V/Hz)."""

    _default_units = uu.volt / uu.Hz


class FourierDomainCurrent(CurrentMixin, FourierDomainExpression):
    """Frequency-domain current (units A/Hz)."""

    _default_units = uu.ampere / uu.Hz


class FourierDomainAdmittance(AdmittanceMixin, FourierDomainExpression):
    """Frequency-domain admittance (units S)."""

    _default_units = uu.siemens


class FourierDomainImpedance(ImpedanceMixin, FourierDomainExpression):
    """Frequency-domain impedance (units ohm)."""

    _default_units = uu.ohm


class FourierDomainTransferFunction(TransferMixin, FourierDomainExpression):
    """Frequency-domain transfer (units )."""

    _default_units = S.One


class FourierDomainVoltagesquared(VoltageSquaredMixin, FourierDomainExpression):
    """Frequency-domain voltagesquared (units V^2/Hz^2)."""

    _default_units = (uu.volt / uu.Hz)**2


class FourierDomainCurrentsquared(CurrentSquaredMixin, FourierDomainExpression):
    """Frequency-domain currentsquared (units A^2/Hz^2)."""

    _default_units = (uu.ampere / uu.Hz)**2


class FourierDomainAdmittancesquared(AdmittanceSquaredMixin, FourierDomainExpression):
    """Frequency-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class FourierDomainImpedancesquared(ImpedanceSquaredMixin, FourierDomainExpression):
    """Frequency-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class FourierDomainPower(PowerMixin, FourierDomainExpression):
    """Frequency-domain power (units W)."""

    _default_units = uu.watt


class NormFourierDomainVoltage(VoltageMixin, NormFourierDomainExpression):
    """Normalized frequency-domain voltage (units V)."""

    _default_units = uu.volt


class NormFourierDomainCurrent(CurrentMixin, NormFourierDomainExpression):
    """Normalized frequency-domain current (units A)."""

    _default_units = uu.ampere


class NormFourierDomainAdmittance(AdmittanceMixin, NormFourierDomainExpression):
    """Normalized frequency-domain admittance (units S)."""

    _default_units = uu.siemens


class NormFourierDomainImpedance(ImpedanceMixin, NormFourierDomainExpression):
    """Normalized frequency-domain impedance (units ohm)."""

    _default_units = uu.ohm


class NormFourierDomainTransferFunction(TransferMixin, NormFourierDomainExpression):
    """Normalized frequency-domain transfer (units )."""

    _default_units = S.One


class NormFourierDomainVoltagesquared(VoltageSquaredMixin, NormFourierDomainExpression):
    """Normalized frequency-domain voltagesquared (units V^2)."""

    _default_units = uu.volt**2


class NormFourierDomainCurrentsquared(CurrentSquaredMixin, NormFourierDomainExpression):
    """Normalized frequency-domain currentsquared (units A^2)."""

    _default_units = uu.ampere**2


class NormFourierDomainAdmittancesquared(AdmittanceSquaredMixin, NormFourierDomainExpression):
    """Normalized frequency-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class NormFourierDomainImpedancesquared(ImpedanceSquaredMixin, NormFourierDomainExpression):
    """Normalized frequency-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class NormFourierDomainPower(PowerMixin, NormFourierDomainExpression):
    """Normalized frequency-domain power (units W)."""

    _default_units = uu.watt


class AngularFourierDomainVoltage(VoltageMixin, AngularFourierDomainExpression):
    """Angular frequency-domain voltage (units V/Hz)."""

    _default_units = uu.volt / uu.Hz


class AngularFourierDomainCurrent(CurrentMixin, AngularFourierDomainExpression):
    """Angular frequency-domain current (units A/Hz)."""

    _default_units = uu.ampere / uu.Hz


class AngularFourierDomainAdmittance(AdmittanceMixin, AngularFourierDomainExpression):
    """Angular frequency-domain admittance (units S)."""

    _default_units = uu.siemens


class AngularFourierDomainImpedance(ImpedanceMixin, AngularFourierDomainExpression):
    """Angular frequency-domain impedance (units ohm)."""

    _default_units = uu.ohm


class AngularFourierDomainTransferFunction(TransferMixin, AngularFourierDomainExpression):
    """Angular frequency-domain transfer (units )."""

    _default_units = S.One


class AngularFourierDomainVoltagesquared(VoltageSquaredMixin, AngularFourierDomainExpression):
    """Angular frequency-domain voltagesquared (units V^2/Hz^2)."""

    _default_units = (uu.volt / uu.Hz)**2


class AngularFourierDomainCurrentsquared(CurrentSquaredMixin, AngularFourierDomainExpression):
    """Angular frequency-domain currentsquared (units A^2/Hz^2)."""

    _default_units = (uu.ampere / uu.Hz)**2


class AngularFourierDomainAdmittancesquared(AdmittanceSquaredMixin, AngularFourierDomainExpression):
    """Angular frequency-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class AngularFourierDomainImpedancesquared(ImpedanceSquaredMixin, AngularFourierDomainExpression):
    """Angular frequency-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class AngularFourierDomainPower(PowerMixin, AngularFourierDomainExpression):
    """Angular frequency-domain power (units W)."""

    _default_units = uu.watt


class NormAngularFourierDomainVoltage(VoltageMixin, NormAngularFourierDomainExpression):
    """Normalized angular frequency-domain voltage (units V)."""

    _default_units = uu.volt


class NormAngularFourierDomainCurrent(CurrentMixin, NormAngularFourierDomainExpression):
    """Normalized angular frequency-domain current (units A)."""

    _default_units = uu.ampere


class NormAngularFourierDomainAdmittance(AdmittanceMixin, NormAngularFourierDomainExpression):
    """Normalized angular frequency-domain admittance (units S)."""

    _default_units = uu.siemens


class NormAngularFourierDomainImpedance(ImpedanceMixin, NormAngularFourierDomainExpression):
    """Normalized angular frequency-domain impedance (units ohm)."""

    _default_units = uu.ohm


class NormAngularFourierDomainTransferFunction(TransferMixin, NormAngularFourierDomainExpression):
    """Normalized angular frequency-domain transfer (units )."""

    _default_units = S.One


class NormAngularFourierDomainVoltagesquared(VoltageSquaredMixin, NormAngularFourierDomainExpression):
    """Normalized angular frequency-domain voltagesquared (units V^2)."""

    _default_units = uu.volt**2


class NormAngularFourierDomainCurrentsquared(CurrentSquaredMixin, NormAngularFourierDomainExpression):
    """Normalized angular frequency-domain currentsquared (units A^2)."""

    _default_units = uu.ampere**2


class NormAngularFourierDomainAdmittancesquared(AdmittanceSquaredMixin, NormAngularFourierDomainExpression):
    """Normalized angular frequency-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class NormAngularFourierDomainImpedancesquared(ImpedanceSquaredMixin, NormAngularFourierDomainExpression):
    """Normalized angular frequency-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class NormAngularFourierDomainPower(PowerMixin, NormAngularFourierDomainExpression):
    """Normalized angular frequency-domain power (units W)."""

    _default_units = uu.watt


class FrequencyResponseDomainVoltage(VoltageMixin, FrequencyResponseDomainExpression):
    """Frequency-domain voltage (units V)."""

    _default_units = uu.volt


class FrequencyResponseDomainCurrent(CurrentMixin, FrequencyResponseDomainExpression):
    """Frequency-domain current (units A)."""

    _default_units = uu.ampere


class FrequencyResponseDomainAdmittance(AdmittanceMixin, FrequencyResponseDomainExpression):
    """Frequency-domain admittance (units S)."""

    _default_units = uu.siemens


class FrequencyResponseDomainImpedance(ImpedanceMixin, FrequencyResponseDomainExpression):
    """Frequency-domain impedance (units ohm)."""

    _default_units = uu.ohm


class FrequencyResponseDomainTransferFunction(TransferMixin, FrequencyResponseDomainExpression):
    """Frequency-domain transfer (units )."""

    _default_units = S.One


class FrequencyResponseDomainVoltagesquared(VoltageSquaredMixin, FrequencyResponseDomainExpression):
    """Frequency-domain voltagesquared (units V^2)."""

    _default_units = uu.volt**2


class FrequencyResponseDomainCurrentsquared(CurrentSquaredMixin, FrequencyResponseDomainExpression):
    """Frequency-domain currentsquared (units A^2)."""

    _default_units = uu.ampere**2


class FrequencyResponseDomainAdmittancesquared(AdmittanceSquaredMixin, FrequencyResponseDomainExpression):
    """Frequency-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class FrequencyResponseDomainImpedancesquared(ImpedanceSquaredMixin, FrequencyResponseDomainExpression):
    """Frequency-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class FrequencyResponseDomainPower(PowerMixin, FrequencyResponseDomainExpression):
    """Frequency-domain power (units W)."""

    _default_units = uu.watt


class AngularFrequencyResponseDomainVoltage(VoltageMixin, AngularFrequencyResponseDomainExpression):
    """Angular frequency-domain voltage (units V)."""

    _default_units = uu.volt


class AngularFrequencyResponseDomainCurrent(CurrentMixin, AngularFrequencyResponseDomainExpression):
    """Angular frequency-domain current (units A)."""

    _default_units = uu.ampere


class AngularFrequencyResponseDomainAdmittance(AdmittanceMixin, AngularFrequencyResponseDomainExpression):
    """Angular frequency-domain admittance (units S)."""

    _default_units = uu.siemens


class AngularFrequencyResponseDomainImpedance(ImpedanceMixin, AngularFrequencyResponseDomainExpression):
    """Angular frequency-domain impedance (units ohm)."""

    _default_units = uu.ohm


class AngularFrequencyResponseDomainTransferFunction(TransferMixin, AngularFrequencyResponseDomainExpression):
    """Angular frequency-domain transfer (units )."""

    _default_units = S.One


class AngularFrequencyResponseDomainVoltagesquared(VoltageSquaredMixin, AngularFrequencyResponseDomainExpression):
    """Angular frequency-domain voltagesquared (units V^2)."""

    _default_units = uu.volt**2


class AngularFrequencyResponseDomainCurrentsquared(CurrentSquaredMixin, AngularFrequencyResponseDomainExpression):
    """Angular frequency-domain currentsquared (units A^2)."""

    _default_units = uu.ampere**2


class AngularFrequencyResponseDomainAdmittancesquared(AdmittanceSquaredMixin, AngularFrequencyResponseDomainExpression):
    """Angular frequency-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class AngularFrequencyResponseDomainImpedancesquared(ImpedanceSquaredMixin, AngularFrequencyResponseDomainExpression):
    """Angular frequency-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class AngularFrequencyResponseDomainPower(PowerMixin, AngularFrequencyResponseDomainExpression):
    """Angular frequency-domain power (units W)."""

    _default_units = uu.watt


class PhasorDomainVoltage(VoltageMixin, PhasorDomainExpression):
    """-domain voltage (units V)."""

    _default_units = uu.volt


class PhasorDomainCurrent(CurrentMixin, PhasorDomainExpression):
    """-domain current (units A)."""

    _default_units = uu.ampere


class PhasorDomainAdmittance(AdmittanceMixin, PhasorDomainExpression):
    """-domain admittance (units S)."""

    _default_units = uu.siemens


class PhasorDomainImpedance(ImpedanceMixin, PhasorDomainExpression):
    """-domain impedance (units ohm)."""

    _default_units = uu.ohm


class PhasorDomainTransferFunction(TransferMixin, PhasorDomainExpression):
    """-domain transfer (units )."""

    _default_units = S.One


class PhasorDomainVoltagesquared(VoltageSquaredMixin, PhasorDomainExpression):
    """-domain voltagesquared (units V^2)."""

    _default_units = uu.volt**2


class PhasorDomainCurrentsquared(CurrentSquaredMixin, PhasorDomainExpression):
    """-domain currentsquared (units A^2)."""

    _default_units = uu.ampere**2


class PhasorDomainAdmittancesquared(AdmittanceSquaredMixin, PhasorDomainExpression):
    """-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class PhasorDomainImpedancesquared(ImpedanceSquaredMixin, PhasorDomainExpression):
    """-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class PhasorDomainPower(PowerMixin, PhasorDomainExpression):
    """-domain power (units W)."""

    _default_units = uu.watt


class PhasorRatioDomainVoltage(VoltageMixin, PhasorRatioDomainExpression):
    """Angular frequency-domain voltage (units V)."""

    _default_units = uu.volt


class PhasorRatioDomainCurrent(CurrentMixin, PhasorRatioDomainExpression):
    """Angular frequency-domain current (units A)."""

    _default_units = uu.ampere


class PhasorRatioDomainAdmittance(AdmittanceMixin, PhasorRatioDomainExpression):
    """Angular frequency-domain admittance (units S)."""

    _default_units = uu.siemens


class PhasorRatioDomainImpedance(ImpedanceMixin, PhasorRatioDomainExpression):
    """Angular frequency-domain impedance (units ohm)."""

    _default_units = uu.ohm


class PhasorRatioDomainTransferFunction(TransferMixin, PhasorRatioDomainExpression):
    """Angular frequency-domain transfer (units )."""

    _default_units = S.One


class PhasorRatioDomainVoltagesquared(VoltageSquaredMixin, PhasorRatioDomainExpression):
    """Angular frequency-domain voltagesquared (units V^2)."""

    _default_units = uu.volt**2


class PhasorRatioDomainCurrentsquared(CurrentSquaredMixin, PhasorRatioDomainExpression):
    """Angular frequency-domain currentsquared (units A^2)."""

    _default_units = uu.ampere**2


class PhasorRatioDomainAdmittancesquared(AdmittanceSquaredMixin, PhasorRatioDomainExpression):
    """Angular frequency-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class PhasorRatioDomainImpedancesquared(ImpedanceSquaredMixin, PhasorRatioDomainExpression):
    """Angular frequency-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class PhasorRatioDomainPower(PowerMixin, PhasorRatioDomainExpression):
    """Angular frequency-domain power (units W)."""

    _default_units = uu.watt


class FourierNoiseDomainVoltage(VoltageMixin, FourierNoiseDomainExpression):
    """Frequency-domain voltage (units V)."""

    _default_units = uu.volt


class FourierNoiseDomainCurrent(CurrentMixin, FourierNoiseDomainExpression):
    """Frequency-domain current (units A)."""

    _default_units = uu.ampere


class FourierNoiseDomainAdmittance(AdmittanceMixin, FourierNoiseDomainExpression):
    """Frequency-domain admittance (units S)."""

    _default_units = uu.siemens


class FourierNoiseDomainImpedance(ImpedanceMixin, FourierNoiseDomainExpression):
    """Frequency-domain impedance (units ohm)."""

    _default_units = uu.ohm


class FourierNoiseDomainTransferFunction(TransferMixin, FourierNoiseDomainExpression):
    """Frequency-domain transfer (units )."""

    _default_units = S.One


class FourierNoiseDomainVoltagesquared(VoltageSquaredMixin, FourierNoiseDomainExpression):
    """Frequency-domain voltagesquared (units V^2)."""

    _default_units = uu.volt**2


class FourierNoiseDomainCurrentsquared(CurrentSquaredMixin, FourierNoiseDomainExpression):
    """Frequency-domain currentsquared (units A^2)."""

    _default_units = uu.ampere**2


class FourierNoiseDomainAdmittancesquared(AdmittanceSquaredMixin, FourierNoiseDomainExpression):
    """Frequency-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class FourierNoiseDomainImpedancesquared(ImpedanceSquaredMixin, FourierNoiseDomainExpression):
    """Frequency-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class FourierNoiseDomainPower(PowerMixin, FourierNoiseDomainExpression):
    """Frequency-domain power (units W)."""

    _default_units = uu.watt


class AngularFourierNoiseDomainVoltage(VoltageMixin, AngularFourierNoiseDomainExpression):
    """Angular frequency-domain voltage (units V)."""

    _default_units = uu.volt


class AngularFourierNoiseDomainCurrent(CurrentMixin, AngularFourierNoiseDomainExpression):
    """Angular frequency-domain current (units A)."""

    _default_units = uu.ampere


class AngularFourierNoiseDomainAdmittance(AdmittanceMixin, AngularFourierNoiseDomainExpression):
    """Angular frequency-domain admittance (units S)."""

    _default_units = uu.siemens


class AngularFourierNoiseDomainImpedance(ImpedanceMixin, AngularFourierNoiseDomainExpression):
    """Angular frequency-domain impedance (units ohm)."""

    _default_units = uu.ohm


class AngularFourierNoiseDomainTransferFunction(TransferMixin, AngularFourierNoiseDomainExpression):
    """Angular frequency-domain transfer (units )."""

    _default_units = S.One


class AngularFourierNoiseDomainVoltagesquared(VoltageSquaredMixin, AngularFourierNoiseDomainExpression):
    """Angular frequency-domain voltagesquared (units V^2)."""

    _default_units = uu.volt**2


class AngularFourierNoiseDomainCurrentsquared(CurrentSquaredMixin, AngularFourierNoiseDomainExpression):
    """Angular frequency-domain currentsquared (units A^2)."""

    _default_units = uu.ampere**2


class AngularFourierNoiseDomainAdmittancesquared(AdmittanceSquaredMixin, AngularFourierNoiseDomainExpression):
    """Angular frequency-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class AngularFourierNoiseDomainImpedancesquared(ImpedanceSquaredMixin, AngularFourierNoiseDomainExpression):
    """Angular frequency-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class AngularFourierNoiseDomainPower(PowerMixin, AngularFourierNoiseDomainExpression):
    """Angular frequency-domain power (units W)."""

    _default_units = uu.watt


class DiscreteTimeDomainVoltage(VoltageMixin, DiscreteTimeDomainExpression):
    """Discrete time-domain voltage (units V)."""

    _default_units = uu.volt


class DiscreteTimeDomainCurrent(CurrentMixin, DiscreteTimeDomainExpression):
    """Discrete time-domain current (units A)."""

    _default_units = uu.ampere


class DiscreteTimeDomainAdmittance(AdmittanceMixin, DiscreteTimeDomainExpression):
    """Discrete time-domain admittance (units S)."""

    _default_units = uu.siemens


class DiscreteTimeDomainImpedance(ImpedanceMixin, DiscreteTimeDomainExpression):
    """Discrete time-domain impedance (units ohm)."""

    _default_units = uu.ohm


class DiscreteTimeDomainTransferFunction(TransferMixin, DiscreteTimeDomainExpression):
    """Discrete time-domain transfer (units )."""

    _default_units = S.One


class DiscreteTimeDomainVoltagesquared(VoltageSquaredMixin, DiscreteTimeDomainExpression):
    """Discrete time-domain voltagesquared (units V^2)."""

    _default_units = uu.volt**2


class DiscreteTimeDomainCurrentsquared(CurrentSquaredMixin, DiscreteTimeDomainExpression):
    """Discrete time-domain currentsquared (units A^2)."""

    _default_units = uu.ampere**2


class DiscreteTimeDomainAdmittancesquared(AdmittanceSquaredMixin, DiscreteTimeDomainExpression):
    """Discrete time-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class DiscreteTimeDomainImpedancesquared(ImpedanceSquaredMixin, DiscreteTimeDomainExpression):
    """Discrete time-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class DiscreteTimeDomainPower(PowerMixin, DiscreteTimeDomainExpression):
    """Discrete time-domain power (units W)."""

    _default_units = uu.watt


class DiscreteFourierDomainVoltage(VoltageMixin, DiscreteFourierDomainExpression):
    """Discrete frequency-domain voltage (units V)."""

    _default_units = uu.volt


class DiscreteFourierDomainCurrent(CurrentMixin, DiscreteFourierDomainExpression):
    """Discrete frequency-domain current (units A)."""

    _default_units = uu.ampere


class DiscreteFourierDomainAdmittance(AdmittanceMixin, DiscreteFourierDomainExpression):
    """Discrete frequency-domain admittance (units S)."""

    _default_units = uu.siemens


class DiscreteFourierDomainImpedance(ImpedanceMixin, DiscreteFourierDomainExpression):
    """Discrete frequency-domain impedance (units ohm)."""

    _default_units = uu.ohm


class DiscreteFourierDomainTransferFunction(TransferMixin, DiscreteFourierDomainExpression):
    """Discrete frequency-domain transfer (units )."""

    _default_units = S.One


class DiscreteFourierDomainVoltagesquared(VoltageSquaredMixin, DiscreteFourierDomainExpression):
    """Discrete frequency-domain voltagesquared (units V^2)."""

    _default_units = uu.volt**2


class DiscreteFourierDomainCurrentsquared(CurrentSquaredMixin, DiscreteFourierDomainExpression):
    """Discrete frequency-domain currentsquared (units A^2)."""

    _default_units = uu.ampere**2


class DiscreteFourierDomainAdmittancesquared(AdmittanceSquaredMixin, DiscreteFourierDomainExpression):
    """Discrete frequency-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class DiscreteFourierDomainImpedancesquared(ImpedanceSquaredMixin, DiscreteFourierDomainExpression):
    """Discrete frequency-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class DiscreteFourierDomainPower(PowerMixin, DiscreteFourierDomainExpression):
    """Discrete frequency-domain power (units W)."""

    _default_units = uu.watt


class ZDomainVoltage(VoltageMixin, ZDomainExpression):
    """Z-domain voltage (units V)."""

    _default_units = uu.volt


class ZDomainCurrent(CurrentMixin, ZDomainExpression):
    """Z-domain current (units A)."""

    _default_units = uu.ampere


class ZDomainAdmittance(AdmittanceMixin, ZDomainExpression):
    """Z-domain admittance (units S)."""

    _default_units = uu.siemens


class ZDomainImpedance(ImpedanceMixin, ZDomainExpression):
    """Z-domain impedance (units ohm)."""

    _default_units = uu.ohm


class ZDomainTransferFunction(TransferMixin, ZDomainExpression):
    """Z-domain transfer (units )."""

    _default_units = S.One


class ZDomainVoltagesquared(VoltageSquaredMixin, ZDomainExpression):
    """Z-domain voltagesquared (units V^2)."""

    _default_units = uu.volt**2


class ZDomainCurrentsquared(CurrentSquaredMixin, ZDomainExpression):
    """Z-domain currentsquared (units A^2)."""

    _default_units = uu.ampere**2


class ZDomainAdmittancesquared(AdmittanceSquaredMixin, ZDomainExpression):
    """Z-domain admittancesquared (units S^2)."""

    _default_units = uu.siemens**2


class ZDomainImpedancesquared(ImpedanceSquaredMixin, ZDomainExpression):
    """Z-domain impedancesquared (units ohm^2)."""

    _default_units = uu.ohm**2


class ZDomainPower(PowerMixin, ZDomainExpression):
    """Z-domain power (units W)."""

    _default_units = uu.watt

exprclasses = {'undefined': {'undefined': UndefinedDomainExpression,
'voltage': UndefinedDomainVoltage,
'current': UndefinedDomainCurrent,
'admittance': UndefinedDomainAdmittance,
'impedance': UndefinedDomainImpedance,
'transfer': UndefinedDomainTransferFunction,
'voltagesquared': UndefinedDomainVoltagesquared,
'currentsquared': UndefinedDomainCurrentsquared,
'admittancesquared': UndefinedDomainAdmittancesquared,
'impedancesquared': UndefinedDomainImpedancesquared,
'power': UndefinedDomainPower,
}
,'constant': {'undefined': ConstantDomainExpression,
'voltage': ConstantDomainVoltage,
'current': ConstantDomainCurrent,
'admittance': ConstantDomainAdmittance,
'impedance': ConstantDomainImpedance,
'transfer': ConstantDomainTransferFunction,
'voltagesquared': ConstantDomainVoltagesquared,
'currentsquared': ConstantDomainCurrentsquared,
'admittancesquared': ConstantDomainAdmittancesquared,
'impedancesquared': ConstantDomainImpedancesquared,
'power': ConstantDomainPower,
}
,'constant time': {'undefined': ConstantTimeDomainExpression,
'voltage': ConstantTimeDomainVoltage,
'current': ConstantTimeDomainCurrent,
'admittance': ConstantTimeDomainAdmittance,
'impedance': ConstantTimeDomainImpedance,
'transfer': ConstantTimeDomainTransferFunction,
'voltagesquared': ConstantTimeDomainVoltagesquared,
'currentsquared': ConstantTimeDomainCurrentsquared,
'admittancesquared': ConstantTimeDomainAdmittancesquared,
'impedancesquared': ConstantTimeDomainImpedancesquared,
'power': ConstantTimeDomainPower,
}
,'constant frequency response': {'undefined': ConstantFrequencyResponseDomainExpression,
'voltage': ConstantFrequencyResponseDomainVoltage,
'current': ConstantFrequencyResponseDomainCurrent,
'admittance': ConstantFrequencyResponseDomainAdmittance,
'impedance': ConstantFrequencyResponseDomainImpedance,
'transfer': ConstantFrequencyResponseDomainTransferFunction,
'voltagesquared': ConstantFrequencyResponseDomainVoltagesquared,
'currentsquared': ConstantFrequencyResponseDomainCurrentsquared,
'admittancesquared': ConstantFrequencyResponseDomainAdmittancesquared,
'impedancesquared': ConstantFrequencyResponseDomainImpedancesquared,
'power': ConstantFrequencyResponseDomainPower,
}
,'time': {'undefined': TimeDomainExpression,
'voltage': TimeDomainVoltage,
'current': TimeDomainCurrent,
'admittance': TimeDomainAdmittance,
'impedance': TimeDomainImpedance,
'transfer': TimeDomainTransferFunction,
'voltagesquared': TimeDomainVoltagesquared,
'currentsquared': TimeDomainCurrentsquared,
'admittancesquared': TimeDomainAdmittancesquared,
'impedancesquared': TimeDomainImpedancesquared,
'power': TimeDomainPower,
}
,'laplace': {'undefined': LaplaceDomainExpression,
'voltage': LaplaceDomainVoltage,
'current': LaplaceDomainCurrent,
'admittance': LaplaceDomainAdmittance,
'impedance': LaplaceDomainImpedance,
'transfer': LaplaceDomainTransferFunction,
'voltagesquared': LaplaceDomainVoltagesquared,
'currentsquared': LaplaceDomainCurrentsquared,
'admittancesquared': LaplaceDomainAdmittancesquared,
'impedancesquared': LaplaceDomainImpedancesquared,
'power': LaplaceDomainPower,
}
,'fourier': {'undefined': FourierDomainExpression,
'voltage': FourierDomainVoltage,
'current': FourierDomainCurrent,
'admittance': FourierDomainAdmittance,
'impedance': FourierDomainImpedance,
'transfer': FourierDomainTransferFunction,
'voltagesquared': FourierDomainVoltagesquared,
'currentsquared': FourierDomainCurrentsquared,
'admittancesquared': FourierDomainAdmittancesquared,
'impedancesquared': FourierDomainImpedancesquared,
'power': FourierDomainPower,
}
,'norm fourier': {'undefined': NormFourierDomainExpression,
'voltage': NormFourierDomainVoltage,
'current': NormFourierDomainCurrent,
'admittance': NormFourierDomainAdmittance,
'impedance': NormFourierDomainImpedance,
'transfer': NormFourierDomainTransferFunction,
'voltagesquared': NormFourierDomainVoltagesquared,
'currentsquared': NormFourierDomainCurrentsquared,
'admittancesquared': NormFourierDomainAdmittancesquared,
'impedancesquared': NormFourierDomainImpedancesquared,
'power': NormFourierDomainPower,
}
,'angular fourier': {'undefined': AngularFourierDomainExpression,
'voltage': AngularFourierDomainVoltage,
'current': AngularFourierDomainCurrent,
'admittance': AngularFourierDomainAdmittance,
'impedance': AngularFourierDomainImpedance,
'transfer': AngularFourierDomainTransferFunction,
'voltagesquared': AngularFourierDomainVoltagesquared,
'currentsquared': AngularFourierDomainCurrentsquared,
'admittancesquared': AngularFourierDomainAdmittancesquared,
'impedancesquared': AngularFourierDomainImpedancesquared,
'power': AngularFourierDomainPower,
}
,'norm angular fourier': {'undefined': NormAngularFourierDomainExpression,
'voltage': NormAngularFourierDomainVoltage,
'current': NormAngularFourierDomainCurrent,
'admittance': NormAngularFourierDomainAdmittance,
'impedance': NormAngularFourierDomainImpedance,
'transfer': NormAngularFourierDomainTransferFunction,
'voltagesquared': NormAngularFourierDomainVoltagesquared,
'currentsquared': NormAngularFourierDomainCurrentsquared,
'admittancesquared': NormAngularFourierDomainAdmittancesquared,
'impedancesquared': NormAngularFourierDomainImpedancesquared,
'power': NormAngularFourierDomainPower,
}
,'frequency response': {'undefined': FrequencyResponseDomainExpression,
'voltage': FrequencyResponseDomainVoltage,
'current': FrequencyResponseDomainCurrent,
'admittance': FrequencyResponseDomainAdmittance,
'impedance': FrequencyResponseDomainImpedance,
'transfer': FrequencyResponseDomainTransferFunction,
'voltagesquared': FrequencyResponseDomainVoltagesquared,
'currentsquared': FrequencyResponseDomainCurrentsquared,
'admittancesquared': FrequencyResponseDomainAdmittancesquared,
'impedancesquared': FrequencyResponseDomainImpedancesquared,
'power': FrequencyResponseDomainPower,
}
,'angular frequency response': {'undefined': AngularFrequencyResponseDomainExpression,
'voltage': AngularFrequencyResponseDomainVoltage,
'current': AngularFrequencyResponseDomainCurrent,
'admittance': AngularFrequencyResponseDomainAdmittance,
'impedance': AngularFrequencyResponseDomainImpedance,
'transfer': AngularFrequencyResponseDomainTransferFunction,
'voltagesquared': AngularFrequencyResponseDomainVoltagesquared,
'currentsquared': AngularFrequencyResponseDomainCurrentsquared,
'admittancesquared': AngularFrequencyResponseDomainAdmittancesquared,
'impedancesquared': AngularFrequencyResponseDomainImpedancesquared,
'power': AngularFrequencyResponseDomainPower,
}
,'phasor': {'undefined': PhasorDomainExpression,
'voltage': PhasorDomainVoltage,
'current': PhasorDomainCurrent,
'admittance': PhasorDomainAdmittance,
'impedance': PhasorDomainImpedance,
'transfer': PhasorDomainTransferFunction,
'voltagesquared': PhasorDomainVoltagesquared,
'currentsquared': PhasorDomainCurrentsquared,
'admittancesquared': PhasorDomainAdmittancesquared,
'impedancesquared': PhasorDomainImpedancesquared,
'power': PhasorDomainPower,
}
,'phasor ratio': {'undefined': PhasorRatioDomainExpression,
'voltage': PhasorRatioDomainVoltage,
'current': PhasorRatioDomainCurrent,
'admittance': PhasorRatioDomainAdmittance,
'impedance': PhasorRatioDomainImpedance,
'transfer': PhasorRatioDomainTransferFunction,
'voltagesquared': PhasorRatioDomainVoltagesquared,
'currentsquared': PhasorRatioDomainCurrentsquared,
'admittancesquared': PhasorRatioDomainAdmittancesquared,
'impedancesquared': PhasorRatioDomainImpedancesquared,
'power': PhasorRatioDomainPower,
}
,'fourier noise': {'undefined': FourierNoiseDomainExpression,
'voltage': FourierNoiseDomainVoltage,
'current': FourierNoiseDomainCurrent,
'admittance': FourierNoiseDomainAdmittance,
'impedance': FourierNoiseDomainImpedance,
'transfer': FourierNoiseDomainTransferFunction,
'voltagesquared': FourierNoiseDomainVoltagesquared,
'currentsquared': FourierNoiseDomainCurrentsquared,
'admittancesquared': FourierNoiseDomainAdmittancesquared,
'impedancesquared': FourierNoiseDomainImpedancesquared,
'power': FourierNoiseDomainPower,
}
,'angular fourier noise': {'undefined': AngularFourierNoiseDomainExpression,
'voltage': AngularFourierNoiseDomainVoltage,
'current': AngularFourierNoiseDomainCurrent,
'admittance': AngularFourierNoiseDomainAdmittance,
'impedance': AngularFourierNoiseDomainImpedance,
'transfer': AngularFourierNoiseDomainTransferFunction,
'voltagesquared': AngularFourierNoiseDomainVoltagesquared,
'currentsquared': AngularFourierNoiseDomainCurrentsquared,
'admittancesquared': AngularFourierNoiseDomainAdmittancesquared,
'impedancesquared': AngularFourierNoiseDomainImpedancesquared,
'power': AngularFourierNoiseDomainPower,
}
,'discrete time': {'undefined': DiscreteTimeDomainExpression,
'voltage': DiscreteTimeDomainVoltage,
'current': DiscreteTimeDomainCurrent,
'admittance': DiscreteTimeDomainAdmittance,
'impedance': DiscreteTimeDomainImpedance,
'transfer': DiscreteTimeDomainTransferFunction,
'voltagesquared': DiscreteTimeDomainVoltagesquared,
'currentsquared': DiscreteTimeDomainCurrentsquared,
'admittancesquared': DiscreteTimeDomainAdmittancesquared,
'impedancesquared': DiscreteTimeDomainImpedancesquared,
'power': DiscreteTimeDomainPower,
}
,'discrete fourier': {'undefined': DiscreteFourierDomainExpression,
'voltage': DiscreteFourierDomainVoltage,
'current': DiscreteFourierDomainCurrent,
'admittance': DiscreteFourierDomainAdmittance,
'impedance': DiscreteFourierDomainImpedance,
'transfer': DiscreteFourierDomainTransferFunction,
'voltagesquared': DiscreteFourierDomainVoltagesquared,
'currentsquared': DiscreteFourierDomainCurrentsquared,
'admittancesquared': DiscreteFourierDomainAdmittancesquared,
'impedancesquared': DiscreteFourierDomainImpedancesquared,
'power': DiscreteFourierDomainPower,
}
,'Z': {'undefined': ZDomainExpression,
'voltage': ZDomainVoltage,
'current': ZDomainCurrent,
'admittance': ZDomainAdmittance,
'impedance': ZDomainImpedance,
'transfer': ZDomainTransferFunction,
'voltagesquared': ZDomainVoltagesquared,
'currentsquared': ZDomainCurrentsquared,
'admittancesquared': ZDomainAdmittancesquared,
'impedancesquared': ZDomainImpedancesquared,
'power': ZDomainPower,
}
,}

