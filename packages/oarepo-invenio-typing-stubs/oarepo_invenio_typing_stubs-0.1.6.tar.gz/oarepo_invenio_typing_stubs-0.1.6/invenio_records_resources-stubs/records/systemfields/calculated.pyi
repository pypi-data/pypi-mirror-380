from typing import Any, Optional

from invenio_records.systemfields import SystemField
from invenio_records_resources.records.api import Record

class CalculatedField[R: Record = Record, T: Any = Any](SystemField[R, T]):
    _use_cache: bool
    def __init__(self, key: Optional[str] = ..., use_cache: bool = ...) -> None: ...
    def obj(self, instance: R) -> T: ...
    def calculate(self, record: R) -> T: ...

class CalculatedIndexedField[R: Record = Record, T: Any = Any](CalculatedField[R, T]):
    _index: bool
    def __init__(
        self, key: Optional[str] = ..., use_cache: bool = ..., index: bool = ...
    ) -> None: ...
    def pre_dump(self, record: R, data: Any, dumper: Optional[Any] = ...) -> None: ...
    def post_load(self, record: R, data: Any, loader: Optional[Any] = ...) -> None: ...
