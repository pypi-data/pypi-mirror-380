from typing import Dict, Optional, Type

from invenio_records.systemfields import SystemField
from invenio_records_resources.records.api import Record

class Children:
    dirty: bool
    def __init__(self, allow: Optional[bool] = None) -> None: ...
    @property
    def allow(self) -> bool: ...
    @allow.setter
    def allow(self, value: bool) -> None: ...
    @classmethod
    def from_dict(cls, data: Dict[str, bool]) -> Children: ...
    def dump(self) -> Dict[str, bool]: ...

class ChildrenField(SystemField[Record, Children]):
    children_obj_class = Children
    def __init__(
        self, key: str = "children", children_obj_class: Optional[Type[Children]] = None
    ) -> None: ...
    def obj(self, instance: Record) -> Children: ...
    def set_obj(self, record: Record, obj: Children | Dict[str, bool]) -> None: ...
    def pre_commit(self, record: Record) -> None: ...
