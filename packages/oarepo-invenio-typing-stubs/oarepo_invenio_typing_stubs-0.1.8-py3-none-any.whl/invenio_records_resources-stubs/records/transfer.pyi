from collections.abc import Iterator, Mapping
from typing import Any

from invenio_records.systemfields import SystemField
from invenio_records_resources.records.api import FileRecord

from oarepo_typing.descriptors import Descriptor

class TransferFieldData(Mapping[str, Any]):
    _field: dict[str, Any]

    def __init__(self, field: dict[str, Any]) -> None: ...
    @property
    def transfer_type(self) -> str: ...
    @transfer_type.setter
    def transfer_type(self, value: str) -> None: ...
    def get(self, key: str, default: Any = None) -> Any: ...
    def set(self, values: dict[str, Any]) -> None: ...
    def __getitem__(self, key: str) -> Any: ...
    def __setitem__(self, key: str, value: Any) -> None: ...
    def __iter__(self) -> Iterator[str]: ...
    def __len__(self) -> int: ...

class TransferField(Descriptor[FileRecord, TransferFieldData], SystemField):  # type: ignore[misc]
    ...
