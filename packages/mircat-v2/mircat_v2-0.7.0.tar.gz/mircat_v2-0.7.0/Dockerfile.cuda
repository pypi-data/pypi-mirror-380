# syntax=docker/dockerfile:1.9
FROM nvidia/cuda:12.2.2-devel-ubuntu22.04 AS builder
# Configure uv for optimal Docker performance
ENV UV_COMPILE_BYTECODE=1
ENV UV_LINK_MODE=copy
ENV UV_PYTHON_DOWNLOADS=0 
# Install uv
COPY --from=ghcr.io/astral-sh/uv:0.8.3 /uv /bin/uv

# Install Python 3.11
# Change the working directory to the `app` directory
RUN apt-get update && \
    apt-get install -y clang gcc g++ python3.11-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

COPY . /app
WORKDIR /app

# Install dependencies first (better layer caching)
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --locked --no-editable --no-install-project --no-dev --extra all

# Copy and install the project
COPY . /app
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --locked --no-dev --extra all

# Runtime stage
FROM nvidia/cuda:12.2.2-runtime-ubuntu22.04

RUN apt-get update && \
    apt-get install -y clang gcc g++ python3.11-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create non-root user with specific UID/GID
RUN groupadd -g 1000 app && useradd -u 1000 -g 1000 -d /app -s /bin/bash app

# Copy the built application
COPY --from=builder --chown=app:app /app /app
ENV PATH="/app/.venv/bin:$PATH"
# Run this to ensure model configuration is up to date
RUN mircat-v2-generate-config && chmod 666 /app/src/mircat_v2/configs/config.json
RUN mircat-v2 models update
ENTRYPOINT ["/bin/bash"]