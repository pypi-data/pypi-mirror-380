[project]
name = "eta-components"
version = "0.0.3"
description = "Components for modeling industrial production sites"
license = "BSD-2-Clause License"
readme = "README.md"
requires-python = ">=3.11, <3.14"
keywords = ["modeling", "milp", "library"]
authors = [
    {name = "Technical University of Darmstadt, Institute for Production Management, Technology and Machine Tools (PTW)", email="m.frank@ptw.tu-darmstadt.de"}
] # TODO: change this (optional)
dynamic = ["classifiers", "dependencies"]

[project.urls]
# See https://packaging.python.org/en/latest/specifications/well-known-project-urls/#well-known-labels
homepage = "https://www.ptw.tu-darmstadt.de"

[tool.poetry]
# Specify some classifiers, to signify, who you are developing for. See: https://pypi.org/classifiers/
classifiers = [
    "License :: OSI Approved :: BSD License",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Manufacturing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Operating System :: OS Independent",
]

#  '^' limits to the next major version, '~' limits to the next minor version
# e.g. ^3.9.0: 3.9.0 <= x < 4.0.0 and ~3.9.0: 3.9.0 <= x < 3.10.0
[tool.poetry.dependencies]
stable_baselines3 = "^2.1"
backports-datetime-fromisoformat = "==2.0.0"
pyomo = "^6.9.2"
pytest = "^8.3.5"
tabulate = "^0.9.0"
pytest-cov = "^6.1.1"
tsam = "^2.3.7"
snakeviz = "^2.2.2"
pydantic = "^2.11.7"

[tool.poetry.group.dev.dependencies]
ruff = "~0.9.6"
pre-commit = "^3.5.0"
ipykernel = "^6.29.5"
graphviz = "^0.21"
pylint = "^3.3.7"
line-profiler = "^4.2.0"

[tool.ruff]
include = ["pyproject.toml", "eta_components/**/*.py"]

line-length = 120
indent-width = 4

required-version = ">=0.9.0"
target-version= "py39"

# Only fix with $ruff check --fix
fix = false

[tool.ruff.lint]
select = [
    "F",       # Pyflakes
    "E", "W",  # Pycodestyle, Error and Warning
    "I",       # Isort
    "N",       # Pep8-naming conventions
    "UP",      # Pyupgrade
    "PL",      # Pylint
    "ERA",     # Eradicate
    "PD",      # Pandas-vet
    "NPY",     # NumPy-specific
    "RUF",     # Ruff

    # Flake8:
    # 2020, asyncio, bugbear, builtins, commas, comprehensions, datetimez, eradicate, future-annotations, implicit-str-concat
    # logging, logging-format, no-pep420, print, pyi, pytest-style, return, simplify, use-pathlib todo
    "YTT", "ASYNC", "B", "A", "COM", "C4", "DTZ", "ERA", "FA", "ISC",
    "LOG", "G", "INP", "T20", "PYI", "PT", "RET", "SIM", "PTH", "TD"
]

ignore = [
    "SIM105",
    "PLR2004",  # Pylint: magic values
    # Recommended to ignore as they conflict with the formatter
    "W191", "E111", "E114", "E117", "D206", "D300", "COM812", "COM819", "ISC001"
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true

[tool.ruff.lint.pylint]
# Configure these as wanted
max-args = 10
max-statements = 60

[build-system]
requires = ["poetry-core>=2.0.1"]
build-backend = "poetry.core.masonry.api"
