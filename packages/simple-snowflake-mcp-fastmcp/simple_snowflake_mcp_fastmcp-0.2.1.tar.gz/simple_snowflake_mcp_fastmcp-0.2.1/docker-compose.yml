version: '3.8'

services:
  simple-snowflake-mcp:
    build: .
    container_name: simple-snowflake-mcp
    environment:
      # Snowflake connection settings
      - SNOWFLAKE_USER=${SNOWFLAKE_USER}
      - SNOWFLAKE_PASSWORD=${SNOWFLAKE_PASSWORD}
      - SNOWFLAKE_ACCOUNT=${SNOWFLAKE_ACCOUNT}
      - SNOWFLAKE_WAREHOUSE=${SNOWFLAKE_WAREHOUSE:-}
      - SNOWFLAKE_DATABASE=${SNOWFLAKE_DATABASE:-}
      - SNOWFLAKE_SCHEMA=${SNOWFLAKE_SCHEMA:-}
      # MCP settings
      - MCP_READ_ONLY=${MCP_READ_ONLY:-TRUE}
    env_file:
      - .env
    restart: unless-stopped
    # Uncomment if your MCP server needs to expose ports
    # ports:
    #   - "8000:8000"
    volumes:
      # Mount logs directory if needed
      - ./logs:/app/logs
    # Add health check if your MCP server supports it
    # healthcheck:
    #   test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  # Optional: Add a development service with volume mounts for live development
  simple-snowflake-mcp-dev:
    build: .
    container_name: simple-snowflake-mcp-dev
    environment:
      - SNOWFLAKE_USER=${SNOWFLAKE_USER}
      - SNOWFLAKE_PASSWORD=${SNOWFLAKE_PASSWORD}
      - SNOWFLAKE_ACCOUNT=${SNOWFLAKE_ACCOUNT}
      - SNOWFLAKE_WAREHOUSE=${SNOWFLAKE_WAREHOUSE:-}
      - SNOWFLAKE_DATABASE=${SNOWFLAKE_DATABASE:-}
      - SNOWFLAKE_SCHEMA=${SNOWFLAKE_SCHEMA:-}
      - MCP_READ_ONLY=${MCP_READ_ONLY:-TRUE}
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    profiles:
      - dev
    restart: unless-stopped
