name: Bump Version

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - auto
          - major
          - minor
          - patch
        default: auto
  workflow_call:
    inputs:
      bump_type:
        description: 'Version bump type (auto, major, minor, or patch)'
        required: false
        type: string
        default: 'auto'
    outputs:
      new_version:
        description: 'The new version number'
        value: ${{ jobs.bump_version.outputs.new_version }}

permissions:
  contents: write

jobs:
  bump_version:
    runs-on: ubuntu-latest
    environment: bump-version
    outputs:
      new_version: ${{ steps.bump_version.outputs.new_tag }}

    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.PUSH_APP_ID }}
          private-key: ${{ secrets.PUSH_APP_SECRET }}

      - name: Check out repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0
          ref: release
          token: ${{ steps.app-token.outputs.token }}

      - name: Set up uv
        uses: astral-sh/setup-uv@d4b2f3b6ecc6e67c4457f6d3e41ec42d3d0fcb86 # v5
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --group release

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Determine version bump type
        id: determine_bump
        run: |
          echo "## 🔢 Determining Version Bump" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          INPUT_TYPE="${{ inputs.bump_type }}"

          # Check if auto-detect is requested
          if [ "$INPUT_TYPE" = "auto" ] || [ -z "$INPUT_TYPE" ]; then
            echo "**Auto-detecting from dependency changes...**" >> $GITHUB_STEP_SUMMARY
            BUMP_TYPE=$(uv run --group release bash scripts/determine-version-bump.sh)
            echo "**Detected bump type:** \`$BUMP_TYPE\`" >> $GITHUB_STEP_SUMMARY
          else
            # Use manual override
            BUMP_TYPE="$INPUT_TYPE"

            # Validate bump type
            if [[ ! "$BUMP_TYPE" =~ ^(major|minor|patch)$ ]]; then
              echo "❌ Invalid bump type: $BUMP_TYPE" >> $GITHUB_STEP_SUMMARY
              echo "Valid options: auto, major, minor, patch" >> $GITHUB_STEP_SUMMARY
              exit 1
            fi

            echo "**Manual override provided:** \`$BUMP_TYPE\`" >> $GITHUB_STEP_SUMMARY
          fi

          echo "bump_type=$BUMP_TYPE" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_STEP_SUMMARY

      - name: Bump version and create tag
        id: bump_version
        uses: anothrNick/github-tag-action@777684df761b882a3f4f70db16ac70d8cc78d0ea # v1.70.0
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          WITH_V: false
          DEFAULT_BUMP: ${{ steps.determine_bump.outputs.bump_type }}
          RELEASE_BRANCHES: release
          DRY_RUN: false

      - name: Update pyproject.toml with new version
        run: |
          NEW_VERSION="${{ steps.bump_version.outputs.new_tag }}"

          echo "**Setting version in pyproject.toml to \`$NEW_VERSION\`**" >> $GITHUB_STEP_SUMMARY

          # Update version in pyproject.toml using Python script
          uv run --group release python scripts/update_pyproject_version.py "$NEW_VERSION"

          # Commit the version change
          git add pyproject.toml
          git commit -m "chore: bump version to $NEW_VERSION"

          # Push the changes
          git push origin release

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## ✅ Version Bumped" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**New version:** \`$NEW_VERSION\`" >> $GITHUB_STEP_SUMMARY
          echo "**Git tag:** \`$NEW_VERSION\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The deployment workflow will now trigger automatically." >> $GITHUB_STEP_SUMMARY
