{"version":3,"file":"vendors-node_modules_mui-chips-input_dist_mui-chips-input_es_js.c28b2ea334d83abf13fe.js","mappings":";;;;;;;;;AAAa;AACb;;AAEA,6BAA6B,mBAAO,CAAC,oHAA8C;AACnF,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,kBAAe;AACf,4CAA4C,mBAAO,CAAC,wFAAuB;AAC3E,kBAAkB,mBAAO,CAAC,8DAAmB;AAC7C,eAAe,kBAAe;AAC9B;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACZD;;AAE+B;AACI;AACoJ;;AAEvL,+CAA+C,gBAAgB;AACf;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,mBAAmB,yCAAY;AAC/B,kBAAkB,yCAAY;AAC9B,uBAAuB,yCAAY;AACnC,4BAA4B,yCAAY;AACxC,EAAE,4CAAe;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH,oBAAoB,sDAAU;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAgB;AAC1C;AACA;AACA;AACA;AACA,gBAAgB,sDAAa;;AAE7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4CAAe;AACjB;AACA;AACA,kBAAkB,sDAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE,4CAAe;AACjB;AACA;AACA,kBAAkB,sDAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,sBAAsB,sDAAI,CAAC,2CAAc;AACzC,2BAA2B,+CAAkB;AAC7C,GAAG;AACH;AACA,KAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA,cAAc,uDAAe;AAC7B;AACA;AACA;AACA,eAAe,wDAAc;AAC7B;AACA;AACA;AACA;AACA,cAAc,uDAAe;AAC7B,EAAE,EAAE,CAAM;AACV,IAAI,IAAqC;AACzC;AACA,wCAAwC,sDAAS;AACjD;;;;;;;;;;;;;;;;;;;;;;;;AChL6C;AACE;AACX;AACe;AACR;AACM;AACP;AACD;AACzC;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC,OAAO,gEAAC,CAAC,0DAAE,KAAK,mBAAmB;AACpC;AACA;AACA,cAAc;;;AAGd;AACA,eAAe;AACf;AACA;;AAEA;AACA,0BAA0B;AAC1B,eAAe;AACf;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,yBAAyB,sDAAC;AAC1B;AACA;AACA,uCAAuC,uCAAuC,EAAE,QAAQ;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gEAAC;AACZ;AACA;AACA;AACA;AACA,QAAQ,gEAAC,CAAC,+DAAE;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,uBAAuB;AACvB,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,WAAW,gEAAC,CAAC,0DAAE,KAAK,mBAAmB;AACvC;AACA;AACA,cAAc;;AAEd;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,OAAO,uDAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,qBAAqB,qDAAU,eAAe,qDAAU,UAAU,mDAAQ,YAAY,mDAAQ,WAAW,mDAAQ;AACjH;AACA,gBAAgB,qDAAU,UAAU,uBAAuB,SAAS,IAAI,sBAAsB,SAAS;AACvG;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,2BAA2B,sDAAC,CAAC,8EAAE,IAAI,0CAA0C,sDAAC;AAC9E;AACA;AACA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,oDAAE,MAAM,cAAc;AAC1E,WAAW;AACX,mDAAmD,sDAAC;AACpD;AACA;AACA,uBAAuB,sCAAsC;AAC7D,wCAAwC,sDAAC;AACzC,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,sDAAC,CAAC,iEAAE,IAAI,mBAAmB;AACvE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uDAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,wBAAwB,sDAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE","sources":["webpack://dataproc_jupyter_plugin/./node_modules/@mui/icons-material/Close.js","webpack://dataproc_jupyter_plugin/./node_modules/@mui/material/ClickAwayListener/ClickAwayListener.js","webpack://dataproc_jupyter_plugin/./node_modules/mui-chips-input/dist/mui-chips-input.es.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\n\n// TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click-Away Listener](https://mui.com/material-ui/react-click-away-listener/)\n * - [Menu](https://mui.com/material-ui/react-menu/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/material-ui/api/click-away-listener/)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef(\n  // @ts-expect-error TODO upstream fix\n  children.ref, nodeRef);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const childrenProps = {\n    ref: handleRef\n  };\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport { ClickAwayListener };","import { jsx as g } from \"react/jsx-runtime\";\nimport m, { createElement as xt } from \"react\";\nimport et from \"@mui/material/Chip\";\nimport { styled as S } from \"@mui/material/styles\";\nimport gt from \"@mui/icons-material/Close\";\nimport yt from \"@mui/material/ClickAwayListener\";\nimport Et from \"@mui/material/IconButton\";\nimport Dt from \"@mui/material/TextField\";\nconst T = {\n  enter: \"Enter\",\n  backspace: \"Backspace\"\n}, It = {\n  ime: 229\n}, At = S(et)(({ theme: e, size: n }) => `\n    max-width: 100%;\n    margin: 2px 4px;\n    height: ${n === \"small\" ? \"26px\" : \"32px\"};\n\n\n    &[aria-disabled=\"true\"] > svg {\n      color: ${e.palette.action.disabled};\n      cursor: default;\n    }\n\n    &.MuiChipsInput-Chip-Editing {\n      background-color: ${e.palette.primary.light};\n      color: ${e.palette.primary.contrastText};\n    }\n  `), wt = {\n  ChipStyled: At\n}, v = ({\n  className: e,\n  index: n,\n  onDelete: c,\n  disabled: l,\n  onEdit: C,\n  isEditing: h,\n  disableEdition: p,\n  ...y\n}) => {\n  const I = (s) => {\n    s.key === T.enter && c(n);\n  }, E = (s) => {\n    s?.preventDefault?.(), s?.stopPropagation?.(), c(n);\n  }, A = (s) => {\n    s.target.textContent === y.label && (l || C(n));\n  };\n  return /* @__PURE__ */ g(\n    wt.ChipStyled,\n    {\n      className: `MuiChipsInput-Chip ${h ? \"MuiChipsInput-Chip-Editing\" : \"\"} ${e || \"\"}`,\n      onKeyDown: I,\n      disabled: l,\n      onDoubleClick: p ? void 0 : A,\n      tabIndex: l ? -1 : 0,\n      \"aria-disabled\": l,\n      onDelete: E,\n      ...y\n    }\n  );\n};\nfunction $t(e) {\n  return typeof e == \"boolean\";\n}\nfunction kt(e) {\n  return typeof e == \"object\" && !Array.isArray(e) && e !== null;\n}\nfunction W(e, n) {\n  typeof n == \"function\" ? n(e) : n && kt(n) && \"current\" in n && (n.current = e);\n}\nconst bt = S(\"div\")`\n  top: 50%;\n  transform: translateY(-50%);\n  right: 10px;\n  position: absolute;\n`, Tt = S(Dt)((e) => `\n    max-width: 100%;\n\n    .MuiInputBase-root {\n      display: flex;\n      flex-wrap: wrap;\n      align-items: flex-start;\n      row-gap: 5px;\n      padding-top: ${e.size === \"small\" ? \"5px\" : \"9px\"};\n      padding-right: ${e.InputProps?.endAdornment ? \"30px\" : \"9px\"};\n      padding-bottom: ${e.size === \"small\" ? \"5px\" : \"9px\"};\n      padding-left: 10px;\n\n      input {\n        min-width: 30px;\n        width: auto;\n        flex-grow: 1;\n        text-overflow: ellipsis;\n        padding: ${e.size === \"small\" ? \"3.5px 4px\" : \"7.5px 4px\"};\n        align-self: center;\n      }\n    }\n  `), St = S(et)(({ theme: e, size: n }) => `\n    max-width: 100%;\n    margin: 2px 4px;\n    height: ${n === \"small\" ? \"26px\" : \"32px\"};\n\n    &[aria-disabled=\"true\"] > svg.MuiChip-deleteIcon {\n      color: ${e.palette.action.disabled};\n      cursor: default;\n    }\n  `), tt = {\n  ChipStyled: St,\n  TextFieldStyled: Tt,\n  EndAdornmentClose: bt\n}, Rt = m.forwardRef(\n  ({\n    chips: e,\n    onAddChip: n,\n    onEditChip: c,\n    onDeleteChip: l,\n    InputProps: C,\n    onInputChange: h,\n    disabled: p,\n    clearInputOnBlur: y,\n    addOnBlur: I,\n    validate: E,\n    error: A,\n    helperText: s,\n    hideClearAll: w,\n    inputProps: k,\n    size: b,\n    disableDeleteOnBackspace: R,\n    disableEdition: B,\n    className: F,\n    renderChip: K,\n    addOnWhichKey: $,\n    onFocus: z,\n    onDeleteAllChips: j,\n    inputRef: o,\n    inputValue: a,\n    ...M\n  }, P) => {\n    const [nt, rt] = m.useState(\"\"), [_, L] = m.useState(\"\"), N = m.useRef(null), V = m.useRef(!1), lt = m.useRef(\n      typeof a == \"string\"\n    ), [d, O] = m.useState(null), { onKeyDown: ot, ...it } = k || {}, { inputRef: Pt, ...st } = C || {}, U = () => {\n      L(\"\");\n    }, G = lt.current, x = G ? a : nt, Y = (t) => {\n      h?.(t), G || rt(t);\n    }, at = (t) => {\n      Y(e[t]), O(t), U();\n    }, D = () => {\n      O(null);\n    }, f = () => {\n      U(), Y(\"\");\n    }, ut = (t) => {\n      Y(t.target.value);\n    }, H = (t, r) => (u) => {\n      if (typeof E == \"function\") {\n        const i = E(t);\n        if (i === !1) {\n          r?.preventDefault();\n          return;\n        }\n        if (!$t(i) && i.isError) {\n          r?.preventDefault(), L(i.textError);\n          return;\n        }\n      }\n      u();\n    }, q = (t, r, u) => {\n      H(\n        t,\n        u\n      )(() => {\n        c?.(t, r), D(), f();\n      });\n    }, J = (t, r) => {\n      H(\n        t,\n        r\n      )(() => {\n        n?.(x.trim()), f();\n      });\n    }, Q = () => {\n      if (V.current) {\n        if (d !== null)\n          D(), f();\n        else if (I) {\n          if (x.length > 0) {\n            const t = x.trim();\n            t.length === 0 ? f() : d !== null ? q(t, d) : J(t);\n          }\n        } else y && f();\n        V.current = !1;\n      }\n    }, ct = (t) => {\n      N.current = t, o && W(t, o), P && W(t, P);\n    }, pt = (t, r) => r === It.ime ? !1 : $ ? Array.isArray($) ? $.some((u) => u === t) : $ === t : t === T.enter, dt = (t) => {\n      const r = pt(t.key, t.keyCode), u = t.key === T.backspace, i = x.trim();\n      if (!r && t.code === \"Tab\") {\n        Q();\n        return;\n      }\n      if (r && t.preventDefault(), x.length > 0 && r)\n        i.length === 0 ? f() : d !== null ? q(i, d, t) : J(i, t);\n      else if (u && x.length === 0 && e.length > 0 && !R) {\n        const Z = e.length - 1;\n        l?.(Z), d === Z && D();\n      }\n      ot?.(t);\n    }, ft = (t) => {\n      t.preventDefault(), z?.(t), V.current = !0;\n    }, ht = (t) => {\n      t.preventDefault(), !w && !p && (j?.(), f(), D());\n    }, mt = (t) => {\n      t === d ? (f(), D()) : at(t), N.current?.focus();\n    }, Ct = (t) => {\n      p || (l?.(t), d !== null && (D(), f()));\n    }, X = e.length > 0;\n    return /* @__PURE__ */ g(yt, { onClickAway: Q, children: /* @__PURE__ */ g(\n      tt.TextFieldStyled,\n      {\n        value: x,\n        onChange: ut,\n        ref: P,\n        className: `MuiChipsInput-TextField ${F || \"\"}`,\n        size: b,\n        placeholder: \"Type and press enter\",\n        onFocus: ft,\n        inputProps: {\n          onKeyDown: dt,\n          enterKeyHint: \"done\",\n          ...it\n        },\n        disabled: p,\n        error: !!_ || A,\n        helperText: _ || s,\n        InputProps: {\n          inputRef: ct,\n          startAdornment: X ? e.map((t, r) => {\n            const u = `chip-${r}`, i = {\n              index: r,\n              onEdit: mt,\n              label: t,\n              title: t,\n              isEditing: r === d,\n              size: b,\n              disabled: p,\n              disableEdition: B,\n              onDelete: Ct\n            };\n            return K ? K(v, u, i) : /* @__PURE__ */ xt(v, { ...i, key: u });\n          }) : null,\n          endAdornment: w ? null : /* @__PURE__ */ g(\n            tt.EndAdornmentClose,\n            {\n              style: { visibility: X ? \"visible\" : \"hidden\" },\n              children: /* @__PURE__ */ g(\n                Et,\n                {\n                  \"aria-label\": \"Clear\",\n                  title: \"Clear\",\n                  disabled: p,\n                  size: \"small\",\n                  onClick: ht,\n                  children: /* @__PURE__ */ g(gt, { fontSize: \"small\" })\n                }\n              )\n            }\n          ),\n          ...st\n        },\n        ...M\n      }\n    ) });\n  }\n);\nfunction Bt(e, n) {\n  return [...e, n];\n}\nfunction Ft(e, n) {\n  return e.filter((c, l) => n !== l);\n}\nfunction Kt(e, n, c) {\n  return e.map((l, C) => n === C ? c : l);\n}\nconst Mt = [], Ut = m.forwardRef(\n  ({\n    value: e = Mt,\n    onChange: n,\n    onAddChip: c,\n    onInputChange: l,\n    onDeleteChip: C,\n    disabled: h,\n    validate: p,\n    clearInputOnBlur: y,\n    addOnBlur: I,\n    hideClearAll: E,\n    disableDeleteOnBackspace: A,\n    onEditChip: s,\n    renderChip: w,\n    disableEdition: k,\n    addOnWhichKey: b = T.enter,\n    inputValue: R,\n    ...B\n  }, F) => /* @__PURE__ */ g(\n    Rt,\n    {\n      chips: e,\n      onAddChip: (o) => {\n        if (h)\n          return;\n        const a = Bt(e, o), M = a.length - 1;\n        c?.(o, M), n?.(a);\n      },\n      onInputChange: l,\n      disableDeleteOnBackspace: A,\n      onDeleteChip: (o) => {\n        if (h)\n          return;\n        const a = e[o];\n        n?.(Ft(e, o)), C?.(a, o);\n      },\n      onEditChip: (o, a) => {\n        h || k || (n?.(Kt(e, a, o)), s?.(o, a));\n      },\n      renderChip: w,\n      onDeleteAllChips: () => {\n        n?.([]);\n      },\n      clearInputOnBlur: y,\n      addOnBlur: I,\n      disabled: h,\n      disableEdition: k,\n      validate: p,\n      inputValue: R,\n      hideClearAll: E,\n      addOnWhichKey: b,\n      ...B,\n      ref: F\n    }\n  )\n);\nexport {\n  Ut as MuiChipsInput\n};\n"],"names":[],"sourceRoot":""}