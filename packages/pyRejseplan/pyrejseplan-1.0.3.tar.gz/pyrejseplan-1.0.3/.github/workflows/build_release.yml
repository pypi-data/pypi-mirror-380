name: Publish Python 🐍 distribution 📦 to PyPI and TestPyPI

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Setup UV with caching
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: uv.lock
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"
    - name: Install environment
      run: uv sync --locked --all-extras --dev
    
    - name: Build a binary wheel and a source tarball
      run: uv build
    - name: List files after build
      run: ls -l dist
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pyRejseplan  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1.12
  
  # release-to-github:
  #   name: >-
  #     Publish Python 🐍 distribution 📦 to Github repo
  #   if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
  #   needs: 
  #     - build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download all the dists
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: python-package-distributions
  #         path: dist/
  #     - name: 🛎 Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: 📋 Get Commits since last Release
  #       id: changes
  #       uses: simbo/changes-since-last-release-action@v1
  #       with:  
  #         line-prefix: "* "
  #         include-hashes: false
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1.1.4
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
  #       with:
  #         tag_name: ${{ github.ref }}
  #         release_name: Release ${{ github.ref }}
  #         body: |
  #           Changes since ${{ steps.changes.outputs.last-tag }}:
  #           ${{ steps.changes.outputs.log }}
  #         draft: false
  #         prerelease: false
  #     - name: upload-assets
  #       uses: actions/upload-release-asset@v1.0.2
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: dist/*