Metadata-Version: 2.4
Name: envon
Version: 0.1.2
Summary: Emit the activation command for the nearest Python virtual environment and install shell bootstrap wrappers.
Project-URL: Homepage, https://github.com/userfrom1995/envon
Project-URL: Repository, https://github.com/userfrom1995/envon
Author-email: User1995 <userfrom1995@gmail.com>
License: MIT License
        
        Copyright (c) 2025 USER1995
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Keywords: activation,bootstrap,shell,venv,virtualenv
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: System :: Shells
Requires-Python: >=3.8
Requires-Dist: virtualenv>=20
Description-Content-Type: text/markdown

# envon

# envon

Emit the activation command for the nearest or specified Python virtual environment, and install shell bootstrap wrappers for seamless activation in your favorite shell.

## Features
- Auto-detects and activates Python virtual environments in your project.
- Supports multiple shells: bash, zsh, sh, fish, powershell, pwsh, nushell, cmd, csh/tcsh/cshell.
- Installs a shell bootstrap function for one-command activation.
- Flexible CLI flags for advanced usage.

## Supported Shells
- **bash**
- **zsh**
- **sh**
- **fish**
- **powershell**, **pwsh**
- **nushell**, **nu**
- **cmd**, **batch**, **bat**
- **csh**, **tcsh**, **cshell**

## Installation
See [docs/installation.md](docs/installation.md) for full details.

Quick install:
```bash
python3 -m pip install envon
```
Or for development:
```bash
python3 -m pip install -e .
```

## Usage
After installation, run:
```bash
envon
```
This will activate the nearest virtual environment in your project.

For advanced usage and all flags, see [docs/user_guide.md](docs/user_guide.md).

## Contributor Note

**envon is in its early phase. Basic functionality is solid, but we welcome help!**
- TCSH/cshell and Nushell support need improvement (auto-activation, overlays).
- If you find issues, please [raise an issue](https://github.com/userfrom1995/envon/issues).
- If you'd like to contribute, fork and submit a PRâ€”contributions are very welcome!

Let's make envon the best Python venv activator for every shell!

Works across shells: bash, zsh, sh, fish, Nushell, PowerShell, and csh/tcsh. The `virtualenv` package is installed automatically and `envon` uses its activation plug-ins; when not applicable, it falls back to common activation paths.

## Installation

From PyPI:

```bash
python -m pip install envon
```

This installs a console script named `envon` into your environment.

## Quick usage

- In a project with a `.venv` (or `venv`, `env`, `.env`) folder:
	- Run `envon` and it will print the activation command for your current shell.
	- Wrap it with the provided bootstrap so it executes the activation command for you.

Examples:

```bash
# Print the shell command to activate the nearest venv
envon

# Activate now (bash/zsh):
eval "$(envon)"

# Or install the bootstrap once so `envon` activates directly
envon --install
```

You can target a specific environment:

```bash
envon /path/to/project/.venv
envon /path/to/project               # will search for .venv, venv, env, .env under the dir
envon myenv                          # will resolve from $WORKON_HOME/myenv if set
```

## Shell bootstrap

`envon --install` detects your shell and adds a small wrapper to your shell profile. After that, typing `envon` will activate the nearest venv (or a specified one) without having to `eval`.

Supported shells: bash, zsh, sh, fish, Nushell, PowerShell (Windows and POSIX), csh/tcsh.

To force a particular shell during installation:

```bash
envon --install bash
envon --install fish
envon --install nushell
envon --install powershell
envon --install csh
```

## How it works

- Searches for a venv in the current directory first; if multiple exist, it prompts to choose (when in a TTY).
- If none, walks up parent directories to find a common venv name like `.venv`.
- If still none, and an environment is already active via `$VIRTUAL_ENV`, it respects that.
- Otherwise, errors with guidance to create a venv or pass a path.
- Determines the current shell and emits the corresponding activation command (or uses `virtualenv` activators when available).

## Development

This project uses a modern PEP 517 build via `pyproject.toml`.

Setup a dev environment:

```bash
python -m venv .venv
. .venv/bin/activate  # Windows: .venv\Scripts\Activate.ps1
python -m pip install -U pip build
pip install -e .
```

Run the CLI from source:

```bash
python -m envon --help
envon --help
```

Build artifacts:

```bash
python -m build
```

Publish to PyPI (requires `twine` and credentials):

```bash
python -m pip install -U twine
twine upload dist/*
```

## License

MIT
