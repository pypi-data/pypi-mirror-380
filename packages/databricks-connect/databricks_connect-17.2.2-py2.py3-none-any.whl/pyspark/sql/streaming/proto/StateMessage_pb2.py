# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: StateMessage.proto
# Protobuf Python Version: 5.29.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    3,
    '',
    'StateMessage.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12StateMessage.proto\x12.org.apache.spark.sql.execution.streaming.state\"\x95\x04\n\x0cStateRequest\x12\x0f\n\x07version\x18\x01 \x01(\x05\x12\x66\n\x15statefulProcessorCall\x18\x02 \x01(\x0b\x32\x45.org.apache.spark.sql.execution.streaming.state.StatefulProcessorCallH\x00\x12\x64\n\x14stateVariableRequest\x18\x03 \x01(\x0b\x32\x44.org.apache.spark.sql.execution.streaming.state.StateVariableRequestH\x00\x12p\n\x1aimplicitGroupingKeyRequest\x18\x04 \x01(\x0b\x32J.org.apache.spark.sql.execution.streaming.state.ImplicitGroupingKeyRequestH\x00\x12T\n\x0ctimerRequest\x18\x05 \x01(\x0b\x32<.org.apache.spark.sql.execution.streaming.state.TimerRequestH\x00\x12T\n\x0cutilsRequest\x18\x06 \x01(\x0b\x32<.org.apache.spark.sql.execution.streaming.state.UtilsRequestH\x00\x42\x08\n\x06method\"H\n\rStateResponse\x12\x12\n\nstatusCode\x18\x01 \x01(\x05\x12\x14\n\x0c\x65rrorMessage\x18\x02 \x01(\t\x12\r\n\x05value\x18\x03 \x01(\x0c\"W\n\x1cStateResponseWithLongTypeVal\x12\x12\n\nstatusCode\x18\x01 \x01(\x05\x12\x14\n\x0c\x65rrorMessage\x18\x02 \x01(\t\x12\r\n\x05value\x18\x03 \x01(\x03\"Y\n\x1eStateResponseWithStringTypeVal\x12\x12\n\nstatusCode\x18\x01 \x01(\x05\x12\x14\n\x0c\x65rrorMessage\x18\x02 \x01(\t\x12\r\n\x05value\x18\x03 \x01(\t\"m\n\x18StateResponseWithListGet\x12\x12\n\nstatusCode\x18\x01 \x01(\x05\x12\x14\n\x0c\x65rrorMessage\x18\x02 \x01(\t\x12\r\n\x05value\x18\x03 \x03(\x0c\x12\x18\n\x10requireNextFetch\x18\x04 \x01(\x08\"u\n StateResponseWithMapKeysOrValues\x12\x12\n\nstatusCode\x18\x01 \x01(\x05\x12\x14\n\x0c\x65rrorMessage\x18\x02 \x01(\t\x12\r\n\x05value\x18\x03 \x03(\x0c\x12\x18\n\x10requireNextFetch\x18\x04 \x01(\x08\"-\n\x0fKeyAndValuePair\x12\x0b\n\x03key\x18\x01 \x01(\x0c\x12\r\n\x05value\x18\x02 \x01(\x0c\"\xb3\x01\n\x1cStateResponseWithMapIterator\x12\x12\n\nstatusCode\x18\x01 \x01(\x05\x12\x14\n\x0c\x65rrorMessage\x18\x02 \x01(\t\x12O\n\x06kvPair\x18\x03 \x03(\x0b\x32?.org.apache.spark.sql.execution.streaming.state.KeyAndValuePair\x12\x18\n\x10requireNextFetch\x18\x04 \x01(\x08\":\n\tTimerInfo\x12\x10\n\x03key\x18\x01 \x01(\x0cH\x00\x88\x01\x01\x12\x13\n\x0btimestampMs\x18\x02 \x01(\x03\x42\x06\n\x04_key\"\xa6\x01\n\x16StateResponseWithTimer\x12\x12\n\nstatusCode\x18\x01 \x01(\x05\x12\x14\n\x0c\x65rrorMessage\x18\x02 \x01(\t\x12H\n\x05timer\x18\x03 \x03(\x0b\x32\x39.org.apache.spark.sql.execution.streaming.state.TimerInfo\x12\x18\n\x10requireNextFetch\x18\x04 \x01(\x08\"\xc6\x04\n\x15StatefulProcessorCall\x12X\n\x0esetHandleState\x18\x01 \x01(\x0b\x32>.org.apache.spark.sql.execution.streaming.state.SetHandleStateH\x00\x12Y\n\rgetValueState\x18\x02 \x01(\x0b\x32@.org.apache.spark.sql.execution.streaming.state.StateCallCommandH\x00\x12X\n\x0cgetListState\x18\x03 \x01(\x0b\x32@.org.apache.spark.sql.execution.streaming.state.StateCallCommandH\x00\x12W\n\x0bgetMapState\x18\x04 \x01(\x0b\x32@.org.apache.spark.sql.execution.streaming.state.StateCallCommandH\x00\x12_\n\x0etimerStateCall\x18\x05 \x01(\x0b\x32\x45.org.apache.spark.sql.execution.streaming.state.TimerStateCallCommandH\x00\x12Z\n\x0e\x64\x65leteIfExists\x18\x06 \x01(\x0b\x32@.org.apache.spark.sql.execution.streaming.state.StateCallCommandH\x00\x42\x08\n\x06method\"\xa8\x02\n\x14StateVariableRequest\x12X\n\x0evalueStateCall\x18\x01 \x01(\x0b\x32>.org.apache.spark.sql.execution.streaming.state.ValueStateCallH\x00\x12V\n\rlistStateCall\x18\x02 \x01(\x0b\x32=.org.apache.spark.sql.execution.streaming.state.ListStateCallH\x00\x12T\n\x0cmapStateCall\x18\x03 \x01(\x0b\x32<.org.apache.spark.sql.execution.streaming.state.MapStateCallH\x00\x42\x08\n\x06method\"\xe0\x01\n\x1aImplicitGroupingKeyRequest\x12X\n\x0esetImplicitKey\x18\x01 \x01(\x0b\x32>.org.apache.spark.sql.execution.streaming.state.SetImplicitKeyH\x00\x12^\n\x11removeImplicitKey\x18\x02 \x01(\x0b\x32\x41.org.apache.spark.sql.execution.streaming.state.RemoveImplicitKeyH\x00\x42\x08\n\x06method\"\xba\x02\n\x0cTimerRequest\x12^\n\x11timerValueRequest\x18\x01 \x01(\x0b\x32\x41.org.apache.spark.sql.execution.streaming.state.TimerValueRequestH\x00\x12`\n\x12\x65xpiryTimerRequest\x18\x02 \x01(\x0b\x32\x42.org.apache.spark.sql.execution.streaming.state.ExpiryTimerRequestH\x00\x12^\n\x11\x63leanupTTLRequest\x18\x03 \x01(\x0b\x32\x41.org.apache.spark.sql.execution.streaming.state.CleanupTtlRequestH\x00\x42\x08\n\x06method\"\xd4\x01\n\x11TimerValueRequest\x12_\n\x12getProcessingTimer\x18\x01 \x01(\x0b\x32\x41.org.apache.spark.sql.execution.streaming.state.GetProcessingTimeH\x00\x12T\n\x0cgetWatermark\x18\x02 \x01(\x0b\x32<.org.apache.spark.sql.execution.streaming.state.GetWatermarkH\x00\x42\x08\n\x06method\"C\n\x12\x45xpiryTimerRequest\x12\x12\n\niteratorId\x18\x01 \x01(\t\x12\x19\n\x11\x65xpiryTimestampMs\x18\x02 \x01(\x03\".\n\x11\x43leanupTtlRequest\x12\x19\n\x11\x65xpiryTimestampMs\x18\x01 \x01(\x03\"\x13\n\x11GetProcessingTime\"\x0e\n\x0cGetWatermark\"x\n\x0cUtilsRequest\x12^\n\x11parseStringSchema\x18\x01 \x01(\x0b\x32\x41.org.apache.spark.sql.execution.streaming.state.ParseStringSchemaH\x00\x42\x08\n\x06method\"#\n\x11ParseStringSchema\x12\x0e\n\x06schema\x18\x01 \x01(\t\"\x9a\x01\n\x10StateCallCommand\x12\x11\n\tstateName\x18\x01 \x01(\t\x12\x0e\n\x06schema\x18\x02 \x01(\t\x12\x1b\n\x13mapStateValueSchema\x18\x03 \x01(\t\x12\x46\n\x03ttl\x18\x04 \x01(\x0b\x32\x39.org.apache.spark.sql.execution.streaming.state.TTLConfig\"\xa9\x02\n\x15TimerStateCallCommand\x12\x10\n\x03key\x18\x04 \x01(\x0cH\x01\x88\x01\x01\x12Q\n\x08register\x18\x01 \x01(\x0b\x32=.org.apache.spark.sql.execution.streaming.state.RegisterTimerH\x00\x12M\n\x06\x64\x65lete\x18\x02 \x01(\x0b\x32;.org.apache.spark.sql.execution.streaming.state.DeleteTimerH\x00\x12J\n\x04list\x18\x03 \x01(\x0b\x32:.org.apache.spark.sql.execution.streaming.state.ListTimersH\x00\x42\x08\n\x06methodB\x06\n\x04_key\"\xfb\x02\n\x0eValueStateCall\x12\x11\n\tstateName\x18\x01 \x01(\t\x12\x10\n\x03key\x18\x06 \x01(\x0cH\x01\x88\x01\x01\x12H\n\x06\x65xists\x18\x02 \x01(\x0b\x32\x36.org.apache.spark.sql.execution.streaming.state.ExistsH\x00\x12\x42\n\x03get\x18\x03 \x01(\x0b\x32\x33.org.apache.spark.sql.execution.streaming.state.GetH\x00\x12\\\n\x10valueStateUpdate\x18\x04 \x01(\x0b\x32@.org.apache.spark.sql.execution.streaming.state.ValueStateUpdateH\x00\x12\x46\n\x05\x63lear\x18\x05 \x01(\x0b\x32\x35.org.apache.spark.sql.execution.streaming.state.ClearH\x00\x42\x08\n\x06methodB\x06\n\x04_key\"\x90\x04\n\rListStateCall\x12\x11\n\tstateName\x18\x01 \x01(\t\x12H\n\x06\x65xists\x18\x02 \x01(\x0b\x32\x36.org.apache.spark.sql.execution.streaming.state.ExistsH\x00\x12T\n\x0clistStateGet\x18\x03 \x01(\x0b\x32<.org.apache.spark.sql.execution.streaming.state.ListStateGetH\x00\x12T\n\x0clistStatePut\x18\x04 \x01(\x0b\x32<.org.apache.spark.sql.execution.streaming.state.ListStatePutH\x00\x12R\n\x0b\x61ppendValue\x18\x05 \x01(\x0b\x32;.org.apache.spark.sql.execution.streaming.state.AppendValueH\x00\x12P\n\nappendList\x18\x06 \x01(\x0b\x32:.org.apache.spark.sql.execution.streaming.state.AppendListH\x00\x12\x46\n\x05\x63lear\x18\x07 \x01(\x0b\x32\x35.org.apache.spark.sql.execution.streaming.state.ClearH\x00\x42\x08\n\x06method\"\xe1\x05\n\x0cMapStateCall\x12\x11\n\tstateName\x18\x01 \x01(\t\x12H\n\x06\x65xists\x18\x02 \x01(\x0b\x32\x36.org.apache.spark.sql.execution.streaming.state.ExistsH\x00\x12L\n\x08getValue\x18\x03 \x01(\x0b\x32\x38.org.apache.spark.sql.execution.streaming.state.GetValueH\x00\x12R\n\x0b\x63ontainsKey\x18\x04 \x01(\x0b\x32;.org.apache.spark.sql.execution.streaming.state.ContainsKeyH\x00\x12R\n\x0bupdateValue\x18\x05 \x01(\x0b\x32;.org.apache.spark.sql.execution.streaming.state.UpdateValueH\x00\x12L\n\x08iterator\x18\x06 \x01(\x0b\x32\x38.org.apache.spark.sql.execution.streaming.state.IteratorH\x00\x12\x44\n\x04keys\x18\x07 \x01(\x0b\x32\x34.org.apache.spark.sql.execution.streaming.state.KeysH\x00\x12H\n\x06values\x18\x08 \x01(\x0b\x32\x36.org.apache.spark.sql.execution.streaming.state.ValuesH\x00\x12N\n\tremoveKey\x18\t \x01(\x0b\x32\x39.org.apache.spark.sql.execution.streaming.state.RemoveKeyH\x00\x12\x46\n\x05\x63lear\x18\n \x01(\x0b\x32\x35.org.apache.spark.sql.execution.streaming.state.ClearH\x00\x42\x08\n\x06method\"\x1d\n\x0eSetImplicitKey\x12\x0b\n\x03key\x18\x01 \x01(\x0c\"\x13\n\x11RemoveImplicitKey\"\x08\n\x06\x45xists\"\x05\n\x03Get\"*\n\rRegisterTimer\x12\x19\n\x11\x65xpiryTimestampMs\x18\x01 \x01(\x03\"(\n\x0b\x44\x65leteTimer\x12\x19\n\x11\x65xpiryTimestampMs\x18\x01 \x01(\x03\" \n\nListTimers\x12\x12\n\niteratorId\x18\x01 \x01(\t\"!\n\x10ValueStateUpdate\x12\r\n\x05value\x18\x01 \x01(\x0c\"\x07\n\x05\x43lear\"\"\n\x0cListStateGet\x12\x12\n\niteratorId\x18\x01 \x01(\t\"5\n\x0cListStatePut\x12\r\n\x05value\x18\x01 \x03(\x0c\x12\x16\n\x0e\x66\x65tchWithArrow\x18\x02 \x01(\x08\"\x1c\n\x0b\x41ppendValue\x12\r\n\x05value\x18\x01 \x01(\x0c\"3\n\nAppendList\x12\r\n\x05value\x18\x01 \x03(\x0c\x12\x16\n\x0e\x66\x65tchWithArrow\x18\x02 \x01(\x08\"\x1b\n\x08GetValue\x12\x0f\n\x07userKey\x18\x01 \x01(\x0c\"\x1e\n\x0b\x43ontainsKey\x12\x0f\n\x07userKey\x18\x01 \x01(\x0c\"-\n\x0bUpdateValue\x12\x0f\n\x07userKey\x18\x01 \x01(\x0c\x12\r\n\x05value\x18\x02 \x01(\x0c\"\x1e\n\x08Iterator\x12\x12\n\niteratorId\x18\x01 \x01(\t\"\x1a\n\x04Keys\x12\x12\n\niteratorId\x18\x01 \x01(\t\"\x1c\n\x06Values\x12\x12\n\niteratorId\x18\x01 \x01(\t\"\x1c\n\tRemoveKey\x12\x0f\n\x07userKey\x18\x01 \x01(\x0c\"\\\n\x0eSetHandleState\x12J\n\x05state\x18\x01 \x01(\x0e\x32;.org.apache.spark.sql.execution.streaming.state.HandleState\"\x1f\n\tTTLConfig\x12\x12\n\ndurationMs\x18\x01 \x01(\x03*n\n\x0bHandleState\x12\x0c\n\x08PRE_INIT\x10\x00\x12\x0b\n\x07\x43REATED\x10\x01\x12\x0f\n\x0bINITIALIZED\x10\x02\x12\x12\n\x0e\x44\x41TA_PROCESSED\x10\x03\x12\x13\n\x0fTIMER_PROCESSED\x10\x04\x12\n\n\x06\x43LOSED\x10\x05\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'StateMessage_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_HANDLESTATE']._serialized_start=6376
  _globals['_HANDLESTATE']._serialized_end=6486
  _globals['_STATEREQUEST']._serialized_start=71
  _globals['_STATEREQUEST']._serialized_end=604
  _globals['_STATERESPONSE']._serialized_start=606
  _globals['_STATERESPONSE']._serialized_end=678
  _globals['_STATERESPONSEWITHLONGTYPEVAL']._serialized_start=680
  _globals['_STATERESPONSEWITHLONGTYPEVAL']._serialized_end=767
  _globals['_STATERESPONSEWITHSTRINGTYPEVAL']._serialized_start=769
  _globals['_STATERESPONSEWITHSTRINGTYPEVAL']._serialized_end=858
  _globals['_STATERESPONSEWITHLISTGET']._serialized_start=860
  _globals['_STATERESPONSEWITHLISTGET']._serialized_end=969
  _globals['_STATERESPONSEWITHMAPKEYSORVALUES']._serialized_start=971
  _globals['_STATERESPONSEWITHMAPKEYSORVALUES']._serialized_end=1088
  _globals['_KEYANDVALUEPAIR']._serialized_start=1090
  _globals['_KEYANDVALUEPAIR']._serialized_end=1135
  _globals['_STATERESPONSEWITHMAPITERATOR']._serialized_start=1138
  _globals['_STATERESPONSEWITHMAPITERATOR']._serialized_end=1317
  _globals['_TIMERINFO']._serialized_start=1319
  _globals['_TIMERINFO']._serialized_end=1377
  _globals['_STATERESPONSEWITHTIMER']._serialized_start=1380
  _globals['_STATERESPONSEWITHTIMER']._serialized_end=1546
  _globals['_STATEFULPROCESSORCALL']._serialized_start=1549
  _globals['_STATEFULPROCESSORCALL']._serialized_end=2131
  _globals['_STATEVARIABLEREQUEST']._serialized_start=2134
  _globals['_STATEVARIABLEREQUEST']._serialized_end=2430
  _globals['_IMPLICITGROUPINGKEYREQUEST']._serialized_start=2433
  _globals['_IMPLICITGROUPINGKEYREQUEST']._serialized_end=2657
  _globals['_TIMERREQUEST']._serialized_start=2660
  _globals['_TIMERREQUEST']._serialized_end=2974
  _globals['_TIMERVALUEREQUEST']._serialized_start=2977
  _globals['_TIMERVALUEREQUEST']._serialized_end=3189
  _globals['_EXPIRYTIMERREQUEST']._serialized_start=3191
  _globals['_EXPIRYTIMERREQUEST']._serialized_end=3258
  _globals['_CLEANUPTTLREQUEST']._serialized_start=3260
  _globals['_CLEANUPTTLREQUEST']._serialized_end=3306
  _globals['_GETPROCESSINGTIME']._serialized_start=3308
  _globals['_GETPROCESSINGTIME']._serialized_end=3327
  _globals['_GETWATERMARK']._serialized_start=3329
  _globals['_GETWATERMARK']._serialized_end=3343
  _globals['_UTILSREQUEST']._serialized_start=3345
  _globals['_UTILSREQUEST']._serialized_end=3465
  _globals['_PARSESTRINGSCHEMA']._serialized_start=3467
  _globals['_PARSESTRINGSCHEMA']._serialized_end=3502
  _globals['_STATECALLCOMMAND']._serialized_start=3505
  _globals['_STATECALLCOMMAND']._serialized_end=3659
  _globals['_TIMERSTATECALLCOMMAND']._serialized_start=3662
  _globals['_TIMERSTATECALLCOMMAND']._serialized_end=3959
  _globals['_VALUESTATECALL']._serialized_start=3962
  _globals['_VALUESTATECALL']._serialized_end=4341
  _globals['_LISTSTATECALL']._serialized_start=4344
  _globals['_LISTSTATECALL']._serialized_end=4872
  _globals['_MAPSTATECALL']._serialized_start=4875
  _globals['_MAPSTATECALL']._serialized_end=5612
  _globals['_SETIMPLICITKEY']._serialized_start=5614
  _globals['_SETIMPLICITKEY']._serialized_end=5643
  _globals['_REMOVEIMPLICITKEY']._serialized_start=5645
  _globals['_REMOVEIMPLICITKEY']._serialized_end=5664
  _globals['_EXISTS']._serialized_start=5666
  _globals['_EXISTS']._serialized_end=5674
  _globals['_GET']._serialized_start=5676
  _globals['_GET']._serialized_end=5681
  _globals['_REGISTERTIMER']._serialized_start=5683
  _globals['_REGISTERTIMER']._serialized_end=5725
  _globals['_DELETETIMER']._serialized_start=5727
  _globals['_DELETETIMER']._serialized_end=5767
  _globals['_LISTTIMERS']._serialized_start=5769
  _globals['_LISTTIMERS']._serialized_end=5801
  _globals['_VALUESTATEUPDATE']._serialized_start=5803
  _globals['_VALUESTATEUPDATE']._serialized_end=5836
  _globals['_CLEAR']._serialized_start=5838
  _globals['_CLEAR']._serialized_end=5845
  _globals['_LISTSTATEGET']._serialized_start=5847
  _globals['_LISTSTATEGET']._serialized_end=5881
  _globals['_LISTSTATEPUT']._serialized_start=5883
  _globals['_LISTSTATEPUT']._serialized_end=5936
  _globals['_APPENDVALUE']._serialized_start=5938
  _globals['_APPENDVALUE']._serialized_end=5966
  _globals['_APPENDLIST']._serialized_start=5968
  _globals['_APPENDLIST']._serialized_end=6019
  _globals['_GETVALUE']._serialized_start=6021
  _globals['_GETVALUE']._serialized_end=6048
  _globals['_CONTAINSKEY']._serialized_start=6050
  _globals['_CONTAINSKEY']._serialized_end=6080
  _globals['_UPDATEVALUE']._serialized_start=6082
  _globals['_UPDATEVALUE']._serialized_end=6127
  _globals['_ITERATOR']._serialized_start=6129
  _globals['_ITERATOR']._serialized_end=6159
  _globals['_KEYS']._serialized_start=6161
  _globals['_KEYS']._serialized_end=6187
  _globals['_VALUES']._serialized_start=6189
  _globals['_VALUES']._serialized_end=6217
  _globals['_REMOVEKEY']._serialized_start=6219
  _globals['_REMOVEKEY']._serialized_end=6247
  _globals['_SETHANDLESTATE']._serialized_start=6249
  _globals['_SETHANDLESTATE']._serialized_end=6341
  _globals['_TTLCONFIG']._serialized_start=6343
  _globals['_TTLCONFIG']._serialized_end=6374
# @@protoc_insertion_point(module_scope)
