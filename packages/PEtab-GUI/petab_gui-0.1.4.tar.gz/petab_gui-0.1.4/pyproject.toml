[project]
name = 'PEtab-GUI'
dynamic = ["version"]
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Paul Jonas Jost", email = "jost.pauljonas@gmail.com"},
    {name = "Frank T. Bergmann", email = "frank.thomas.bergmann@gmail.com"}
]
maintainers = [
    {name = "Paul Jonas Jost", email = "jost.pauljonas@gmail.com"},
    {name = "Frank T. Bergmann", email = "frank.thomas.bergmann@gmail.com"}
]
description = "Graphical user interface for the PEtab format"
dependencies = [
    "pyside6",
    "pandas",
    "antimony",
    "python-libsbml",
    "matplotlib",
    "petab[combine]>=0.6.0",
    "qtawesome",
    "copasi-basico",
    "copasi-petab-importer",
    "pyobjc; sys_platform == 'darwin'"
]
license-files = ["LICENSE"]

[build-system]
requires = [
    "setuptools>=80",
    "setuptools-scm>=8",
]

[project.optional-dependencies]
doc = [
    "sphinx",
    "sphinx-rtd-theme",
    "myst-parser",
    "sphinx_copybutton",
    "sphinx-design",
]

[project.urls]
Repository = "https://github.com/PEtab-dev/PEtabGUI"
Issues = "https://github.com/PEtab-dev/PEtabGUI/issues"

[project.gui-scripts]
petab_gui="petab_gui:main"

[project.scripts]
petab_gui_cli="petab_gui:main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"petab_gui.assets" = ["PEtab.png"]

[tool.setuptools_scm]

[tool.ruff]
line-length = 79
lint.select = [
    "F",  # Pyflakes
    "I",  # isort
    "D",  # pydocstyle (PEP 257)
    "S",  # flake8-bandit
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "T20",  # flake8-print
    "W",  # pycodestyle Warnings
    "E",  # pycodestyle Errors
    "UP",  # pyupgrade
    "ERA",
    "A",  # flake8-builtins
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
]
lint.ignore = [
    "D107",  # Ignore missing docstring in __init__.py files
    "D102",  # Ignore missing docstring in public methods
    "D103",  # Ignore missing docstring in public functions
    "D401",  # Ignore imperative mood in docstrings
    "D100",  # Ignore missing docstring in public modules
    "D101",  # Ignore missing docstring in public classes
    "F401",
    # FIXME: those are ignored for now, should be fixed eventually
    "E501",  # Ignore line too long
    "ERA001", # Found commented-out code
    "RET504",  # Unnecessary assignment before `return`
    "T201",  # `print` found"
    "SIM105",  # Use `contextlib.suppress`
    "S110",  # `try`-`except`-`pass` detected, consider logging the exception
    "A002",  # Function argument shadowing a Python builtin
    "E701",  # Multiple statements on one line (colon)
    "E741",  # Ambiguous variable name
]
[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = [
    "F401",
    "D400",
    "D205",
]
"docs/source/conf.py" = [
    "A001", # Variable `copyright` is shadowing a Python builtin

]
[tool.ruff.lint.pydocstyle]
convention = "pep257"
