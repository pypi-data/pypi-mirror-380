# search-and-replace.yml

apps:
  - blog
  - events
  - forms
  - content_manager
  - config

# Named scopes (rules can reference these by name)
scopes:
  migrations: "**/migrations/**"
  templates: "**/templates/**"
  all: "**/*"

# File extensions considered "text" (configurable)
text_extensions:
  - .py
  - .html
  - .htm
  - .txt
  - .md
  - .csv
  - .json
  - .yaml
  - .yml
  - .po
  - .ini
  - .cfg
  - .rst
  - .xml
  - .js
  - .ts
  - .css
  - .scss

# Rules. Each rule may use:
#  - scope: reference to a named scope (scopes.<name>)
#  - path_glob: an explicit git ls-files pattern (overrides scope if present)
#  - literal: true -> do a literal string replace (no regex)
#  - search & replace are strings
rules:
  # ---------- Generic patterns (expanded per app) ----------
  - search: 'to="{app}\.'
    replace: 'to="sites_faciles_{app}.'
    scope: migrations

  - search: 'through="{app}\.'
    replace: 'through="sites_faciles_{app}.'
    scope: migrations

  - search: 'app_name="{app}'
    replace: 'app_name="sites_faciles_{app}'
    scope: migrations

  - search: 'apps\.get_model\(\"{app}\"'
    replace: 'apps.get_model("sites_faciles_{app}"'
    scope: migrations

  - search: '\"{app}"'
    replace: '"sites_faciles_{app}"'
    filter: 'replaces = \[(.*?)\]'
    scope: migrations

  - search: '\"{app}"'
    replace: '"sites_faciles_{app}"'
    filter: 'dependencies = \[(.*?)\]'
    scope: migrations

  - search: '"page_type": \["{app}'
    replace: '"page_type": ["sites_faciles_{app}'
    scope: migrations

  - search: 'from {app}\.'
    replace: "from sites_faciles.{app}."
    scope: all

  - search: 'template="{app}/'
    replace: 'template="sites_faciles_{app}/'
    scope: all

  - search: 'include\ "{app}/'
    replace: 'include "sites_faciles_{app}/'
    scope: templates

  - search: 'template = \("{app}'
    replace: 'template = ("sites_faciles_{app}'
    scope: all

  - search: 'template = "{app}/'
    replace: 'template = "sites_faciles_{app}/'
    scope: all

  - search: 'template_name = "{app}/'
    replace: 'template_name = "sites_faciles_{app}/'
    scope: all

  - search: '"template": "{app}/'
    replace: '"template": "sites_faciles_{app}/'
    scope: all

  - search: '\ settings.{app}'
    replace: " settings.sites_faciles_{app}"
    scope: all

  - search: '"{app}\.blocks'
    replace: '"sites_faciles.{app}.blocks'
    scope: migrations

  - search: "import {app}"
    replace: "import sites_faciles.{app}"
    scope: migrations

  # ---------- Special-case overrides ----------
  - search: 'content_manager\.models\.MonospaceField'
    replace: "sites_faciles.content_manager.models.MonospaceField"
    scope: migrations

  - search: " content_manager.blocks.IconPickerBlock"
    replace: " sites_faciles.content_manager.blocks.IconPickerBlock"
    scope: migrations
    literal: true

  - search: '"content_manager.utils.'
    replace: '"sites_faciles.content_manager.utils.'
    scope: all
    literal: true

  - search: "content_manager.models.sites_faciles.content_manager"
    replace: "sites_faciles_content_manager.models.sites_faciles.content_manager"
    scope: all
    literal: true

  - search: '"blog.Person"'
    replace: '"sites_faciles_blog.Person"'
    scope: all
    literal: true

  - search: '"blog.Category"'
    replace: '"sites_faciles_blog.Category"'
    scope: all
    literal: true

  - search: '"blog.Organization"'
    replace: '"sites_faciles_blog.Organization"'
    scope: all
    literal: true

  - search: '"blog.BlogEntryPage"'
    replace: '"sites_faciles_blog.BlogEntryPage"'
    scope: all
    literal: true

  - search: '"blog.BlogIndexPage"'
    replace: '"sites_faciles_blog.BlogIndexPage"'
    scope: all
    literal: true

  - search: '"events.EventEntryPage"'
    replace: '"sites_faciles_events.EventEntryPage"'
    scope: all
    literal: true

  - search: '"events.EventsIndexPage"'
    replace: '"sites_faciles_events.EventsIndexPage"'
    scope: all
    literal: true

  - search: '"content_manager.MegaMenu'
    replace: '"sites_faciles_content_manager.MegaMenu'
    path_glob: "**/models.py"
    literal: true

  - search: '"content_manager.ContentPage"'
    replace: '"sites_faciles_content_manager.ContentPage"'
    scope: all
    literal: true

  - search: '"content_manager.Tag"'
    replace: '"sites_faciles_content_manager.Tag"'
    scope: all
    literal: true
