[project]
name = "augint-org"
version = "0.1.0"
description = "CLI tool for managing AWS Organization accounts with Control Tower"
authors = [
    {name = "Samuel Vange", email = "sam@augmentingintegrations.com"}
]
readme = "README.md"
requires-python = ">=3.12,<4.0"
license = { file = "LICENSE" }
keywords = ["aws", "control-tower", "organizations", "sso", "automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: System Administrators",
    "Topic :: System :: Systems Administration",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
packages = [
    { include = "ai_org", from = "src" },
]
dependencies = [
    "boto3>=1.34",
    "click>=8.1",
    "pyyaml>=6.0",
    "python-dotenv>=1.0",
    "rich>=13.7",
]

[project.scripts]
ai-org = "ai_org.cli:cli"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
augint-github = "^1.3.1"
pytest = "^8.3.0"
pytest-click = "^1.1.0"
pytest-mock = "^3.14.0"
mypy = "^1.11.0"
ruff = "^0.7.0"
pre-commit = "^4.0.0"

[tool.ruff]
line-length = 100
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "S", "B", "A", "C4", "DTZ", "T10", "ISC", "ICN", "PIE", "PT", "RET", "SIM", "ARG", "PTH", "ERA", "PGH", "PL", "TRY", "RUF"]
ignore = ["S101", "PLR0913", "TRY003", "B008"]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "boto3.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "-v --tb=short"
testpaths = ["tests"]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
fail_under = 80
show_missing = true
