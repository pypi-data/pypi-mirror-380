

class Vec2i8:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec2i8: ...

    def is_zero(self) -> bool: ...

class Vec2i16:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec2i16: ...

    def is_zero(self) -> bool: ...

class Vec2i32:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec2i32: ...

    def is_zero(self) -> bool: ...

class Vec2i64:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec2i64: ...

    def is_zero(self) -> bool: ...

class Vec2ui8:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec2ui8: ...

    def is_zero(self) -> bool: ...

class Vec2ui16:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec2ui16: ...

    def is_zero(self) -> bool: ...

class Vec2ui32:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec2ui32: ...

    def is_zero(self) -> bool: ...

class Vec2ui64:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec2ui64: ...

    def is_zero(self) -> bool: ...

class Vec2f32:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: float, /) -> None: ...

    def __getitem__(self, arg: int, /) -> float: ...

    @staticmethod
    def zero() -> Vec2f32: ...

    def is_zero(self) -> bool: ...

class Vec2f64:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: float, /) -> None: ...

    def __getitem__(self, arg: int, /) -> float: ...

    @staticmethod
    def zero() -> Vec2f64: ...

    def is_zero(self) -> bool: ...

class Vec3i8:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec3i8: ...

    def is_zero(self) -> bool: ...

class Vec3i16:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec3i16: ...

    def is_zero(self) -> bool: ...

class Vec3i32:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec3i32: ...

    def is_zero(self) -> bool: ...

class Vec3i64:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec3i64: ...

    def is_zero(self) -> bool: ...

class Vec3ui8:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec3ui8: ...

    def is_zero(self) -> bool: ...

class Vec3ui16:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec3ui16: ...

    def is_zero(self) -> bool: ...

class Vec3ui32:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec3ui32: ...

    def is_zero(self) -> bool: ...

class Vec3ui64:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec3ui64: ...

    def is_zero(self) -> bool: ...

class Vec3f32:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: float, /) -> None: ...

    def __getitem__(self, arg: int, /) -> float: ...

    @staticmethod
    def zero() -> Vec3f32: ...

    def is_zero(self) -> bool: ...

class Vec3f64:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: float, /) -> None: ...

    def __getitem__(self, arg: int, /) -> float: ...

    @staticmethod
    def zero() -> Vec3f64: ...

    def is_zero(self) -> bool: ...

class Vec4i8:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec4i8: ...

    def is_zero(self) -> bool: ...

class Vec4i16:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec4i16: ...

    def is_zero(self) -> bool: ...

class Vec4i32:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec4i32: ...

    def is_zero(self) -> bool: ...

class Vec4i64:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec4i64: ...

    def is_zero(self) -> bool: ...

class Vec4ui8:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec4ui8: ...

    def is_zero(self) -> bool: ...

class Vec4ui16:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec4ui16: ...

    def is_zero(self) -> bool: ...

class Vec4ui32:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec4ui32: ...

    def is_zero(self) -> bool: ...

class Vec4ui64:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: int, /) -> None: ...

    def __getitem__(self, arg: int, /) -> int: ...

    @staticmethod
    def zero() -> Vec4ui64: ...

    def is_zero(self) -> bool: ...

class Vec4f32:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: float, /) -> None: ...

    def __getitem__(self, arg: int, /) -> float: ...

    @staticmethod
    def zero() -> Vec4f32: ...

    def is_zero(self) -> bool: ...

class Vec4f64:
    __init__: wrapper_descriptor = ...

    def __len__(self) -> int: ...

    def __setitem__(self, arg0: int, arg1: float, /) -> None: ...

    def __getitem__(self, arg: int, /) -> float: ...

    @staticmethod
    def zero() -> Vec4f64: ...

    def is_zero(self) -> bool: ...
