import threading
from _typeshed import Incomplete
from minjiang_host_client.base.channel import Channel as Channel
from minjiang_host_client.base.server import Server as Server
from minjiang_host_client.utils.device_manager import DeviceManager as DeviceManager

class MainServer(Server):
    server_host: Incomplete
    server_port: int
    group_name: Incomplete
    sock: Incomplete
    dev_mgr: Incomplete
    token: Incomplete
    thread: threading.Thread | None
    def __init__(self, name: str, group_name: str, in_chl: Channel = None, out_chl: Channel = None) -> None: ...
    def extract_ip(self, input_str: str): ...
    def process(self, data) -> None: ...
    def finished_starting(self) -> None: ...
    def connect(self) -> bool: ...
    def process_command(self, command: dict): ...
    def handle_heartbeat(self, payload: dict) -> dict: ...
    def handle_scan(self, payload: dict) -> dict: ...
    def handle_add_device(self, payload: dict) -> dict: ...
    def handle_delete_device(self, payload: dict) -> dict: ...
    def handle_update_device(self, payload: dict) -> dict: ...
    def handle_query(self, payload: dict) -> dict: ...
    def handle_snapshot(self, payload: dict) -> dict: ...
    def handle_get_channel_mapping(self, payload: dict) -> dict: ...
    def handle_select_devices(self, payload: dict) -> dict: ...
    def handle_get_parameters(self, payload: dict) -> dict: ...
    def handle_client_host_status(self, payload: dict) -> dict: ...
    def shutdown(self) -> None: ...
