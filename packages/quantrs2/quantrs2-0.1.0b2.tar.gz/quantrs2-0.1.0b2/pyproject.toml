[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "quantrs2"
version = "0.1.0b2"
description = "High-performance quantum computing framework with ML, error mitigation, and annealing capabilities"
authors = [
    {name = "QuantRS2 Contributors (Team KitaSan) ", email = "info@kitasan.io"}
]
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT/Apache-2.0"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Rust",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "License :: OSI Approved :: Apache Software License",
]
dependencies = [
    "numpy>=1.20.0",
    "matplotlib>=3.3.0",
    "ipython>=7.0.0",
    "psutil>=5.8.0",
]

[project.urls]
Homepage = "https://github.com/cool-japan/quantrs"
Repository = "https://github.com/cool-japan/quantrs"
Documentation = "https://pypi.org/project/quantrs2/"

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "PyYAML>=6.0",
    "black>=22.3.0",
    "flake8>=5.0.0",
    "isort>=5.10.0",
    "requests>=2.28.0",
    "redis>=4.0.0",
    "psycopg2-binary>=2.9.0",
    "cryptography>=40.0.0",
    "sqlalchemy>=2.0.0",
    "prometheus_client>=0.16.0",
]
ml = [
    "scikit-learn>=1.0.0",
    "scipy>=1.7.0",
]
gpu = [
    "tabulate>=0.8.0",
]

[tool.maturin]
# Basic features for extension module
features = ["pyo3/extension-module"]
# Include Python source modules
python-source = "python"
# Use simple binding mode
binding = "pyo3"
# Include these files in the package
include = ["LICENSE*", "README.md"]
# Make compatible with multiple Python versions
abi3 = true
abi3-py38 = true
# Set the correct module name to match the Python import
module-name = "quantrs2"
manifest-path = "py/Cargo.toml"

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
markers = [
    "asyncio: marks tests as requiring asyncio",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::FutureWarning",
]
