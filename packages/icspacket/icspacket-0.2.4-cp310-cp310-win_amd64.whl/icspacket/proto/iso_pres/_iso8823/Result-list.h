/*
 * Generated by asn1c-v0.9.27-1413-ge0c0052e-dirty for Python bindings (https://github.com/MatrixEditor/asn1c-bindings)
 * From ASN.1 module "ISO8823-PRESENTATION"
 */

#ifndef	_Result_list_H_
#define	_Result_list_H_


#include <asn_application.h>

/* Including external dependencies */
#include <asn_SEQUENCE_OF.h>
#include <Result.h>
#include <Transfer-syntax-name.h>
#include <NativeInteger.h>
#include <constr_SEQUENCE.h>
#include <constr_SEQUENCE_OF.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum Result_list__Member__provider_reason {
	Result_list__Member__provider_reason_reason_not_specified	= 0,
	Result_list__Member__provider_reason_abstract_syntax_not_supported	= 1,
	Result_list__Member__provider_reason_proposed_transfer_syntaxes_not_supported	= 2,
	Result_list__Member__provider_reason_local_limit_on_DCS_exceeded	= 3
} e_Result_list__Member__provider_reason;

/* Forward definitions */
typedef struct Result_list__Member {
	Result_t result;
	Transfer_syntax_name_t *transfer_syntax_name; /* OPTIONAL */
	long *provider_reason; /* OPTIONAL */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Result_list__Member;

/* Result-list */
typedef struct Result_list {
	A_SEQUENCE_OF(Result_list__Member) list;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Result_list_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_Result_list;
extern asn_SET_OF_specifics_t asn_SPC_Result_list_specs_1;
extern asn_TYPE_member_t asn_MBR_Result_list_1[1];

#ifdef __cplusplus
}
#endif

#endif	/* _Result_list_H_ */
#include <asn_internal.h>
