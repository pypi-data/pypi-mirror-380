/*
 * Generated by asn1c-v0.9.27-1413-ge0c0052e-dirty for Python bindings (https://github.com/MatrixEditor/asn1c-bindings)
 * From ASN.1 module "ISO-9506-MMS-1"
 */

#ifndef	_AlterEventConditionListMonitoring_Request_H_
#define	_AlterEventConditionListMonitoring_Request_H_


#include <asn_application.h>

/* Including external dependencies */
#include <ObjectName.h>
#include <BOOLEAN.h>
#include <NativeInteger.h>
#include <NULL.h>
#include <constr_CHOICE.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum AlterEventConditionListMonitoring_Request__priorityChange_PR {
	AlterEventConditionListMonitoring_Request__priorityChange_PR_NOTHING,	/* No components present */
	AlterEventConditionListMonitoring_Request__priorityChange_PR_priorityValue,
	AlterEventConditionListMonitoring_Request__priorityChange_PR_priorityReset
} AlterEventConditionListMonitoring_Request__priorityChange_PR;

/* AlterEventConditionListMonitoring-Request */
typedef struct AlterEventConditionListMonitoring_Request {
	ObjectName_t eventConditionListName;
	BOOLEAN_t enabled;
	struct AlterEventConditionListMonitoring_Request__priorityChange {
		AlterEventConditionListMonitoring_Request__priorityChange_PR present;
		union AlterEventConditionListMonitoring_Request__priorityChange_u {
			long priorityValue;
			NULL_t priorityReset;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *priorityChange;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} AlterEventConditionListMonitoring_Request_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_AlterEventConditionListMonitoring_Request;
extern asn_SEQUENCE_specifics_t asn_SPC_AlterEventConditionListMonitoring_Request_specs_1;
extern asn_TYPE_member_t asn_MBR_AlterEventConditionListMonitoring_Request_1[3];

#ifdef __cplusplus
}
#endif

#endif	/* _AlterEventConditionListMonitoring_Request_H_ */
#include <asn_internal.h>
