/*
 * Generated by asn1c-v0.9.27-1413-ge0c0052e-dirty for Python bindings (https://github.com/MatrixEditor/asn1c-bindings)
 * From ASN.1 module "ISO-9506-MMS-1"
 */

#ifndef	_AlternateAccess_H_
#define	_AlternateAccess_H_


#include <asn_application.h>

/* Including external dependencies */
#include <asn_SEQUENCE_OF.h>
#include <Identifier.h>
#include <constr_SEQUENCE.h>
#include <constr_CHOICE.h>
#include <constr_SEQUENCE_OF.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum AlternateAccess__Member_PR {
	AlternateAccess__Member_PR_NOTHING,	/* No components present */
	AlternateAccess__Member_PR_unnamed,
	AlternateAccess__Member_PR_named
} AlternateAccess__Member_PR;

/* Forward declarations */
struct AlternateAccessSelection;

/* Forward definitions */
typedef struct AlternateAccess__Member {
	AlternateAccess__Member_PR present;
	union AlternateAccess__Member_u {
		struct AlternateAccessSelection *unnamed;
		struct AlternateAccess__Member__named {
			Identifier_t componentName;
			struct AlternateAccessSelection *access;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} named;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} AlternateAccess__Member;

/* AlternateAccess */
typedef struct AlternateAccess {
	A_SEQUENCE_OF(AlternateAccess__Member) list;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} AlternateAccess_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_AlternateAccess;
extern asn_SET_OF_specifics_t asn_SPC_AlternateAccess_specs_1;
extern asn_TYPE_member_t asn_MBR_AlternateAccess_1[1];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include <AlternateAccessSelection.h>

#endif	/* _AlternateAccess_H_ */
#include <asn_internal.h>
