/*
 * Generated by asn1c-v0.9.27-1413-ge0c0052e-dirty for Python bindings (https://github.com/MatrixEditor/asn1c-bindings)
 * From ASN.1 module "ISO-9506-MMS-1"
 */

#ifndef	_EventNotification_H_
#define	_EventNotification_H_


#include <asn_application.h>

/* Including external dependencies */
#include <ObjectName.h>
#include <Severity.h>
#include <EC-State.h>
#include <EventTime.h>
#include <BOOLEAN.h>
#include <AlarmAckRule.h>
#include <ConfirmedServiceResponse.h>
#include <constr_SEQUENCE.h>
#include <Unsigned32.h>
#include <ServiceError.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum EventNotification__actionResult__successOrFailure_PR {
	EventNotification__actionResult__successOrFailure_PR_NOTHING,	/* No components present */
	EventNotification__actionResult__successOrFailure_PR_success,
	EventNotification__actionResult__successOrFailure_PR_failure
} EventNotification__actionResult__successOrFailure_PR;

/* Forward declarations */
struct Response_Detail;

/* EventNotification */
typedef struct EventNotification {
	ObjectName_t eventEnrollmentName;
	ObjectName_t eventConditionName;
	Severity_t severity;
	EC_State_t *currentState; /* OPTIONAL */
	EventTime_t transitionTime;
	BOOLEAN_t notificationLost; /* DEFAULT FALSE */
	AlarmAckRule_t *alarmAcknowledgmentRule; /* OPTIONAL */
	struct EventNotification__actionResult {
		ObjectName_t eventActionName;
		struct EventNotification__actionResult__successOrFailure {
			EventNotification__actionResult__successOrFailure_PR present;
			union EventNotification__actionResult__successOrFailure_u {
				struct EventNotification__actionResult__successOrFailure__success {
					ConfirmedServiceResponse_t confirmedServiceResponse;
					struct Response_Detail *cs_Response_Detail; /* OPTIONAL */
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} success;
				struct EventNotification__actionResult__successOrFailure__failure {
					Unsigned32_t *modifierPosition; /* OPTIONAL */
					ServiceError_t serviceError;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} failure;
			} choice;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} successOrFailure;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *actionResult;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} EventNotification_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_EventNotification;
extern asn_SEQUENCE_specifics_t asn_SPC_EventNotification_specs_1;
extern asn_TYPE_member_t asn_MBR_EventNotification_1[8];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include <Response-Detail.h>

#endif	/* _EventNotification_H_ */
#include <asn_internal.h>
