{% set port=port or 8081 %}
{% set port=port if port.split(':')|length >= 2 else '127.0.0.1:' + port %}
pid {{ working_dir }}/nginx.pid;
error_log {{ working_dir }}/error.log;
worker_processes  1;
daemon off;
events { worker_connections  1024; }
http {
    include /etc/nginx/mime.types;
    include {{ working_dir }}/sites-enabled/*;
    server_names_hash_max_size 512;
    server_names_hash_bucket_size 256;
    client_max_body_size 300M;
    index index.html;
    server_tokens off;
    log_format json_combined escape=json '{'
        '"timestamp": "$time_local",'
        '"client": "$remote_addr",'
        '"remote_user": "$remote_user",'
        '"request": "$request",'
        '"response_code": "$status",'
        '"body_sent": "$body_bytes_sent",'
        '"referer": "$http_referer",'
        '"agent": "$http_user_agent",'
        '"request_time": "$request_time",'
        '"response_time": "$upstream_response_time",'
        '"host": "$host",'
        '"request_length": "$request_length",'
        '"upstream_status": "$upstream_status"'
        '}';
    access_log {{ working_dir }}/access.log json_combined;
    error_log {{ working_dir }}/error.log;
    client_body_temp_path {{ working_dir }};
    fastcgi_temp_path {{ working_dir }};

    gzip on;
    gzip_types text/css text/plain application/xml application/json application/javascript;

    proxy_temp_path {{ working_dir }};
    proxy_read_timeout 600;
    proxy_connect_timeout 600;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;

    {% for site in sites %}
    server {
        listen {{ port }};
        server_name ~^{{ site.domain }}[-.].*$;
        location / { proxy_pass http://127.0.0.1:{{ site.port }}; }
        location /longpolling { proxy_pass http://127.0.0.1:{{ site.lp_port }}; }
        location /websocket {
            send_timeout 200m;
            proxy_redirect off;
            proxy_pass http://127.0.0.1:{{ site.lp_port }};
            proxy_set_header Connection "upgrade";
            proxy_set_header Upgrade $http_upgrade;
        }

        error_log {{ working_dir }}/error.log;
    }
    {% endfor %}

    server {
        listen {{ port }} default_server;
        server_name "";
        return 404;
    }
}
