[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
python_version = "3.13"
show_error_codes = true
follow_imports = "silent"
ignore_missing_imports = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_configs = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = false
disallow_untyped_defs = true
no_implicit_optional = true
strict_equality = true
warn_return_any = true
warn_unused_ignores = true
warn_unreachable = true

[tool.ruff]
target-version = "py313"

lint.select = ["ALL"]

lint.ignore = [
    "ANN401",   # Dynamically typed expressions (typing.Any) are disallowed
    "COM812",   # Trailing comma missing
    "D203",     # 1 blank line required before class docstring
    "D213",     # Multi-line docstring summary should start at the second line
    "EM101",    # Exception must not use a string literal, assign to variable first
    "EM102",    # Exception must not use an f-string literal, assign to variable first
    "ISC001",   # Single line implicit string concatenation
    "TRY003",   # Avoid specifying long messages outside the exception class
    "FBT001",   # Boolean-typed positional argument in function definition
    "TRY400",   # Use `logging.exception` instead of `logging.error`
    "S311",     # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S105",     # Possible hardcoded password: "password"
    "S106",     # Possible hardcoded password: "password"
    "ASYNC230", # Async functions should not open files with blocking methods like `open`
    "PLR2004",  # Magic value used in comparison
    "PTH123",   # `open()` should be replaced by `Path.open()`
    "S101",     # Use of `assert` detected
    "SLF001",   # Private member accessed
    ]
"example.py" = [
    "S105",     # Possible hardcoded password: "password"
    "S106",     # Possible hardcoded password: "password"
    "SLF001",   # Private member accessed
    "T201",     # `print` found
    "PLR0912",  # Too many branches (20 > 12)
    "E501",     # Line too long
    "C901",     # `main` is too complex
    "PLR0915",  # Too many statements
]

[tool.ruff.lint.mccabe]
max-complexity = 25

[tool.coverage.run]
source = ["homecom_alt"]
