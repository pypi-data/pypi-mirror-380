[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "versioningit"]

[project]
name = "tuitorial"
description = "A tutorial presentation tool using Textual"
requires-python = ">=3.10"
dynamic = ["version"]
maintainers = [{ name = "Bas Nijholt", email = "bas@nijho.lt" }]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Environment :: Console :: Curses",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Education",
    "Topic :: Education :: Computer Aided Instruction (CAI)",
    "Topic :: Software Development",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dependencies = [
    "chardet>=5.2.0",
    "pyfiglet>=1.0.2",
    "pyyaml>=6.0.2",
    "rich",
    "textual",
    "textual-image[textual]>=0.7.0",
    "watchfiles>=1.0.3",
]

[dependency-groups]
dev = [
    "pytest-cov>=6.0.0",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.0",
    "pytest-timeout>=2.3.1",
    "ipython>=8.31.0",
    "ipykernel>=6.29.5",
    "versioningit>=3.1.2",
    "sphinx-autodoc-typehints>=3.0.0",
    "myst-nb>=1.1.2",
    "sphinx-togglebutton>=0.3.2",
    "sphinx-copybutton>=0.5.2",
    "sphinx-notfound-page>=1.0.4",
    "emoji>=2.14.0",
    "sphinx-book-theme>=1.1.3",
    "sphinxcontrib-video>=0.3.2",
]
webapp = [
    "panel>=1.5.5",
]
readme = [
    "markdown-code-runner>=2.1.0",
]

[project.urls]
homepage = "https://tuitorial.readthedocs.io/"
documentation = "https://tuitorial.readthedocs.io/"
repository = "https://github.com/basnijholt/tuitorial"

[project.readme]
content-type = "text/markdown"
file = "README.md"

[project.scripts]
tuitorial = "tuitorial:parse_yaml.cli"

[tool.hatch.version]
source = "versioningit"

[tool.hatch.build.targets.wheel]
packages = ["tuitorial"]

[tool.hatch.build.hooks.versioningit-onbuild]
build-file = "tuitorial/_version.py"
source-file = "tuitorial/_version.py"

[tool.versioningit]
default-version = "0.0.0"

[tool.versioningit.vcs]
method = "git"
match = ["v*"]
default-tag = "0.0.0"

[tool.versioningit.format]
dirty = "{version}.dev{distance}+{branch}.{vcs}{rev}.dirty"
distance = "{version}.dev{distance}+{branch}.{vcs}{rev}"
distance-dirty = "{version}.dev{distance}+{branch}.{vcs}{rev}.dirty"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "module"
addopts = """
    -vvv
    --cov=tuitorial
    --cov-report term
    --cov-report html
    --cov-report xml
    --cov-fail-under=35
    --asyncio-mode=strict
    --timeout 60
"""

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if TYPE_CHECKING",
    "if __name__ == .__main__.:",
]

[tool.coverage.run]
omit = []

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "T20",     # flake8-print
    "S101",    # Use of assert detected
    "PD901",   # df is a bad variable name. Be kinder to your future self.
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed in {name}
    "D402",    # First line should not be the function's signature
    "PLW0603", # Using the global statement to update `X` is discouraged
    "D401",    # First line of docstring should be in imperative mood
    "SLF001",  # Private member accessed
    "S603",    # `subprocess` call: check for execution of untrusted input
    "S607",    # Starting a process with a partial executable path
    "PLR0913", # Too many arguments to function call (N > 5)
    "TD002",   # Missing author in TODO; try: `# TODO(<author_name>): ...`
    "TD003",   # Missing issue link on the line following this TODO
    "FIX002",  # Line contains TODO"
    "E501",    # Line too long
    "D107",    # Missing docstring in `__init__`
    "B905",    # `zip()` without an explicit `strict=` parameter
    "E741",    # Do not use variables named `l`, `O`, or `I`
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["SLF001", "ANN", "D", "PLR2004", "ARG001"]
"tests/test_examples.py" = ["E501"]
".github/*" = ["INP001"]
"examples/*" = ["INP001"]
"example.ipynb" = [
    "D101",
    "D103",
    "DTZ005",
    "PLR2004",
    "ARG001",
    "ANN001",
    "ANN201",
    "NPY002",
    "RET504",
]

[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.mypy]
python_version = "3.10"
