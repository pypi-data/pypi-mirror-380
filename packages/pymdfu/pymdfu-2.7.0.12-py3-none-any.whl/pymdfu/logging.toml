version = 1
disable_existing_loggers = false

[formatters.timestamped]
format = "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

[formatters.detailed]
format = "%(name)s - %(levelname)s - %(message)s"

[formatters.simple_annotated]
format = "%(levelname)s - %(message)s"

[formatters.simple]
format = "%(message)s"

[filters.noinfo]
"()" = "pymdfu.logfilters.NoInfoFilter"

[filters.onlyinfo]
"()" = "pymdfu.logfilters.OnlyInfoFilter"

# Logging to the console is default to INFO with simple output for INFO level...
[handlers.console_only_info]
class = "pymdfu.logfilters.TqdmLoggingHandler"
level = "INFO"
formatter = "simple"
filters = [ "onlyinfo" ]
stream = "ext://sys.stdout"

# ...and simple annotated output for all levels except INFO
[handlers.console_not_info]
class = "pymdfu.logfilters.TqdmLoggingHandler"
level = "INFO"
formatter = "simple_annotated"
filters = [ "noinfo" ]
stream = "ext://sys.stdout"

# More detailed handler to be used when user request DEBUG level logging
[handlers.console_detailed]
class = "pymdfu.logfilters.TqdmLoggingHandler"
level = "DEBUG"
formatter = "detailed"
stream = "ext://sys.stdout"


# Logging debug output to file
# Handler disabled by default - for reference only
#[debug_file_handler]
#class = "logging.FileHandler"
#level = "DEBUG"
#formatter = "timestamped"
## File path will be user log directory for this application
#filename = "debug.log"
#encoding = "utf8"

# Logging errors to file
# Handler disabled by default - for reference only
#[debug_file_handler.error_file_handler]
#class = "logging.handlers.RotatingFileHandler"
#level = "ERROR"
#formatter = "timestamped"
## File path will be user log directory for this application
#filename = "errors.log"
#maxBytes = 10_485_760
#backupCount = 20
#encoding = "utf8"

[root]
level = "WARNING"
handlers = [ "console_only_info", "console_not_info" ]
