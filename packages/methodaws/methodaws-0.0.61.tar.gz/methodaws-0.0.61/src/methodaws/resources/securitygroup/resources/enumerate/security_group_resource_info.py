# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
import typing
from ....common.resources.resources.vpc_reference import VpcReference
from .rule_details import RuleDetails
from ....common.resources.resources.ec_2_instance_reference import Ec2InstanceReference
import pydantic
from ....common.resources.resources.rds_instance_reference import RdsInstanceReference
from ....common.resources.resources.load_balancer_reference import LoadBalancerReference
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class SecurityGroupResourceInfo(UniversalBaseModel):
    vpc: typing.Optional[VpcReference] = None
    rules: typing.Optional[typing.List[RuleDetails]] = None
    ec_2_instances: typing.Optional[typing.List[Ec2InstanceReference]] = pydantic.Field(
        alias="ec2Instances", default=None
    )
    rds_instances: typing.Optional[typing.List[RdsInstanceReference]] = pydantic.Field(
        alias="rdsInstances", default=None
    )
    load_balancers: typing.Optional[typing.List[LoadBalancerReference]] = pydantic.Field(
        alias="loadBalancers", default=None
    )

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
