# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
from .cloud_front_resource_type import CloudFrontResourceType
import pydantic
import typing
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class CloudFrontDistributionOriginConfigurationInfo(UniversalBaseModel):
    resource_type: CloudFrontResourceType = pydantic.Field(alias="resourceType")
    path: typing.Optional[str] = None
    custom_headers: typing.Optional[typing.List[str]] = pydantic.Field(alias="customHeaders", default=None)
    connection_attempts: typing.Optional[int] = pydantic.Field(alias="connectionAttempts", default=None)
    connection_timeout: typing.Optional[int] = pydantic.Field(alias="connectionTimeout", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
