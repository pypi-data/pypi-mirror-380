# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
import datetime as dt
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class BackupConfig(UniversalBaseModel):
    backup_retention_period: typing.Optional[int] = pydantic.Field(alias="backupRetentionPeriod", default=None)
    preferred_backup_window: typing.Optional[str] = pydantic.Field(alias="preferredBackupWindow", default=None)
    preferred_maintenance_window: typing.Optional[str] = pydantic.Field(
        alias="preferredMaintenanceWindow", default=None
    )
    copy_tags_to_snapshot: typing.Optional[bool] = pydantic.Field(alias="copyTagsToSnapshot", default=None)
    latest_restorable_time: typing.Optional[dt.datetime] = pydantic.Field(alias="latestRestorableTime", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
