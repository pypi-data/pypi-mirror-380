# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class AvailabilityZone(UniversalBaseModel):
    zone_id: typing.Optional[str] = pydantic.Field(alias="zoneId", default=None)
    zone_name: typing.Optional[str] = pydantic.Field(alias="zoneName", default=None)
    network_border_group: typing.Optional[str] = pydantic.Field(alias="networkBorderGroup", default=None)
    parent_zone_id: typing.Optional[str] = pydantic.Field(alias="parentZoneId", default=None)
    parent_zone_name: typing.Optional[str] = pydantic.Field(alias="parentZoneName", default=None)
    group_name: typing.Optional[str] = pydantic.Field(alias="groupName", default=None)
    state: typing.Optional[str] = None
    opt_in_status: typing.Optional[str] = pydantic.Field(alias="optInStatus", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
