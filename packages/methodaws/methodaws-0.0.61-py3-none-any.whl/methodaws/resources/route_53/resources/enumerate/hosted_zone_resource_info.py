# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
import typing
from .resource_record_set import ResourceRecordSet
import pydantic
from ....common.resources.resources.load_balancer_reference import LoadBalancerReference
from ....common.resources.resources.cloud_front_distribution_reference import CloudFrontDistributionReference
from ....common.resources.resources.s_3_bucket_reference import S3BucketReference
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class HostedZoneResourceInfo(UniversalBaseModel):
    record_sets: typing.List[ResourceRecordSet] = pydantic.Field(alias="recordSets")
    load_balancers: typing.Optional[typing.List[LoadBalancerReference]] = pydantic.Field(
        alias="loadBalancers", default=None
    )
    cloud_front_distributions: typing.Optional[typing.List[CloudFrontDistributionReference]] = pydantic.Field(
        alias="cloudFrontDistributions", default=None
    )
    s_3_buckets: typing.Optional[typing.List[S3BucketReference]] = pydantic.Field(alias="s3Buckets", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
