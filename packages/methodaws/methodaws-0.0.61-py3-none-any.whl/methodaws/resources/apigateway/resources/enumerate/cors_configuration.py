# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class CorsConfiguration(UniversalBaseModel):
    allow_credentials: typing.Optional[bool] = pydantic.Field(alias="allowCredentials", default=None)
    allow_headers: typing.Optional[typing.List[str]] = pydantic.Field(alias="allowHeaders", default=None)
    allow_methods: typing.Optional[typing.List[str]] = pydantic.Field(alias="allowMethods", default=None)
    allow_origins: typing.Optional[typing.List[str]] = pydantic.Field(alias="allowOrigins", default=None)
    expose_headers: typing.Optional[typing.List[str]] = pydantic.Field(alias="exposeHeaders", default=None)
    max_age: typing.Optional[int] = pydantic.Field(alias="maxAge", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
