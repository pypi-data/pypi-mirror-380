# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class StorageConfig(UniversalBaseModel):
    allocated_storage: typing.Optional[int] = pydantic.Field(alias="allocatedStorage", default=None)
    max_allocated_storage: typing.Optional[int] = pydantic.Field(alias="maxAllocatedStorage", default=None)
    storage_type: typing.Optional[str] = pydantic.Field(alias="storageType", default=None)
    storage_encrypted: typing.Optional[bool] = pydantic.Field(alias="storageEncrypted", default=None)
    storage_throughput: typing.Optional[int] = pydantic.Field(alias="storageThroughput", default=None)
    iops: typing.Optional[int] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
