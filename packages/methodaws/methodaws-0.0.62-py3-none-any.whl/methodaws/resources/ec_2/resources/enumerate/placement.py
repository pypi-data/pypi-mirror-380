# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class Placement(UniversalBaseModel):
    availability_zone: typing.Optional[str] = pydantic.Field(alias="availabilityZone", default=None)
    affinity: typing.Optional[str] = None
    group_name: typing.Optional[str] = pydantic.Field(alias="groupName", default=None)
    partition_number: typing.Optional[int] = pydantic.Field(alias="partitionNumber", default=None)
    host_id: typing.Optional[str] = pydantic.Field(alias="hostId", default=None)
    tenancy: typing.Optional[str] = None
    spread_domain: typing.Optional[str] = pydantic.Field(alias="spreadDomain", default=None)
    host_resource_group_arn: typing.Optional[str] = pydantic.Field(alias="hostResourceGroupArn", default=None)
    group_id: typing.Optional[str] = pydantic.Field(alias="groupId", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
