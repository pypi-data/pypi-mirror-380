# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
from .permission_direction import PermissionDirection
from .rule_peer_info import RulePeerInfo
import typing
import pydantic
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class RuleConfigurationInfo(UniversalBaseModel):
    direction: PermissionDirection
    peer: RulePeerInfo
    from_port: typing.Optional[int] = pydantic.Field(alias="fromPort", default=None)
    to_port: typing.Optional[int] = pydantic.Field(alias="toPort", default=None)
    ip_protocol: typing.Optional[str] = pydantic.Field(alias="ipProtocol", default=None)
    description: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
