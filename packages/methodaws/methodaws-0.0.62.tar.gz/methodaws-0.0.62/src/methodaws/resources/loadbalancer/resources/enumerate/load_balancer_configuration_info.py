# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
from .load_balancer_type import LoadBalancerType
import pydantic
import typing
import datetime as dt
from .load_balancer_state import LoadBalancerState
from .ip_address_type import IpAddressType
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class LoadBalancerConfigurationInfo(UniversalBaseModel):
    load_balancer_type: LoadBalancerType = pydantic.Field(alias="loadBalancerType")
    dns_name: typing.Optional[str] = pydantic.Field(alias="dnsName", default=None)
    created_time: typing.Optional[dt.datetime] = pydantic.Field(alias="createdTime", default=None)
    hosted_zone_id: typing.Optional[str] = pydantic.Field(alias="hostedZoneId", default=None)
    state: typing.Optional[LoadBalancerState] = None
    ip_address_type: typing.Optional[IpAddressType] = pydantic.Field(alias="ipAddressType", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
