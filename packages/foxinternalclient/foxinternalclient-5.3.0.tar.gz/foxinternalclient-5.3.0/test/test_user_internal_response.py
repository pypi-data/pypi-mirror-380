# coding: utf-8

"""
    Fox API

     Warning: Please add a custom user agent header to your requests. This would help us fighting against DDoS attacks in future, while keeping your application's access to the API. In future, this may be a mandatory requirement.  To reduce the system load, the API endpoints are rate limited. The default limit is 30 requests per minute. Contact admin@orangefox.tech if you need a higher limit.  The requests may be logged for analytics and development purposes. 

    The version of the OpenAPI document: 5.3.0
    Contact: admin@orangefox.tech
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from foxinternalclient.models.user_internal_response import UserInternalResponse

class TestUserInternalResponse(unittest.TestCase):
    """UserInternalResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserInternalResponse:
        """Test UserInternalResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserInternalResponse`
        """
        model = UserInternalResponse()
        if include_optional:
            return UserInternalResponse(
                id = '',
                username = '',
                name = '',
                freezed = True,
                roles = [
                    ''
                    ],
                telegram = foxinternalclient.models.user_telegram.UserTelegram(
                    id = 56, ),
                gitlab = foxinternalclient.models.user_gitlab.UserGitlab(
                    id = 56, ),
                mail = foxinternalclient.models.user_mail.UserMail(
                    username = '', ),
                admin_notes = '',
                maintained_devices = [
                    foxinternalclient.models.short_device_response.ShortDeviceResponse(
                        codename = '', 
                        model_name = '', 
                        oem_name = '', 
                        id = '', 
                        codenames = [
                            ''
                            ], 
                        model_names = [
                            ''
                            ], 
                        supported = True, 
                        full_name = '', 
                        url = '', )
                    ]
            )
        else:
            return UserInternalResponse(
                id = '',
                username = '',
                name = '',
                freezed = True,
                roles = [
                    ''
                    ],
                maintained_devices = [
                    foxinternalclient.models.short_device_response.ShortDeviceResponse(
                        codename = '', 
                        model_name = '', 
                        oem_name = '', 
                        id = '', 
                        codenames = [
                            ''
                            ], 
                        model_names = [
                            ''
                            ], 
                        supported = True, 
                        full_name = '', 
                        url = '', )
                    ],
        )
        """

    def testUserInternalResponse(self):
        """Test UserInternalResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
