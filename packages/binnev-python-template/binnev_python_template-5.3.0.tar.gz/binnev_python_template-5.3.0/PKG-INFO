Metadata-Version: 2.4
Name: binnev-python-template
Version: 5.3.0
Summary: Add your description here
Author-email: Robin Neville <robin.m.neville@gmail.com>
License-Expression: MIT
Project-URL: Homepage, https://github.com/binnev/python-template
Requires-Python: >=3.13
Description-Content-Type: text/markdown
Requires-Dist: fastapi>=0.115.12
Requires-Dist: httpx>=0.28.1
Requires-Dist: typer>=0.15.4
Requires-Dist: uvicorn>=0.34.2
Provides-Extra: dev
Requires-Dist: pytest>=8.3.5; extra == "dev"
Requires-Dist: pytest-asyncio>=1.0.0; extra == "dev"
Requires-Dist: pytest-dotenv>=0.5.2; extra == "dev"
Requires-Dist: pytest-watcher>=0.4.3; extra == "dev"
Requires-Dist: pytest-cov>=6.1.1; extra == "dev"
Requires-Dist: pytest-xdist>=3.6.1; extra == "dev"
Requires-Dist: pytest-sugar>=1.0.0; extra == "dev"
Requires-Dist: pytest-better-parametrize>=0.2.0; extra == "dev"
Requires-Dist: coverage>=7.8.0; extra == "dev"
Requires-Dist: ruff>=0.11.10; extra == "dev"
Requires-Dist: mypy>=1.15.0; extra == "dev"
Requires-Dist: mkdocs>=1.6.1; extra == "dev"
Requires-Dist: mkdocs-material>=9.6.14; extra == "dev"
Requires-Dist: mkdocstrings[python]>=0.29.1; extra == "dev"
Requires-Dist: mkdocs-mermaid2-plugin>=1.2.1; extra == "dev"
Requires-Dist: mike>=2.1.3; extra == "dev"
Requires-Dist: commitizen>=4.7.2; extra == "dev"
Requires-Dist: pre-commit>=4.2.0; extra == "dev"
Requires-Dist: build>=1.2.2.post1; extra == "dev"
Requires-Dist: twine>=6.1.0; extra == "dev"

# Python project template 
This project is a template for new python projects. It contains up-to-date tooling for tests, docs, versioning, and dependency management. 

In a nutshell, the idea is that you clone/fork this project, and then modify it to suit your new project. The [Getting Started](https://binnev.github.io/python-template/latest/tutorials/getting-started/) page provides a step-by-step guide. 

## Documentation
To view the documentation, run: 
```sh
mkdocs serve
```
and go to [localhost:8000](http://localhost:8000) in your browser.

The documentation provides a detailed guide to the project. It is structured using the [Di√°taxis framework](https://diataxis.fr/) to help you navigate and understand the project effectively. This framework consists of 4 categories:

1. **Tutorials**: Guides that teach a concept.
2. **How-To Guides**: Step-by-step instructions to achieve specific goals or tasks.
3. **Reference**: Technical descriptions of the project's components and APIs.
4. **Explanations**: In-depth discussions of concepts and motivations. 

