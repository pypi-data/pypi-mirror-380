[build-system]
requires = ["uv_build>=0.8.5,<0.9.0"]
build-backend = "uv_build"

[project]
name = "clustools"
version = "0.3.1"
description = "A lightweight Python package providing essential clustering utilities for clustering workflows."
authors = [
    {name = "Pablo Solís-Fernández", email = "psolsfer@gmail.com"}
]
readme = "README.md"
keywords = ["clustools"]
license = "BSD-3-Clause"
license-files = ["LICENSE"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13"
]
requires-python = ">=3.12,<3.14"
dependencies = [
    "faiss-cpu>=1.12.0",
    "numpy>=2.0.0",
    "pyauxlib>=0.13.0",
    "scikit-fuzzy>=0.5.0",
    "scikit-learn>=1.6",
    "scipy>=1.16.1",
]

[project.urls]
Homepage = "https://github.com/psolsfer/clustools"
Repository = "https://github.com/psolsfer/clustools"
Documentation = "https://clustools.readthedocs.io"
Issues = "https://github.com/psolsfer/clustools/issues"

[tool.uv]
default-groups = ["dev", "test", "docs"]

[dependency-groups]
dev = [
    "pip>=23",
    "invoke>=2.2",
    "wheel>=0.41.2",
    "watchdog>=3.0.0",
    "tox>=4.11",
    "tox-gh-actions<4,>=3",
    "tox-uv>1.20",
    "mkdocs>=1.5.3",
    "mkdocs-awesome-pages-plugin>=2.9.2",
    "mkdocs-include-markdown-plugin>=6.0",
    "mkdocs-material>=9.4.2",
    "mkdocs-material-extensions>=1.2",
    "mkdocstrings[python]>=0.23.0",
    "mypy>=1.6.0",
    "pytest>=7.4.2",
    "pytest-cov>=4.1.0",
    "coverage>=7.3.1",
    "prek>=0.1.6",
    "ruff>=0.8",
    "pip-audit>=2.9.0",
    "typeguard>=4.1.5",
    "commitizen>=3.10",
]
test = [
    "commitizen>=3.10",
    "coverage[toml]>=7.3.1",
    "mypy>=1.6.0",
    "prek>=0.1.6",
    "pytest>=7.4.2",
    "pytest-cov>=4.1.0",
    "pytest-clarity>=1.0.1",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.3.1",
    "ruff>=0.8",
    "pip-audit>=2.9.0",
    "typeguard>=4.1.5",
    "tox>=4.11",
    "tox-gh-actions<4,>=3",
    "tox-uv>1.20",
]
docs = [
    "mkdocs>=1.5.3",
    "mkdocs-awesome-pages-plugin>=2.9.2",
    "mkdocs-include-markdown-plugin>=6.0",
    "mkdocs-material>=9.4.2",
    "mkdocs-material-extensions>=1.2",
    "mkdocstrings[python]>=0.23.0",
]

[tool.commitizen]
bump_message = "bump(release): v$current_version → v$new_version"
tag_format = "v$version"
update_changelog_on_bump = true
version = "0.3.1"
version_files = [
    "pyproject.toml:version",
    "src/clustools/__init__.py:__version__"
]

[tool.mypy]
strict = true
disallow_subclassing_any = false
disallow_untyped_decorators = false
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true
mypy_path = "typings"

[tool.coverage.report]
fail_under = 80
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run]
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src/clustools"]

[tool.coverage.xml]
output = "reports/coverage.xml"

[tool.pytest.ini_options]
addopts = "--color=yes --doctest-modules --exitfirst --failed-first --strict-config --strict-markers --typeguard-packages=clustools --verbosity=2 --junitxml=reports/pytest.xml"
filterwarnings = ["error", "ignore::DeprecationWarning"]
testpaths = ["src/clustools", "tests"]
xfail_strict = true

[tool.ruff]
fix = true
line-length = 100

[tool.ruff.lint]
select = ["A", "ASYNC", "B", "BLE", "C4", "C90", "D", "DTZ", "E", "EM", "ERA", "F", "FLY", "G", "I", "ICN", "INP", "ISC", "N", "NPY", "PGH", "PIE", "PLC", "PLE", "PLR", "PLW", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "S", "SIM", "SLF", "T10", "T20", "TCH", "TID", "TRY", "UP", "W", "YTT"]
ignore = ["E501", "ISC001", "RET504", "S101"]
unfixable = ["ERA001", "F401", "F841", "T201", "T203"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
line-ending = "auto"
