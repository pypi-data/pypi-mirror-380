---
image: python:3.11

variables:
  # since we're not using merge request pipelines in this example,
  # we will configure the pre-commit job to run on branch pipelines only.
  # If you ARE using merge request pipelines, you can omit this section
    PRE_COMMIT_AUTO_FIX: '1'
    PRE_COMMIT_DEDUPLICATE_MR_AND_BRANCH: 'false'
    PRE_COMMIT_AUTO_FIX_BRANCH_ONLY: 'true'


before_script:
    - python --version
    - pip install .[dev,test]

# pre-commit autofix (https://gitlab.com/yesolutions/gitlab-ci-templates /
#                     https://stackoverflow.com/collectives/gitlab/articles/71270196/)
include:
    rules:
        - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    remote: https://gitlab.com/yesolutions/gitlab-ci-templates/raw/main/templates/pre-commit-autofix.yaml

stages:
    # - debug
    - pylint
    - pytest
    - pages
    - pypi

# print-all-env-vars-job:
#     stage: debug
#     script:
#         - echo "GitLab CI/CD | Print all environment variables"
#         - env

.pylint:
    script:
        - pylint --rcfile .pylintrc tcx2gpx/
        - pylint --rcfile .pylintrc tests/

pylint-3-10:
    extends: .pylint
    stage: pylint
    image: python:3.10
    allow_failure: true

pylint-3-11:
    extends: .pylint
    stage: pylint
    image: python:3.11
    allow_failure: true

pylint-3-12:
    extends: .pylint
    stage: pylint
    image: python:3.12
    allow_failure: true

.pytest:
    script:
        - python -m "pytest"

pytest-3-10:
    extends: .pytest
    stage: pytest
    image: python:3.10
    allow_failure: true

pytest-3-11:
    extends: .pytest
    stage: pytest
    image: python:3.11
#    coverage: /(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/

pytest-3-12:
    extends: .pytest
    stage: pytest
    image: python:3.12
    allow_failure: true

pages:
    stage: pages
    rules:
        - if: $CI_COMMIT_BRANCH == "master"
    script:
        - pip install .[docs]
        - cd docs
        - git fetch --tags
        - git tag -l
        - make html
        - mkdir ../public
        - mv _build/html/* ../public/
    artifacts:
        paths:
            - public


pypi:
    stage: pypi
    rules:
        - if: $CI_COMMIT_TAG
    script:
        - pip install .[pypi]
        - pip install build
        - python -m build
        - twine upload --non-interactive --repository pypi dist/*
