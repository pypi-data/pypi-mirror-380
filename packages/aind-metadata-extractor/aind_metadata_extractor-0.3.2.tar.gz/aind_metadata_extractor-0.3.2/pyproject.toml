[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "aind-metadata-extractor"
description = "Generated from aind-library-template"
license = {text = "MIT"}
requires-python = ">=3.10"
authors = [
    {name = "Allen Institute for Neural Dynamics"}
]
classifiers = [
    "Programming Language :: Python :: 3"
]
readme = "README.md"
dynamic = ["version"]

dependencies = [
    'pydantic',
    'pydantic-settings',
]

[project.optional-dependencies]
dev = [
    'black',
    'coverage',
    'flake8',
    'interrogate',
    'isort',
    'Sphinx',
    'furo'
]

smartspim = [
    'requests',
]

bergamo = [
    "scanimage-tiff-reader==1.4.1.4",
    "numpy == 1.26.4",
]

utils = [
    "numpy >= 1.26.4",
    "h5py >= 3.11.0",
    "scipy >= 1.11.0",
    "pandas >= 2.2.2",
]

mesoscope = [
    "aind-metadata-extractor[bergamo]",
    "aind-metadata-extractor[utils]",
    "pillow >= 10.4.0",
    "tifffile==2024.2.12",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "aind_metadata_extractor.__version__"}

[tool.black]
line-length = 120
target_version = ['py310']
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | dist
    | .conda
  )/
  | .gitignore
)
'''

[tool.coverage.run]
omit = ["*__init__*"]
# Use command-line --source flag for better control over what gets measured
source = ["aind_metadata_extractor", "tests"]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
    "^from .* import .*",
    "^import .*",
    "pragma: no cover"
]
fail_under = 100

[tool.isort]
line_length = 120
profile = "black"
skip = [".conda"]

[tool.interrogate]
exclude = ["setup.py", "docs", "build", ".conda"]
fail-under = 100
