[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "chacc-dependency-manager"
version = "1.1.1"
description = "Pip accelerator package. Intelligent, incremental dependency resolution and caching for pip environment based applications. It it meant to complement pip"
authors = [
    {name = "Jonas G Mwambimbi", email = "jonasgeorge1015@gmail.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
dependencies = [
    "pip-tools>=7.0.0"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Software Distribution",
    "Topic :: Software Development :: Build Tools",
    "Topic :: System :: Archiving :: Packaging",
]
keywords = ["dependency", "resolution", "pip", "packaging", "cache", "requirements"]

[project.urls]
Homepage = "https://github.com/Jonas1015/chacc-dependency-manager"
Repository = "https://github.com/Jonas1015/chacc-dependency-manager"
Documentation = "https://github.com/Jonas1015/chacc-dependency-manager/blob/main/README.md"
Issues = "https://github.com/Jonas1015/chacc-dependency-manager/issues"

[project.optional-dependencies]
full = [
    # Everything for production/development
    "pip-tools>=7.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=1.0.0",
    "twine>=4.0.0",
    "build>=1.0.0"
]
resolver = [
    # CLI interface for balanced usage
    "pip-tools>=7.0.0"
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=1.0.0",
    "twine>=4.0.0",
    "build>=1.0.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0"
]
lint = [
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=1.0.0"
]

[project.scripts]
chacc-dependency-manager = "chacc.cli:main"
chacc-dm = "chacc.cli:main"
cdm = "chacc.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["chacc"]
include-package-data = true

[tool.setuptools.package-data]
chacc = ["*.md"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "src.*",
]
ignore_errors = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["src/package"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]