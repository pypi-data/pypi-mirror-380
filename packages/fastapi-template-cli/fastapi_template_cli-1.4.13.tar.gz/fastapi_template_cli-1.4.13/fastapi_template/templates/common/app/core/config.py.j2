"""Application configuration."""

import secrets
from typing import Any, List, Optional, Union

from pydantic import AnyHttpUrl, EmailStr, field_validator
from pydantic_settings import BaseSettings


class Settings(BaseSettings):
    ENVIRONMENT: str = "development"
    DEBUG: bool = True
    ALGORITHM: str = "HS256"
    {% if project_type == "api" %}
    API_V1_STR: str = "/api/v1"
    {% endif %}
    SECRET_KEY: str = secrets.token_urlsafe(32)
    # 60 minutes * 24 hours * 8 days = 8 days
    ACCESS_TOKEN_EXPIRE_MINUTES: int = 60 * 24 * 8
    BACKEND_CORS_ORIGINS: List[AnyHttpUrl] = []

    @field_validator("BACKEND_CORS_ORIGINS", mode="before")
    @classmethod
    def assemble_cors_origins(cls, v: Union[str, List[str]]) -> Union[List[str], str]:
        if isinstance(v, str) and not v.startswith("["):
            return [i.strip() for i in v.split(",")]
        elif isinstance(v, (list, str)):
            return v
        raise ValueError(v)

    PROJECT_NAME: str = "{{ project_name }}"
    {% if description %}
    PROJECT_DESCRIPTION: str = "{{ description }}"
    {% else %}
    PROJECT_DESCRIPTION: str = "A FastAPI application"
    {% endif %}

    {% if orm_type == "sqlalchemy" %}
    DATABASE_URL: Optional[str] = None
    SYNC_DATABASE_URL: Optional[str] = None

    def model_post_init(self, __context: Any) -> None:
        """Set default DB URLs if missing."""
        if not self.DATABASE_URL:
            self.DATABASE_URL = (
                "sqlite+aiosqlite:///./app.db"
                if self.ENVIRONMENT == "development"
                else "postgresql+asyncpg://postgres:postgres@db:5432/{{ project_name }}"
            )
        if not self.SYNC_DATABASE_URL:
            self.SYNC_DATABASE_URL = (
                "sqlite:///./app.db"
                if self.ENVIRONMENT == "development"
                else "postgresql://postgres:postgres@db:5432/{{ project_name }}"
            )

    {% elif orm_type == "beanie" %}
    # MongoDB Configuration
    MONGO_USER: Optional[str] = "root"
    MONGO_PASSWORD: Optional[str] = "secret"
    MONGO_DB: Optional[str] = "{{ project_name }}"
    MONGODB_URL: str = "mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:27017/${MONGO_DB}?authSource=admin"
    {% endif %}

    SMTP_TLS: bool = True
    SMTP_PORT: Optional[int] = None
    SMTP_HOST: Optional[str] = None
    SMTP_USER: Optional[str] = None
    SMTP_PASSWORD: Optional[str] = None
    EMAILS_FROM_EMAIL: Optional[EmailStr] = "noreply@example.com"
    EMAILS_FROM_NAME: Optional[str] = "{{ project_name }}"

    FIRST_SUPERUSER: EmailStr = "admin@example.com"
    FIRST_SUPERUSER_PASSWORD: str = "admin"

    {% if cloudflare %}
    # Cloudflare
    CLOUDFLARE_API_TOKEN: str = "your_cloudflare_api_token"
    CLOUDFLARE_EMAIL: str = "your_email@example.com"
    {% endif %}

    {% if project_type == "fullstack" %}
    # Redis / Celery
    REDIS_URL: str = "redis://redis:6379"
    CELERY_BROKER_URL: str = "redis://redis:6379/0"
    CELERY_RESULT_BACKEND: str = "redis://redis:6379/0"
    {% endif %}

    model_config = {
        "env_file": ".env",
        "case_sensitive": True,
        "extra": "ignore",
    }


settings = Settings()
