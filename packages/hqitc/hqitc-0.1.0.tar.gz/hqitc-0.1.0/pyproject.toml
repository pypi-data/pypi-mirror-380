[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hqitc"
version = "0.1.0"
description = "Hybrid Quantum-Inspired Transform Codec - A novel image compression algorithm combining quantum-inspired encoding, attention mechanisms, and adaptive DCT transforms"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = [
    "image-compression", 
    "quantum-inspired", 
    "attention-mechanism", 
    "dct-transform", 
    "signal-processing",
    "computer-vision"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
]
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.17.0",
]
viz = [
    "matplotlib>=3.5.0",
    "pillow>=9.0.0",
]
docs = [
    "sphinx>=4.5.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.17.0",
]
all = [
    "hqitc[dev,viz,docs]"
]

[project.urls]
Homepage = "https://github.com/yourusername/hqitc"
Documentation = "https://hqitc.readthedocs.io/"
Repository = "https://github.com/yourusername/hqitc.git"
Issues = "https://github.com/yourusername/hqitc/issues"
Changelog = "https://github.com/yourusername/hqitc/blob/main/CHANGELOG.md"

[project.scripts]
hqitc = "hqitc.cli:main"

[tool.hatch.version]
path = "src/hqitc/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/hqitc"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/README.md",
    "/LICENSE",
]

# Testing configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Coverage configuration (use with: pytest --cov=hqitc)
# Requires: pip install pytest-cov

# Code formatting with Black
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# Import sorting with isort
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["hqitc"]
known_third_party = ["numpy", "scipy", "matplotlib", "PIL"]

# Type checking with mypy
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "scipy.*"
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Linting with flake8 (configuration in .flake8 file)
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
per-file-ignores = [
    "__init__.py:F401",
]

[dependency-groups]
dev = [
    "pytest>=8.4.2",
]
