Test MatGetInfo
Process   0: 36 72 36 1 0
GlobalMax  : 36 72 36 1 0
GlobalSum  : 36 72 36 1 0
Test MatIsSymmetric: 0
Test MatView
Mat Object: 1 MPI process
  type: is
  Mat Object: (is_) 1 MPI process
    type: seqaij
  row 0:   (0, 2.)    (1, -1.)    (11, -1.)   
  row 1:   (0, -2.)    (1, 4.)    (2, -2.)   
  row 2:   (1, -3.)    (2, 6.)    (3, -3.)   
  row 3:   (2, -4.)    (3, 8.)    (4, -4.)   
  row 4:   (3, -5.)    (4, 10.)    (5, -5.)   
  row 5:   (4, -6.)    (5, 12.)    (6, -6.)   
  row 6:   (5, -7.)    (6, 14.)    (7, -7.)   
  row 7:   (6, -8.)    (7, 16.)    (8, -8.)   
  row 8:   (7, -9.)    (8, 18.)    (9, -9.)   
  row 9:   (8, -10.)    (9, 20.)    (10, -10.)   
  row 10:   (9, -11.)    (10, 22.)    (11, -11.)   
  row 11:   (0, -12.)    (10, -12.)    (11, 24.)   
Mat Object: 1 MPI process
  type: seqaij
row 0: (0, 2.)  (1, -1.)  (11, -1.) 
row 1: (0, -2.)  (1, 4.)  (2, -2.) 
row 2: (1, -3.)  (2, 6.)  (3, -3.) 
row 3: (2, -4.)  (3, 8.)  (4, -4.) 
row 4: (3, -5.)  (4, 10.)  (5, -5.) 
row 5: (4, -6.)  (5, 12.)  (6, -6.) 
row 6: (5, -7.)  (6, 14.)  (7, -7.) 
row 7: (6, -8.)  (7, 16.)  (8, -8.) 
row 8: (7, -9.)  (8, 18.)  (9, -9.) 
row 9: (8, -10.)  (9, 20.)  (10, -10.) 
row 10: (9, -11.)  (10, 22.)  (11, -11.) 
row 11: (0, -12.)  (10, -12.)  (11, 24.) 
Test CheckMat
Test MatView on binary world
Test MatView on binary self
Test MatView on binary subcomm
Test MatLoad from world
Mat Object: 1 MPI process
  type: is
  rows=12, cols=12
  total: nonzeros=36, allocated nonzeros=36
  total number of mallocs used during MatSetValues calls=0
    Mat Object: 1 MPI process
      type: seqaij
      rows=12, cols=12, rbs=6, cbs=3
      total: nonzeros=36, allocated nonzeros=36
      total number of mallocs used during MatSetValues calls=0
        not using I-node routines
    ISLocalToGlobalMapping Object: 1 MPI process
      type not yet set
    [0] 0 0
    [0] 1 1
    [0] 2 2
    [0] 3 3
    [0] 4 4
    [0] 5 5
    [0] 6 6
    [0] 7 7
    [0] 8 8
    [0] 9 9
    [0] 10 10
    [0] 11 11
    ISLocalToGlobalMapping Object: 1 MPI process
      type not yet set
    [0] 0 0
    [0] 1 1
    [0] 2 2
    [0] 3 3
    [0] 4 4
    [0] 5 5
    [0] 6 6
    [0] 7 7
    [0] 8 8
    [0] 9 9
    [0] 10 10
    [0] 11 11
Test MatLoad from self
Mat Object: 1 MPI process
  type: is
  rows=12, cols=12
  total: nonzeros=36, allocated nonzeros=36
  total number of mallocs used during MatSetValues calls=0
    Mat Object: 1 MPI process
      type: seqaij
      rows=12, cols=12, rbs=6, cbs=3
      total: nonzeros=36, allocated nonzeros=36
      total number of mallocs used during MatSetValues calls=0
        not using I-node routines
    ISLocalToGlobalMapping Object: 1 MPI process
      type not yet set
    [0] 0 0
    [0] 1 1
    [0] 2 2
    [0] 3 3
    [0] 4 4
    [0] 5 5
    [0] 6 6
    [0] 7 7
    [0] 8 8
    [0] 9 9
    [0] 10 10
    [0] 11 11
    ISLocalToGlobalMapping Object: 1 MPI process
      type not yet set
    [0] 0 0
    [0] 1 1
    [0] 2 2
    [0] 3 3
    [0] 4 4
    [0] 5 5
    [0] 6 6
    [0] 7 7
    [0] 8 8
    [0] 9 9
    [0] 10 10
    [0] 11 11
Test MatLoad from subcomm
Mat Object: 1 MPI process
  type: is
  rows=12, cols=12
  total: nonzeros=36, allocated nonzeros=36
  total number of mallocs used during MatSetValues calls=0
    Mat Object: 1 MPI process
      type: seqaij
      rows=12, cols=12, rbs=6, cbs=3
      total: nonzeros=36, allocated nonzeros=36
      total number of mallocs used during MatSetValues calls=0
        not using I-node routines
    ISLocalToGlobalMapping Object: 1 MPI process
      type not yet set
    [0] 0 0
    [0] 1 1
    [0] 2 2
    [0] 3 3
    [0] 4 4
    [0] 5 5
    [0] 6 6
    [0] 7 7
    [0] 8 8
    [0] 9 9
    [0] 10 10
    [0] 11 11
    ISLocalToGlobalMapping Object: 1 MPI process
      type not yet set
    [0] 0 0
    [0] 1 1
    [0] 2 2
    [0] 3 3
    [0] 4 4
    [0] 5 5
    [0] 6 6
    [0] 7 7
    [0] 8 8
    [0] 9 9
    [0] 10 10
    [0] 11 11
Test subcomm MatLoad from world
Mat Object: 1 MPI process
  type: is
  rows=12, cols=12
  total: nonzeros=36, allocated nonzeros=36
  total number of mallocs used during MatSetValues calls=0
    Mat Object: 1 MPI process
      type: seqaij
      rows=12, cols=12, rbs=6, cbs=3
      total: nonzeros=36, allocated nonzeros=36
      total number of mallocs used during MatSetValues calls=0
        not using I-node routines
    ISLocalToGlobalMapping Object: 1 MPI process
      type not yet set
    [0] 0 0
    [0] 1 1
    [0] 2 2
    [0] 3 3
    [0] 4 4
    [0] 5 5
    [0] 6 6
    [0] 7 7
    [0] 8 8
    [0] 9 9
    [0] 10 10
    [0] 11 11
    ISLocalToGlobalMapping Object: 1 MPI process
      type not yet set
    [0] 0 0
    [0] 1 1
    [0] 2 2
    [0] 3 3
    [0] 4 4
    [0] 5 5
    [0] 6 6
    [0] 7 7
    [0] 8 8
    [0] 9 9
    [0] 10 10
    [0] 11 11
Test MatDuplicate and MatAXPY
Test MatConvert_IS_XAIJ
Test MatConvert_XAIJ_IS
Test MatConvert_IS_XAIJ special case (0 0, bs 1 1)
Test MatConvert_IS_XAIJ special case (0 0, bs 1 2)
Test MatConvert_IS_XAIJ special case (0 0, bs 1 3)
Test MatConvert_IS_XAIJ special case (0 0, bs 2 1)
Test MatConvert_IS_XAIJ special case (0 0, bs 2 2)
Test MatConvert_IS_XAIJ special case (0 0, bs 2 3)
Test MatConvert_IS_XAIJ special case (0 0, bs 3 1)
Test MatConvert_IS_XAIJ special case (0 0, bs 3 2)
Test MatConvert_IS_XAIJ special case (0 0, bs 3 3)
Test MatConvert_IS_XAIJ special case (0 1, bs 1 1)
Test MatConvert_IS_XAIJ special case (0 1, bs 1 2)
Test MatConvert_IS_XAIJ special case (0 1, bs 1 3)
Test MatConvert_IS_XAIJ special case (0 1, bs 2 1)
Test MatConvert_IS_XAIJ special case (0 1, bs 2 2)
Test MatConvert_IS_XAIJ special case (0 1, bs 2 3)
Test MatConvert_IS_XAIJ special case (0 1, bs 3 1)
Test MatConvert_IS_XAIJ special case (0 1, bs 3 2)
Test MatConvert_IS_XAIJ special case (0 1, bs 3 3)
Test MatConvert_IS_XAIJ special case (1 0, bs 1 1)
Test MatConvert_IS_XAIJ special case (1 0, bs 1 2)
Test MatConvert_IS_XAIJ special case (1 0, bs 1 3)
Test MatConvert_IS_XAIJ special case (1 0, bs 2 1)
Test MatConvert_IS_XAIJ special case (1 0, bs 2 2)
Test MatConvert_IS_XAIJ special case (1 0, bs 2 3)
Test MatConvert_IS_XAIJ special case (1 0, bs 3 1)
Test MatConvert_IS_XAIJ special case (1 0, bs 3 2)
Test MatConvert_IS_XAIJ special case (1 0, bs 3 3)
Test MatConvert_IS_XAIJ special case (1 1, bs 1 1)
Test MatConvert_IS_XAIJ special case (1 1, bs 1 2)
Test MatConvert_IS_XAIJ special case (1 1, bs 1 3)
Test MatConvert_IS_XAIJ special case (1 1, bs 2 1)
Test MatConvert_IS_XAIJ special case (1 1, bs 2 2)
Test MatConvert_IS_XAIJ special case (1 1, bs 2 3)
Test MatConvert_IS_XAIJ special case (1 1, bs 3 1)
Test MatConvert_IS_XAIJ special case (1 1, bs 3 2)
Test MatConvert_IS_XAIJ special case (1 1, bs 3 3)
Test MatDiagonalScale
Test MatPtAP
Test MatGetLocalSubMatrix
Test MatConvert_Nest_IS
Test MatCreateSubMatrix
Test MatCreateSubMatrices
Test MatDiagonalSet
Test MatShift
IS Object: 1 MPI process
  type: stride
Number of indices in (stride) set 1
0 0
Test MatZeroRows (diag nonzero)
Test MatZeroRowsColumns (diag nonzero)
Test MatMissingDiagonal
[0] [0,12) Missing 0, row -1 (diag nonzero)
Test MatIncreaseOverlap
IS Object: 1 MPI process
  type: general
Number of indices in set 12
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
11 11
IS Object: 1 MPI process
  type: general
Number of indices in set 12
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
11 11
IS Object: 1 MPI process
  type: general
Number of indices in set 10
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 9
8 10
9 11
IS Object: 1 MPI process
  type: general
Number of indices in set 10
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 9
8 10
9 11
IS Object: 1 MPI process
  type: stride
Number of indices in (stride) set 1
0 0
Test MatZeroRows (diag zero)
Test MatZeroRowsColumns (diag zero)
Test MatMissingDiagonal
[0] [0,12) Missing 1, row 0 (diag zero)
Test MatTranspose
Test MatISFixLocalEmpty
Test MatInvertBlockDiagonal blockdiag 12 0 0 1
Test MatInvertBlockDiagonal blockdiag 12 0 0 2
Test MatInvertBlockDiagonal blockdiag 12 0 0 3
Test MatInvertBlockDiagonal blockdiag 12 0 1 1
Test MatInvertBlockDiagonal blockdiag 12 0 1 2
Test MatInvertBlockDiagonal blockdiag 12 0 1 3
Test MatInvertBlockDiagonal blockdiag 12 0 2 1
Test MatInvertBlockDiagonal blockdiag 12 0 2 2
Test MatInvertBlockDiagonal blockdiag 12 0 2 3
Test MatInvertBlockDiagonal blockdiag 12 1 0 1
Test MatInvertBlockDiagonal blockdiag 12 1 0 2
Test MatInvertBlockDiagonal blockdiag 12 1 0 3
Test MatInvertBlockDiagonal blockdiag 12 1 1 1
Test MatInvertBlockDiagonal blockdiag 12 1 1 2
Test MatInvertBlockDiagonal blockdiag 12 1 1 3
Test MatInvertBlockDiagonal blockdiag 12 1 2 1
Test MatInvertBlockDiagonal blockdiag 12 1 2 2
Test MatInvertBlockDiagonal blockdiag 12 1 2 3
Test MatInvertBlockDiagonal blockdiag 12 2 0 1
Test MatInvertBlockDiagonal blockdiag 12 2 0 2
Test MatInvertBlockDiagonal blockdiag 12 2 0 3
Test MatInvertBlockDiagonal blockdiag 12 2 1 1
Test MatInvertBlockDiagonal blockdiag 12 2 1 2
Test MatInvertBlockDiagonal blockdiag 12 2 1 3
Test MatInvertBlockDiagonal blockdiag 12 2 2 1
Test MatInvertBlockDiagonal blockdiag 12 2 2 2
Test MatInvertBlockDiagonal blockdiag 12 2 2 3
Test MatGetDiagonalBlock
Test MatISSetAllowRepeated(false) with possibly repeated entries
