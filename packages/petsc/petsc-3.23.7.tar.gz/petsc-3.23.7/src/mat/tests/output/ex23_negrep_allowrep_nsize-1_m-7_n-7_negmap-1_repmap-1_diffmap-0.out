Test MatGetInfo
Process   0: 33 84 51 1 0
GlobalMax  : 33 84 51 1 0
GlobalSum  : 33 84 51 1 0
Test MatIsSymmetric: 0
Test MatView
Mat Object: 1 MPI process
  type: is
  Mat Object: (is_) 1 MPI process
    type: seqaij
  row 0:  
  row 1:  
  row 2:  
  row 3:  
  row 4:  
  row 5:  
  row 6:  
  row 7:   (7, -8.)    (11, -9.)    (12, 10.)    (13, 7.)   
  row 8:   (7, 14.)    (8, -7.)    (10, -10.)    (11, 20.)    (12, -10.)    (13, -7.)   
  row 9:   (7, -6.)    (8, 12.)    (9, -17.)    (10, 22.)    (11, -11.)   
  row 10:   (8, -17.)    (9, 34.)    (10, -17.)   
  row 11:   (7, -13.)    (8, 26.)    (9, -17.)    (10, 8.)    (11, -4.)   
  row 12:   (7, 28.)    (8, -14.)    (10, -3.)    (11, 6.)    (12, -3.)    (13, -14.)   
  row 13:   (7, -15.)    (11, -2.)    (12, -11.)    (13, 28.)   
Mat Object: 1 MPI process
  type: seqaij
row 0: (0, 28.)  (1, -11.)  (2, -2.)  (6, -15.) 
row 1: (0, -14.)  (1, -3.)  (2, 6.)  (3, -3.)  (5, -14.)  (6, 28.) 
row 2: (2, -4.)  (3, 8.)  (4, -17.)  (5, 26.)  (6, -13.) 
row 3: (3, -17.)  (4, 34.)  (5, -17.) 
row 4: (2, -11.)  (3, 22.)  (4, -17.)  (5, 12.)  (6, -6.) 
row 5: (0, -7.)  (1, -10.)  (2, 20.)  (3, -10.)  (5, -7.)  (6, 14.) 
row 6: (0, 7.)  (1, 10.)  (2, -9.)  (6, -8.) 
Test CheckMat
Test MatView on binary world
Test MatView on binary self
Test MatView on binary subcomm
Test MatLoad from world
Mat Object: 1 MPI process
  type: is
  rows=7, cols=7
  total: nonzeros=33, allocated nonzeros=33
  total number of mallocs used during MatSetValues calls=0
    Mat Object: 1 MPI process
      type: seqaij
      rows=14, cols=14
      total: nonzeros=33, allocated nonzeros=33
      total number of mallocs used during MatSetValues calls=0
        using I-node routines: found 9 nodes, limit used is 5
    ISLocalToGlobalMapping Object: 1 MPI process
      type not yet set
    [0] 0 0
    [0] 1 1
    [0] 2 2
    [0] 3 3
    [0] 4 4
    [0] 5 5
    [0] 6 6
    [0] 7 6
    [0] 8 5
    [0] 9 4
    [0] 10 3
    [0] 11 2
    [0] 12 1
    [0] 13 0
    ISLocalToGlobalMapping Object: 1 MPI process
      type not yet set
    [0] 0 0
    [0] 1 1
    [0] 2 2
    [0] 3 3
    [0] 4 4
    [0] 5 5
    [0] 6 6
    [0] 7 6
    [0] 8 5
    [0] 9 4
    [0] 10 3
    [0] 11 2
    [0] 12 1
    [0] 13 0
Test MatLoad from self
Mat Object: 1 MPI process
  type: is
  rows=7, cols=7
  total: nonzeros=33, allocated nonzeros=33
  total number of mallocs used during MatSetValues calls=0
    Mat Object: 1 MPI process
      type: seqaij
      rows=14, cols=14
      total: nonzeros=33, allocated nonzeros=33
      total number of mallocs used during MatSetValues calls=0
        using I-node routines: found 9 nodes, limit used is 5
    ISLocalToGlobalMapping Object: 1 MPI process
      type not yet set
    [0] 0 0
    [0] 1 1
    [0] 2 2
    [0] 3 3
    [0] 4 4
    [0] 5 5
    [0] 6 6
    [0] 7 6
    [0] 8 5
    [0] 9 4
    [0] 10 3
    [0] 11 2
    [0] 12 1
    [0] 13 0
    ISLocalToGlobalMapping Object: 1 MPI process
      type not yet set
    [0] 0 0
    [0] 1 1
    [0] 2 2
    [0] 3 3
    [0] 4 4
    [0] 5 5
    [0] 6 6
    [0] 7 6
    [0] 8 5
    [0] 9 4
    [0] 10 3
    [0] 11 2
    [0] 12 1
    [0] 13 0
Test MatLoad from subcomm
Mat Object: 1 MPI process
  type: is
  rows=7, cols=7
  total: nonzeros=33, allocated nonzeros=33
  total number of mallocs used during MatSetValues calls=0
    Mat Object: 1 MPI process
      type: seqaij
      rows=14, cols=14
      total: nonzeros=33, allocated nonzeros=33
      total number of mallocs used during MatSetValues calls=0
        using I-node routines: found 9 nodes, limit used is 5
    ISLocalToGlobalMapping Object: 1 MPI process
      type not yet set
    [0] 0 0
    [0] 1 1
    [0] 2 2
    [0] 3 3
    [0] 4 4
    [0] 5 5
    [0] 6 6
    [0] 7 6
    [0] 8 5
    [0] 9 4
    [0] 10 3
    [0] 11 2
    [0] 12 1
    [0] 13 0
    ISLocalToGlobalMapping Object: 1 MPI process
      type not yet set
    [0] 0 0
    [0] 1 1
    [0] 2 2
    [0] 3 3
    [0] 4 4
    [0] 5 5
    [0] 6 6
    [0] 7 6
    [0] 8 5
    [0] 9 4
    [0] 10 3
    [0] 11 2
    [0] 12 1
    [0] 13 0
Test subcomm MatLoad from world
Mat Object: 1 MPI process
  type: is
  rows=7, cols=7
  total: nonzeros=33, allocated nonzeros=33
  total number of mallocs used during MatSetValues calls=0
    Mat Object: 1 MPI process
      type: seqaij
      rows=14, cols=14
      total: nonzeros=33, allocated nonzeros=33
      total number of mallocs used during MatSetValues calls=0
        using I-node routines: found 9 nodes, limit used is 5
    ISLocalToGlobalMapping Object: 1 MPI process
      type not yet set
    [0] 0 0
    [0] 1 1
    [0] 2 2
    [0] 3 3
    [0] 4 4
    [0] 5 5
    [0] 6 6
    [0] 7 6
    [0] 8 5
    [0] 9 4
    [0] 10 3
    [0] 11 2
    [0] 12 1
    [0] 13 0
    ISLocalToGlobalMapping Object: 1 MPI process
      type not yet set
    [0] 0 0
    [0] 1 1
    [0] 2 2
    [0] 3 3
    [0] 4 4
    [0] 5 5
    [0] 6 6
    [0] 7 6
    [0] 8 5
    [0] 9 4
    [0] 10 3
    [0] 11 2
    [0] 12 1
    [0] 13 0
Test MatDuplicate and MatAXPY
Test MatConvert_IS_XAIJ
Test MatConvert_XAIJ_IS
Test MatConvert_IS_XAIJ special case (0 0, bs 1 1)
Test MatConvert_IS_XAIJ special case (0 0, bs 1 2)
Test MatConvert_IS_XAIJ special case (0 0, bs 1 3)
Test MatConvert_IS_XAIJ special case (0 0, bs 2 1)
Test MatConvert_IS_XAIJ special case (0 0, bs 2 2)
Test MatConvert_IS_XAIJ special case (0 0, bs 2 3)
Test MatConvert_IS_XAIJ special case (0 0, bs 3 1)
Test MatConvert_IS_XAIJ special case (0 0, bs 3 2)
Test MatConvert_IS_XAIJ special case (0 0, bs 3 3)
Test MatConvert_IS_XAIJ special case (0 1, bs 1 1)
Test MatConvert_IS_XAIJ special case (0 1, bs 1 2)
Test MatConvert_IS_XAIJ special case (0 1, bs 1 3)
Test MatConvert_IS_XAIJ special case (0 1, bs 2 1)
Test MatConvert_IS_XAIJ special case (0 1, bs 2 2)
Test MatConvert_IS_XAIJ special case (0 1, bs 2 3)
Test MatConvert_IS_XAIJ special case (0 1, bs 3 1)
Test MatConvert_IS_XAIJ special case (0 1, bs 3 2)
Test MatConvert_IS_XAIJ special case (0 1, bs 3 3)
Test MatConvert_IS_XAIJ special case (1 0, bs 1 1)
Test MatConvert_IS_XAIJ special case (1 0, bs 1 2)
Test MatConvert_IS_XAIJ special case (1 0, bs 1 3)
Test MatConvert_IS_XAIJ special case (1 0, bs 2 1)
Test MatConvert_IS_XAIJ special case (1 0, bs 2 2)
Test MatConvert_IS_XAIJ special case (1 0, bs 2 3)
Test MatConvert_IS_XAIJ special case (1 0, bs 3 1)
Test MatConvert_IS_XAIJ special case (1 0, bs 3 2)
Test MatConvert_IS_XAIJ special case (1 0, bs 3 3)
Test MatConvert_IS_XAIJ special case (1 1, bs 1 1)
Test MatConvert_IS_XAIJ special case (1 1, bs 1 2)
Test MatConvert_IS_XAIJ special case (1 1, bs 1 3)
Test MatConvert_IS_XAIJ special case (1 1, bs 2 1)
Test MatConvert_IS_XAIJ special case (1 1, bs 2 2)
Test MatConvert_IS_XAIJ special case (1 1, bs 2 3)
Test MatConvert_IS_XAIJ special case (1 1, bs 3 1)
Test MatConvert_IS_XAIJ special case (1 1, bs 3 2)
Test MatConvert_IS_XAIJ special case (1 1, bs 3 3)
Test MatDiagonalScale
Test MatPtAP
Test MatGetLocalSubMatrix
Test MatConvert_Nest_IS
Test MatCreateSubMatrix
Test MatCreateSubMatrices
IS Object: 1 MPI process
  type: stride
Number of indices in (stride) set 1
0 0
Test MatZeroRows (diag zero)
Test MatMissingDiagonal
[0] [0,7) Missing 1, row 0 (diag zero)
Test MatTranspose
Test MatISFixLocalEmpty
Test MatInvertBlockDiagonal blockdiag 7 0 0 1
Test MatInvertBlockDiagonal blockdiag 7 0 0 2
Test MatInvertBlockDiagonal blockdiag 7 0 0 3
Test MatInvertBlockDiagonal blockdiag 7 0 1 1
Test MatInvertBlockDiagonal blockdiag 7 0 1 2
Test MatInvertBlockDiagonal blockdiag 7 0 1 3
Test MatInvertBlockDiagonal blockdiag 7 0 2 1
Test MatInvertBlockDiagonal blockdiag 7 0 2 2
Test MatInvertBlockDiagonal blockdiag 7 0 2 3
Test MatInvertBlockDiagonal blockdiag 7 1 0 1
Test MatInvertBlockDiagonal blockdiag 7 1 0 2
Test MatInvertBlockDiagonal blockdiag 7 1 0 3
Test MatInvertBlockDiagonal blockdiag 7 1 1 1
Test MatInvertBlockDiagonal blockdiag 7 1 1 2
Test MatInvertBlockDiagonal blockdiag 7 1 1 3
Test MatInvertBlockDiagonal blockdiag 7 1 2 1
Test MatInvertBlockDiagonal blockdiag 7 1 2 2
Test MatInvertBlockDiagonal blockdiag 7 1 2 3
Test MatInvertBlockDiagonal blockdiag 7 2 0 1
Test MatInvertBlockDiagonal blockdiag 7 2 0 2
Test MatInvertBlockDiagonal blockdiag 7 2 0 3
Test MatInvertBlockDiagonal blockdiag 7 2 1 1
Test MatInvertBlockDiagonal blockdiag 7 2 1 2
Test MatInvertBlockDiagonal blockdiag 7 2 1 3
Test MatInvertBlockDiagonal blockdiag 7 2 2 1
Test MatInvertBlockDiagonal blockdiag 7 2 2 2
Test MatInvertBlockDiagonal blockdiag 7 2 2 3
Test MatGetDiagonalBlock
Test MatISSetAllowRepeated(false) with possibly repeated entries
