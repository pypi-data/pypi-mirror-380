<--- FIXED --->
[31m[1m./src/sys/tests/linter/testValidPointers.c:3:1: error:[0m Function 'testValidPointers()' does not appear to be used anywhere outside of testValidPointers.c, and can be made static [-fstatic-function-candidate]:
  1: #include <petsc/private/petscimpl.h>
  2: 
> 3: [33m[1mPetscErrorCode testValidPointers(void *a, char *b, PetscInt *c, PetscMPIInt *d, PetscInt *e, PetscBool *f, PetscScalar *g, PetscReal *h)[0m
     [33m[1m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  4: {
  5:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:6:25: error:[0m Argument number doesn't match for 'a'. Expected '1', found '2' [-fmatching-arg-num]:
  4: {
  5:   /* incorrect */
> 6:   PetscAssertPointer(a, [33m[1m2[0m);
                             [33m[1m^[0m
  7:   PetscAssertPointer(b, 3);
  8:   PetscAssertPointer(c, 4);

./src/sys/tests/linter/testValidPointers.c:3:34 Note: 'a' is traceable to argument #1 'a' in enclosing function here:
  1: #include <petsc/private/petscimpl.h>
  2: 
> 3: PetscErrorCode testValidPointers([33m[1mvoid *a[0m, char *b, PetscInt *c, PetscMPIInt *d, PetscInt *e, PetscBool *f, PetscScalar *g, PetscReal *h)
                                      [33m[1m^^^^^^^[0m
  4: {
  5:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:7:25: error:[0m Argument number doesn't match for 'b'. Expected '2', found '3' [-fmatching-arg-num]:
  5: /* incorrect */
  6: PetscAssertPointer(a, 2);
> 7: PetscAssertPointer(b, [33m[1m3[0m);
                           [33m[1m^[0m
  8: PetscAssertPointer(c, 4);
  9: PetscAssertPointer(d, 5);

./src/sys/tests/linter/testValidPointers.c:3:43 Note: 'b' is traceable to argument #2 'b' in enclosing function here:
  1: #include <petsc/private/petscimpl.h>
  2: 
> 3: PetscErrorCode testValidPointers(void *a, [33m[1mchar *b[0m, PetscInt *c, PetscMPIInt *d, PetscInt *e, PetscBool *f, PetscScalar *g, PetscReal *h)
                                               [33m[1m^^^^^^^[0m
  4: {
  5:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:8:25: error:[0m Argument number doesn't match for 'c'. Expected '3', found '4' [-fmatching-arg-num]:
  6 : PetscAssertPointer(a, 2);
  7 : PetscAssertPointer(b, 3);
> 8 : PetscAssertPointer(c, [33m[1m4[0m);
                            [33m[1m^[0m
  9 : PetscAssertPointer(d, 5);
  10: PetscAssertPointer(e, 6);

./src/sys/tests/linter/testValidPointers.c:3:52 Note: 'c' is traceable to argument #3 'c' in enclosing function here:
  1: #include <petsc/private/petscimpl.h>
  2: 
> 3: PetscErrorCode testValidPointers(void *a, char *b, [33m[1mPetscInt *c[0m, PetscMPIInt *d, PetscInt *e, PetscBool *f, PetscScalar *g, PetscReal *h)
                                                        [33m[1m^^^^^^^^^^^[0m
  4: {
  5:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:9:25: error:[0m Argument number doesn't match for 'd'. Expected '4', found '5' [-fmatching-arg-num]:
  7 : PetscAssertPointer(b, 3);
  8 : PetscAssertPointer(c, 4);
> 9 : PetscAssertPointer(d, [33m[1m5[0m);
                            [33m[1m^[0m
  10: PetscAssertPointer(e, 6);
  11: PetscAssertPointer(f, 7);

./src/sys/tests/linter/testValidPointers.c:3:65 Note: 'd' is traceable to argument #4 'd' in enclosing function here:
  1: #include <petsc/private/petscimpl.h>
  2: 
> 3: PetscErrorCode testValidPointers(void *a, char *b, PetscInt *c, [33m[1mPetscMPIInt *d[0m, PetscInt *e, PetscBool *f, PetscScalar *g, PetscReal *h)
                                                                     [33m[1m^^^^^^^^^^^^^^[0m
  4: {
  5:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:10:25: error:[0m Argument number doesn't match for 'e'. Expected '5', found '6' [-fmatching-arg-num]:
  8 : PetscAssertPointer(c, 4);
  9 : PetscAssertPointer(d, 5);
> 10: PetscAssertPointer(e, [33m[1m6[0m);
                            [33m[1m^[0m
  11: PetscAssertPointer(f, 7);
  12: PetscAssertPointer(g, 8);

./src/sys/tests/linter/testValidPointers.c:3:81 Note: 'e' is traceable to argument #5 'e' in enclosing function here:
  1: #include <petsc/private/petscimpl.h>
  2: 
> 3: PetscErrorCode testValidPointers(void *a, char *b, PetscInt *c, PetscMPIInt *d, [33m[1mPetscInt *e[0m, PetscBool *f, PetscScalar *g, PetscReal *h)
                                                                                     [33m[1m^^^^^^^^^^^[0m
  4: {
  5:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:11:25: error:[0m Argument number doesn't match for 'f'. Expected '6', found '7' [-fmatching-arg-num]:
  9 : PetscAssertPointer(d, 5);
  10: PetscAssertPointer(e, 6);
> 11: PetscAssertPointer(f, [33m[1m7[0m);
                            [33m[1m^[0m
  12: PetscAssertPointer(g, 8);
  13: PetscAssertPointer(h, 9);

./src/sys/tests/linter/testValidPointers.c:3:94 Note: 'f' is traceable to argument #6 'f' in enclosing function here:
  1: #include <petsc/private/petscimpl.h>
  2: 
> 3: PetscErrorCode testValidPointers(void *a, char *b, PetscInt *c, PetscMPIInt *d, PetscInt *e, [33m[1mPetscBool *f[0m, PetscScalar *g, PetscReal *h)
                                                                                                  [33m[1m^^^^^^^^^^^^[0m
  4: {
  5:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:12:25: error:[0m Argument number doesn't match for 'g'. Expected '7', found '8' [-fmatching-arg-num]:
  10: PetscAssertPointer(e, 6);
  11: PetscAssertPointer(f, 7);
> 12: PetscAssertPointer(g, [33m[1m8[0m);
                            [33m[1m^[0m
  13: PetscAssertPointer(h, 9);
  14: 

./src/sys/tests/linter/testValidPointers.c:3:108 Note: 'g' is traceable to argument #7 'g' in enclosing function here:
  1: #include <petsc/private/petscimpl.h>
  2: 
> 3: PetscErrorCode testValidPointers(void *a, char *b, PetscInt *c, PetscMPIInt *d, PetscInt *e, PetscBool *f, [33m[1mPetscScalar *g[0m, PetscReal *h)
                                                                                                                [33m[1m^^^^^^^^^^^^^^[0m
  4: {
  5:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:13:25: error:[0m Argument number doesn't match for 'h'. Expected '8', found '9' [-fmatching-arg-num]:
  11: PetscAssertPointer(f, 7);
  12: PetscAssertPointer(g, 8);
> 13: PetscAssertPointer(h, [33m[1m9[0m);
                            [33m[1m^[0m
  14: 
  15: /* correct */

./src/sys/tests/linter/testValidPointers.c:3:124 Note: 'h' is traceable to argument #8 'h' in enclosing function here:
  1: #include <petsc/private/petscimpl.h>
  2: 
> 3: PetscErrorCode testValidPointers(void *a, char *b, PetscInt *c, PetscMPIInt *d, PetscInt *e, PetscBool *f, PetscScalar *g, [33m[1mPetscReal *h[0m)
                                                                                                                                [33m[1m^^^^^^^^^^^^[0m
  4: {
  5:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:27:1: error:[0m Function 'testValidPointers2()' does not appear to be used anywhere outside of testValidPointers.c, and can be made static [-fstatic-function-candidate]:
  25: }
  26: 
> 27: [33m[1mvoid testValidPointers2(void *a, char *b, PetscInt *c, PetscMPIInt *d, PetscInt *e, PetscBool *f, PetscScalar *g, PetscReal *h)[0m
      [33m[1m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  28: {
  29:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:30:25: error:[0m Argument number doesn't match for 'a'. Expected '1', found '2' [-fmatching-arg-num]:
  28: {
  29:   /* incorrect */
> 30:   PetscAssertPointer(a, [33m[1m2[0m);
                              [33m[1m^[0m
  31:   PetscAssertPointer(b, 3);
  32:   PetscAssertPointer(c, 4);

./src/sys/tests/linter/testValidPointers.c:27:25 Note: 'a' is traceable to argument #1 'a' in enclosing function here:
  25: }
  26: 
> 27: void testValidPointers2([33m[1mvoid *a[0m, char *b, PetscInt *c, PetscMPIInt *d, PetscInt *e, PetscBool *f, PetscScalar *g, PetscReal *h)
                              [33m[1m^^^^^^^[0m
  28: {
  29:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:31:25: error:[0m Argument number doesn't match for 'b'. Expected '2', found '3' [-fmatching-arg-num]:
  29: /* incorrect */
  30: PetscAssertPointer(a, 2);
> 31: PetscAssertPointer(b, [33m[1m3[0m);
                            [33m[1m^[0m
  32: PetscAssertPointer(c, 4);
  33: PetscAssertPointer(d, 5);

./src/sys/tests/linter/testValidPointers.c:27:34 Note: 'b' is traceable to argument #2 'b' in enclosing function here:
  25: }
  26: 
> 27: void testValidPointers2(void *a, [33m[1mchar *b[0m, PetscInt *c, PetscMPIInt *d, PetscInt *e, PetscBool *f, PetscScalar *g, PetscReal *h)
                                       [33m[1m^^^^^^^[0m
  28: {
  29:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:32:25: error:[0m Argument number doesn't match for 'c'. Expected '3', found '4' [-fmatching-arg-num]:
  30: PetscAssertPointer(a, 2);
  31: PetscAssertPointer(b, 3);
> 32: PetscAssertPointer(c, [33m[1m4[0m);
                            [33m[1m^[0m
  33: PetscAssertPointer(d, 5);
  34: PetscAssertPointer(e, 6);

./src/sys/tests/linter/testValidPointers.c:27:43 Note: 'c' is traceable to argument #3 'c' in enclosing function here:
  25: }
  26: 
> 27: void testValidPointers2(void *a, char *b, [33m[1mPetscInt *c[0m, PetscMPIInt *d, PetscInt *e, PetscBool *f, PetscScalar *g, PetscReal *h)
                                                [33m[1m^^^^^^^^^^^[0m
  28: {
  29:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:33:25: error:[0m Argument number doesn't match for 'd'. Expected '4', found '5' [-fmatching-arg-num]:
  31: PetscAssertPointer(b, 3);
  32: PetscAssertPointer(c, 4);
> 33: PetscAssertPointer(d, [33m[1m5[0m);
                            [33m[1m^[0m
  34: PetscAssertPointer(e, 6);
  35: PetscAssertPointer(f, 7);

./src/sys/tests/linter/testValidPointers.c:27:56 Note: 'd' is traceable to argument #4 'd' in enclosing function here:
  25: }
  26: 
> 27: void testValidPointers2(void *a, char *b, PetscInt *c, [33m[1mPetscMPIInt *d[0m, PetscInt *e, PetscBool *f, PetscScalar *g, PetscReal *h)
                                                             [33m[1m^^^^^^^^^^^^^^[0m
  28: {
  29:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:34:25: error:[0m Argument number doesn't match for 'e'. Expected '5', found '6' [-fmatching-arg-num]:
  32: PetscAssertPointer(c, 4);
  33: PetscAssertPointer(d, 5);
> 34: PetscAssertPointer(e, [33m[1m6[0m);
                            [33m[1m^[0m
  35: PetscAssertPointer(f, 7);
  36: PetscAssertPointer(g, 8);

./src/sys/tests/linter/testValidPointers.c:27:72 Note: 'e' is traceable to argument #5 'e' in enclosing function here:
  25: }
  26: 
> 27: void testValidPointers2(void *a, char *b, PetscInt *c, PetscMPIInt *d, [33m[1mPetscInt *e[0m, PetscBool *f, PetscScalar *g, PetscReal *h)
                                                                             [33m[1m^^^^^^^^^^^[0m
  28: {
  29:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:35:25: error:[0m Argument number doesn't match for 'f'. Expected '6', found '7' [-fmatching-arg-num]:
  33: PetscAssertPointer(d, 5);
  34: PetscAssertPointer(e, 6);
> 35: PetscAssertPointer(f, [33m[1m7[0m);
                            [33m[1m^[0m
  36: PetscAssertPointer(g, 8);
  37: PetscAssertPointer(h, 9);

./src/sys/tests/linter/testValidPointers.c:27:85 Note: 'f' is traceable to argument #6 'f' in enclosing function here:
  25: }
  26: 
> 27: void testValidPointers2(void *a, char *b, PetscInt *c, PetscMPIInt *d, PetscInt *e, [33m[1mPetscBool *f[0m, PetscScalar *g, PetscReal *h)
                                                                                          [33m[1m^^^^^^^^^^^^[0m
  28: {
  29:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:36:25: error:[0m Argument number doesn't match for 'g'. Expected '7', found '8' [-fmatching-arg-num]:
  34: PetscAssertPointer(e, 6);
  35: PetscAssertPointer(f, 7);
> 36: PetscAssertPointer(g, [33m[1m8[0m);
                            [33m[1m^[0m
  37: PetscAssertPointer(h, 9);
  38: 

./src/sys/tests/linter/testValidPointers.c:27:99 Note: 'g' is traceable to argument #7 'g' in enclosing function here:
  25: }
  26: 
> 27: void testValidPointers2(void *a, char *b, PetscInt *c, PetscMPIInt *d, PetscInt *e, PetscBool *f, [33m[1mPetscScalar *g[0m, PetscReal *h)
                                                                                                        [33m[1m^^^^^^^^^^^^^^[0m
  28: {
  29:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:37:25: error:[0m Argument number doesn't match for 'h'. Expected '8', found '9' [-fmatching-arg-num]:
  35: PetscAssertPointer(f, 7);
  36: PetscAssertPointer(g, 8);
> 37: PetscAssertPointer(h, [33m[1m9[0m);
                            [33m[1m^[0m
  38: 
  39: /* correct */

./src/sys/tests/linter/testValidPointers.c:27:115 Note: 'h' is traceable to argument #8 'h' in enclosing function here:
  25: }
  26: 
> 27: void testValidPointers2(void *a, char *b, PetscInt *c, PetscMPIInt *d, PetscInt *e, PetscBool *f, PetscScalar *g, [33m[1mPetscReal *h[0m)
                                                                                                                        [33m[1m^^^^^^^^^^^^[0m
  28: {
  29:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:51:1: error:[0m Function 'testValidPointers3()' does not appear to be used anywhere outside of testValidPointers.c, and can be made static [-fstatic-function-candidate]:
  49: }
  50: 
> 51: [33m[1mvoid testValidPointers3(void **a, char **b, PetscInt **c, PetscMPIInt **d, PetscInt **e, PetscBool **f, PetscScalar **g, PetscReal **h)[0m
      [33m[1m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  52: {
  53:   /* incorrect */
[31m[1m./src/sys/tests/linter/testValidPointers.c:64:3: error:[0m Duplicate function found previous identical usage [-fduplicate-function]:
  52: {
  53:   /* incorrect */
> 54:   [33m[1mPetscAssertPointer(a, 1)[0m;
        [33m[1m^^^^^^^^^^^^^^^^^^^^^^^^[0m
  55:   PetscAssertPointer(b, 2);
  56:   PetscAssertPointer(c, 3);
  57:   PetscAssertPointer(d, 4);
  58:   PetscAssertPointer(e, 5);
  59:   PetscAssertPointer(f, 6);
  60:   PetscAssertPointer(g, 7);
  61:   PetscAssertPointer(h, 8);
  62: 
  63:   /* correct */
  64:   PetscAssertPointer(a, 1);
[31m[1m./src/sys/tests/linter/testValidPointers.c:65:3: error:[0m Duplicate function found previous identical usage [-fduplicate-function]:
  53: /* incorrect */
  54: PetscAssertPointer(a, 1);
> 55: [33m[1mPetscAssertPointer(b, 2)[0m;
      [33m[1m^^^^^^^^^^^^^^^^^^^^^^^^[0m
  56: PetscAssertPointer(c, 3);
  57: PetscAssertPointer(d, 4);
  58: PetscAssertPointer(e, 5);
  59: PetscAssertPointer(f, 6);
  60: PetscAssertPointer(g, 7);
  61: PetscAssertPointer(h, 8);
  62: 
  63: /* correct */
  64: PetscAssertPointer(a, 1);
  65: PetscAssertPointer(b, 2);
[31m[1m./src/sys/tests/linter/testValidPointers.c:66:3: error:[0m Duplicate function found previous identical usage [-fduplicate-function]:
  54: PetscAssertPointer(a, 1);
  55: PetscAssertPointer(b, 2);
> 56: [33m[1mPetscAssertPointer(c, 3)[0m;
      [33m[1m^^^^^^^^^^^^^^^^^^^^^^^^[0m
  57: PetscAssertPointer(d, 4);
  58: PetscAssertPointer(e, 5);
  59: PetscAssertPointer(f, 6);
  60: PetscAssertPointer(g, 7);
  61: PetscAssertPointer(h, 8);
  62: 
  63: /* correct */
  64: PetscAssertPointer(a, 1);
  65: PetscAssertPointer(b, 2);
  66: PetscAssertPointer(c, 3);
[31m[1m./src/sys/tests/linter/testValidPointers.c:67:3: error:[0m Duplicate function found previous identical usage [-fduplicate-function]:
  55: PetscAssertPointer(b, 2);
  56: PetscAssertPointer(c, 3);
> 57: [33m[1mPetscAssertPointer(d, 4)[0m;
      [33m[1m^^^^^^^^^^^^^^^^^^^^^^^^[0m
  58: PetscAssertPointer(e, 5);
  59: PetscAssertPointer(f, 6);
  60: PetscAssertPointer(g, 7);
  61: PetscAssertPointer(h, 8);
  62: 
  63: /* correct */
  64: PetscAssertPointer(a, 1);
  65: PetscAssertPointer(b, 2);
  66: PetscAssertPointer(c, 3);
  67: PetscAssertPointer(d, 4);
[31m[1m./src/sys/tests/linter/testValidPointers.c:68:3: error:[0m Duplicate function found previous identical usage [-fduplicate-function]:
  56: PetscAssertPointer(c, 3);
  57: PetscAssertPointer(d, 4);
> 58: [33m[1mPetscAssertPointer(e, 5)[0m;
      [33m[1m^^^^^^^^^^^^^^^^^^^^^^^^[0m
  59: PetscAssertPointer(f, 6);
  60: PetscAssertPointer(g, 7);
  61: PetscAssertPointer(h, 8);
  62: 
  63: /* correct */
  64: PetscAssertPointer(a, 1);
  65: PetscAssertPointer(b, 2);
  66: PetscAssertPointer(c, 3);
  67: PetscAssertPointer(d, 4);
  68: PetscAssertPointer(e, 5);
[31m[1m./src/sys/tests/linter/testValidPointers.c:69:3: error:[0m Duplicate function found previous identical usage [-fduplicate-function]:
  57: PetscAssertPointer(d, 4);
  58: PetscAssertPointer(e, 5);
> 59: [33m[1mPetscAssertPointer(f, 6)[0m;
      [33m[1m^^^^^^^^^^^^^^^^^^^^^^^^[0m
  60: PetscAssertPointer(g, 7);
  61: PetscAssertPointer(h, 8);
  62: 
  63: /* correct */
  64: PetscAssertPointer(a, 1);
  65: PetscAssertPointer(b, 2);
  66: PetscAssertPointer(c, 3);
  67: PetscAssertPointer(d, 4);
  68: PetscAssertPointer(e, 5);
  69: PetscAssertPointer(f, 6);
[31m[1m./src/sys/tests/linter/testValidPointers.c:70:3: error:[0m Duplicate function found previous identical usage [-fduplicate-function]:
  58: PetscAssertPointer(e, 5);
  59: PetscAssertPointer(f, 6);
> 60: [33m[1mPetscAssertPointer(g, 7)[0m;
      [33m[1m^^^^^^^^^^^^^^^^^^^^^^^^[0m
  61: PetscAssertPointer(h, 8);
  62: 
  63: /* correct */
  64: PetscAssertPointer(a, 1);
  65: PetscAssertPointer(b, 2);
  66: PetscAssertPointer(c, 3);
  67: PetscAssertPointer(d, 4);
  68: PetscAssertPointer(e, 5);
  69: PetscAssertPointer(f, 6);
  70: PetscAssertPointer(g, 7);
[31m[1m./src/sys/tests/linter/testValidPointers.c:71:3: error:[0m Duplicate function found previous identical usage [-fduplicate-function]:
  59: PetscAssertPointer(f, 6);
  60: PetscAssertPointer(g, 7);
> 61: [33m[1mPetscAssertPointer(h, 8)[0m;
      [33m[1m^^^^^^^^^^^^^^^^^^^^^^^^[0m
  62: 
  63: /* correct */
  64: PetscAssertPointer(a, 1);
  65: PetscAssertPointer(b, 2);
  66: PetscAssertPointer(c, 3);
  67: PetscAssertPointer(d, 4);
  68: PetscAssertPointer(e, 5);
  69: PetscAssertPointer(f, 6);
  70: PetscAssertPointer(g, 7);
  71: PetscAssertPointer(h, 8);
<--- LEFT --->
