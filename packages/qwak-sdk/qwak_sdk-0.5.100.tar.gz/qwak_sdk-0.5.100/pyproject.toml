[tool.poetry]
name = "qwak-sdk"
version = "0.5.100"
description = "Qwak SDK and CLI for qwak models"
authors = ["Qwak <info@qwak.com>"]
readme = "README.md"
keywords = ["mlops", "ml", "deployment", "serving", "model"]
packages = [
    { include = "qwak_sdk" },
]
include = ["./qwak_sdk/**/*"]
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
license = "Apache-2.0"

[tool.poetry.urls]
"Home page" = "https://www.qwak.com/"

[tool.poetry.scripts]
qwak = "qwak_sdk.main:qwak_cli"

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
qwak-core = ">=0.4.368"
qwak-inference = "^0.1.25"
croniter = "1.4.1"
tabulate = ">=0.8.0"
python-json-logger = "^3.2.1"
yaspin = ">=2.0.0"
rich = ">=13.0.0"
cookiecutter = "*"
gitpython = ">=2.1.0"
boto3 = { version = "^1.24.116", optional = true } # Inference dependencies
pandas = [# Inference dependencies
    { version = ">1.1.3", python = ">=3.9,<3.10", optional = true },
    { version = ">=1.4.0", python = ">=3.10,<3.12", optional = true }
]
numpy = "<2.0.0"

joblib = { version = "^1.1.0", optional = true } # Inference dependencies
pyarrow = { version = ">=6.0.0", optional = true } # Inference, feature-store dependencies
pyathena = { version = ">=2.2.0,!=2.18.0", optional = true } # feature-store dependencies
cloudpickle = {version = "2.2.1", optional = true} # feature-store dependencies
pyspark = {version = "3.4.2", optional = true} # feature-store dependencies
click = "8.1.8"

[tool.poetry.group.dev.dependencies]
pytest = "7.2.1"
pytest-lazy-fixture = "^0.6.3"
assertpy = "^1.1"
black = "23.1.0"
flake8 = "5.0.0"
bandit = { version = "^1.7.4", extras = ["toml"] }
coverage = "7.2.1"
typing_extensions = ">=4.4.0"
bump2version = "1.0.1"
typeguard = "^2"
isort = "^5"
changelog-cli = "*"
grpcio-tools = ">=1.47.0"
mypy-protobuf = "^3.0.0"

[tool.poetry.extras]
batch = ["boto3", "pandas", "pyarrow", "joblib"]
feedback = ["boto3", "pandas", "joblib"]
local-deployment = ["boto3"]
feature-store = ["pyarrow", "pyathena", "cloudpickle", "pyspark", "pandas"]

[tool.black]
extend-exclude = '''
(
     .*_pb2.py
    | .*_pb2_grpc.py
    | .qwak_sdk/commands/models/init/_logic/template/*
)'''

[tool.pytest.ini_options]
addopts = [
    "--strict-markers"
]
markers = [
    "integration: marks tests as slow (deselect with '-m \"not integration\"')",
]

[tool.bandit]
exclude_dirs = ["qwak_sdk/commands/models/init/_logic/template"]

[tool.isort]
profile = "black"
src_paths = ["qwak_sdk", "tests"]

[tool.poe.tasks]
clean = { cmd = "rm -rf dist ./**/__pycache__", help = "Clean build artifacts" }
install = "poetry install"
validate = { cmd = "pre-commit run  --all-files", help = "Check lint on all files" }
test = { cmd = "pytest --disable-warnings tests", help = "Run tests" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
