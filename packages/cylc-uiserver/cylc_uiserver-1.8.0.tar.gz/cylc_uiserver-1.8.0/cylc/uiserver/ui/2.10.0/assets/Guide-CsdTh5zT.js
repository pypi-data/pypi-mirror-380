import{_ as T,a$ as x,b0 as V,b1 as j,C as m,e as z,o as d,w as l,z as s,g as e,h as p,b2 as k,b3 as b,b4 as f,l as a,x as y,F as v,r as C,t as _,a7 as S,a8 as r,a9 as i,aa as u,j as W}from"./index-jbzX_AXb.js";const $={name:"Guide",components:{task:j,job:V},data:()=>({states:x})},A={class:"card-grid"},I={id:"task-job-state-table"},L={style:{"font-size":"2em"}},B={style:{"font-size":"2em"}};function N(g,t,R,q,Q,D){const n=m("task"),w=m("job");return d(),z(W,{fluid:""},{default:l(()=>[t[23]||(t[23]=s("h1",{class:"ma-0"},"Cylc UI Quick Start",-1)),s("div",A,[e(p,null,{default:l(()=>[e(k,{variant:"outlined",class:"pa-1"},{default:l(()=>[e(b,{"primary-title":""},{default:l(()=>[...t[0]||(t[0]=[s("p",{class:"text-h4 text--primary"},"Tasks & Jobs",-1)])]),_:1}),e(f,null,{default:l(()=>[...t[1]||(t[1]=[s("p",null,[a(" A "),s("b",null,"task"),a(" represents a single unit of activity in a workflow. ")],-1),s("p",null,[a(" A "),s("b",null,"job"),a(" performs the activity of a task, by means of a "),s("b",null,"job script"),a(" submitted to a "),s("b",null,"job runner"),a(". ")],-1),s("p",null," One task can have multiple jobs, by automatic retry or manual triggering. ",-1)])]),_:1}),s("table",I,[t[2]||(t[2]=s("tr",null,[s("td",null,"Task"),s("td"),s("td",null,"Job")],-1)),(d(!0),y(v,null,C(g.states,o=>(d(),y("tr",{key:o.name.name},[s("td",L,[e(n,{task:{state:o.name,task:{meanElapsedTime:30}},startTime:String(Date.now())},null,8,["task","startTime"])]),s("td",null,[s("span",null,_(o.name),1)]),s("td",B,[e(w,{status:o.name},null,8,["status"])])]))),128))]),e(f,null,{default:l(()=>[...t[3]||(t[3]=[s("p",null,[a(" A "),s("b",null,"waiting task"),a(" with "),s("b",null,"failed jobs"),a(" will "),s("b",null,"retry"),a(" after a delay. ")],-1),s("p",null,[a(" A "),s("b",null,"task"),a(" can only fail if it runs out of retries. ")],-1)])]),_:1})]),_:1})]),_:1}),e(p,null,{default:l(()=>[e(k,{variant:"outlined",class:"pa-1"},{default:l(()=>[e(b,{"primary-title":""},{default:l(()=>[...t[4]||(t[4]=[s("p",{class:"text-h4 text--primary"},"Why Are We Waiting?",-1)])]),_:1}),e(f,null,{default:l(()=>[t[21]||(t[21]=s("p",null," Why has my task not started to run yet? ",-1)),e(S,{lines:"three"},{default:l(()=>[e(r,null,{prepend:l(()=>[e(n,{style:{"font-size":"2em"},task:{state:"waiting"},class:"mr-4"})]),default:l(()=>[e(i,null,{default:l(()=>[...t[5]||(t[5]=[a(" Waiting ",-1)])]),_:1}),e(u,null,{default:l(()=>[...t[6]||(t[6]=[a(" The task is not ready to run yet - it is still waiting on upstream ",-1),s("b",null,"dependencies",-1),a(" (or old style external triggers). ",-1)])]),_:1})]),_:1}),e(r,null,{prepend:l(()=>[e(n,{style:{"font-size":"2em"},task:{state:"waiting",isHeld:!0},class:"mr-4"})]),default:l(()=>[e(i,null,{default:l(()=>[...t[7]||(t[7]=[a(" Held ",-1)])]),_:1}),e(u,null,{default:l(()=>[...t[8]||(t[8]=[a(" The task won't run unless ",-1),s("b",null,"released",-1),a(" from hold. Tasks can be held before they are ready to run (or after, prior to retriggering). ",-1)])]),_:1})]),_:1}),e(r,null,{prepend:l(()=>[e(n,{style:{"font-size":"2em"},task:{state:"waiting",isRunahead:!0},class:"mr-4"})]),default:l(()=>[e(i,null,{default:l(()=>[...t[9]||(t[9]=[a(" Runahead ",-1)])]),_:1}),e(u,null,{default:l(()=>[...t[10]||(t[10]=[a(" The task is ready to run but is beyond the runahead limit, which restricts the number of active cycle points. ",-1)])]),_:1})]),_:1}),e(r,null,{prepend:l(()=>[e(n,{style:{"font-size":"2em"},task:{state:"waiting",runtime:{runMode:"Skip"}},class:"mr-4"})]),default:l(()=>[e(i,null,{default:l(()=>[...t[11]||(t[11]=[a(" Skip Mode ",-1)])]),_:1}),e(u,null,{default:l(()=>[...t[12]||(t[12]=[a(" This task will be run in skip mode. ",-1)])]),_:1})]),_:1}),e(r,null,{prepend:l(()=>[e(n,{style:{"font-size":"2em"},task:{state:"waiting",isQueued:!0},class:"mr-4"})]),default:l(()=>[e(i,null,{default:l(()=>[...t[13]||(t[13]=[a(" Queued ",-1)])]),_:1}),e(u,null,{default:l(()=>[...t[14]||(t[14]=[a(" The task is ready to run but is held back by a queue, which restricts the number of active tasks. ",-1)])]),_:1})]),_:1}),e(r,null,{prepend:l(()=>[e(n,{style:{"font-size":"2em"},task:{state:"waiting",isRetry:!0},class:"mr-4"})]),default:l(()=>[e(i,null,{default:l(()=>[...t[15]||(t[15]=[a(" Retry ",-1)])]),_:1}),e(u,null,{default:l(()=>[...t[16]||(t[16]=[a(" The task is waiting to retry running after a configured ",-1),s("b",null,"submission or execution retry delay",-1),a(". It will then attempt to run the job again. ",-1)])]),_:1})]),_:1}),e(r,null,{prepend:l(()=>[e(n,{style:{"font-size":"2em"},task:{state:"waiting",isWallclock:!0},class:"mr-4"})]),default:l(()=>[e(i,null,{default:l(()=>[...t[17]||(t[17]=[a(" Wallclock ",-1)])]),_:1}),e(u,null,{default:l(()=>[...t[18]||(t[18]=[a(" This task is waiting for a wallclock trigger. ",-1)])]),_:1})]),_:1}),e(r,null,{prepend:l(()=>[e(n,{style:{"font-size":"2em"},task:{state:"waiting",isXtriggered:!0},class:"mr-4"})]),default:l(()=>[e(i,null,{default:l(()=>[...t[19]||(t[19]=[a(" Xtriggered ",-1)])]),_:1}),e(u,null,{default:l(()=>[...t[20]||(t[20]=[a(" This task is waiting for an ",-1),s("b",null,"xtrigger",-1),a(". ",-1)])]),_:1})]),_:1})]),_:1}),t[22]||(t[22]=s("p",null,[s("em",null,"Note: tasks downstream of queued (or runahead limited) tasks are not themselves shown as queued (or runahead limited) because they are not otherwise ready to run yet.")],-1))]),_:1})]),_:1})]),_:1})])]),_:1})}const F=T($,[["render",N]]);export{F as default};
