[project]
name = "truelink"
dynamic = ["version"]
description = "Extract direct download links from various URL formats"
authors = [
    {name = "5hojib", email = "yesiamshojib@gmail.com"}
]
maintainers = [
    {name = "5hojib", email = "yesiamshojib@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["download", "link", "extractor", "direct-link", "url"]
dependencies = [
    "aiohttp>=3.8.0",
    "lxml>=4.9.0",
    "cloudscraper>=1.2.71",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=3.0.0",
    "ruff>=0.12.5",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocs-macros-plugin",
    "mkdocstrings[python]>=0.20.0",
    "mkdocs-gen-files>=0.4.0",
    "mkdocs-literate-nav>=0.6.0",
    "mkdocs-section-index>=0.3.0",
    "mkdocs-autorefs>=0.4.0",
]

[project.urls]
Homepage = "https://5hojib.github.io/truelink/"
Repository = "https://github.com/5hojib/truelink"
Source = "https://github.com/5hojib/truelink"
Documentation = "https://5hojib.github.io/truelink/"
Issues = "https://github.com/5hojib/truelink/issues"
Changelog = "https://5hojib.github.io/truelink/changelog/"

[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/truelink/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["src/truelink"]

[tool.coverage.run]
source = ["src/truelink"]
omit = ["tests/*", "src/truelink/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.ruff]
fix = true
unsafe-fixes = true
line-length = 85
target-version = "py313"

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pylint]
max-statements = 75
max-branches = 30
allow-magic-value-types = ["int", "str", "bytes"]

[tool.ruff.lint.mccabe]
max-complexity = 50

[tool.ruff.lint]
select = ["ALL"]

ignore = [
    "E501",
    "D203",
    "D213",
    "N818",
    "S101",
    "COM812",
]
