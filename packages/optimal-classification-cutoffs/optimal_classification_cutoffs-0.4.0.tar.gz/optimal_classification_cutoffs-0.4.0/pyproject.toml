[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "optimal-classification-cutoffs"
version = "0.4.0"
description = "Utilities for computing optimal classification cutoffs for binary and multiclass classification"
readme = "README.md"
license = {file = "LICENSE"}
dependencies = [
    "numpy>=1.20.0",
    "scipy",
    "scikit-learn"
]
authors = [
    {name = "Gaurav Sood", email = "contact@gsood.com"}
]
requires-python = ">=3.11"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Mathematics",
]

[project.optional-dependencies]
examples = ["matplotlib", "pandas"]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0",
    "sphinx-autodoc-typehints>=1.0"
]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "ruff",
    "mypy>=1.0",
    "hypothesis>=6.0"
]

[tool.setuptools]
packages = ["optimal_cutoffs"]
include-package-data = true

[tool.setuptools.package-data]
optimal_cutoffs = ["py.typed"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = false
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "^tests/",
    "^docs/",
    "^examples/",
]

[tool.ruff]
target-version = "py311"
line-length = 88
exclude = [
    "docs/",
    "*.ipynb",  # Exclude Jupyter notebooks
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "E501",  # line-too-long (tests can have longer lines for readability)
    "B007",  # unused-loop-control-variable (acceptable in test fixtures)
]

