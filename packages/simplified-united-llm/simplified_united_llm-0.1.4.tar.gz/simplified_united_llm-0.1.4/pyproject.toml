[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "simplified-united-llm"
version = "0.1.4"
authors = [
    {name = "United LLM Team", email = "contact@united-llm.com"},
]
description = "A streamlined, lightweight LLM client library for OpenRouter and Ollama providers with structured output generation"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
keywords = [
    "llm", "openai", "ollama", "openrouter", "structured-output", 
    "pydantic", "ai", "vision", "ocr", "schema-validation"
]
dependencies = [
    # Core LLM and AI libraries
    "instructor>=1.3.0",
    "pydantic>=2.0.0",
    "openai>=1.0.0",
    
    # Schema utilities
    "string-schema>=0.1.0",
    
    # Utilities and data processing
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    
    # Additional utilities
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.22.0",
]
all = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.22.0",
]

[project.scripts]
united-llm-test = "united_llm.test:main"

[project.urls]
Homepage = "https://github.com/xychenmsn/simplified-united-llm"
"Bug Reports" = "https://github.com/xychenmsn/simplified-united-llm/issues"
"Source" = "https://github.com/xychenmsn/simplified-united-llm"
"Documentation" = "https://github.com/xychenmsn/simplified-united-llm#readme"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["united_llm*"]
exclude = ["tests*", "examples*"]

[tool.setuptools.package-data]
united_llm = ["py.typed"]

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests (require real API access)",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["united_llm"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
