name: tests

on:
  push:
    branches:
      - main
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.platform }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        # Run all supported Python versions on linux
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        platform: [ubuntu-latest]
        # Include one macos run (Windows skipped due to OpenGL context issues)
        include:
          - platform: macos-latest
            python-version: "3.11"

    steps:
      # Checkout repository
      - uses: actions/checkout@v4
      # Setup pyqt libraries
      - uses: tlambert03/setup-qt-libs@v1
      # Setup Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .
          python -m pip install pytest pytest-cov pytest-qt PySide6
      - name: Install xvfb (Linux only)
        if: runner.os == 'Linux'
        run: python -m pip install pytest-xvfb
      # Run tests
      - name: Run tests
        env:
          DISPLAY: ":99.0"
          # Disable napari GUI in headless environment
          NAPARI_APPLICATION_IPY_INTERACTIVE: false
          # Force matplotlib to use non-interactive backend
          MPLBACKEND: Agg
        run: pytest --cov --cov-report=xml
      # Upload code coverage
      - name: Coverage
        uses: codecov/codecov-action@v4

  deploy:
    # this will run when you have tagged a commit, starting with "v*"
    # uses PyPI's trusted publishing via OIDC (no API key required)
    needs: [test]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags')
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
      - name: Build package
        run: |
          git tag
          python -m build
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
