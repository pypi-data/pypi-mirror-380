# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  tests:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install ".[dev,vis]"
    - name: Pre-commit checks (linting)
      if: matrix.python-version == '3.12'
      run: |
        pre-commit run --all-files
    - name: Test with pytest
      run: |
        # test/performance configured to be ignored in pyproject.toml
        python -m pytest
        # test/performance are then ran in a lighter version as a smoke test
        python -m pytest test/performance --benchmark-disable --performance-light


  docs:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Setup Graphviz
      uses: ts-graphviz/setup-graphviz@v2
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install ".[dev,vis]"
    - name: Build documentation
      run: |
        # these commands should match what's in the README
        cd docs
        make html
    - name: Upload built docs
      uses: actions/upload-artifact@v4
      with:
        name: sphinx-docs
        path: docs/_build/html
