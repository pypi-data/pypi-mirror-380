"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from bolt_api_sdk.types import BaseModel
from enum import Enum
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class Unit(str, Enum):
    r"""The unit for this subscription's frequency."""

    DAY = "day"
    WEEK = "week"
    MONTH = "month"
    YEAR = "year"


class FrequencyTypedDict(TypedDict):
    r"""Describes how often the subscription recurs."""

    unit: NotRequired[Unit]
    r"""The unit for this subscription's frequency."""
    value: NotRequired[int]
    r"""The value applied to the unit frequency."""


class Frequency(BaseModel):
    r"""Describes how often the subscription recurs."""

    unit: Optional[Unit] = None
    r"""The unit for this subscription's frequency."""

    value: Optional[int] = None
    r"""The value applied to the unit frequency."""


class SubscriptionTypedDict(TypedDict):
    r"""Describes a product added as a recurring subscription."""

    frequency: NotRequired[FrequencyTypedDict]
    r"""Describes how often the subscription recurs."""


class Subscription(BaseModel):
    r"""Describes a product added as a recurring subscription."""

    frequency: Optional[Frequency] = None
    r"""Describes how often the subscription recurs."""
