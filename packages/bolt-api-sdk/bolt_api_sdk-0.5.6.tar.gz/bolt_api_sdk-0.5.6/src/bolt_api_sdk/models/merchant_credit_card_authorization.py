"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .address import Address, AddressTypedDict
from .cart_create import CartCreate, CartCreateTypedDict
from .credit_card import CreditCard, CreditCardTypedDict
from .user_identifier import UserIdentifier, UserIdentifierTypedDict
from .user_identity import UserIdentity, UserIdentityTypedDict
from bolt_api_sdk.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)
from enum import Enum
from pydantic import model_serializer
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class MerchantCreditCardAuthorizationProcessingInitiator(str, Enum):
    r"""Determines who initiated the transaction (e.g. shopper, merchant) and how they did it (e.g. recurring subscription, on-file card).

    * `initial_card_on_file` - The first transaction made for a card. The system then saves this card for future transactions.
    * `initial_recurring` - The first time any card is used to pay for a recurring charge. For example, a subscription.
    * `stored_cardholder_initiated` - The subsequent (second, third, etc.) transactions a shopper initiates with a stored card. This includes every situation during which a cardholder requests a charge, for example if the cardholder requests a merchant charge their card.
    * `stored_merchant_initiated` - The subsequent (second, third, etc.) transactions a merchant initiates with a stored card only when the cardholder does not request the charge. For example, when a customer service representative buys on behalf of a shopper or when a business adds funds to a public transit card.
    * `following_recurring` - The subsequent (second, third, etc.) transactions  a card is used to pay for a recurring charge. For example, a subscription.
    * `cardholder_initiated` - When a cardholder begins a transaction that isn’t stored in Bolt and won’t be stored in Bolt for future transactions.
    * `recurring` - Any time a card is used to pay for a recurring charge (for example, a subscription). Only use this value when you don’t know if it’s the first recurring charge.

    """

    INITIAL_CARD_ON_FILE = "initial_card_on_file"
    INITIAL_RECURRING = "initial_recurring"
    STORED_CARDHOLDER_INITIATED = "stored_cardholder_initiated"
    STORED_MERCHANT_INITIATED = "stored_merchant_initiated"
    FOLLOWING_RECURRING = "following_recurring"
    CARDHOLDER_INITIATED = "cardholder_initiated"
    RECURRING = "recurring"


class MerchantCreditCardAuthorizationSource(str, Enum):
    DIRECT_PAYMENTS = "direct_payments"


class MerchantCreditCardAuthorizationTypedDict(TypedDict):
    r"""This request is used for authorizing a new, unsaved card."""

    cart: CartCreateTypedDict
    create_bolt_account: bool
    r"""If `true`, the guest shopper is provided a Bolt Account using their email address as its unique ID; if `false`, no information is saved at checkout."""
    credit_card: CreditCardTypedDict
    r"""The credit_card object is used to to pay for guest-checkout transactions or save payment method details to an account. Once saved, you can reference the credit card with the associated `credit_card_id` for future transactions. Add `billing_address` to this if storing a billing address for a returning shopper."""
    division_id: str
    r"""The unique ID associated to the merchant's Bolt Account division; Merchants can have different divisions to suit multiple use cases (storefronts, pay-by-link, phone order processing). Use the Bolt Merchant Dashboard to switch between divisions and find the division ID under `Merchant Division Public ID`."""
    source: MerchantCreditCardAuthorizationSource
    user_identifier: UserIdentifierTypedDict
    r"""The object containing key lookup IDs associated with the shopper's account, such as the unique email address and phone number."""
    user_identity: UserIdentityTypedDict
    auto_capture: NotRequired[bool]
    r"""This property determines how the transaction is processed after authorization. If set to `true`, the transaction is placed in a queue for automatic capture. This process is asynchronous, meaning the transaction may not immediately appear as captured after the authorization request. This is because the transaction is in a transitional state as it moves from authorization to capture. If `auto_capture` is set to `false`, the transaction is only authorized and must be manually captured."""
    merchant_event_id: NotRequired[str]
    r"""The reference ID associated with a transaction event (auth, capture, refund, void). This is an arbitrary identifier created by the merchant. Bolt does not enforce any uniqueness constraints on this ID. It is up to the merchant to generate identifiers that properly fulfill its needs."""
    previous_transaction_id: NotRequired[Nullable[str]]
    r"""The unique ID associated with to the shopper's previous subscription-based transaction. Leave `null` for standard, non-subscription transactions."""
    processing_initiator: NotRequired[
        MerchantCreditCardAuthorizationProcessingInitiator
    ]
    r"""Determines who initiated the transaction (e.g. shopper, merchant) and how they did it (e.g. recurring subscription, on-file card).

    * `initial_card_on_file` - The first transaction made for a card. The system then saves this card for future transactions.
    * `initial_recurring` - The first time any card is used to pay for a recurring charge. For example, a subscription.
    * `stored_cardholder_initiated` - The subsequent (second, third, etc.) transactions a shopper initiates with a stored card. This includes every situation during which a cardholder requests a charge, for example if the cardholder requests a merchant charge their card.
    * `stored_merchant_initiated` - The subsequent (second, third, etc.) transactions a merchant initiates with a stored card only when the cardholder does not request the charge. For example, when a customer service representative buys on behalf of a shopper or when a business adds funds to a public transit card.
    * `following_recurring` - The subsequent (second, third, etc.) transactions  a card is used to pay for a recurring charge. For example, a subscription.
    * `cardholder_initiated` - When a cardholder begins a transaction that isn’t stored in Bolt and won’t be stored in Bolt for future transactions.
    * `recurring` - Any time a card is used to pay for a recurring charge (for example, a subscription). Only use this value when you don’t know if it’s the first recurring charge.

    """
    shipping_address: NotRequired[AddressTypedDict]
    r"""The Address object is used for billing, shipping, and physical store address use cases."""


class MerchantCreditCardAuthorization(BaseModel):
    r"""This request is used for authorizing a new, unsaved card."""

    cart: CartCreate

    create_bolt_account: bool
    r"""If `true`, the guest shopper is provided a Bolt Account using their email address as its unique ID; if `false`, no information is saved at checkout."""

    credit_card: CreditCard
    r"""The credit_card object is used to to pay for guest-checkout transactions or save payment method details to an account. Once saved, you can reference the credit card with the associated `credit_card_id` for future transactions. Add `billing_address` to this if storing a billing address for a returning shopper."""

    division_id: str
    r"""The unique ID associated to the merchant's Bolt Account division; Merchants can have different divisions to suit multiple use cases (storefronts, pay-by-link, phone order processing). Use the Bolt Merchant Dashboard to switch between divisions and find the division ID under `Merchant Division Public ID`."""

    source: MerchantCreditCardAuthorizationSource

    user_identifier: UserIdentifier
    r"""The object containing key lookup IDs associated with the shopper's account, such as the unique email address and phone number."""

    user_identity: UserIdentity

    auto_capture: Optional[bool] = None
    r"""This property determines how the transaction is processed after authorization. If set to `true`, the transaction is placed in a queue for automatic capture. This process is asynchronous, meaning the transaction may not immediately appear as captured after the authorization request. This is because the transaction is in a transitional state as it moves from authorization to capture. If `auto_capture` is set to `false`, the transaction is only authorized and must be manually captured."""

    merchant_event_id: Optional[str] = None
    r"""The reference ID associated with a transaction event (auth, capture, refund, void). This is an arbitrary identifier created by the merchant. Bolt does not enforce any uniqueness constraints on this ID. It is up to the merchant to generate identifiers that properly fulfill its needs."""

    previous_transaction_id: OptionalNullable[str] = UNSET
    r"""The unique ID associated with to the shopper's previous subscription-based transaction. Leave `null` for standard, non-subscription transactions."""

    processing_initiator: Optional[
        MerchantCreditCardAuthorizationProcessingInitiator
    ] = None
    r"""Determines who initiated the transaction (e.g. shopper, merchant) and how they did it (e.g. recurring subscription, on-file card).

    * `initial_card_on_file` - The first transaction made for a card. The system then saves this card for future transactions.
    * `initial_recurring` - The first time any card is used to pay for a recurring charge. For example, a subscription.
    * `stored_cardholder_initiated` - The subsequent (second, third, etc.) transactions a shopper initiates with a stored card. This includes every situation during which a cardholder requests a charge, for example if the cardholder requests a merchant charge their card.
    * `stored_merchant_initiated` - The subsequent (second, third, etc.) transactions a merchant initiates with a stored card only when the cardholder does not request the charge. For example, when a customer service representative buys on behalf of a shopper or when a business adds funds to a public transit card.
    * `following_recurring` - The subsequent (second, third, etc.) transactions  a card is used to pay for a recurring charge. For example, a subscription.
    * `cardholder_initiated` - When a cardholder begins a transaction that isn’t stored in Bolt and won’t be stored in Bolt for future transactions.
    * `recurring` - Any time a card is used to pay for a recurring charge (for example, a subscription). Only use this value when you don’t know if it’s the first recurring charge.

    """

    shipping_address: Optional[Address] = None
    r"""The Address object is used for billing, shipping, and physical store address use cases."""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = [
            "auto_capture",
            "merchant_event_id",
            "previous_transaction_id",
            "processing_initiator",
            "shipping_address",
        ]
        nullable_fields = ["previous_transaction_id"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
