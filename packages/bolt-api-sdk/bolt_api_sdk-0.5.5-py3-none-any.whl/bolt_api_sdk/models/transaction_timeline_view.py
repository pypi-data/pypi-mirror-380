"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .address_change_view import AddressChangeView, AddressChangeViewTypedDict
from .amount_view import AmountView, AmountViewTypedDict
from .consumer_summary_view import ConsumerSummaryView, ConsumerSummaryViewTypedDict
from .transaction_review_view import (
    TransactionReviewView,
    TransactionReviewViewTypedDict,
)
from .transaction_view import TransactionView, TransactionViewTypedDict
from bolt_api_sdk.types import BaseModel
from enum import Enum
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class TransactionTimelineViewType(str, Enum):
    COMPLETED = "completed"
    AUTHORIZED = "authorized"
    REVIEW = "review"
    NOTE = "note"
    VOIDED = "voided"
    CAPTURED = "captured"
    CREDITED = "credited"
    ADDRESS_CHANGE = "address_change"


class TransactionTimelineViewTypedDict(TypedDict):
    address_change: NotRequired[AddressChangeViewTypedDict]
    amount: NotRequired[AmountViewTypedDict]
    consumer: NotRequired[ConsumerSummaryViewTypedDict]
    date_: NotRequired[float]
    note: NotRequired[str]
    review: NotRequired[TransactionReviewViewTypedDict]
    transaction: NotRequired[TransactionViewTypedDict]
    type: NotRequired[TransactionTimelineViewType]
    visibility: NotRequired[str]


class TransactionTimelineView(BaseModel):
    address_change: Optional[AddressChangeView] = None

    amount: Optional[AmountView] = None

    consumer: Optional[ConsumerSummaryView] = None

    date_: Annotated[Optional[float], pydantic.Field(alias="date")] = None

    note: Optional[str] = None

    review: Optional[TransactionReviewView] = None

    transaction: Optional[TransactionView] = None

    type: Optional[TransactionTimelineViewType] = None

    visibility: Optional[str] = None
