"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .address_account import AddressAccount, AddressAccountTypedDict
from .shopper_metadata import ShopperMetadata, ShopperMetadataTypedDict
from bolt_api_sdk.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)
from bolt_api_sdk.utils import (
    FieldMetadata,
    HeaderMetadata,
    RequestMetadata,
    SecurityMetadata,
)
from enum import Enum
import pydantic
from pydantic import model_serializer
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AddAddressSecurityTypedDict(TypedDict):
    o_auth: str
    x_api_key: str


class AddAddressSecurity(BaseModel):
    o_auth: Annotated[
        str,
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True, scheme_type="oauth2", field_name="Authorization"
            )
        ),
    ]

    x_api_key: Annotated[
        str,
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="apiKey",
                sub_type="header",
                field_name="X-API-Key",
            )
        ),
    ]


class AddAddressRequestTypedDict(TypedDict):
    x_publishable_key: NotRequired[str]
    r"""The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED]."""
    idempotency_key: NotRequired[str]
    r"""A key created by merchants that ensures `POST` and `PATCH` requests are only performed once. [Read more about Idempotent Requests here](/developers/references/idempotency/)."""
    address_account: NotRequired[AddressAccountTypedDict]


class AddAddressRequest(BaseModel):
    x_publishable_key: Annotated[
        Optional[str],
        pydantic.Field(alias="X-Publishable-Key"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None
    r"""The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED]."""

    idempotency_key: Annotated[
        Optional[str],
        pydantic.Field(alias="Idempotency-Key"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None
    r"""A key created by merchants that ensures `POST` and `PATCH` requests are only performed once. [Read more about Idempotent Requests here](/developers/references/idempotency/)."""

    address_account: Annotated[
        Optional[AddressAccount],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None


class AddAddressPriority(str, Enum):
    r"""The shopper-indicated priority of this address compared to other addresses on their account."""

    PRIMARY = "primary"
    LISTED = "listed"


class AddAddressResponseTypedDict(TypedDict):
    r"""The address object returned in the response."""

    company: NotRequired[str]
    r"""The company name associated with this address."""
    country: NotRequired[str]
    r"""The name of the country associated with this address."""
    country_code: NotRequired[str]
    r"""The ISO 3166-1 alpha-2 country code associated with this address."""
    door_code: NotRequired[Nullable[str]]
    r"""The building door code or community gate code."""
    email_address: NotRequired[str]
    r"""An email address."""
    first_name: NotRequired[str]
    r"""The given name of the person associated with this address."""
    id: NotRequired[str]
    r"""The unique Bolt ID associated with this address."""
    last_name: NotRequired[str]
    r"""The surname of the person associated with this address."""
    locality: NotRequired[str]
    r"""The city name details associated with this address."""
    name: NotRequired[str]
    r"""The given and surname of the person associated with this address."""
    phone_number: NotRequired[str]
    r"""A phone number following E164 standards, in its globalized format, i.e. prepended with a plus sign."""
    postal_code: NotRequired[str]
    r"""The postal or zip code associated with this address."""
    priority: NotRequired[Nullable[AddAddressPriority]]
    r"""The shopper-indicated priority of this address compared to other addresses on their account."""
    region: NotRequired[str]
    r"""The region details such as state or province associated with this address."""
    region_code: NotRequired[Nullable[str]]
    r"""The the ISO 3166-2 region code associated with this address."""
    street_address1: NotRequired[str]
    r"""The street number and street name of the address."""
    street_address2: NotRequired[str]
    r"""Any apartment, floor, or unit details."""
    street_address3: NotRequired[Nullable[str]]
    r"""Any additional street address details."""
    street_address4: NotRequired[Nullable[str]]
    r"""Any additional street address details."""
    metadata: NotRequired[Nullable[ShopperMetadataTypedDict]]
    r"""A key-value pair object that allows users to store arbitrary information associated with an object.  For any individual account object, we allow up to 50 keys. Keys can be up to 40 characters long and values can be up to 500 characters long.  Metadata should not contain any sensitive customer information, like PII (Personally Identifiable Information). For more information about metadata, see our [documentation](https://help.bolt.com/developers/references/embedded-metadata/).

    """
    default: NotRequired[bool]


class AddAddressResponse(BaseModel):
    r"""The address object returned in the response."""

    company: Optional[str] = None
    r"""The company name associated with this address."""

    country: Optional[str] = None
    r"""The name of the country associated with this address."""

    country_code: Optional[str] = None
    r"""The ISO 3166-1 alpha-2 country code associated with this address."""

    door_code: OptionalNullable[str] = UNSET
    r"""The building door code or community gate code."""

    email_address: Optional[str] = None
    r"""An email address."""

    first_name: Optional[str] = None
    r"""The given name of the person associated with this address."""

    id: Optional[str] = None
    r"""The unique Bolt ID associated with this address."""

    last_name: Optional[str] = None
    r"""The surname of the person associated with this address."""

    locality: Optional[str] = None
    r"""The city name details associated with this address."""

    name: Optional[str] = None
    r"""The given and surname of the person associated with this address."""

    phone_number: Optional[str] = None
    r"""A phone number following E164 standards, in its globalized format, i.e. prepended with a plus sign."""

    postal_code: Optional[str] = None
    r"""The postal or zip code associated with this address."""

    priority: OptionalNullable[AddAddressPriority] = UNSET
    r"""The shopper-indicated priority of this address compared to other addresses on their account."""

    region: Optional[str] = None
    r"""The region details such as state or province associated with this address."""

    region_code: OptionalNullable[str] = UNSET
    r"""The the ISO 3166-2 region code associated with this address."""

    street_address1: Optional[str] = None
    r"""The street number and street name of the address."""

    street_address2: Optional[str] = None
    r"""Any apartment, floor, or unit details."""

    street_address3: OptionalNullable[str] = UNSET
    r"""Any additional street address details."""

    street_address4: OptionalNullable[str] = UNSET
    r"""Any additional street address details."""

    metadata: OptionalNullable[ShopperMetadata] = UNSET
    r"""A key-value pair object that allows users to store arbitrary information associated with an object.  For any individual account object, we allow up to 50 keys. Keys can be up to 40 characters long and values can be up to 500 characters long.  Metadata should not contain any sensitive customer information, like PII (Personally Identifiable Information). For more information about metadata, see our [documentation](https://help.bolt.com/developers/references/embedded-metadata/).

    """

    default: Optional[bool] = None

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = [
            "company",
            "country",
            "country_code",
            "door_code",
            "email_address",
            "first_name",
            "id",
            "last_name",
            "locality",
            "name",
            "phone_number",
            "postal_code",
            "priority",
            "region",
            "region_code",
            "street_address1",
            "street_address2",
            "street_address3",
            "street_address4",
            "metadata",
            "default",
        ]
        nullable_fields = [
            "door_code",
            "priority",
            "region_code",
            "street_address3",
            "street_address4",
            "metadata",
        ]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
