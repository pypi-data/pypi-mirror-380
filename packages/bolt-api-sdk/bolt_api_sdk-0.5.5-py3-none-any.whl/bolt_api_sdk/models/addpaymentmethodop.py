"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .address import Address, AddressTypedDict
from .shopper_metadata import ShopperMetadata, ShopperMetadataTypedDict
from bolt_api_sdk.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)
from bolt_api_sdk.utils import (
    FieldMetadata,
    HeaderMetadata,
    RequestMetadata,
    SecurityMetadata,
)
from enum import Enum
import pydantic
from pydantic import model_serializer
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AddPaymentMethodSecurityTypedDict(TypedDict):
    o_auth: str
    x_api_key: str


class AddPaymentMethodSecurity(BaseModel):
    o_auth: Annotated[
        str,
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True, scheme_type="oauth2", field_name="Authorization"
            )
        ),
    ]

    x_api_key: Annotated[
        str,
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="apiKey",
                sub_type="header",
                field_name="X-API-Key",
            )
        ),
    ]


class AddPaymentMethodNetwork(str, Enum):
    VISA = "visa"
    MASTERCARD = "mastercard"
    AMEX = "amex"
    DISCOVER = "discover"
    DINERSCLUB = "dinersclub"
    JCB = "jcb"
    UNIONPAY = "unionpay"
    ALLIANCEDATA = "alliancedata"
    CITIPLCC = "citiplcc"
    UNKNOWN = "unknown"


class AddPaymentMethodPriority(int, Enum):
    r"""Used to indicate the card's priority. '1' indicates primary, while '2' indicates a secondary card."""

    ONE = 1
    TWO = 2


class AddPaymentMethodTokenType(str, Enum):
    r"""Used to define which payment processor generated the token for this credit card.  For those using Bolt's tokenizer, the value must be `bolt`."""

    VANTIV = "vantiv"
    APPLEPAY = "applepay"
    BOLT = "bolt"
    STRIPE = "stripe"
    PLCC = "plcc"


class AddPaymentMethodRequestBodyTypedDict(TypedDict):
    r"""The `credit_card` object is used to to pay for guest checkout transactions or save payment method details to an account. Once saved, you can reference the credit card with the associated `credit_card_id` for future transactions."""

    billing_address: AddressTypedDict
    r"""The Address object is used for billing, shipping, and physical store address use cases."""
    expiration: str
    r"""The expiration date of the credit card."""
    token: str
    r"""The Bolt token associated to the credit card."""
    billing_address_id: NotRequired[Nullable[str]]
    r"""The unique Bolt ID associated with a saved shopper address. This can be obtained by accessing a shopper's account details. If you use this field, you do not need to use `billing_address`.

    """
    bin: NotRequired[str]
    r"""The Bank Identification Number for the credit card. This is typically the first 4-6 digits of the credit card number."""
    cryptogram: NotRequired[str]
    eci: NotRequired[str]
    last4: NotRequired[str]
    r"""The last 4 digits of the credit card number."""
    metadata: NotRequired[Nullable[ShopperMetadataTypedDict]]
    r"""A key-value pair object that allows users to store arbitrary information associated with an object.  For any individual account object, we allow up to 50 keys. Keys can be up to 40 characters long and values can be up to 500 characters long.  Metadata should not contain any sensitive customer information, like PII (Personally Identifiable Information). For more information about metadata, see our [documentation](https://help.bolt.com/developers/references/embedded-metadata/).

    """
    network: NotRequired[AddPaymentMethodNetwork]
    number: NotRequired[str]
    r"""Used to provide ApplePay DPAN or private label credit card PAN when applicable. Required when charging a private label credit card."""
    postal_code: NotRequired[str]
    r"""Used for the postal or zip code associated with the credit card."""
    priority: NotRequired[AddPaymentMethodPriority]
    r"""Used to indicate the card's priority. '1' indicates primary, while '2' indicates a secondary card.

    """
    save: NotRequired[bool]
    r"""Determines whether or not the credit card will be saved to the shopper's account. Defaults to `true`.

    """
    token_type: NotRequired[AddPaymentMethodTokenType]
    r"""Used to define which payment processor generated the token for this credit card.  For those using Bolt's tokenizer, the value must be `bolt`.

    """
    currency: NotRequired[str]
    r"""This can be left empty. A 3-digit ISO code for currency that will be used in the credit card authorization."""


class AddPaymentMethodRequestBody(BaseModel):
    r"""The `credit_card` object is used to to pay for guest checkout transactions or save payment method details to an account. Once saved, you can reference the credit card with the associated `credit_card_id` for future transactions."""

    billing_address: Address
    r"""The Address object is used for billing, shipping, and physical store address use cases."""

    expiration: str
    r"""The expiration date of the credit card."""

    token: str
    r"""The Bolt token associated to the credit card."""

    billing_address_id: OptionalNullable[str] = UNSET
    r"""The unique Bolt ID associated with a saved shopper address. This can be obtained by accessing a shopper's account details. If you use this field, you do not need to use `billing_address`.

    """

    bin: Optional[str] = None
    r"""The Bank Identification Number for the credit card. This is typically the first 4-6 digits of the credit card number."""

    cryptogram: Optional[str] = None

    eci: Optional[str] = None

    last4: Optional[str] = None
    r"""The last 4 digits of the credit card number."""

    metadata: OptionalNullable[ShopperMetadata] = UNSET
    r"""A key-value pair object that allows users to store arbitrary information associated with an object.  For any individual account object, we allow up to 50 keys. Keys can be up to 40 characters long and values can be up to 500 characters long.  Metadata should not contain any sensitive customer information, like PII (Personally Identifiable Information). For more information about metadata, see our [documentation](https://help.bolt.com/developers/references/embedded-metadata/).

    """

    network: Optional[AddPaymentMethodNetwork] = None

    number: Optional[str] = None
    r"""Used to provide ApplePay DPAN or private label credit card PAN when applicable. Required when charging a private label credit card."""

    postal_code: Optional[str] = None
    r"""Used for the postal or zip code associated with the credit card."""

    priority: Optional[AddPaymentMethodPriority] = None
    r"""Used to indicate the card's priority. '1' indicates primary, while '2' indicates a secondary card.

    """

    save: Optional[bool] = None
    r"""Determines whether or not the credit card will be saved to the shopper's account. Defaults to `true`.

    """

    token_type: Optional[AddPaymentMethodTokenType] = None
    r"""Used to define which payment processor generated the token for this credit card.  For those using Bolt's tokenizer, the value must be `bolt`.

    """

    currency: Optional[str] = None
    r"""This can be left empty. A 3-digit ISO code for currency that will be used in the credit card authorization."""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = [
            "billing_address_id",
            "bin",
            "cryptogram",
            "eci",
            "last4",
            "metadata",
            "network",
            "number",
            "postal_code",
            "priority",
            "save",
            "token_type",
            "currency",
        ]
        nullable_fields = ["billing_address_id", "metadata"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m


class AddPaymentMethodRequestTypedDict(TypedDict):
    x_publishable_key: NotRequired[str]
    r"""The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED]."""
    idempotency_key: NotRequired[str]
    r"""A key created by merchants that ensures `POST` and `PATCH` requests are only performed once. [Read more about Idempotent Requests here](/developers/references/idempotency/)."""
    request_body: NotRequired[AddPaymentMethodRequestBodyTypedDict]


class AddPaymentMethodRequest(BaseModel):
    x_publishable_key: Annotated[
        Optional[str],
        pydantic.Field(alias="X-Publishable-Key"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None
    r"""The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED]."""

    idempotency_key: Annotated[
        Optional[str],
        pydantic.Field(alias="Idempotency-Key"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None
    r"""A key created by merchants that ensures `POST` and `PATCH` requests are only performed once. [Read more about Idempotent Requests here](/developers/references/idempotency/)."""

    request_body: Annotated[
        Optional[AddPaymentMethodRequestBody],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None
