{"!instanceof":{"InterfacePass":[],"ListOption":[],"Option":["anonymous_0","anonymous_1","anonymous_2","anonymous_3","anonymous_4","anonymous_5","anonymous_6","anonymous_7","anonymous_8","anonymous_9"],"Pass":["ConvertTopToLinalg","ConvertTopToTosa","ConvertTopToTpu"],"PassBase":["ConvertTopToLinalg","ConvertTopToTosa","ConvertTopToTpu"],"Statistic":[]},"!tablegen_json_version":1,"ConvertTopToLinalg":{"!anonymous":false,"!fields":[],"!name":"ConvertTopToLinalg","!superclasses":["PassBase","Pass"],"argument":"convert-top-to-linalg","baseClass":"::mlir::OperationPass<ModuleOp>","constructor":"tpu_mlir::createConvertTopToLinalg()","dependentDialects":["tpu_mlir::top::TopDialect","mlir::linalg::LinalgDialect"],"description":"","options":[{"def":"anonymous_9","kind":"def","printable":"anonymous_9"}],"statistics":[],"summary":"Convert top-level Top Ops to Linalg Ops"},"ConvertTopToTosa":{"!anonymous":false,"!fields":[],"!name":"ConvertTopToTosa","!superclasses":["PassBase","Pass"],"argument":"convert-top-to-tosa","baseClass":"::mlir::OperationPass<ModuleOp>","constructor":"tpu_mlir::createConvertTopToTosa()","dependentDialects":["tpu_mlir::top::TopDialect","mlir::tosa::TosaDialect"],"description":"","options":[{"def":"anonymous_8","kind":"def","printable":"anonymous_8"}],"statistics":[],"summary":"Convert top-level Top Ops to Tosa Ops"},"ConvertTopToTpu":{"!anonymous":false,"!fields":[],"!name":"ConvertTopToTpu","!superclasses":["PassBase","Pass"],"argument":"convert-top-to-tpu","baseClass":"::mlir::OperationPass<ModuleOp>","constructor":"tpu_mlir::createConvertTopToTpu()","dependentDialects":["tpu_mlir::top::TopDialect","tpu_mlir::tpu::TpuDialect"],"description":"","options":[{"def":"anonymous_0","kind":"def","printable":"anonymous_0"},{"def":"anonymous_1","kind":"def","printable":"anonymous_1"},{"def":"anonymous_2","kind":"def","printable":"anonymous_2"},{"def":"anonymous_3","kind":"def","printable":"anonymous_3"},{"def":"anonymous_4","kind":"def","printable":"anonymous_4"},{"def":"anonymous_5","kind":"def","printable":"anonymous_5"},{"def":"anonymous_6","kind":"def","printable":"anonymous_6"},{"def":"anonymous_7","kind":"def","printable":"anonymous_7"}],"statistics":[],"summary":"Convert top-level Top Ops to Tpu Ops"},"anonymous_0":{"!anonymous":true,"!fields":[],"!name":"anonymous_0","!superclasses":["Option"],"additionalOptFlags":"","argument":"qtable","cppName":"qtable","defaultValue":"","description":"a table of Ops that quantized to specific mode","type":"std::string"},"anonymous_1":{"!anonymous":true,"!fields":[],"!name":"anonymous_1","!superclasses":["Option"],"additionalOptFlags":"","argument":"asymmetric","cppName":"isAsymmetric","defaultValue":"false","description":"true for asymmetric quantization, or false for symmetric","type":"bool"},"anonymous_2":{"!anonymous":true,"!fields":[],"!name":"anonymous_2","!superclasses":["Option"],"additionalOptFlags":"","argument":"doWinograd","cppName":"doWinograd","defaultValue":"false","description":"true for trying winograd ,or false for not","type":"bool"},"anonymous_3":{"!anonymous":true,"!fields":[],"!name":"anonymous_3","!superclasses":["Option"],"additionalOptFlags":"","argument":"weightFileName","cppName":"weightFileName","defaultValue":"","description":"weight file name to save","type":"std::string"},"anonymous_4":{"!anonymous":true,"!fields":[],"!name":"anonymous_4","!superclasses":["Option"],"additionalOptFlags":"","argument":"q_group_size","cppName":"quantGroupSize","defaultValue":"0","description":"group size for per-group W4A16/W8A16 quant","type":"int"},"anonymous_5":{"!anonymous":true,"!fields":[],"!name":"anonymous_5","!superclasses":["Option"],"additionalOptFlags":"","argument":"q_symmetric","cppName":"quantSymmetric","defaultValue":"false","description":"true for symmetrci w4a16/w8a16 quant, false for asymmetric","type":"bool"},"anonymous_6":{"!anonymous":true,"!fields":[],"!name":"anonymous_6","!superclasses":["Option"],"additionalOptFlags":"","argument":"matmul_perchannel","cppName":"matmulPerchannel","defaultValue":"false","description":"true if matmul uses perchannel quant, or false for pertensor quant","type":"bool"},"anonymous_7":{"!anonymous":true,"!fields":[],"!name":"anonymous_7","!superclasses":["Option"],"additionalOptFlags":"","argument":"gelu_mode","cppName":"geluMode","defaultValue":"\"normal\"","description":"supported values: normal, tanh, sigm","type":"std::string"},"anonymous_8":{"!anonymous":true,"!fields":[],"!name":"anonymous_8","!superclasses":["Option"],"additionalOptFlags":"","argument":"includeWeight","cppName":"includeWeight","defaultValue":"false","description":"true for including weight datas in tosa.mlir, or false for not","type":"bool"},"anonymous_9":{"!anonymous":true,"!fields":[],"!name":"anonymous_9","!superclasses":["Option"],"additionalOptFlags":"","argument":"includeWeight","cppName":"includeWeight","defaultValue":"false","description":"true for including weight datas in linalg.mlir, or false for not","type":"bool"}}
