[project]
name = "pyinfra"
dynamic = [
    "version",
]
description = "pyinfra automates/provisions/manages/deploys infrastructure."
readme = "README.md"
authors = [
    { name = "Nick / Fizzadar", email = "pointlessrambler@gmail.com" },
]
license = "MIT"
license-files = ["LICENSE.md"]
requires-python = ">=3.10,<4.0"
dependencies = [
    "gevent>=1.5",
    "paramiko>=2.7,<4", # 2.7 (2019) adds OpenSSH key format + Match SSH config
    "click>2",
    "jinja2>3,<4",
    "python-dateutil>2,<3",
    "typeguard>=4,<5",
    "distro>=1.6,<2",
    "packaging>=16.1",
    "typing-extensions; python_version < '3.11'", # Backport of typing for Unpack (added 3.11)
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Information Technology",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Systems Administration",
    "Topic :: System :: Installation/Setup",
    "Topic :: Utilities",
]

[project.urls]
homepage = "https://pyinfra.com"
documentation = "https://docs.pyinfra.com"
repository = "https://github.com/pyinfra-dev/pyinfra"

[dependency-groups]
test = [
    "click>=8.2",
    "pytest>=8.3.5,<9",
    "coverage>=7.7.1,<8",
    "pytest-cov>=7.0.0,<8",
    "pytest-testinfra>=10.2.2,<11",
    "pyyaml>=6.0.2,<7",
    "mypy==1.17.1",
    "types-cryptography>=3.3.23.2,<4",
    "types-paramiko>=2.7,<4",
    "types-python-dateutil>2,<3",
    "types-PyYAML>6,<7",
    "ruff>=0.13.1",
    "pyinfra-testgen==0.1.1",
]

docs = [
    "pyinfra-guzzle_sphinx_theme>=0.18; python_version >= '3.13'",
    "myst-parser>=4.0.1,<5; python_version >= '3.13'",
    "sphinx==8.2.3; python_version >= '3.13'",
]

# dev includes test + docs + extra dev-only tools
dev = [
    {"include-group" = "test" },
    {"include-group" = "docs" },
    # dev debugging
    "ipython",
    "ipdb",
    "ipdbplugin",
    # dev-only lint extras
    "typos>=1.36.2",
    "redbaron",
]

[project.scripts]
pyinfra = "pyinfra_cli.main:main"

[project.entry-points."pyinfra.connectors"]
chroot = "pyinfra.connectors.chroot:ChrootConnector"
docker = "pyinfra.connectors.docker:DockerConnector"
podman = "pyinfra.connectors.docker:PodmanConnector"
local = "pyinfra.connectors.local:LocalConnector"
ssh = "pyinfra.connectors.ssh:SSHConnector"
dockerssh = "pyinfra.connectors.dockerssh:DockerSSHConnector"
# Inventory only connectors
terraform = "pyinfra.connectors.terraform:TerraformInventoryConnector"
vagrant = "pyinfra.connectors.vagrant:VagrantInventoryConnector"

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/pyinfra", "src/pyinfra_cli"]

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.ruff]
line-length = 100

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true
enable_incomplete_feature = "Unpack"
enable_error_code = "explicit-override"
files = "src/pyinfra,src/pyinfra_cli"

[tool.pytest.ini_options]
# Skip end-to-end tests by default
addopts = "-m'not end_to_end'"
# Ignore TestGenerator from testgen package to avoid collection warnings
python_classes = "Test* !TestGenerator"
markers = [
    "end_to_end",
    "end_to_end_docker",
    "end_to_end_podman",
    "end_to_end_local",
    "end_to_end_ssh"
]

[tool.coverage.run]
concurrency = ["gevent"]

[tool.coverage.report]
show_missing = true
skip_covered = true
precision = 1
include = ["src/pyinfra/*", "src/pyinfra_cli/*"]
