[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "django-cloudflareimages-toolkit"
version = "1.0.8"
description = "Comprehensive Django toolkit for Cloudflare Images with direct creator upload, transformations, and management"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "PacNPal", email = "pac@pacnp.al"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["django", "cloudflare", "images", "upload", "direct-creator"]
requires-python = ">=3.10"
dependencies = [
    "Django>=4.2",
    "djangorestframework>=3.14.0",
    "requests>=2.28.0",
    "Pillow>=9.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "django-stubs>=4.2.0",
    "djangorestframework-stubs>=3.14.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=4.0.0",
    "factory-boy>=3.2.0",
    "responses>=0.23.0",
]

[project.urls]
Homepage = "https://github.com/Pacficient-Labs/django-cloudflareimages-toolkit"
Documentation = "https://django-cloudflareimages-toolkit.readthedocs.io/"
Repository = "https://github.com/Pacficient-Labs/django-cloudflareimages-toolkit.git"
Issues = "https://github.com/Pacficient-Labs/django-cloudflareimages-toolkit/issues"

[tool.hatch.build.targets.wheel]
packages = ["django_cloudflareimages_toolkit"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_django = "django"
known_first_party = "django_cloudflareimages_toolkit"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "DJANGO", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]

[tool.django-stubs]
django_settings_module = "tests.settings"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = "--cov=django_cloudflareimages_toolkit --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["django_cloudflareimages_toolkit"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"*/migrations/*" = ["E501"]

[tool.ruff.isort]
known-first-party = ["django_cloudflareimages_toolkit"]
known-third-party = ["django", "rest_framework"]
