# Autogenerated by nbdev

d = {
    "settings": {
        "branch": "master",
        "doc_baseurl": "/newrelic-sb-sdk/",
        "doc_host": "https://dynovaio.github.io",
        "git_url": "https://github.com/dynova/newrelic-sb-sdk/tree/master/",
        "lib_path": "src/newrelic_sb_sdk",
    },
    "syms": {
        "newrelic_sb_sdk.graphql.enums": {
            "newrelic_sb_sdk.graphql.enums.AgentApplicationBrowserLoader": (
                "GraphQL/enums.html#agentapplicationbrowserloader",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AgentApplicationSegmentsListType": (
                "GraphQL/enums.html#agentapplicationsegmentslisttype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AgentApplicationSettingsBrowserLoader": (
                "GraphQL/enums.html#agentapplicationsettingsbrowserloader",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AgentApplicationSettingsBrowserLoaderInput": (
                "GraphQL/enums.html#agentapplicationsettingsbrowserloaderinput",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AgentApplicationSettingsMobileSessionReplayMode": (
                "GraphQL/enums.html#agentapplicationsettingsmobilesessionreplaymode",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AgentApplicationSettingsMobileSessionReplayModeInput": (
                "GraphQL/enums.html#agentapplicationsettingsmobilesessionreplaymodeinput",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AgentApplicationSettingsNetworkFilterMode": (
                "GraphQL/enums.html#agentapplicationsettingsnetworkfiltermode",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AgentApplicationSettingsRecordSqlEnum": (
                "GraphQL/enums.html#agentapplicationsettingsrecordsqlenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AgentApplicationSettingsSessionTraceMode": (
                "GraphQL/enums.html#agentapplicationsettingssessiontracemode",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AgentApplicationSettingsSessionTraceModeInput": (
                "GraphQL/enums.html#agentapplicationsettingssessiontracemodeinput",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AgentApplicationSettingsThresholdTypeEnum": (
                "GraphQL/enums.html#agentapplicationsettingsthresholdtypeenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AgentApplicationSettingsTracer": (
                "GraphQL/enums.html#agentapplicationsettingstracer",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AgentApplicationSettingsUpdateErrorClass": (
                "GraphQL/enums.html#agentapplicationsettingsupdateerrorclass",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AgentFeaturesFilter": (
                "GraphQL/enums.html#agentfeaturesfilter",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AgentReleasesFilter": (
                "GraphQL/enums.html#agentreleasesfilter",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiDecisionsDecisionSortMethod": (
                "GraphQL/enums.html#aidecisionsdecisionsortmethod",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiDecisionsDecisionState": (
                "GraphQL/enums.html#aidecisionsdecisionstate",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiDecisionsDecisionType": (
                "GraphQL/enums.html#aidecisionsdecisiontype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiDecisionsIncidentSelect": (
                "GraphQL/enums.html#aidecisionsincidentselect",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiDecisionsIssuePriority": (
                "GraphQL/enums.html#aidecisionsissuepriority",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiDecisionsOpinion": (
                "GraphQL/enums.html#aidecisionsopinion",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiDecisionsResultType": (
                "GraphQL/enums.html#aidecisionsresulttype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiDecisionsRuleSource": (
                "GraphQL/enums.html#aidecisionsrulesource",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiDecisionsRuleState": (
                "GraphQL/enums.html#aidecisionsrulestate",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiDecisionsRuleType": (
                "GraphQL/enums.html#aidecisionsruletype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiDecisionsSuggestionState": (
                "GraphQL/enums.html#aidecisionssuggestionstate",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiDecisionsVertexClass": (
                "GraphQL/enums.html#aidecisionsvertexclass",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiIssuesIncidentState": (
                "GraphQL/enums.html#aiissuesincidentstate",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiIssuesIssueMutingState": (
                "GraphQL/enums.html#aiissuesissuemutingstate",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiIssuesIssueState": (
                "GraphQL/enums.html#aiissuesissuestate",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiIssuesIssueUserAction": (
                "GraphQL/enums.html#aiissuesissueuseraction",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiIssuesPriority": (
                "GraphQL/enums.html#aiissuespriority",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiNotificationsAuthType": (
                "GraphQL/enums.html#ainotificationsauthtype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiNotificationsChannelFields": (
                "GraphQL/enums.html#ainotificationschannelfields",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiNotificationsChannelStatus": (
                "GraphQL/enums.html#ainotificationschannelstatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiNotificationsChannelType": (
                "GraphQL/enums.html#ainotificationschanneltype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiNotificationsDestinationFields": (
                "GraphQL/enums.html#ainotificationsdestinationfields",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiNotificationsDestinationStatus": (
                "GraphQL/enums.html#ainotificationsdestinationstatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiNotificationsDestinationType": (
                "GraphQL/enums.html#ainotificationsdestinationtype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiNotificationsErrorType": (
                "GraphQL/enums.html#ainotificationserrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiNotificationsProduct": (
                "GraphQL/enums.html#ainotificationsproduct",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiNotificationsResult": (
                "GraphQL/enums.html#ainotificationsresult",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiNotificationsSortOrder": (
                "GraphQL/enums.html#ainotificationssortorder",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiNotificationsSuggestionFilterType": (
                "GraphQL/enums.html#ainotificationssuggestionfiltertype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiNotificationsUiComponentType": (
                "GraphQL/enums.html#ainotificationsuicomponenttype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiNotificationsUiComponentValidation": (
                "GraphQL/enums.html#ainotificationsuicomponentvalidation",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiNotificationsVariableCategory": (
                "GraphQL/enums.html#ainotificationsvariablecategory",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiNotificationsVariableFields": (
                "GraphQL/enums.html#ainotificationsvariablefields",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiNotificationsVariableType": (
                "GraphQL/enums.html#ainotificationsvariabletype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiTopologyCollectorResultType": (
                "GraphQL/enums.html#aitopologycollectorresulttype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiTopologyCollectorVertexClass": (
                "GraphQL/enums.html#aitopologycollectorvertexclass",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiTopologyVertexClass": (
                "GraphQL/enums.html#aitopologyvertexclass",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiWorkflowsBatchCreateMigratedWorkflowsErrorType": (
                "GraphQL/enums.html#aiworkflowsbatchcreatemigratedworkflowserrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiWorkflowsBatchDeleteMigratedWorkflowsErrorType": (
                "GraphQL/enums.html#aiworkflowsbatchdeletemigratedworkflowserrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiWorkflowsCreateErrorType": (
                "GraphQL/enums.html#aiworkflowscreateerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiWorkflowsDeleteErrorType": (
                "GraphQL/enums.html#aiworkflowsdeleteerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiWorkflowsDestinationType": (
                "GraphQL/enums.html#aiworkflowsdestinationtype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiWorkflowsEnrichmentType": (
                "GraphQL/enums.html#aiworkflowsenrichmenttype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiWorkflowsFetchWorkflowsByIssuesFilterErrorType": (
                "GraphQL/enums.html#aiworkflowsfetchworkflowsbyissuesfiltererrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiWorkflowsFilterType": (
                "GraphQL/enums.html#aiworkflowsfiltertype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiWorkflowsMutingRulesHandling": (
                "GraphQL/enums.html#aiworkflowsmutingruleshandling",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiWorkflowsNotificationTrigger": (
                "GraphQL/enums.html#aiworkflowsnotificationtrigger",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiWorkflowsOperator": (
                "GraphQL/enums.html#aiworkflowsoperator",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiWorkflowsTestErrorType": (
                "GraphQL/enums.html#aiworkflowstesterrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiWorkflowsTestNotificationResponseStatus": (
                "GraphQL/enums.html#aiworkflowstestnotificationresponsestatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiWorkflowsTestResponseStatus": (
                "GraphQL/enums.html#aiworkflowstestresponsestatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AiWorkflowsUpdateErrorType": (
                "GraphQL/enums.html#aiworkflowsupdateerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsActionOnMutingRuleWindowEnded": (
                "GraphQL/enums.html#alertsactiononmutingrulewindowended",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsAsNrqlSourceProduct": (
                "GraphQL/enums.html#alertsasnrqlsourceproduct",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsDayOfWeek": (
                "GraphQL/enums.html#alertsdayofweek",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsFillOption": (
                "GraphQL/enums.html#alertsfilloption",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsIncidentPreference": (
                "GraphQL/enums.html#alertsincidentpreference",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsMutingRuleConditionGroupOperator": (
                "GraphQL/enums.html#alertsmutingruleconditiongroupoperator",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsMutingRuleConditionOperator": (
                "GraphQL/enums.html#alertsmutingruleconditionoperator",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsMutingRuleScheduleRepeat": (
                "GraphQL/enums.html#alertsmutingruleschedulerepeat",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsMutingRuleStatus": (
                "GraphQL/enums.html#alertsmutingrulestatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsNotificationChannelCreateErrorType": (
                "GraphQL/enums.html#alertsnotificationchannelcreateerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsNotificationChannelDeleteErrorType": (
                "GraphQL/enums.html#alertsnotificationchanneldeleteerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsNotificationChannelType": (
                "GraphQL/enums.html#alertsnotificationchanneltype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsNotificationChannelUpdateErrorType": (
                "GraphQL/enums.html#alertsnotificationchannelupdateerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsNotificationChannelsAddToPolicyErrorType": (
                "GraphQL/enums.html#alertsnotificationchannelsaddtopolicyerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsNotificationChannelsRemoveFromPolicyErrorType": (
                "GraphQL/enums.html#alertsnotificationchannelsremovefrompolicyerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsNrqlBaselineDirection": (
                "GraphQL/enums.html#alertsnrqlbaselinedirection",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsNrqlConditionPriority": (
                "GraphQL/enums.html#alertsnrqlconditionpriority",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsNrqlConditionTermsOperator": (
                "GraphQL/enums.html#alertsnrqlconditiontermsoperator",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsNrqlConditionThresholdOccurrences": (
                "GraphQL/enums.html#alertsnrqlconditionthresholdoccurrences",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsNrqlConditionType": (
                "GraphQL/enums.html#alertsnrqlconditiontype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsNrqlDynamicConditionTermsOperator": (
                "GraphQL/enums.html#alertsnrqldynamicconditiontermsoperator",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsNrqlSignalSeasonality": (
                "GraphQL/enums.html#alertsnrqlsignalseasonality",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsNrqlStaticConditionValueFunction": (
                "GraphQL/enums.html#alertsnrqlstaticconditionvaluefunction",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsOpsGenieDataCenterRegion": (
                "GraphQL/enums.html#alertsopsgeniedatacenterregion",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsSignalAggregationMethod": (
                "GraphQL/enums.html#alertssignalaggregationmethod",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsViolationTimeLimit": (
                "GraphQL/enums.html#alertsviolationtimelimit",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AlertsWebhookCustomPayloadType": (
                "GraphQL/enums.html#alertswebhookcustompayloadtype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ApiAccessIngestKeyErrorType": (
                "GraphQL/enums.html#apiaccessingestkeyerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ApiAccessIngestKeyType": (
                "GraphQL/enums.html#apiaccessingestkeytype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ApiAccessKeyType": (
                "GraphQL/enums.html#apiaccesskeytype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ApiAccessUserKeyErrorType": (
                "GraphQL/enums.html#apiaccessuserkeyerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AuthorizationManagementGranteeTypeEnum": (
                "GraphQL/enums.html#authorizationmanagementgranteetypeenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.AuthorizationManagementIamParentScopeTypeEnum": (
                "GraphQL/enums.html#authorizationmanagementiamparentscopetypeenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.BrowserAgentInstallType": (
                "GraphQL/enums.html#browseragentinstalltype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ChangeTrackingCategoryType": (
                "GraphQL/enums.html#changetrackingcategorytype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ChangeTrackingDeploymentType": (
                "GraphQL/enums.html#changetrackingdeploymenttype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ChangeTrackingValidationFlag": (
                "GraphQL/enums.html#changetrackingvalidationflag",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ChartFormatType": (
                "GraphQL/enums.html#chartformattype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ChartImageType": (
                "GraphQL/enums.html#chartimagetype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.CloudMetricCollectionMode": (
                "GraphQL/enums.html#cloudmetriccollectionmode",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.CollaborationExternalApplicationType": (
                "GraphQL/enums.html#collaborationexternalapplicationtype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.CollaborationStatus": (
                "GraphQL/enums.html#collaborationstatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DashboardAddWidgetsToPageErrorType": (
                "GraphQL/enums.html#dashboardaddwidgetstopageerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DashboardAlertSeverity": (
                "GraphQL/enums.html#dashboardalertseverity",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DashboardCreateErrorType": (
                "GraphQL/enums.html#dashboardcreateerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DashboardDeleteErrorType": (
                "GraphQL/enums.html#dashboarddeleteerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DashboardDeleteResultStatus": (
                "GraphQL/enums.html#dashboarddeleteresultstatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DashboardEntityPermissions": (
                "GraphQL/enums.html#dashboardentitypermissions",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DashboardLiveUrlAuthType": (
                "GraphQL/enums.html#dashboardliveurlauthtype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DashboardLiveUrlErrorType": (
                "GraphQL/enums.html#dashboardliveurlerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DashboardLiveUrlType": (
                "GraphQL/enums.html#dashboardliveurltype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DashboardPermissions": (
                "GraphQL/enums.html#dashboardpermissions",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DashboardUndeleteErrorType": (
                "GraphQL/enums.html#dashboardundeleteerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DashboardUpdateErrorType": (
                "GraphQL/enums.html#dashboardupdateerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DashboardUpdatePageErrorType": (
                "GraphQL/enums.html#dashboardupdatepageerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DashboardUpdateWidgetsInPageErrorType": (
                "GraphQL/enums.html#dashboardupdatewidgetsinpageerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DashboardVariableReplacementStrategy": (
                "GraphQL/enums.html#dashboardvariablereplacementstrategy",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DashboardVariableType": (
                "GraphQL/enums.html#dashboardvariabletype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DataDictionaryTextFormat": (
                "GraphQL/enums.html#datadictionarytextformat",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DataManagementCategory": (
                "GraphQL/enums.html#datamanagementcategory",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DataManagementType": (
                "GraphQL/enums.html#datamanagementtype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DataManagementUnit": (
                "GraphQL/enums.html#datamanagementunit",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DataSourceGapsGapTypeIdentifier": (
                "GraphQL/enums.html#datasourcegapsgaptypeidentifier",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DistributedTracingSpanAnomalyType": (
                "GraphQL/enums.html#distributedtracingspananomalytype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DistributedTracingSpanClientType": (
                "GraphQL/enums.html#distributedtracingspanclienttype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.DistributedTracingSpanProcessBoundary": (
                "GraphQL/enums.html#distributedtracingspanprocessboundary",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EdgeComplianceTypeCode": (
                "GraphQL/enums.html#edgecompliancetypecode",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EdgeCreateSpanAttributeRuleResponseErrorType": (
                "GraphQL/enums.html#edgecreatespanattributeruleresponseerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EdgeCreateTraceObserverResponseErrorType": (
                "GraphQL/enums.html#edgecreatetraceobserverresponseerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EdgeDataSourceGroupUpdateType": (
                "GraphQL/enums.html#edgedatasourcegroupupdatetype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EdgeDataSourceStatusType": (
                "GraphQL/enums.html#edgedatasourcestatustype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EdgeDeleteSpanAttributeRuleResponseErrorType": (
                "GraphQL/enums.html#edgedeletespanattributeruleresponseerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EdgeDeleteTraceObserverResponseErrorType": (
                "GraphQL/enums.html#edgedeletetraceobserverresponseerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EdgeEndpointStatus": (
                "GraphQL/enums.html#edgeendpointstatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EdgeEndpointType": (
                "GraphQL/enums.html#edgeendpointtype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EdgeProviderRegion": (
                "GraphQL/enums.html#edgeproviderregion",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EdgeSpanAttributeKeyOperator": (
                "GraphQL/enums.html#edgespanattributekeyoperator",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EdgeSpanAttributeValueOperator": (
                "GraphQL/enums.html#edgespanattributevalueoperator",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EdgeTraceFilterAction": (
                "GraphQL/enums.html#edgetracefilteraction",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EdgeTraceObserverStatus": (
                "GraphQL/enums.html#edgetraceobserverstatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EdgeUpdateTraceObserverResponseErrorType": (
                "GraphQL/enums.html#edgeupdatetraceobserverresponseerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EmbeddedChartType": (
                "GraphQL/enums.html#embeddedcharttype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityAlertSeverity": (
                "GraphQL/enums.html#entityalertseverity",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityCollectionType": (
                "GraphQL/enums.html#entitycollectiontype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityDeleteErrorType": (
                "GraphQL/enums.html#entitydeleteerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityGoldenEventObjectId": (
                "GraphQL/enums.html#entitygoldeneventobjectid",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityGoldenGoldenMetricsErrorType": (
                "GraphQL/enums.html#entitygoldengoldenmetricserrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityGoldenMetricUnit": (
                "GraphQL/enums.html#entitygoldenmetricunit",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityInfrastructureIntegrationType": (
                "GraphQL/enums.html#entityinfrastructureintegrationtype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementAiToolParameterType": (
                "GraphQL/enums.html#entitymanagementaitoolparametertype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementAssignmentType": (
                "GraphQL/enums.html#entitymanagementassignmenttype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementCategory": (
                "GraphQL/enums.html#entitymanagementcategory",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementCategoryScopeType": (
                "GraphQL/enums.html#entitymanagementcategoryscopetype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementCommunicationMode": (
                "GraphQL/enums.html#entitymanagementcommunicationmode",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementCommunicationStatus": (
                "GraphQL/enums.html#entitymanagementcommunicationstatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementConsumptionMetric": (
                "GraphQL/enums.html#entitymanagementconsumptionmetric",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementDirection": (
                "GraphQL/enums.html#entitymanagementdirection",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementEncodingName": (
                "GraphQL/enums.html#entitymanagementencodingname",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementEncodingType": (
                "GraphQL/enums.html#entitymanagementencodingtype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementEntityScope": (
                "GraphQL/enums.html#entitymanagemententityscope",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementExecutionStatus": (
                "GraphQL/enums.html#entitymanagementexecutionstatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementExternalOwnerType": (
                "GraphQL/enums.html#entitymanagementexternalownertype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementFleetDeploymentPhase": (
                "GraphQL/enums.html#entitymanagementfleetdeploymentphase",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementHostingPlatform": (
                "GraphQL/enums.html#entitymanagementhostingplatform",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementIncidentStatus": (
                "GraphQL/enums.html#entitymanagementincidentstatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementInstallationSource": (
                "GraphQL/enums.html#entitymanagementinstallationsource",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementInstallationStatus": (
                "GraphQL/enums.html#entitymanagementinstallationstatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementIssueType": (
                "GraphQL/enums.html#entitymanagementissuetype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementJiraIssueType": (
                "GraphQL/enums.html#entitymanagementjiraissuetype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementKeyType": (
                "GraphQL/enums.html#entitymanagementkeytype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementLicenseName": (
                "GraphQL/enums.html#entitymanagementlicensename",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementManagedEntityType": (
                "GraphQL/enums.html#entitymanagementmanagedentitytype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementMessageType": (
                "GraphQL/enums.html#entitymanagementmessagetype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementOverlapPolicy": (
                "GraphQL/enums.html#entitymanagementoverlappolicy",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementPriority": (
                "GraphQL/enums.html#entitymanagementpriority",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementRegion": (
                "GraphQL/enums.html#entitymanagementregion",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementSigningAlgorithm": (
                "GraphQL/enums.html#entitymanagementsigningalgorithm",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementStatusCode": (
                "GraphQL/enums.html#entitymanagementstatuscode",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementStatusPageAnnouncementCategory": (
                "GraphQL/enums.html#entitymanagementstatuspageannouncementcategory",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementStatusPageAnnouncementState": (
                "GraphQL/enums.html#entitymanagementstatuspageannouncementstate",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementSyncConfigurationMode": (
                "GraphQL/enums.html#entitymanagementsyncconfigurationmode",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementSyncGroupRuleConditionType": (
                "GraphQL/enums.html#entitymanagementsyncgroupruleconditiontype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementTeamExternalIntegrationType": (
                "GraphQL/enums.html#entitymanagementteamexternalintegrationtype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementTextSplitterType": (
                "GraphQL/enums.html#entitymanagementtextsplittertype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityManagementThresholdScope": (
                "GraphQL/enums.html#entitymanagementthresholdscope",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityRelationshipEdgeDirection": (
                "GraphQL/enums.html#entityrelationshipedgedirection",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityRelationshipEdgeType": (
                "GraphQL/enums.html#entityrelationshipedgetype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityRelationshipType": (
                "GraphQL/enums.html#entityrelationshiptype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityRelationshipUserDefinedCreateOrReplaceErrorType": (
                "GraphQL/enums.html#entityrelationshipuserdefinedcreateorreplaceerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityRelationshipUserDefinedDeleteErrorType": (
                "GraphQL/enums.html#entityrelationshipuserdefineddeleteerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntitySearchCountsFacet": (
                "GraphQL/enums.html#entitysearchcountsfacet",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntitySearchQueryBuilderDomain": (
                "GraphQL/enums.html#entitysearchquerybuilderdomain",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntitySearchQueryBuilderType": (
                "GraphQL/enums.html#entitysearchquerybuildertype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntitySearchSortCriteria": (
                "GraphQL/enums.html#entitysearchsortcriteria",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EntityType": (
                "GraphQL/enums.html#entitytype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ErrorsInboxAssignErrorGroupErrorType": (
                "GraphQL/enums.html#errorsinboxassignerrorgrouperrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ErrorsInboxDirection": (
                "GraphQL/enums.html#errorsinboxdirection",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ErrorsInboxErrorGroupSortOrderField": (
                "GraphQL/enums.html#errorsinboxerrorgroupsortorderfield",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ErrorsInboxErrorGroupState": (
                "GraphQL/enums.html#errorsinboxerrorgroupstate",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ErrorsInboxEventSource": (
                "GraphQL/enums.html#errorsinboxeventsource",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ErrorsInboxIssueType": (
                "GraphQL/enums.html#errorsinboxissuetype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ErrorsInboxResourceType": (
                "GraphQL/enums.html#errorsinboxresourcetype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ErrorsInboxUpdateErrorGroupStateErrorType": (
                "GraphQL/enums.html#errorsinboxupdateerrorgroupstateerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.EventsToMetricsErrorReason": (
                "GraphQL/enums.html#eventstometricserrorreason",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.FleetControlEntityScope": (
                "GraphQL/enums.html#fleetcontrolentityscope",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.FleetControlFleetDeploymentPhase": (
                "GraphQL/enums.html#fleetcontrolfleetdeploymentphase",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.FleetControlManagedEntityType": (
                "GraphQL/enums.html#fleetcontrolmanagedentitytype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.HistoricalDataExportStatus": (
                "GraphQL/enums.html#historicaldataexportstatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.IncidentIntelligenceEnvironmentConsentAccountsResult": (
                "GraphQL/enums.html#incidentintelligenceenvironmentconsentaccountsresult",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.IncidentIntelligenceEnvironmentCreateEnvironmentResult": (
                "GraphQL/enums.html#incidentintelligenceenvironmentcreateenvironmentresult",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.IncidentIntelligenceEnvironmentCurrentEnvironmentResultReason": (
                "GraphQL/enums.html#incidentintelligenceenvironmentcurrentenvironmentresultreason",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.IncidentIntelligenceEnvironmentDeleteEnvironmentResult": (
                "GraphQL/enums.html#incidentintelligenceenvironmentdeleteenvironmentresult",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.IncidentIntelligenceEnvironmentDissentAccountsResult": (
                "GraphQL/enums.html#incidentintelligenceenvironmentdissentaccountsresult",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.IncidentIntelligenceEnvironmentEnvironmentKind": (
                "GraphQL/enums.html#incidentintelligenceenvironmentenvironmentkind",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.IncidentIntelligenceEnvironmentSupportedEnvironmentKind": (
                "GraphQL/enums.html#incidentintelligenceenvironmentsupportedenvironmentkind",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.InstallationInstallStateType": (
                "GraphQL/enums.html#installationinstallstatetype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.InstallationRecipeStatusType": (
                "GraphQL/enums.html#installationrecipestatustype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.KnowledgePublishStatus": (
                "GraphQL/enums.html#knowledgepublishstatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.KnowledgeSearchSortOption": (
                "GraphQL/enums.html#knowledgesearchsortoption",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.KnowledgeSearchSources": (
                "GraphQL/enums.html#knowledgesearchsources",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.LogConfigurationsCreateDataPartitionRuleErrorType": (
                "GraphQL/enums.html#logconfigurationscreatedatapartitionruleerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.LogConfigurationsDataPartitionRuleMatchingOperator": (
                "GraphQL/enums.html#logconfigurationsdatapartitionrulematchingoperator",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.LogConfigurationsDataPartitionRuleMutationErrorType": (
                "GraphQL/enums.html#logconfigurationsdatapartitionrulemutationerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.LogConfigurationsDataPartitionRuleRetentionPolicyType": (
                "GraphQL/enums.html#logconfigurationsdatapartitionruleretentionpolicytype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.LogConfigurationsLiveArchiveRetentionPolicyType": (
                "GraphQL/enums.html#logconfigurationslivearchiveretentionpolicytype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.LogConfigurationsObfuscationMethod": (
                "GraphQL/enums.html#logconfigurationsobfuscationmethod",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.LogConfigurationsParsingRuleMutationErrorType": (
                "GraphQL/enums.html#logconfigurationsparsingrulemutationerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MachineLearningEncodingName": (
                "GraphQL/enums.html#machinelearningencodingname",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MachineLearningFilterByKeys": (
                "GraphQL/enums.html#machinelearningfilterbykeys",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MachineLearningOperator": (
                "GraphQL/enums.html#machinelearningoperator",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MachineLearningTextSplitterType": (
                "GraphQL/enums.html#machinelearningtextsplittertype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MetricNormalizationCustomerRuleAction": (
                "GraphQL/enums.html#metricnormalizationcustomerruleaction",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MetricNormalizationRuleAction": (
                "GraphQL/enums.html#metricnormalizationruleaction",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MetricNormalizationRuleErrorType": (
                "GraphQL/enums.html#metricnormalizationruleerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MultiTenantAuthorizationGrantScopeEnum": (
                "GraphQL/enums.html#multitenantauthorizationgrantscopeenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MultiTenantAuthorizationGrantSortEnum": (
                "GraphQL/enums.html#multitenantauthorizationgrantsortenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MultiTenantAuthorizationGranteeTypeEnum": (
                "GraphQL/enums.html#multitenantauthorizationgranteetypeenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MultiTenantAuthorizationPermissionCategoryEnum": (
                "GraphQL/enums.html#multitenantauthorizationpermissioncategoryenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MultiTenantAuthorizationRoleScopeEnum": (
                "GraphQL/enums.html#multitenantauthorizationrolescopeenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MultiTenantAuthorizationRoleSortEnum": (
                "GraphQL/enums.html#multitenantauthorizationrolesortenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MultiTenantAuthorizationRoleTypeEnum": (
                "GraphQL/enums.html#multitenantauthorizationroletypeenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MultiTenantAuthorizationSortDirectionEnum": (
                "GraphQL/enums.html#multitenantauthorizationsortdirectionenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MultiTenantIdentityCapability": (
                "GraphQL/enums.html#multitenantidentitycapability",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MultiTenantIdentityEmailVerificationState": (
                "GraphQL/enums.html#multitenantidentityemailverificationstate",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MultiTenantIdentitySortDirection": (
                "GraphQL/enums.html#multitenantidentitysortdirection",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MultiTenantIdentitySortKeyEnum": (
                "GraphQL/enums.html#multitenantidentitysortkeyenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.MultiTenantIdentityUserSortKey": (
                "GraphQL/enums.html#multitenantidentityusersortkey",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.NerdStorageScope": (
                "GraphQL/enums.html#nerdstoragescope",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.NerdStorageVaultActorScope": (
                "GraphQL/enums.html#nerdstoragevaultactorscope",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.NerdStorageVaultErrorType": (
                "GraphQL/enums.html#nerdstoragevaulterrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.NerdStorageVaultResultStatus": (
                "GraphQL/enums.html#nerdstoragevaultresultstatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.NerdpackMutationErrorType": (
                "GraphQL/enums.html#nerdpackmutationerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.NerdpackMutationResult": (
                "GraphQL/enums.html#nerdpackmutationresult",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.NerdpackRemovedTagResponseType": (
                "GraphQL/enums.html#nerdpackremovedtagresponsetype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.NerdpackSubscriptionAccessType": (
                "GraphQL/enums.html#nerdpacksubscriptionaccesstype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.NerdpackSubscriptionModel": (
                "GraphQL/enums.html#nerdpacksubscriptionmodel",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.NerdpackVersionFilterFallback": (
                "GraphQL/enums.html#nerdpackversionfilterfallback",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.Nr1CatalogAlertConditionType": (
                "GraphQL/enums.html#nr1catalogalertconditiontype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.Nr1CatalogInstallPlanDestination": (
                "GraphQL/enums.html#nr1cataloginstallplandestination",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.Nr1CatalogInstallPlanDirectiveMode": (
                "GraphQL/enums.html#nr1cataloginstallplandirectivemode",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.Nr1CatalogInstallPlanOperatingSystem": (
                "GraphQL/enums.html#nr1cataloginstallplanoperatingsystem",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.Nr1CatalogInstallPlanTargetType": (
                "GraphQL/enums.html#nr1cataloginstallplantargettype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.Nr1CatalogInstallerType": (
                "GraphQL/enums.html#nr1cataloginstallertype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.Nr1CatalogMutationResult": (
                "GraphQL/enums.html#nr1catalogmutationresult",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.Nr1CatalogNerdpackVisibility": (
                "GraphQL/enums.html#nr1catalognerdpackvisibility",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.Nr1CatalogQuickstartAlertConditionType": (
                "GraphQL/enums.html#nr1catalogquickstartalertconditiontype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.Nr1CatalogRenderFormat": (
                "GraphQL/enums.html#nr1catalogrenderformat",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.Nr1CatalogSearchComponentType": (
                "GraphQL/enums.html#nr1catalogsearchcomponenttype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.Nr1CatalogSearchResultType": (
                "GraphQL/enums.html#nr1catalogsearchresulttype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.Nr1CatalogSearchSortOption": (
                "GraphQL/enums.html#nr1catalogsearchsortoption",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.Nr1CatalogSubmitMetadataErrorType": (
                "GraphQL/enums.html#nr1catalogsubmitmetadataerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.Nr1CatalogSupportLevel": (
                "GraphQL/enums.html#nr1catalogsupportlevel",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.Nr1CatalogSupportedEntityTypesMode": (
                "GraphQL/enums.html#nr1catalogsupportedentitytypesmode",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.NrqlCancelQueryMutationRequestStatus": (
                "GraphQL/enums.html#nrqlcancelquerymutationrequeststatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.NrqlDropRulesAction": (
                "GraphQL/enums.html#nrqldroprulesaction",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.NrqlDropRulesErrorReason": (
                "GraphQL/enums.html#nrqldropruleserrorreason",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.OrganizationAccountShareSortDirectionEnum": (
                "GraphQL/enums.html#organizationaccountsharesortdirectionenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.OrganizationAccountShareSortKeyEnum": (
                "GraphQL/enums.html#organizationaccountsharesortkeyenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.OrganizationAccountSortDirectionEnum": (
                "GraphQL/enums.html#organizationaccountsortdirectionenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.OrganizationAccountSortKeyEnum": (
                "GraphQL/enums.html#organizationaccountsortkeyenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.OrganizationAccountStatus": (
                "GraphQL/enums.html#organizationaccountstatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.OrganizationAuthenticationTypeEnum": (
                "GraphQL/enums.html#organizationauthenticationtypeenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.OrganizationBillingStructure": (
                "GraphQL/enums.html#organizationbillingstructure",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.OrganizationMembersOrganizationMemberType": (
                "GraphQL/enums.html#organizationmembersorganizationmembertype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.OrganizationOrganizationCreateJobResultStatusEnum": (
                "GraphQL/enums.html#organizationorganizationcreatejobresultstatusenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.OrganizationOrganizationCreateJobStatusEnum": (
                "GraphQL/enums.html#organizationorganizationcreatejobstatusenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.OrganizationProvisioningTypeEnum": (
                "GraphQL/enums.html#organizationprovisioningtypeenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.OrganizationProvisioningUnit": (
                "GraphQL/enums.html#organizationprovisioningunit",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.OrganizationRegionCodeEnum": (
                "GraphQL/enums.html#organizationregioncodeenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.OrganizationSharingMode": (
                "GraphQL/enums.html#organizationsharingmode",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.OrganizationSortDirectionEnum": (
                "GraphQL/enums.html#organizationsortdirectionenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.OrganizationSortKeyEnum": (
                "GraphQL/enums.html#organizationsortkeyenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.OrganizationUpdateErrorType": (
                "GraphQL/enums.html#organizationupdateerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.PixieLinkPixieProjectErrorType": (
                "GraphQL/enums.html#pixielinkpixieprojecterrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.PixieRecordPixieTosAcceptanceErrorType": (
                "GraphQL/enums.html#pixierecordpixietosacceptanceerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ReferenceEntityCreateRepositoryErrorType": (
                "GraphQL/enums.html#referenceentitycreaterepositoryerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.RegionScope": (
                "GraphQL/enums.html#regionscope",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SecretsManagementScopeType": (
                "GraphQL/enums.html#secretsmanagementscopetype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SecretsManagementSortDirection": (
                "GraphQL/enums.html#secretsmanagementsortdirection",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SecretsManagementSortKey": (
                "GraphQL/enums.html#secretsmanagementsortkey",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ServiceLevelEventsQuerySelectFunction": (
                "GraphQL/enums.html#serviceleveleventsqueryselectfunction",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.ServiceLevelObjectiveRollingTimeWindowUnit": (
                "GraphQL/enums.html#servicelevelobjectiverollingtimewindowunit",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SessionsClientType": (
                "GraphQL/enums.html#sessionsclienttype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SessionsPrincipalType": (
                "GraphQL/enums.html#sessionsprincipaltype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SortBy": (
                "GraphQL/enums.html#sortby",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.StreamingExportPayloadCompression": (
                "GraphQL/enums.html#streamingexportpayloadcompression",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.StreamingExportStatus": (
                "GraphQL/enums.html#streamingexportstatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SyntheticMonitorStatus": (
                "GraphQL/enums.html#syntheticmonitorstatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SyntheticMonitorType": (
                "GraphQL/enums.html#syntheticmonitortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SyntheticsBrowser": (
                "GraphQL/enums.html#syntheticsbrowser",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SyntheticsDevice": (
                "GraphQL/enums.html#syntheticsdevice",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SyntheticsDeviceOrientation": (
                "GraphQL/enums.html#syntheticsdeviceorientation",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SyntheticsDeviceType": (
                "GraphQL/enums.html#syntheticsdevicetype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SyntheticsMonitorCreateErrorType": (
                "GraphQL/enums.html#syntheticsmonitorcreateerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SyntheticsMonitorDowntimeDayOfMonthOrdinal": (
                "GraphQL/enums.html#syntheticsmonitordowntimedayofmonthordinal",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SyntheticsMonitorDowntimeWeekDays": (
                "GraphQL/enums.html#syntheticsmonitordowntimeweekdays",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SyntheticsMonitorPeriod": (
                "GraphQL/enums.html#syntheticsmonitorperiod",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SyntheticsMonitorStatus": (
                "GraphQL/enums.html#syntheticsmonitorstatus",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SyntheticsMonitorUpdateErrorType": (
                "GraphQL/enums.html#syntheticsmonitorupdateerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SyntheticsPrivateLocationMutationErrorType": (
                "GraphQL/enums.html#syntheticsprivatelocationmutationerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SyntheticsStepType": (
                "GraphQL/enums.html#syntheticssteptype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SystemIdentityIdentitySortFieldKey": (
                "GraphQL/enums.html#systemidentityidentitysortfieldkey",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.SystemIdentitySortOrder": (
                "GraphQL/enums.html#systemidentitysortorder",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.TaggingMutationErrorType": (
                "GraphQL/enums.html#taggingmutationerrortype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.UserManagementGroupSortKey": (
                "GraphQL/enums.html#usermanagementgroupsortkey",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.UserManagementRequestedTierName": (
                "GraphQL/enums.html#usermanagementrequestedtiername",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.UserManagementSortDirection": (
                "GraphQL/enums.html#usermanagementsortdirection",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.UserManagementTypeEnum": (
                "GraphQL/enums.html#usermanagementtypeenum",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.WhatsNewContentType": (
                "GraphQL/enums.html#whatsnewcontenttype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.WorkloadGroupRemainingEntitiesRuleBy": (
                "GraphQL/enums.html#workloadgroupremainingentitiesruleby",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.WorkloadResultingGroupType": (
                "GraphQL/enums.html#workloadresultinggrouptype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.WorkloadRollupStrategy": (
                "GraphQL/enums.html#workloadrollupstrategy",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.WorkloadRuleThresholdType": (
                "GraphQL/enums.html#workloadrulethresholdtype",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.WorkloadStatusSource": (
                "GraphQL/enums.html#workloadstatussource",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.WorkloadStatusValue": (
                "GraphQL/enums.html#workloadstatusvalue",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
            "newrelic_sb_sdk.graphql.enums.WorkloadStatusValueInput": (
                "GraphQL/enums.html#workloadstatusvalueinput",
                "newrelic_sb_sdk/graphql/enums.py",
            ),
        },
        "newrelic_sb_sdk.graphql.input_objects": {
            "newrelic_sb_sdk.graphql.input_objects.AccountManagementCreateInput": (
                "GraphQL/input objects.html#accountmanagementcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AccountManagementUpdateInput": (
                "GraphQL/input objects.html#accountmanagementupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationBrowserSettingsInput": (
                "GraphQL/input objects.html#agentapplicationbrowsersettingsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSegmentsBrowserSegmentAllowListInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsegmentsbrowsersegmentallowlistinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSegmentsSegmentAllowListFilters": (
                "GraphQL/input "
                "objects.html#agentapplicationsegmentssegmentallowlistfilters",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsApmConfigInput": (
                "GraphQL/input objects.html#agentapplicationsettingsapmconfiginput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsApplicationExitInfoInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingsapplicationexitinfoinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsBrowserAjaxInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingsbrowserajaxinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsBrowserConfigInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingsbrowserconfiginput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsBrowserDistributedTracingInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingsbrowserdistributedtracinginput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsBrowserMonitoringInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingsbrowsermonitoringinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsBrowserPerformanceInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingsbrowserperformanceinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsBrowserPrivacyInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingsbrowserprivacyinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsErrorCollectorInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingserrorcollectorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsIgnoredStatusCodeRuleInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingsignoredstatuscoderuleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsJfrInput": (
                "GraphQL/input objects.html#agentapplicationsettingsjfrinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsMaskInputOptionsInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingsmaskinputoptionsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsMobileSessionReplayInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingsmobilesessionreplayinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsMobileSettingsInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingsmobilesettingsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsNetworkAliasesInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingsnetworkaliasesinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsNetworkSettingsInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingsnetworksettingsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsSessionReplayInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingssessionreplayinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsSessionTraceInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingssessiontraceinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsSlowSqlInput": (
                "GraphQL/input objects.html#agentapplicationsettingsslowsqlinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsThreadProfilerInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingsthreadprofilerinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsTracerTypeInput": (
                "GraphQL/input objects.html#agentapplicationsettingstracertypeinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsTransactionTracerInput": (
                "GraphQL/input "
                "objects.html#agentapplicationsettingstransactiontracerinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentApplicationSettingsUpdateInput": (
                "GraphQL/input objects.html#agentapplicationsettingsupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AgentEnvironmentFilter": (
                "GraphQL/input objects.html#agentenvironmentfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsAllInput": (
                "GraphQL/input objects.html#aidecisionsallinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsAndInput": (
                "GraphQL/input objects.html#aidecisionsandinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsAttributeExistsInput": (
                "GraphQL/input objects.html#aidecisionsattributeexistsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsCategoricalClusteringInput": (
                "GraphQL/input objects.html#aidecisionscategoricalclusteringinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedContainsInput": (
                "GraphQL/input objects.html#aidecisionsfixedcontainsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedCosineDistanceInput": (
                "GraphQL/input objects.html#aidecisionsfixedcosinedistanceinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedEndsWithInput": (
                "GraphQL/input objects.html#aidecisionsfixedendswithinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedEqualInput": (
                "GraphQL/input objects.html#aidecisionsfixedequalinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedFuzzyScoreInput": (
                "GraphQL/input objects.html#aidecisionsfixedfuzzyscoreinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedFuzzyWuzzyAdaptiveRatioInput": (
                "GraphQL/input "
                "objects.html#aidecisionsfixedfuzzywuzzyadaptiveratioinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedFuzzyWuzzyPartialRatioInput": (
                "GraphQL/input "
                "objects.html#aidecisionsfixedfuzzywuzzypartialratioinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedFuzzyWuzzyRatioInput": (
                "GraphQL/input objects.html#aidecisionsfixedfuzzywuzzyratioinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedFuzzyWuzzyTokenSetRatioInput": (
                "GraphQL/input "
                "objects.html#aidecisionsfixedfuzzywuzzytokensetratioinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedGreaterThanInput": (
                "GraphQL/input objects.html#aidecisionsfixedgreaterthaninput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedGreaterThanOrEqualInput": (
                "GraphQL/input objects.html#aidecisionsfixedgreaterthanorequalinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedHammingDistanceInput": (
                "GraphQL/input objects.html#aidecisionsfixedhammingdistanceinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedJaccardDistanceInput": (
                "GraphQL/input objects.html#aidecisionsfixedjaccarddistanceinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedJaroWinklerInput": (
                "GraphQL/input objects.html#aidecisionsfixedjarowinklerinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedLessThanInput": (
                "GraphQL/input objects.html#aidecisionsfixedlessthaninput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedLessThanOrEqualInput": (
                "GraphQL/input objects.html#aidecisionsfixedlessthanorequalinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedLevenshteinInput": (
                "GraphQL/input objects.html#aidecisionsfixedlevenshteininput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedLongestCommonSubsequenceDistanceInput": (
                "GraphQL/input "
                "objects.html#aidecisionsfixedlongestcommonsubsequencedistanceinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedNumericalEqualInput": (
                "GraphQL/input objects.html#aidecisionsfixednumericalequalinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedRegularExpressionInput": (
                "GraphQL/input objects.html#aidecisionsfixedregularexpressioninput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedSoundExInput": (
                "GraphQL/input objects.html#aidecisionsfixedsoundexinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsFixedStartsWithInput": (
                "GraphQL/input objects.html#aidecisionsfixedstartswithinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsIncidentObjectInput": (
                "GraphQL/input objects.html#aidecisionsincidentobjectinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsNotInput": (
                "GraphQL/input objects.html#aidecisionsnotinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsOneInput": (
                "GraphQL/input objects.html#aidecisionsoneinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsOrInput": (
                "GraphQL/input objects.html#aidecisionsorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsOverrideConfigurationInput": (
                "GraphQL/input objects.html#aidecisionsoverrideconfigurationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeCommonPrefixInput": (
                "GraphQL/input objects.html#aidecisionsrelativecommonprefixinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeContainsInput": (
                "GraphQL/input objects.html#aidecisionsrelativecontainsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeCosineDistanceInput": (
                "GraphQL/input objects.html#aidecisionsrelativecosinedistanceinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeEndsWithInput": (
                "GraphQL/input objects.html#aidecisionsrelativeendswithinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeEqualInput": (
                "GraphQL/input objects.html#aidecisionsrelativeequalinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeFuzzyScoreInput": (
                "GraphQL/input objects.html#aidecisionsrelativefuzzyscoreinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeFuzzyWuzzyAdaptiveRatioInput": (
                "GraphQL/input "
                "objects.html#aidecisionsrelativefuzzywuzzyadaptiveratioinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeFuzzyWuzzyPartialRatioInput": (
                "GraphQL/input "
                "objects.html#aidecisionsrelativefuzzywuzzypartialratioinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeFuzzyWuzzyRatioInput": (
                "GraphQL/input objects.html#aidecisionsrelativefuzzywuzzyratioinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeFuzzyWuzzyTokenSetRatioInput": (
                "GraphQL/input "
                "objects.html#aidecisionsrelativefuzzywuzzytokensetratioinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeGreaterThanInput": (
                "GraphQL/input objects.html#aidecisionsrelativegreaterthaninput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeGreaterThanOrEqualInput": (
                "GraphQL/input "
                "objects.html#aidecisionsrelativegreaterthanorequalinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeHammingDistanceInput": (
                "GraphQL/input objects.html#aidecisionsrelativehammingdistanceinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeJaccardDistanceInput": (
                "GraphQL/input objects.html#aidecisionsrelativejaccarddistanceinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeJaroWinklerInput": (
                "GraphQL/input objects.html#aidecisionsrelativejarowinklerinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeLessThanInput": (
                "GraphQL/input objects.html#aidecisionsrelativelessthaninput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeLessThanOrEqualInput": (
                "GraphQL/input objects.html#aidecisionsrelativelessthanorequalinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeLevenshteinInput": (
                "GraphQL/input objects.html#aidecisionsrelativelevenshteininput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeLongestCommonSubsequenceDistanceInput": (
                "GraphQL/input "
                "objects.html#aidecisionsrelativelongestcommonsubsequencedistanceinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeNumericalEqualInput": (
                "GraphQL/input objects.html#aidecisionsrelativenumericalequalinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeRegularExpressionInput": (
                "GraphQL/input "
                "objects.html#aidecisionsrelativeregularexpressioninput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeSoundExInput": (
                "GraphQL/input objects.html#aidecisionsrelativesoundexinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeStartsWithInput": (
                "GraphQL/input objects.html#aidecisionsrelativestartswithinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRelativeTopologicallyDependentInput": (
                "GraphQL/input "
                "objects.html#aidecisionsrelativetopologicallydependentinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRuleBlueprint": (
                "GraphQL/input objects.html#aidecisionsruleblueprint",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsRuleExpressionInput": (
                "GraphQL/input objects.html#aidecisionsruleexpressioninput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsSearchBlueprint": (
                "GraphQL/input objects.html#aidecisionssearchblueprint",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsSimulationBlueprint": (
                "GraphQL/input objects.html#aidecisionssimulationblueprint",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsSuggestionBlueprint": (
                "GraphQL/input objects.html#aidecisionssuggestionblueprint",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsWholeCosineDistanceInput": (
                "GraphQL/input objects.html#aidecisionswholecosinedistanceinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiDecisionsWholeJaccardSimilarityInput": (
                "GraphQL/input objects.html#aidecisionswholejaccardsimilarityinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiIssuesFilterIncidents": (
                "GraphQL/input objects.html#aiissuesfilterincidents",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiIssuesFilterIncidentsEvents": (
                "GraphQL/input objects.html#aiissuesfilterincidentsevents",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiIssuesFilterIssues": (
                "GraphQL/input objects.html#aiissuesfilterissues",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiIssuesFilterIssuesEvents": (
                "GraphQL/input objects.html#aiissuesfilterissuesevents",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiIssuesGracePeriodConfigurationInput": (
                "GraphQL/input objects.html#aiissuesgraceperiodconfigurationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsBasicAuthInput": (
                "GraphQL/input objects.html#ainotificationsbasicauthinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsChannelFilter": (
                "GraphQL/input objects.html#ainotificationschannelfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsChannelInput": (
                "GraphQL/input objects.html#ainotificationschannelinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsChannelSorter": (
                "GraphQL/input objects.html#ainotificationschannelsorter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsChannelUpdate": (
                "GraphQL/input objects.html#ainotificationschannelupdate",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsConstraint": (
                "GraphQL/input objects.html#ainotificationsconstraint",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsCredentialsInput": (
                "GraphQL/input objects.html#ainotificationscredentialsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsCustomHeaderInput": (
                "GraphQL/input objects.html#ainotificationscustomheaderinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsCustomHeadersAuthInput": (
                "GraphQL/input objects.html#ainotificationscustomheadersauthinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsDestinationFilter": (
                "GraphQL/input objects.html#ainotificationsdestinationfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsDestinationInput": (
                "GraphQL/input objects.html#ainotificationsdestinationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsDestinationSorter": (
                "GraphQL/input objects.html#ainotificationsdestinationsorter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsDestinationUpdate": (
                "GraphQL/input objects.html#ainotificationsdestinationupdate",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsDynamicVariable": (
                "GraphQL/input objects.html#ainotificationsdynamicvariable",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsExampleValue": (
                "GraphQL/input objects.html#ainotificationsexamplevalue",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsOAuth2AuthInput": (
                "GraphQL/input objects.html#ainotificationsoauth2authinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsPropertyFilter": (
                "GraphQL/input objects.html#ainotificationspropertyfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsPropertyInput": (
                "GraphQL/input objects.html#ainotificationspropertyinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsSecureUrlInput": (
                "GraphQL/input objects.html#ainotificationssecureurlinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsSecureUrlUpdate": (
                "GraphQL/input objects.html#ainotificationssecureurlupdate",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsSuggestionFilter": (
                "GraphQL/input objects.html#ainotificationssuggestionfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsTokenAuthInput": (
                "GraphQL/input objects.html#ainotificationstokenauthinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsVariableFilter": (
                "GraphQL/input objects.html#ainotificationsvariablefilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiNotificationsVariableSorter": (
                "GraphQL/input objects.html#ainotificationsvariablesorter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiTopologyCollectorAttributeInput": (
                "GraphQL/input objects.html#aitopologycollectorattributeinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiTopologyCollectorEdgeBlueprint": (
                "GraphQL/input objects.html#aitopologycollectoredgeblueprint",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiTopologyCollectorVertexBlueprint": (
                "GraphQL/input objects.html#aitopologycollectorvertexblueprint",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiWorkflowsCreateWorkflowInput": (
                "GraphQL/input objects.html#aiworkflowscreateworkflowinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiWorkflowsDestinationConfigurationInput": (
                "GraphQL/input "
                "objects.html#aiworkflowsdestinationconfigurationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiWorkflowsEnrichmentsInput": (
                "GraphQL/input objects.html#aiworkflowsenrichmentsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiWorkflowsFilterInput": (
                "GraphQL/input objects.html#aiworkflowsfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiWorkflowsFilters": (
                "GraphQL/input objects.html#aiworkflowsfilters",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiWorkflowsNrqlConfigurationInput": (
                "GraphQL/input objects.html#aiworkflowsnrqlconfigurationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiWorkflowsNrqlEnrichmentInput": (
                "GraphQL/input objects.html#aiworkflowsnrqlenrichmentinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiWorkflowsNrqlTestEnrichmentInput": (
                "GraphQL/input objects.html#aiworkflowsnrqltestenrichmentinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiWorkflowsNrqlUpdateEnrichmentInput": (
                "GraphQL/input objects.html#aiworkflowsnrqlupdateenrichmentinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiWorkflowsPredicateInput": (
                "GraphQL/input objects.html#aiworkflowspredicateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiWorkflowsTestEnrichmentsInput": (
                "GraphQL/input objects.html#aiworkflowstestenrichmentsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiWorkflowsTestWorkflowInput": (
                "GraphQL/input objects.html#aiworkflowstestworkflowinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiWorkflowsUpdateEnrichmentsInput": (
                "GraphQL/input objects.html#aiworkflowsupdateenrichmentsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiWorkflowsUpdateWorkflowInput": (
                "GraphQL/input objects.html#aiworkflowsupdateworkflowinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AiWorkflowsUpdatedFilterInput": (
                "GraphQL/input objects.html#aiworkflowsupdatedfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsAsNrqlConditionsSearchCriteriaInput": (
                "GraphQL/input "
                "objects.html#alertsasnrqlconditionssearchcriteriainput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsEmailNotificationChannelCreateInput": (
                "GraphQL/input "
                "objects.html#alertsemailnotificationchannelcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsEmailNotificationChannelUpdateInput": (
                "GraphQL/input "
                "objects.html#alertsemailnotificationchannelupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsMutingRuleConditionGroupInput": (
                "GraphQL/input objects.html#alertsmutingruleconditiongroupinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsMutingRuleConditionInput": (
                "GraphQL/input objects.html#alertsmutingruleconditioninput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsMutingRuleInput": (
                "GraphQL/input objects.html#alertsmutingruleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsMutingRuleScheduleInput": (
                "GraphQL/input objects.html#alertsmutingrulescheduleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsMutingRuleScheduleUpdateInput": (
                "GraphQL/input objects.html#alertsmutingrulescheduleupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsMutingRuleUpdateInput": (
                "GraphQL/input objects.html#alertsmutingruleupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsMutingRulesFilterCriteriaInput": (
                "GraphQL/input objects.html#alertsmutingrulesfiltercriteriainput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsNotificationChannelCreateConfiguration": (
                "GraphQL/input "
                "objects.html#alertsnotificationchannelcreateconfiguration",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsNotificationChannelUpdateConfiguration": (
                "GraphQL/input "
                "objects.html#alertsnotificationchannelupdateconfiguration",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsNrqlConditionBaselineInput": (
                "GraphQL/input objects.html#alertsnrqlconditionbaselineinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsNrqlConditionExpirationInput": (
                "GraphQL/input objects.html#alertsnrqlconditionexpirationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsNrqlConditionOutlierInput": (
                "GraphQL/input objects.html#alertsnrqlconditionoutlierinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsNrqlConditionPredictionInput": (
                "GraphQL/input objects.html#alertsnrqlconditionpredictioninput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsNrqlConditionQueryInput": (
                "GraphQL/input objects.html#alertsnrqlconditionqueryinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsNrqlConditionSignalInput": (
                "GraphQL/input objects.html#alertsnrqlconditionsignalinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsNrqlConditionStaticInput": (
                "GraphQL/input objects.html#alertsnrqlconditionstaticinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsNrqlConditionTermsInput": (
                "GraphQL/input objects.html#alertsnrqlconditiontermsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsNrqlConditionUpdateBaselineInput": (
                "GraphQL/input objects.html#alertsnrqlconditionupdatebaselineinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsNrqlConditionUpdateOutlierInput": (
                "GraphQL/input objects.html#alertsnrqlconditionupdateoutlierinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsNrqlConditionUpdateQueryInput": (
                "GraphQL/input objects.html#alertsnrqlconditionupdatequeryinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsNrqlConditionUpdateStaticInput": (
                "GraphQL/input objects.html#alertsnrqlconditionupdatestaticinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsNrqlConditionsSearchCriteriaInput": (
                "GraphQL/input objects.html#alertsnrqlconditionssearchcriteriainput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsNrqlDynamicConditionTermsInput": (
                "GraphQL/input objects.html#alertsnrqldynamicconditiontermsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsOpsGenieNotificationChannelCreateInput": (
                "GraphQL/input "
                "objects.html#alertsopsgenienotificationchannelcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsOpsGenieNotificationChannelUpdateInput": (
                "GraphQL/input "
                "objects.html#alertsopsgenienotificationchannelupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsPagerDutyNotificationChannelCreateInput": (
                "GraphQL/input "
                "objects.html#alertspagerdutynotificationchannelcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsPagerDutyNotificationChannelUpdateInput": (
                "GraphQL/input "
                "objects.html#alertspagerdutynotificationchannelupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsPoliciesSearchCriteriaInput": (
                "GraphQL/input objects.html#alertspoliciessearchcriteriainput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsPolicyInput": (
                "GraphQL/input objects.html#alertspolicyinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsPolicyUpdateInput": (
                "GraphQL/input objects.html#alertspolicyupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsSlackNotificationChannelCreateInput": (
                "GraphQL/input "
                "objects.html#alertsslacknotificationchannelcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsSlackNotificationChannelUpdateInput": (
                "GraphQL/input "
                "objects.html#alertsslacknotificationchannelupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsVictorOpsNotificationChannelCreateInput": (
                "GraphQL/input "
                "objects.html#alertsvictoropsnotificationchannelcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsVictorOpsNotificationChannelUpdateInput": (
                "GraphQL/input "
                "objects.html#alertsvictoropsnotificationchannelupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsWebhookBasicAuthMutationInput": (
                "GraphQL/input objects.html#alertswebhookbasicauthmutationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsWebhookCustomHeaderMutationInput": (
                "GraphQL/input objects.html#alertswebhookcustomheadermutationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsWebhookNotificationChannelCreateInput": (
                "GraphQL/input "
                "objects.html#alertswebhooknotificationchannelcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsWebhookNotificationChannelUpdateInput": (
                "GraphQL/input "
                "objects.html#alertswebhooknotificationchannelupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsXMattersNotificationChannelCreateInput": (
                "GraphQL/input "
                "objects.html#alertsxmattersnotificationchannelcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AlertsXMattersNotificationChannelUpdateInput": (
                "GraphQL/input "
                "objects.html#alertsxmattersnotificationchannelupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ApiAccessCreateIngestKeyInput": (
                "GraphQL/input objects.html#apiaccesscreateingestkeyinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ApiAccessCreateInput": (
                "GraphQL/input objects.html#apiaccesscreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ApiAccessCreateUserKeyInput": (
                "GraphQL/input objects.html#apiaccesscreateuserkeyinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ApiAccessDeleteInput": (
                "GraphQL/input objects.html#apiaccessdeleteinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ApiAccessKeySearchQuery": (
                "GraphQL/input objects.html#apiaccesskeysearchquery",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ApiAccessKeySearchScope": (
                "GraphQL/input objects.html#apiaccesskeysearchscope",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ApiAccessUpdateIngestKeyInput": (
                "GraphQL/input objects.html#apiaccessupdateingestkeyinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ApiAccessUpdateInput": (
                "GraphQL/input objects.html#apiaccessupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ApiAccessUpdateUserKeyInput": (
                "GraphQL/input objects.html#apiaccessupdateuserkeyinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ApmApplicationEntitySettings": (
                "GraphQL/input objects.html#apmapplicationentitysettings",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AuthorizationManagementAccountAccessGrant": (
                "GraphQL/input "
                "objects.html#authorizationmanagementaccountaccessgrant",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AuthorizationManagementEntity": (
                "GraphQL/input objects.html#authorizationmanagemententity",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AuthorizationManagementEntityAccessGrants": (
                "GraphQL/input "
                "objects.html#authorizationmanagemententityaccessgrants",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AuthorizationManagementGrantAccess": (
                "GraphQL/input objects.html#authorizationmanagementgrantaccess",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AuthorizationManagementGrantee": (
                "GraphQL/input objects.html#authorizationmanagementgrantee",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AuthorizationManagementGroupAccessGrant": (
                "GraphQL/input objects.html#authorizationmanagementgroupaccessgrant",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AuthorizationManagementIamParent": (
                "GraphQL/input objects.html#authorizationmanagementiamparent",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AuthorizationManagementOrganizationAccessGrant": (
                "GraphQL/input "
                "objects.html#authorizationmanagementorganizationaccessgrant",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.AuthorizationManagementRevokeAccess": (
                "GraphQL/input objects.html#authorizationmanagementrevokeaccess",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ChangeTrackingCategoryAndTypeInput": (
                "GraphQL/input objects.html#changetrackingcategoryandtypeinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ChangeTrackingCategoryFieldsInput": (
                "GraphQL/input objects.html#changetrackingcategoryfieldsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ChangeTrackingCategoryRelatedInput": (
                "GraphQL/input objects.html#changetrackingcategoryrelatedinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ChangeTrackingChangeTrackingSearchFilter": (
                "GraphQL/input "
                "objects.html#changetrackingchangetrackingsearchfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ChangeTrackingCreateEventInput": (
                "GraphQL/input objects.html#changetrackingcreateeventinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ChangeTrackingDataHandlingRules": (
                "GraphQL/input objects.html#changetrackingdatahandlingrules",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ChangeTrackingDeploymentFieldsInput": (
                "GraphQL/input objects.html#changetrackingdeploymentfieldsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ChangeTrackingDeploymentInput": (
                "GraphQL/input objects.html#changetrackingdeploymentinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ChangeTrackingEntitySearchInput": (
                "GraphQL/input objects.html#changetrackingentitysearchinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ChangeTrackingFeatureFlagFieldsInput": (
                "GraphQL/input objects.html#changetrackingfeatureflagfieldsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ChangeTrackingSearchFilter": (
                "GraphQL/input objects.html#changetrackingsearchfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ChangeTrackingTimeWindowInputWithDefaults": (
                "GraphQL/input "
                "objects.html#changetrackingtimewindowinputwithdefaults",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAlbIntegrationInput": (
                "GraphQL/input objects.html#cloudalbintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudApigatewayIntegrationInput": (
                "GraphQL/input objects.html#cloudapigatewayintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAutoscalingIntegrationInput": (
                "GraphQL/input objects.html#cloudautoscalingintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsAppsyncIntegrationInput": (
                "GraphQL/input objects.html#cloudawsappsyncintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsAthenaIntegrationInput": (
                "GraphQL/input objects.html#cloudawsathenaintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsAutoDiscoveryIntegrationInput": (
                "GraphQL/input objects.html#cloudawsautodiscoveryintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsCognitoIntegrationInput": (
                "GraphQL/input objects.html#cloudawscognitointegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsConnectIntegrationInput": (
                "GraphQL/input objects.html#cloudawsconnectintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsDirectconnectIntegrationInput": (
                "GraphQL/input objects.html#cloudawsdirectconnectintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsDisableIntegrationsInput": (
                "GraphQL/input objects.html#cloudawsdisableintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsDocdbIntegrationInput": (
                "GraphQL/input objects.html#cloudawsdocdbintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsFsxIntegrationInput": (
                "GraphQL/input objects.html#cloudawsfsxintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsGlueIntegrationInput": (
                "GraphQL/input objects.html#cloudawsglueintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsGovCloudLinkAccountInput": (
                "GraphQL/input objects.html#cloudawsgovcloudlinkaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsGovCloudMigrateToAssumeroleInput": (
                "GraphQL/input "
                "objects.html#cloudawsgovcloudmigratetoassumeroleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsGovCloudUpdateAccountInput": (
                "GraphQL/input objects.html#cloudawsgovcloudupdateaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsGovcloudDisableIntegrationsInput": (
                "GraphQL/input "
                "objects.html#cloudawsgovclouddisableintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsGovcloudIntegrationsInput": (
                "GraphQL/input objects.html#cloudawsgovcloudintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsIntegrationsInput": (
                "GraphQL/input objects.html#cloudawsintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsKinesisanalyticsIntegrationInput": (
                "GraphQL/input "
                "objects.html#cloudawskinesisanalyticsintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsLinkAccountInput": (
                "GraphQL/input objects.html#cloudawslinkaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsMediaconvertIntegrationInput": (
                "GraphQL/input objects.html#cloudawsmediaconvertintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsMediapackagevodIntegrationInput": (
                "GraphQL/input objects.html#cloudawsmediapackagevodintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsMetadataGovIntegrationInput": (
                "GraphQL/input objects.html#cloudawsmetadatagovintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsMetadataIntegrationInput": (
                "GraphQL/input objects.html#cloudawsmetadataintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsMqIntegrationInput": (
                "GraphQL/input objects.html#cloudawsmqintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsMsElasticacheGovIntegrationInput": (
                "GraphQL/input "
                "objects.html#cloudawsmselasticachegovintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsMsElasticacheIntegrationInput": (
                "GraphQL/input objects.html#cloudawsmselasticacheintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsMskIntegrationInput": (
                "GraphQL/input objects.html#cloudawsmskintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsNeptuneIntegrationInput": (
                "GraphQL/input objects.html#cloudawsneptuneintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsQldbIntegrationInput": (
                "GraphQL/input objects.html#cloudawsqldbintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsRoute53resolverIntegrationInput": (
                "GraphQL/input objects.html#cloudawsroute53resolverintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsStatesIntegrationInput": (
                "GraphQL/input objects.html#cloudawsstatesintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsTagsGlobalGovIntegrationInput": (
                "GraphQL/input objects.html#cloudawstagsglobalgovintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsTagsGlobalIntegrationInput": (
                "GraphQL/input objects.html#cloudawstagsglobalintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsTransitgatewayIntegrationInput": (
                "GraphQL/input objects.html#cloudawstransitgatewayintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsUpdateAccountInput": (
                "GraphQL/input objects.html#cloudawsupdateaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsWafIntegrationInput": (
                "GraphQL/input objects.html#cloudawswafintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsWafv2IntegrationInput": (
                "GraphQL/input objects.html#cloudawswafv2integrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAwsXrayIntegrationInput": (
                "GraphQL/input objects.html#cloudawsxrayintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureApimanagementIntegrationInput": (
                "GraphQL/input objects.html#cloudazureapimanagementintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureAppgatewayIntegrationInput": (
                "GraphQL/input objects.html#cloudazureappgatewayintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureAppserviceIntegrationInput": (
                "GraphQL/input objects.html#cloudazureappserviceintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureContainersIntegrationInput": (
                "GraphQL/input objects.html#cloudazurecontainersintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureCosmosdbIntegrationInput": (
                "GraphQL/input objects.html#cloudazurecosmosdbintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureCostmanagementIntegrationInput": (
                "GraphQL/input "
                "objects.html#cloudazurecostmanagementintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureDatafactoryIntegrationInput": (
                "GraphQL/input objects.html#cloudazuredatafactoryintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureDisableIntegrationsInput": (
                "GraphQL/input objects.html#cloudazuredisableintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureEventhubIntegrationInput": (
                "GraphQL/input objects.html#cloudazureeventhubintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureExpressrouteIntegrationInput": (
                "GraphQL/input objects.html#cloudazureexpressrouteintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureFirewallsIntegrationInput": (
                "GraphQL/input objects.html#cloudazurefirewallsintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureFrontdoorIntegrationInput": (
                "GraphQL/input objects.html#cloudazurefrontdoorintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureFunctionsIntegrationInput": (
                "GraphQL/input objects.html#cloudazurefunctionsintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureIntegrationsInput": (
                "GraphQL/input objects.html#cloudazureintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureKeyvaultIntegrationInput": (
                "GraphQL/input objects.html#cloudazurekeyvaultintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureLinkAccountInput": (
                "GraphQL/input objects.html#cloudazurelinkaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureLoadbalancerIntegrationInput": (
                "GraphQL/input objects.html#cloudazureloadbalancerintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureLogicappsIntegrationInput": (
                "GraphQL/input objects.html#cloudazurelogicappsintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureMachinelearningIntegrationInput": (
                "GraphQL/input "
                "objects.html#cloudazuremachinelearningintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureMariadbIntegrationInput": (
                "GraphQL/input objects.html#cloudazuremariadbintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureMonitorIntegrationInput": (
                "GraphQL/input objects.html#cloudazuremonitorintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureMysqlIntegrationInput": (
                "GraphQL/input objects.html#cloudazuremysqlintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureMysqlflexibleIntegrationInput": (
                "GraphQL/input objects.html#cloudazuremysqlflexibleintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzurePostgresqlIntegrationInput": (
                "GraphQL/input objects.html#cloudazurepostgresqlintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzurePostgresqlflexibleIntegrationInput": (
                "GraphQL/input "
                "objects.html#cloudazurepostgresqlflexibleintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzurePowerbidedicatedIntegrationInput": (
                "GraphQL/input "
                "objects.html#cloudazurepowerbidedicatedintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureRediscacheIntegrationInput": (
                "GraphQL/input objects.html#cloudazurerediscacheintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureServicebusIntegrationInput": (
                "GraphQL/input objects.html#cloudazureservicebusintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureSqlIntegrationInput": (
                "GraphQL/input objects.html#cloudazuresqlintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureSqlmanagedIntegrationInput": (
                "GraphQL/input objects.html#cloudazuresqlmanagedintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureStorageIntegrationInput": (
                "GraphQL/input objects.html#cloudazurestorageintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureUpdateAccountInput": (
                "GraphQL/input objects.html#cloudazureupdateaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureVirtualmachineIntegrationInput": (
                "GraphQL/input "
                "objects.html#cloudazurevirtualmachineintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureVirtualnetworksIntegrationInput": (
                "GraphQL/input "
                "objects.html#cloudazurevirtualnetworksintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureVmsIntegrationInput": (
                "GraphQL/input objects.html#cloudazurevmsintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudAzureVpngatewaysIntegrationInput": (
                "GraphQL/input objects.html#cloudazurevpngatewaysintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudBillingIntegrationInput": (
                "GraphQL/input objects.html#cloudbillingintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudCciAwsDisableIntegrationsInput": (
                "GraphQL/input objects.html#cloudcciawsdisableintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudCciAwsIntegrationsInput": (
                "GraphQL/input objects.html#cloudcciawsintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudCciAwsLinkAccountInput": (
                "GraphQL/input objects.html#cloudcciawslinkaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudCciAwsS3IntegrationInput": (
                "GraphQL/input objects.html#cloudcciawss3integrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudCloudfrontIntegrationInput": (
                "GraphQL/input objects.html#cloudcloudfrontintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudCloudtrailIntegrationInput": (
                "GraphQL/input objects.html#cloudcloudtrailintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudConfluentDisableIntegrationsInput": (
                "GraphQL/input objects.html#cloudconfluentdisableintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudConfluentIntegrationsInput": (
                "GraphQL/input objects.html#cloudconfluentintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudConfluentKafkaConnectorResourceIntegrationInput": (
                "GraphQL/input "
                "objects.html#cloudconfluentkafkaconnectorresourceintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudConfluentKafkaKsqlResourceIntegrationInput": (
                "GraphQL/input "
                "objects.html#cloudconfluentkafkaksqlresourceintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudConfluentKafkaResourceIntegrationInput": (
                "GraphQL/input "
                "objects.html#cloudconfluentkafkaresourceintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudConfluentLinkAccountInput": (
                "GraphQL/input objects.html#cloudconfluentlinkaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudConfluentUpdateAccountInput": (
                "GraphQL/input objects.html#cloudconfluentupdateaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudDisableAccountIntegrationInput": (
                "GraphQL/input objects.html#clouddisableaccountintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudDisableIntegrationsInput": (
                "GraphQL/input objects.html#clouddisableintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudDynamodbIntegrationInput": (
                "GraphQL/input objects.html#clouddynamodbintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudEbsIntegrationInput": (
                "GraphQL/input objects.html#cloudebsintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudEc2IntegrationInput": (
                "GraphQL/input objects.html#cloudec2integrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudEcsIntegrationInput": (
                "GraphQL/input objects.html#cloudecsintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudEfsIntegrationInput": (
                "GraphQL/input objects.html#cloudefsintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudElasticacheIntegrationInput": (
                "GraphQL/input objects.html#cloudelasticacheintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudElasticbeanstalkIntegrationInput": (
                "GraphQL/input objects.html#cloudelasticbeanstalkintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudElasticsearchIntegrationInput": (
                "GraphQL/input objects.html#cloudelasticsearchintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudElbIntegrationInput": (
                "GraphQL/input objects.html#cloudelbintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudEmrIntegrationInput": (
                "GraphQL/input objects.html#cloudemrintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudFossaDisableIntegrationsInput": (
                "GraphQL/input objects.html#cloudfossadisableintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudFossaIntegrationsInput": (
                "GraphQL/input objects.html#cloudfossaintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudFossaIssuesIntegrationInput": (
                "GraphQL/input objects.html#cloudfossaissuesintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudFossaLinkAccountInput": (
                "GraphQL/input objects.html#cloudfossalinkaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudFossaUpdateAccountInput": (
                "GraphQL/input objects.html#cloudfossaupdateaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpAiplatformIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpaiplatformintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpAlloydbIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpalloydbintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpAppengineIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpappengineintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpBigqueryIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpbigqueryintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpBigtableIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpbigtableintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpComposerIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpcomposerintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpDataflowIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpdataflowintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpDataprocIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpdataprocintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpDatastoreIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpdatastoreintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpDisableIntegrationsInput": (
                "GraphQL/input objects.html#cloudgcpdisableintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpFirebasedatabaseIntegrationInput": (
                "GraphQL/input "
                "objects.html#cloudgcpfirebasedatabaseintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpFirebasehostingIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpfirebasehostingintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpFirebasestorageIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpfirebasestorageintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpFirestoreIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpfirestoreintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpFunctionsIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpfunctionsintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpIntegrationsInput": (
                "GraphQL/input objects.html#cloudgcpintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpInterconnectIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpinterconnectintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpKubernetesIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpkubernetesintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpLinkAccountInput": (
                "GraphQL/input objects.html#cloudgcplinkaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpLoadbalancingIntegrationInput": (
                "GraphQL/input objects.html#cloudgcploadbalancingintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpMemcacheIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpmemcacheintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpPubsubIntegrationInput": (
                "GraphQL/input objects.html#cloudgcppubsubintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpRedisIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpredisintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpRouterIntegrationInput": (
                "GraphQL/input objects.html#cloudgcprouterintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpRunIntegrationInput": (
                "GraphQL/input objects.html#cloudgcprunintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpSpannerIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpspannerintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpSqlIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpsqlintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpStorageIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpstorageintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpUpdateAccountInput": (
                "GraphQL/input objects.html#cloudgcpupdateaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpVmsIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpvmsintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudGcpVpcaccessIntegrationInput": (
                "GraphQL/input objects.html#cloudgcpvpcaccessintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudHealthIntegrationInput": (
                "GraphQL/input objects.html#cloudhealthintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudIamIntegrationInput": (
                "GraphQL/input objects.html#cloudiamintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudIntegrationsInput": (
                "GraphQL/input objects.html#cloudintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudIotIntegrationInput": (
                "GraphQL/input objects.html#cloudiotintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudKinesisFirehoseIntegrationInput": (
                "GraphQL/input objects.html#cloudkinesisfirehoseintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudKinesisIntegrationInput": (
                "GraphQL/input objects.html#cloudkinesisintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudLambdaIntegrationInput": (
                "GraphQL/input objects.html#cloudlambdaintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudLinkCloudAccountsInput": (
                "GraphQL/input objects.html#cloudlinkcloudaccountsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudOciDisableIntegrationsInput": (
                "GraphQL/input objects.html#cloudocidisableintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudOciInstrumentedPayloadInput": (
                "GraphQL/input objects.html#cloudociinstrumentedpayloadinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudOciIntegrationsInput": (
                "GraphQL/input objects.html#cloudociintegrationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudOciLinkAccountInput": (
                "GraphQL/input objects.html#cloudocilinkaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudOciLogGroupInstrumentationStatus": (
                "GraphQL/input objects.html#cloudociloggroupinstrumentationstatus",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudOciLogGroupInstrumentedPayloadInput": (
                "GraphQL/input "
                "objects.html#cloudociloggroupinstrumentedpayloadinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudOciLogsIntegrationInput": (
                "GraphQL/input objects.html#cloudocilogsintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudOciMetadataAndTagsIntegrationInput": (
                "GraphQL/input objects.html#cloudocimetadataandtagsintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudOciNamespaceInstrumentationStatus": (
                "GraphQL/input objects.html#cloudocinamespaceinstrumentationstatus",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudOciUpdateAccountInput": (
                "GraphQL/input objects.html#cloudociupdateaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudRdsIntegrationInput": (
                "GraphQL/input objects.html#cloudrdsintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudRedshiftIntegrationInput": (
                "GraphQL/input objects.html#cloudredshiftintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudRenameAccountsInput": (
                "GraphQL/input objects.html#cloudrenameaccountsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudRoute53IntegrationInput": (
                "GraphQL/input objects.html#cloudroute53integrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudS3IntegrationInput": (
                "GraphQL/input objects.html#clouds3integrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudSecurityHubIntegrationInput": (
                "GraphQL/input objects.html#cloudsecurityhubintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudSesIntegrationInput": (
                "GraphQL/input objects.html#cloudsesintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudSnsIntegrationInput": (
                "GraphQL/input objects.html#cloudsnsintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudSqsIntegrationInput": (
                "GraphQL/input objects.html#cloudsqsintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudTrustedadvisorIntegrationInput": (
                "GraphQL/input objects.html#cloudtrustedadvisorintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudUnlinkAccountsInput": (
                "GraphQL/input objects.html#cloudunlinkaccountsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudUpdateCloudAccountsInput": (
                "GraphQL/input objects.html#cloudupdatecloudaccountsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CloudVpcIntegrationInput": (
                "GraphQL/input objects.html#cloudvpcintegrationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CollaborationAssistantConfigInput": (
                "GraphQL/input objects.html#collaborationassistantconfiginput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.CustomRoleContainerInput": (
                "GraphQL/input objects.html#customrolecontainerinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardAreaWidgetConfigurationInput": (
                "GraphQL/input objects.html#dashboardareawidgetconfigurationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardBarWidgetConfigurationInput": (
                "GraphQL/input objects.html#dashboardbarwidgetconfigurationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardBillboardWidgetConfigurationInput": (
                "GraphQL/input "
                "objects.html#dashboardbillboardwidgetconfigurationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardBillboardWidgetThresholdInput": (
                "GraphQL/input objects.html#dashboardbillboardwidgetthresholdinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardInput": (
                "GraphQL/input objects.html#dashboardinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardLineWidgetConfigurationInput": (
                "GraphQL/input objects.html#dashboardlinewidgetconfigurationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardLiveUrlAuthCreationInput": (
                "GraphQL/input objects.html#dashboardliveurlauthcreationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardLiveUrlAuthFactorInput": (
                "GraphQL/input objects.html#dashboardliveurlauthfactorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardLiveUrlAuthUpdateInput": (
                "GraphQL/input objects.html#dashboardliveurlauthupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardLiveUrlCreationPoliciesFilterInput": (
                "GraphQL/input "
                "objects.html#dashboardliveurlcreationpoliciesfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardLiveUrlOptionsInput": (
                "GraphQL/input objects.html#dashboardliveurloptionsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardLiveUrlsFilterInput": (
                "GraphQL/input objects.html#dashboardliveurlsfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardMarkdownWidgetConfigurationInput": (
                "GraphQL/input "
                "objects.html#dashboardmarkdownwidgetconfigurationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardPageInput": (
                "GraphQL/input objects.html#dashboardpageinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardPieWidgetConfigurationInput": (
                "GraphQL/input objects.html#dashboardpiewidgetconfigurationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardSnapshotUrlInput": (
                "GraphQL/input objects.html#dashboardsnapshoturlinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardSnapshotUrlTimeWindowInput": (
                "GraphQL/input objects.html#dashboardsnapshoturltimewindowinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardTableWidgetConfigurationInput": (
                "GraphQL/input objects.html#dashboardtablewidgetconfigurationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardUpdateLiveUrlCreationPoliciesInput": (
                "GraphQL/input "
                "objects.html#dashboardupdateliveurlcreationpoliciesinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardUpdatePageInput": (
                "GraphQL/input objects.html#dashboardupdatepageinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardUpdateWidgetInput": (
                "GraphQL/input objects.html#dashboardupdatewidgetinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardVariableDefaultItemInput": (
                "GraphQL/input objects.html#dashboardvariabledefaultiteminput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardVariableDefaultValueInput": (
                "GraphQL/input objects.html#dashboardvariabledefaultvalueinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardVariableEnumItemInput": (
                "GraphQL/input objects.html#dashboardvariableenumiteminput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardVariableInput": (
                "GraphQL/input objects.html#dashboardvariableinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardVariableNrqlQueryInput": (
                "GraphQL/input objects.html#dashboardvariablenrqlqueryinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardVariableOptionsInput": (
                "GraphQL/input objects.html#dashboardvariableoptionsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardWidgetConfigurationInput": (
                "GraphQL/input objects.html#dashboardwidgetconfigurationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardWidgetInput": (
                "GraphQL/input objects.html#dashboardwidgetinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardWidgetLayoutInput": (
                "GraphQL/input objects.html#dashboardwidgetlayoutinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardWidgetNrqlQueryInput": (
                "GraphQL/input objects.html#dashboardwidgetnrqlqueryinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DashboardWidgetVisualizationInput": (
                "GraphQL/input objects.html#dashboardwidgetvisualizationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DataManagementAccountFeatureSettingInput": (
                "GraphQL/input "
                "objects.html#datamanagementaccountfeaturesettinginput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DataManagementAccountLimitInput": (
                "GraphQL/input objects.html#datamanagementaccountlimitinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DataManagementFeatureSettingLookup": (
                "GraphQL/input objects.html#datamanagementfeaturesettinglookup",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DataManagementLimitLookupInput": (
                "GraphQL/input objects.html#datamanagementlimitlookupinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DataManagementRuleInput": (
                "GraphQL/input objects.html#datamanagementruleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DataSourceGapsGapsQuery": (
                "GraphQL/input objects.html#datasourcegapsgapsquery",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DateTimeWindowInput": (
                "GraphQL/input objects.html#datetimewindowinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.DomainTypeInput": (
                "GraphQL/input objects.html#domaintypeinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EdgeCreateSpanAttributeRuleInput": (
                "GraphQL/input objects.html#edgecreatespanattributeruleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EdgeCreateTraceFilterRulesInput": (
                "GraphQL/input objects.html#edgecreatetracefilterrulesinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EdgeCreateTraceObserverInput": (
                "GraphQL/input objects.html#edgecreatetraceobserverinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EdgeDataSourceGroupInput": (
                "GraphQL/input objects.html#edgedatasourcegroupinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EdgeDeleteTraceFilterRulesInput": (
                "GraphQL/input objects.html#edgedeletetracefilterrulesinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EdgeDeleteTraceObserverInput": (
                "GraphQL/input objects.html#edgedeletetraceobserverinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EdgeRandomTraceFilterInput": (
                "GraphQL/input objects.html#edgerandomtracefilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EdgeUpdateTraceObserverInput": (
                "GraphQL/input objects.html#edgeupdatetraceobserverinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityGoldenContextInput": (
                "GraphQL/input objects.html#entitygoldencontextinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityGoldenMetricInput": (
                "GraphQL/input objects.html#entitygoldenmetricinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityGoldenNrqlTimeWindowInput": (
                "GraphQL/input objects.html#entitygoldennrqltimewindowinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityGoldenTagInput": (
                "GraphQL/input objects.html#entitygoldentaginput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementAiAgentEntityCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementaiagententitycreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementAiAgentEntityUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementaiagententityupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementAiAgentToolConfigCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementaiagenttoolconfigcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementAiAgentToolConfigUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementaiagenttoolconfigupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementAiToolEntityCreateInput": (
                "GraphQL/input objects.html#entitymanagementaitoolentitycreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementAiToolEntityUpdateInput": (
                "GraphQL/input objects.html#entitymanagementaitoolentityupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementAiToolParameterCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementaitoolparametercreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementAiToolParameterUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementaitoolparameterupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementAttributeCreateInput": (
                "GraphQL/input objects.html#entitymanagementattributecreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementAttributeUpdateInput": (
                "GraphQL/input objects.html#entitymanagementattributeupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementCategoryScopeCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementcategoryscopecreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementCategoryScopeUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementcategoryscopeupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementCharacterTextSplitterOptionsCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementcharactertextsplitteroptionscreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementCharacterTextSplitterOptionsUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementcharactertextsplitteroptionsupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementCollectionElementsFilter": (
                "GraphQL/input "
                "objects.html#entitymanagementcollectionelementsfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementCollectionEntityCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementcollectionentitycreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementCollectionEntityUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementcollectionentityupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementCollectionIdFilterArgument": (
                "GraphQL/input "
                "objects.html#entitymanagementcollectionidfilterargument",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementConfigCreateInput": (
                "GraphQL/input objects.html#entitymanagementconfigcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementConfigUpdateInput": (
                "GraphQL/input objects.html#entitymanagementconfigupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementConfluenceIntegrationCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementconfluenceintegrationcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementConfluenceIntegrationUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementconfluenceintegrationupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementConfluenceRagSettingsEntityCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementconfluenceragsettingsentitycreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementConfluenceRagSettingsEntityUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementconfluenceragsettingsentityupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementDiscoverySettingsUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementdiscoverysettingsupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementEntityReferenceInput": (
                "GraphQL/input objects.html#entitymanagemententityreferenceinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementExternalOwnerCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementexternalownercreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementExternalOwnerUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementexternalownerupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementGenericEntityUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementgenericentityupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementGitRepositoryEntityCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementgitrepositoryentitycreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementGitRepositoryEntityUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementgitrepositoryentityupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementInboxIssueCategoryEntityCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementinboxissuecategoryentitycreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementInboxIssueCategoryEntityUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementinboxissuecategoryentityupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementLlmConfigCreateInput": (
                "GraphQL/input objects.html#entitymanagementllmconfigcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementLlmConfigUpdateInput": (
                "GraphQL/input objects.html#entitymanagementllmconfigupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementMarkdownTextSplitterOptionsCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementmarkdowntextsplitteroptionscreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementMarkdownTextSplitterOptionsUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementmarkdowntextsplitteroptionsupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementNrqlRuleEngineCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementnrqlruleenginecreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementNrqlRuleEngineUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementnrqlruleengineupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementPerformanceInboxSettingEntityCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementperformanceinboxsettingentitycreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementPerformanceInboxSettingEntityUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementperformanceinboxsettingentityupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementPipelineCloudRuleEntityCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementpipelinecloudruleentitycreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementPipelineCloudRuleEntityUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementpipelinecloudruleentityupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementRagToolEntityCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementragtoolentitycreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementRagToolEntityUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementragtoolentityupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementRelationshipCreateInput": (
                "GraphQL/input objects.html#entitymanagementrelationshipcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementRelationshipUpdateInput": (
                "GraphQL/input objects.html#entitymanagementrelationshipupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementRepositoryLicenseCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementrepositorylicensecreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementRepositoryLicenseUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementrepositorylicenseupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementScheduleCreateInput": (
                "GraphQL/input objects.html#entitymanagementschedulecreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementScheduleUpdateInput": (
                "GraphQL/input objects.html#entitymanagementscheduleupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementScopedReferenceInput": (
                "GraphQL/input objects.html#entitymanagementscopedreferenceinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementScorecardEntityCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementscorecardentitycreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementScorecardEntityUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementscorecardentityupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementScorecardRuleEntityCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementscorecardruleentitycreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementScorecardRuleEntityUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementscorecardruleentityupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementSyncGroupRuleConditionUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementsyncgroupruleconditionupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementSyncGroupRuleUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementsyncgroupruleupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementSyncGroupsSettingsUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementsyncgroupssettingsupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementTagInput": (
                "GraphQL/input objects.html#entitymanagementtaginput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementTeamEntityCreateInput": (
                "GraphQL/input objects.html#entitymanagementteamentitycreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementTeamEntityUpdateInput": (
                "GraphQL/input objects.html#entitymanagementteamentityupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementTeamExternalIntegrationCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementteamexternalintegrationcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementTeamExternalIntegrationUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementteamexternalintegrationupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementTeamResourceCreateInput": (
                "GraphQL/input objects.html#entitymanagementteamresourcecreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementTeamResourceUpdateInput": (
                "GraphQL/input objects.html#entitymanagementteamresourceupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementTeamsOrganizationSettingsEntityUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementteamsorganizationsettingsentityupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementTokenTextSplitterOptionsCreateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementtokentextsplitteroptionscreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityManagementTokenTextSplitterOptionsUpdateInput": (
                "GraphQL/input "
                "objects.html#entitymanagementtokentextsplitteroptionsupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityRelationshipEdgeFilter": (
                "GraphQL/input objects.html#entityrelationshipedgefilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityRelationshipEdgeTypeFilter": (
                "GraphQL/input objects.html#entityrelationshipedgetypefilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityRelationshipEntityDomainTypeFilter": (
                "GraphQL/input "
                "objects.html#entityrelationshipentitydomaintypefilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntityRelationshipFilter": (
                "GraphQL/input objects.html#entityrelationshipfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntitySearchOptions": (
                "GraphQL/input objects.html#entitysearchoptions",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntitySearchQueryBuilder": (
                "GraphQL/input objects.html#entitysearchquerybuilder",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EntitySearchQueryBuilderTag": (
                "GraphQL/input objects.html#entitysearchquerybuildertag",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ErrorsInboxAssignErrorGroupInput": (
                "GraphQL/input objects.html#errorsinboxassignerrorgroupinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ErrorsInboxAssignmentSearchFilterInput": (
                "GraphQL/input objects.html#errorsinboxassignmentsearchfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ErrorsInboxErrorEventInput": (
                "GraphQL/input objects.html#errorsinboxerroreventinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ErrorsInboxErrorGroupSearchFilterInput": (
                "GraphQL/input objects.html#errorsinboxerrorgroupsearchfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ErrorsInboxErrorGroupSortOrderInput": (
                "GraphQL/input objects.html#errorsinboxerrorgroupsortorderinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ErrorsInboxResourceFilterInput": (
                "GraphQL/input objects.html#errorsinboxresourcefilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ErrorsInboxStateVersionInput": (
                "GraphQL/input objects.html#errorsinboxstateversioninput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EventsToMetricsCreateRuleInput": (
                "GraphQL/input objects.html#eventstometricscreateruleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EventsToMetricsDeleteRuleInput": (
                "GraphQL/input objects.html#eventstometricsdeleteruleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.EventsToMetricsUpdateRuleInput": (
                "GraphQL/input objects.html#eventstometricsupdateruleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.FleetControlConfigurationVersionListInput": (
                "GraphQL/input "
                "objects.html#fleetcontrolconfigurationversionlistinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.FleetControlFleetDeploymentCreateInput": (
                "GraphQL/input objects.html#fleetcontrolfleetdeploymentcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.FleetControlFleetDeploymentPolicyInput": (
                "GraphQL/input objects.html#fleetcontrolfleetdeploymentpolicyinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.FleetControlFleetDeploymentUpdateInput": (
                "GraphQL/input objects.html#fleetcontrolfleetdeploymentupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.FleetControlFleetEntityCreateInput": (
                "GraphQL/input objects.html#fleetcontrolfleetentitycreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.FleetControlFleetMemberRingInput": (
                "GraphQL/input objects.html#fleetcontrolfleetmemberringinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.FleetControlFleetMembersFilterInput": (
                "GraphQL/input objects.html#fleetcontrolfleetmembersfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.FleetControlRingDeploymentPolicyInput": (
                "GraphQL/input objects.html#fleetcontrolringdeploymentpolicyinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.FleetControlScopedReferenceInput": (
                "GraphQL/input objects.html#fleetcontrolscopedreferenceinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.FleetControlTagInput": (
                "GraphQL/input objects.html#fleetcontroltaginput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.FleetControlUpdateFleetEntityInput": (
                "GraphQL/input objects.html#fleetcontrolupdatefleetentityinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.InstallationInstallStatusInput": (
                "GraphQL/input objects.html#installationinstallstatusinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.InstallationRecipeStatus": (
                "GraphQL/input objects.html#installationrecipestatus",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.InstallationStatusErrorInput": (
                "GraphQL/input objects.html#installationstatuserrorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.LogConfigurationsCreateDataPartitionRuleInput": (
                "GraphQL/input "
                "objects.html#logconfigurationscreatedatapartitionruleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.LogConfigurationsCreateObfuscationActionInput": (
                "GraphQL/input "
                "objects.html#logconfigurationscreateobfuscationactioninput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.LogConfigurationsCreateObfuscationExpressionInput": (
                "GraphQL/input "
                "objects.html#logconfigurationscreateobfuscationexpressioninput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.LogConfigurationsCreateObfuscationRuleInput": (
                "GraphQL/input "
                "objects.html#logconfigurationscreateobfuscationruleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.LogConfigurationsDataPartitionRuleMatchingCriteriaInput": (
                "GraphQL/input "
                "objects.html#logconfigurationsdatapartitionrulematchingcriteriainput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.LogConfigurationsParsingRuleConfiguration": (
                "GraphQL/input "
                "objects.html#logconfigurationsparsingruleconfiguration",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.LogConfigurationsPipelineConfigurationInput": (
                "GraphQL/input "
                "objects.html#logconfigurationspipelineconfigurationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.LogConfigurationsUpdateDataPartitionRuleInput": (
                "GraphQL/input "
                "objects.html#logconfigurationsupdatedatapartitionruleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.LogConfigurationsUpdateObfuscationActionInput": (
                "GraphQL/input "
                "objects.html#logconfigurationsupdateobfuscationactioninput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.LogConfigurationsUpdateObfuscationExpressionInput": (
                "GraphQL/input "
                "objects.html#logconfigurationsupdateobfuscationexpressioninput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.LogConfigurationsUpdateObfuscationRuleInput": (
                "GraphQL/input "
                "objects.html#logconfigurationsupdateobfuscationruleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MachineLearningAddDocumentIndexConfiguration": (
                "GraphQL/input "
                "objects.html#machinelearningadddocumentindexconfiguration",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MachineLearningCharacterTextSplitterOptionsInput": (
                "GraphQL/input "
                "objects.html#machinelearningcharactertextsplitteroptionsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MachineLearningFilterBy": (
                "GraphQL/input objects.html#machinelearningfilterby",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MachineLearningIndexOptions": (
                "GraphQL/input objects.html#machinelearningindexoptions",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MachineLearningMarkdownTextSplitterOptionsInput": (
                "GraphQL/input "
                "objects.html#machinelearningmarkdowntextsplitteroptionsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MachineLearningTokenTextSplitterOptionsInput": (
                "GraphQL/input "
                "objects.html#machinelearningtokentextsplitteroptionsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MetricNormalizationCreateRuleInput": (
                "GraphQL/input objects.html#metricnormalizationcreateruleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MetricNormalizationEditRuleInput": (
                "GraphQL/input objects.html#metricnormalizationeditruleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationGrantAuthenticationDomainIdInputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationgrantauthenticationdomainidinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationGrantFilterInputExpression": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationgrantfilterinputexpression",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationGrantGroupIdInputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationgrantgroupidinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationGrantIdInputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationgrantidinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationGrantOrganizationIdInputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationgrantorganizationidinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationGrantRoleIdInputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationgrantroleidinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationGrantScopeIdInputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationgrantscopeidinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationGrantScopeTypeInputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationgrantscopetypeinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationGrantScopeTypeV2InputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationgrantscopetypev2inputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationGrantSortInput": (
                "GraphQL/input objects.html#multitenantauthorizationgrantsortinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationGranteeIdInputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationgranteeidinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationGranteeInputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationgranteeinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationGranteeTypeInputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationgranteetypeinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationPermissionFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationpermissionfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationPermissionFilterRoleIdInput": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationpermissionfilterroleidinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationPermissionFilterScopeInput": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationpermissionfilterscopeinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationRoleFilterInputExpression": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationrolefilterinputexpression",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationRoleGroupIdInputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationrolegroupidinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationRoleIdInputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationroleidinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationRoleNameInputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationrolenameinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationRoleOrganizationIdInputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationroleorganizationidinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationRoleScopeInputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationrolescopeinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationRoleScopeV2InputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationrolescopev2inputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationRoleSortInput": (
                "GraphQL/input objects.html#multitenantauthorizationrolesortinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantAuthorizationRoleTypeInputFilter": (
                "GraphQL/input "
                "objects.html#multitenantauthorizationroletypeinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityAllowsCapabilityInput": (
                "GraphQL/input "
                "objects.html#multitenantidentityallowscapabilityinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityAuthenticationDomainIdInput": (
                "GraphQL/input "
                "objects.html#multitenantidentityauthenticationdomainidinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityEmailVerificationStateInput": (
                "GraphQL/input "
                "objects.html#multitenantidentityemailverificationstateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityGroupFilterInput": (
                "GraphQL/input objects.html#multitenantidentitygroupfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityGroupIdInput": (
                "GraphQL/input objects.html#multitenantidentitygroupidinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityGroupMemberIdInput": (
                "GraphQL/input objects.html#multitenantidentitygroupmemberidinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityGroupNameInput": (
                "GraphQL/input objects.html#multitenantidentitygroupnameinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityGroupSortInput": (
                "GraphQL/input objects.html#multitenantidentitygroupsortinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityGroupUserFilterInput": (
                "GraphQL/input objects.html#multitenantidentitygroupuserfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityOrganizationIdInput": (
                "GraphQL/input objects.html#multitenantidentityorganizationidinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityPendingUpgradeRequestInput": (
                "GraphQL/input "
                "objects.html#multitenantidentitypendingupgraderequestinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityUserEmailInput": (
                "GraphQL/input objects.html#multitenantidentityuseremailinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityUserFilterInput": (
                "GraphQL/input objects.html#multitenantidentityuserfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityUserGroupIdInput": (
                "GraphQL/input objects.html#multitenantidentityusergroupidinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityUserIdInput": (
                "GraphQL/input objects.html#multitenantidentityuseridinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityUserNameInput": (
                "GraphQL/input objects.html#multitenantidentityusernameinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityUserNotGroupIdInput": (
                "GraphQL/input objects.html#multitenantidentityusernotgroupidinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.MultiTenantIdentityUserSortInput": (
                "GraphQL/input objects.html#multitenantidentityusersortinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.NerdStorageScopeInput": (
                "GraphQL/input objects.html#nerdstoragescopeinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.NerdStorageVaultScope": (
                "GraphQL/input objects.html#nerdstoragevaultscope",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.NerdStorageVaultWriteSecretInput": (
                "GraphQL/input objects.html#nerdstoragevaultwritesecretinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.NerdpackAllowListInput": (
                "GraphQL/input objects.html#nerdpackallowlistinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.NerdpackCreationInput": (
                "GraphQL/input objects.html#nerdpackcreationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.NerdpackDataFilter": (
                "GraphQL/input objects.html#nerdpackdatafilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.NerdpackOverrideVersionRules": (
                "GraphQL/input objects.html#nerdpackoverrideversionrules",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.NerdpackRemoveVersionTagInput": (
                "GraphQL/input objects.html#nerdpackremoveversiontaginput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.NerdpackSubscribeAccountsInput": (
                "GraphQL/input objects.html#nerdpacksubscribeaccountsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.NerdpackTagVersionInput": (
                "GraphQL/input objects.html#nerdpacktagversioninput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.NerdpackUnsubscribeAccountsInput": (
                "GraphQL/input objects.html#nerdpackunsubscribeaccountsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.NerdpackVersionFilter": (
                "GraphQL/input objects.html#nerdpackversionfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.Nr1CatalogCommunityContactChannelInput": (
                "GraphQL/input objects.html#nr1catalogcommunitycontactchannelinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.Nr1CatalogEmailContactChannelInput": (
                "GraphQL/input objects.html#nr1catalogemailcontactchannelinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.Nr1CatalogIssuesContactChannelInput": (
                "GraphQL/input objects.html#nr1catalogissuescontactchannelinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.Nr1CatalogSearchFilter": (
                "GraphQL/input objects.html#nr1catalogsearchfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.Nr1CatalogSubmitMetadataInput": (
                "GraphQL/input objects.html#nr1catalogsubmitmetadatainput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.Nr1CatalogSupportInput": (
                "GraphQL/input objects.html#nr1catalogsupportinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.NrqlDropRulesCreateDropRuleInput": (
                "GraphQL/input objects.html#nrqldroprulescreatedropruleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.NrqlQueryOptions": (
                "GraphQL/input objects.html#nrqlqueryoptions",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationAccountFilterInput": (
                "GraphQL/input objects.html#organizationaccountfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationAccountIdFilterInput": (
                "GraphQL/input objects.html#organizationaccountidfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationAccountIdInput": (
                "GraphQL/input objects.html#organizationaccountidinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationAccountNameFilterInput": (
                "GraphQL/input objects.html#organizationaccountnamefilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationAccountOrganizationIdFilterInput": (
                "GraphQL/input "
                "objects.html#organizationaccountorganizationidfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationAccountShareFilterInput": (
                "GraphQL/input objects.html#organizationaccountsharefilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationAccountShareSortInput": (
                "GraphQL/input objects.html#organizationaccountsharesortinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationAccountSharingModeFilterInput": (
                "GraphQL/input "
                "objects.html#organizationaccountsharingmodefilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationAccountSortInput": (
                "GraphQL/input objects.html#organizationaccountsortinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationAccountStatusFilterInput": (
                "GraphQL/input objects.html#organizationaccountstatusfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationAuthenticationDomainFilterInput": (
                "GraphQL/input "
                "objects.html#organizationauthenticationdomainfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationAuthenticationDomainSortInput": (
                "GraphQL/input "
                "objects.html#organizationauthenticationdomainsortinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationContractCustomerIdInputFilter": (
                "GraphQL/input "
                "objects.html#organizationcontractcustomeridinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationContractOrganizationIdInputFilter": (
                "GraphQL/input "
                "objects.html#organizationcontractorganizationidinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationCreateOrganizationInput": (
                "GraphQL/input objects.html#organizationcreateorganizationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationCreateSharedAccountInput": (
                "GraphQL/input objects.html#organizationcreatesharedaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationCustomerContractFilterInput": (
                "GraphQL/input objects.html#organizationcustomercontractfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationCustomerOrganizationFilterInput": (
                "GraphQL/input "
                "objects.html#organizationcustomerorganizationfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationIdInput": (
                "GraphQL/input objects.html#organizationidinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationMembersOrganizationMemberAuthenticationDomainIdFilter": (
                "GraphQL/input "
                "objects.html#organizationmembersorganizationmemberauthenticationdomainidfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationMembersOrganizationMemberFilter": (
                "GraphQL/input "
                "objects.html#organizationmembersorganizationmemberfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationMembersOrganizationMemberOrganizationIdFilter": (
                "GraphQL/input "
                "objects.html#organizationmembersorganizationmemberorganizationidfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationMembersOrganizationMemberSearchFilter": (
                "GraphQL/input "
                "objects.html#organizationmembersorganizationmembersearchfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationMembersOrganizationMemberTypeFilter": (
                "GraphQL/input "
                "objects.html#organizationmembersorganizationmembertypefilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationNameInput": (
                "GraphQL/input objects.html#organizationnameinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationNewManagedAccountInput": (
                "GraphQL/input objects.html#organizationnewmanagedaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationOrganizationAccountIdInputFilter": (
                "GraphQL/input "
                "objects.html#organizationorganizationaccountidinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationOrganizationAuthenticationDomainIdInputFilter": (
                "GraphQL/input "
                "objects.html#organizationorganizationauthenticationdomainidinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationOrganizationCreateAsyncResultFilterInput": (
                "GraphQL/input "
                "objects.html#organizationorganizationcreateasyncresultfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationOrganizationCreateJobCustomerIdInput": (
                "GraphQL/input "
                "objects.html#organizationorganizationcreatejobcustomeridinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationOrganizationCreateJobIdInput": (
                "GraphQL/input "
                "objects.html#organizationorganizationcreatejobidinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationOrganizationCreateJobStatusInput": (
                "GraphQL/input "
                "objects.html#organizationorganizationcreatejobstatusinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationOrganizationCustomerIdInputFilter": (
                "GraphQL/input "
                "objects.html#organizationorganizationcustomeridinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationOrganizationGroupFilterInput": (
                "GraphQL/input "
                "objects.html#organizationorganizationgroupfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationOrganizationGroupIdInputFilter": (
                "GraphQL/input "
                "objects.html#organizationorganizationgroupidinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationOrganizationGroupNameInputFilter": (
                "GraphQL/input "
                "objects.html#organizationorganizationgroupnameinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationOrganizationGroupOrganizationIdInputFilter": (
                "GraphQL/input "
                "objects.html#organizationorganizationgrouporganizationidinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationOrganizationIdInput": (
                "GraphQL/input objects.html#organizationorganizationidinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationOrganizationIdInputFilter": (
                "GraphQL/input objects.html#organizationorganizationidinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationOrganizationNameInputFilter": (
                "GraphQL/input objects.html#organizationorganizationnameinputfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationProvisioningProductInput": (
                "GraphQL/input objects.html#organizationprovisioningproductinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationProvisioningUnitOfMeasureInput": (
                "GraphQL/input "
                "objects.html#organizationprovisioningunitofmeasureinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationRevokeSharedAccountInput": (
                "GraphQL/input objects.html#organizationrevokesharedaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationSharedAccountInput": (
                "GraphQL/input objects.html#organizationsharedaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationTargetIdInput": (
                "GraphQL/input objects.html#organizationtargetidinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationUpdateInput": (
                "GraphQL/input objects.html#organizationupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.OrganizationUpdateSharedAccountInput": (
                "GraphQL/input objects.html#organizationupdatesharedaccountinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.QueryHistoryQueryHistoryOptionsInput": (
                "GraphQL/input objects.html#queryhistoryqueryhistoryoptionsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ReferenceEntityCreateRepositoryInput": (
                "GraphQL/input objects.html#referenceentitycreaterepositoryinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SecretsManagementBooleanFilter": (
                "GraphQL/input objects.html#secretsmanagementbooleanfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SecretsManagementScope": (
                "GraphQL/input objects.html#secretsmanagementscope",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SecretsManagementScopeFilter": (
                "GraphQL/input objects.html#secretsmanagementscopefilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SecretsManagementSecretsCollectionFilter": (
                "GraphQL/input "
                "objects.html#secretsmanagementsecretscollectionfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SecretsManagementSecretsCollectionSort": (
                "GraphQL/input objects.html#secretsmanagementsecretscollectionsort",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SecretsManagementStringFilter": (
                "GraphQL/input objects.html#secretsmanagementstringfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SecretsManagementTagInput": (
                "GraphQL/input objects.html#secretsmanagementtaginput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ServiceLevelEventsCreateInput": (
                "GraphQL/input objects.html#serviceleveleventscreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ServiceLevelEventsQueryCreateInput": (
                "GraphQL/input objects.html#serviceleveleventsquerycreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ServiceLevelEventsQuerySelectCreateInput": (
                "GraphQL/input "
                "objects.html#serviceleveleventsqueryselectcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ServiceLevelEventsQuerySelectUpdateInput": (
                "GraphQL/input "
                "objects.html#serviceleveleventsqueryselectupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ServiceLevelEventsQueryUpdateInput": (
                "GraphQL/input objects.html#serviceleveleventsqueryupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ServiceLevelEventsUpdateInput": (
                "GraphQL/input objects.html#serviceleveleventsupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ServiceLevelIndicatorCreateInput": (
                "GraphQL/input objects.html#servicelevelindicatorcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ServiceLevelIndicatorUpdateInput": (
                "GraphQL/input objects.html#servicelevelindicatorupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ServiceLevelObjectiveCreateInput": (
                "GraphQL/input objects.html#servicelevelobjectivecreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ServiceLevelObjectiveRollingTimeWindowCreateInput": (
                "GraphQL/input "
                "objects.html#servicelevelobjectiverollingtimewindowcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ServiceLevelObjectiveRollingTimeWindowUpdateInput": (
                "GraphQL/input "
                "objects.html#servicelevelobjectiverollingtimewindowupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ServiceLevelObjectiveTimeWindowCreateInput": (
                "GraphQL/input "
                "objects.html#servicelevelobjectivetimewindowcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ServiceLevelObjectiveTimeWindowUpdateInput": (
                "GraphQL/input "
                "objects.html#servicelevelobjectivetimewindowupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.ServiceLevelObjectiveUpdateInput": (
                "GraphQL/input objects.html#servicelevelobjectiveupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SessionsClientTypeFilter": (
                "GraphQL/input objects.html#sessionsclienttypefilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SessionsSessionFilter": (
                "GraphQL/input objects.html#sessionssessionfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SortCriterionWithDirection": (
                "GraphQL/input objects.html#sortcriterionwithdirection",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.StreamingExportAwsInput": (
                "GraphQL/input objects.html#streamingexportawsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.StreamingExportAzureInput": (
                "GraphQL/input objects.html#streamingexportazureinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.StreamingExportGcpInput": (
                "GraphQL/input objects.html#streamingexportgcpinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.StreamingExportRuleInput": (
                "GraphQL/input objects.html#streamingexportruleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsCreateBrokenLinksMonitorInput": (
                "GraphQL/input objects.html#syntheticscreatebrokenlinksmonitorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsCreateCertCheckMonitorInput": (
                "GraphQL/input objects.html#syntheticscreatecertcheckmonitorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsCreateScriptApiMonitorInput": (
                "GraphQL/input objects.html#syntheticscreatescriptapimonitorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsCreateScriptBrowserMonitorInput": (
                "GraphQL/input "
                "objects.html#syntheticscreatescriptbrowsermonitorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsCreateSimpleBrowserMonitorInput": (
                "GraphQL/input "
                "objects.html#syntheticscreatesimplebrowsermonitorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsCreateSimpleMonitorInput": (
                "GraphQL/input objects.html#syntheticscreatesimplemonitorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsCreateStepMonitorInput": (
                "GraphQL/input objects.html#syntheticscreatestepmonitorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsCustomHeaderInput": (
                "GraphQL/input objects.html#syntheticscustomheaderinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsDateWindowEndConfig": (
                "GraphQL/input objects.html#syntheticsdatewindowendconfig",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsDaysOfWeek": (
                "GraphQL/input objects.html#syntheticsdaysofweek",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsDeviceEmulationInput": (
                "GraphQL/input objects.html#syntheticsdeviceemulationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsExtendedTypeMonitorRuntimeInput": (
                "GraphQL/input "
                "objects.html#syntheticsextendedtypemonitorruntimeinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsLocationsInput": (
                "GraphQL/input objects.html#syntheticslocationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsMonitorDowntimeDailyConfig": (
                "GraphQL/input objects.html#syntheticsmonitordowntimedailyconfig",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsMonitorDowntimeMonthlyConfig": (
                "GraphQL/input objects.html#syntheticsmonitordowntimemonthlyconfig",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsMonitorDowntimeMonthlyFrequency": (
                "GraphQL/input "
                "objects.html#syntheticsmonitordowntimemonthlyfrequency",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsMonitorDowntimeOnceConfig": (
                "GraphQL/input objects.html#syntheticsmonitordowntimeonceconfig",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsMonitorDowntimeWeeklyConfig": (
                "GraphQL/input objects.html#syntheticsmonitordowntimeweeklyconfig",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsPrivateLocationInput": (
                "GraphQL/input objects.html#syntheticsprivatelocationinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsRuntimeInput": (
                "GraphQL/input objects.html#syntheticsruntimeinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsScriptBrowserMonitorAdvancedOptionsInput": (
                "GraphQL/input "
                "objects.html#syntheticsscriptbrowsermonitoradvancedoptionsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsScriptedMonitorLocationsInput": (
                "GraphQL/input objects.html#syntheticsscriptedmonitorlocationsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsSimpleBrowserMonitorAdvancedOptionsInput": (
                "GraphQL/input "
                "objects.html#syntheticssimplebrowsermonitoradvancedoptionsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsSimpleMonitorAdvancedOptionsInput": (
                "GraphQL/input "
                "objects.html#syntheticssimplemonitoradvancedoptionsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsStepInput": (
                "GraphQL/input objects.html#syntheticsstepinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsStepMonitorAdvancedOptionsInput": (
                "GraphQL/input "
                "objects.html#syntheticsstepmonitoradvancedoptionsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsTag": (
                "GraphQL/input objects.html#syntheticstag",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsUpdateBrokenLinksMonitorInput": (
                "GraphQL/input objects.html#syntheticsupdatebrokenlinksmonitorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsUpdateCertCheckMonitorInput": (
                "GraphQL/input objects.html#syntheticsupdatecertcheckmonitorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsUpdateScriptApiMonitorInput": (
                "GraphQL/input objects.html#syntheticsupdatescriptapimonitorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsUpdateScriptBrowserMonitorInput": (
                "GraphQL/input "
                "objects.html#syntheticsupdatescriptbrowsermonitorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsUpdateSimpleBrowserMonitorInput": (
                "GraphQL/input "
                "objects.html#syntheticsupdatesimplebrowsermonitorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsUpdateSimpleMonitorInput": (
                "GraphQL/input objects.html#syntheticsupdatesimplemonitorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SyntheticsUpdateStepMonitorInput": (
                "GraphQL/input objects.html#syntheticsupdatestepmonitorinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SystemIdentityClientIdFilter": (
                "GraphQL/input objects.html#systemidentityclientidfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SystemIdentityGroupFilter": (
                "GraphQL/input objects.html#systemidentitygroupfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SystemIdentityGroupIdFilter": (
                "GraphQL/input objects.html#systemidentitygroupidfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SystemIdentityGroupNameFilter": (
                "GraphQL/input objects.html#systemidentitygroupnamefilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SystemIdentityIdentityFilter": (
                "GraphQL/input objects.html#systemidentityidentityfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SystemIdentityIdentityIdFilter": (
                "GraphQL/input objects.html#systemidentityidentityidfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SystemIdentityIdentitySort": (
                "GraphQL/input objects.html#systemidentityidentitysort",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SystemIdentityIdentitySortField": (
                "GraphQL/input objects.html#systemidentityidentitysortfield",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SystemIdentityNameFilter": (
                "GraphQL/input objects.html#systemidentitynamefilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.SystemIdentityOrganizationIdFilter": (
                "GraphQL/input objects.html#systemidentityorganizationidfilter",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.TaggingTagInput": (
                "GraphQL/input objects.html#taggingtaginput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.TaggingTagValueInput": (
                "GraphQL/input objects.html#taggingtagvalueinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.TimeWindowInput": (
                "GraphQL/input objects.html#timewindowinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementCreateGroup": (
                "GraphQL/input objects.html#usermanagementcreategroup",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementCreateUser": (
                "GraphQL/input objects.html#usermanagementcreateuser",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementDeleteGroup": (
                "GraphQL/input objects.html#usermanagementdeletegroup",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementDeleteUser": (
                "GraphQL/input objects.html#usermanagementdeleteuser",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementDisplayNameInput": (
                "GraphQL/input objects.html#usermanagementdisplaynameinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementEmailInput": (
                "GraphQL/input objects.html#usermanagementemailinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementEmailVerificationStateInput": (
                "GraphQL/input "
                "objects.html#usermanagementemailverificationstateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementGroupFilterInput": (
                "GraphQL/input objects.html#usermanagementgroupfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementGroupIdInput": (
                "GraphQL/input objects.html#usermanagementgroupidinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementGroupSortInput": (
                "GraphQL/input objects.html#usermanagementgroupsortinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementNameInput": (
                "GraphQL/input objects.html#usermanagementnameinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementPendingUpgradeRequestInput": (
                "GraphQL/input "
                "objects.html#usermanagementpendingupgraderequestinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementTypeInput": (
                "GraphQL/input objects.html#usermanagementtypeinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementUpdateGroup": (
                "GraphQL/input objects.html#usermanagementupdategroup",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementUpdateUser": (
                "GraphQL/input objects.html#usermanagementupdateuser",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementUserFilterInput": (
                "GraphQL/input objects.html#usermanagementuserfilterinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementUserIdInput": (
                "GraphQL/input objects.html#usermanagementuseridinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UserManagementUsersGroupsInput": (
                "GraphQL/input objects.html#usermanagementusersgroupsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UsersUserSearchQuery": (
                "GraphQL/input objects.html#usersusersearchquery",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.UsersUserSearchScope": (
                "GraphQL/input objects.html#usersusersearchscope",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WhatsNewContentSearchQuery": (
                "GraphQL/input objects.html#whatsnewcontentsearchquery",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WorkloadAutomaticStatusInput": (
                "GraphQL/input objects.html#workloadautomaticstatusinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WorkloadCreateInput": (
                "GraphQL/input objects.html#workloadcreateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WorkloadDuplicateInput": (
                "GraphQL/input objects.html#workloadduplicateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WorkloadEntitySearchQueryInput": (
                "GraphQL/input objects.html#workloadentitysearchqueryinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WorkloadRegularRuleInput": (
                "GraphQL/input objects.html#workloadregularruleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WorkloadRemainingEntitiesRuleInput": (
                "GraphQL/input objects.html#workloadremainingentitiesruleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WorkloadRemainingEntitiesRuleRollupInput": (
                "GraphQL/input "
                "objects.html#workloadremainingentitiesrulerollupinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WorkloadRollupInput": (
                "GraphQL/input objects.html#workloadrollupinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WorkloadScopeAccountsInput": (
                "GraphQL/input objects.html#workloadscopeaccountsinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WorkloadStaticStatusInput": (
                "GraphQL/input objects.html#workloadstaticstatusinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WorkloadStatusConfigInput": (
                "GraphQL/input objects.html#workloadstatusconfiginput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WorkloadUpdateAutomaticStatusInput": (
                "GraphQL/input objects.html#workloadupdateautomaticstatusinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WorkloadUpdateCollectionEntitySearchQueryInput": (
                "GraphQL/input "
                "objects.html#workloadupdatecollectionentitysearchqueryinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WorkloadUpdateInput": (
                "GraphQL/input objects.html#workloadupdateinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WorkloadUpdateRegularRuleInput": (
                "GraphQL/input objects.html#workloadupdateregularruleinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WorkloadUpdateStaticStatusInput": (
                "GraphQL/input objects.html#workloadupdatestaticstatusinput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
            "newrelic_sb_sdk.graphql.input_objects.WorkloadUpdateStatusConfigInput": (
                "GraphQL/input objects.html#workloadupdatestatusconfiginput",
                "newrelic_sb_sdk/graphql/input_objects.py",
            ),
        },
        "newrelic_sb_sdk.graphql.objects": {
            "newrelic_sb_sdk.graphql.objects.Account": (
                "GraphQL/objects.html#account",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AccountManagementCreateResponse": (
                "GraphQL/objects.html#accountmanagementcreateresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AccountManagementManagedAccount": (
                "GraphQL/objects.html#accountmanagementmanagedaccount",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AccountManagementOrganizationStitchedFields": (
                "GraphQL/objects.html#accountmanagementorganizationstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AccountManagementUpdateResponse": (
                "GraphQL/objects.html#accountmanagementupdateresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AccountOutline": (
                "GraphQL/objects.html#accountoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AccountReference": (
                "GraphQL/objects.html#accountreference",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Actor": (
                "GraphQL/objects.html#actor",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationAddAppToEntityPlatformResult": (
                "GraphQL/objects.html#agentapplicationaddapptoentityplatformresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationApmBrowserSettings": (
                "GraphQL/objects.html#agentapplicationapmbrowsersettings",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationBrowserSettings": (
                "GraphQL/objects.html#agentapplicationbrowsersettings",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationCreateBrowserResult": (
                "GraphQL/objects.html#agentapplicationcreatebrowserresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationCreateMobileResult": (
                "GraphQL/objects.html#agentapplicationcreatemobileresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationDeleteResult": (
                "GraphQL/objects.html#agentapplicationdeleteresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationEnableBrowserResult": (
                "GraphQL/objects.html#agentapplicationenablebrowserresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSegmentsBrowserSegmentAllowList": (
                "GraphQL/objects.html#agentapplicationsegmentsbrowsersegmentallowlist",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSegmentsBrowserSegmentAllowListResult": (
                "GraphQL/objects.html#agentapplicationsegmentsbrowsersegmentallowlistresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsApmBase": (
                "GraphQL/objects.html#agentapplicationsettingsapmbase",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsApmConfig": (
                "GraphQL/objects.html#agentapplicationsettingsapmconfig",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsApplicationExitInfo": (
                "GraphQL/objects.html#agentapplicationsettingsapplicationexitinfo",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsApplicationLogging": (
                "GraphQL/objects.html#agentapplicationsettingsapplicationlogging",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsBrowserAjax": (
                "GraphQL/objects.html#agentapplicationsettingsbrowserajax",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsBrowserBase": (
                "GraphQL/objects.html#agentapplicationsettingsbrowserbase",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsBrowserConfig": (
                "GraphQL/objects.html#agentapplicationsettingsbrowserconfig",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsBrowserDistributedTracing": (
                "GraphQL/objects.html#agentapplicationsettingsbrowserdistributedtracing",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsBrowserMonitoring": (
                "GraphQL/objects.html#agentapplicationsettingsbrowsermonitoring",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsBrowserPerformance": (
                "GraphQL/objects.html#agentapplicationsettingsbrowserperformance",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsBrowserPrivacy": (
                "GraphQL/objects.html#agentapplicationsettingsbrowserprivacy",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsBrowserProperties": (
                "GraphQL/objects.html#agentapplicationsettingsbrowserproperties",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsErrorCollector": (
                "GraphQL/objects.html#agentapplicationsettingserrorcollector",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsForwarding": (
                "GraphQL/objects.html#agentapplicationsettingsforwarding",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsIgnoredStatusCodeRule": (
                "GraphQL/objects.html#agentapplicationsettingsignoredstatuscoderule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsJfr": (
                "GraphQL/objects.html#agentapplicationsettingsjfr",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsLocalDecorating": (
                "GraphQL/objects.html#agentapplicationsettingslocaldecorating",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsMaskInputOptions": (
                "GraphQL/objects.html#agentapplicationsettingsmaskinputoptions",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsMetrics": (
                "GraphQL/objects.html#agentapplicationsettingsmetrics",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsMobileBase": (
                "GraphQL/objects.html#agentapplicationsettingsmobilebase",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsMobileNetworkSettings": (
                "GraphQL/objects.html#agentapplicationsettingsmobilenetworksettings",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsMobileProperties": (
                "GraphQL/objects.html#agentapplicationsettingsmobileproperties",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsMobileSessionReplay": (
                "GraphQL/objects.html#agentapplicationsettingsmobilesessionreplay",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsNetworkAlias": (
                "GraphQL/objects.html#agentapplicationsettingsnetworkalias",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsSessionReplay": (
                "GraphQL/objects.html#agentapplicationsettingssessionreplay",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsSessionTrace": (
                "GraphQL/objects.html#agentapplicationsettingssessiontrace",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsSlowSql": (
                "GraphQL/objects.html#agentapplicationsettingsslowsql",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsThreadProfiler": (
                "GraphQL/objects.html#agentapplicationsettingsthreadprofiler",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsTransactionTracer": (
                "GraphQL/objects.html#agentapplicationsettingstransactiontracer",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsUpdateError": (
                "GraphQL/objects.html#agentapplicationsettingsupdateerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentApplicationSettingsUpdateResult": (
                "GraphQL/objects.html#agentapplicationsettingsupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentEnvironmentAccountApplicationLoadedModules": (
                "GraphQL/objects.html#agentenvironmentaccountapplicationloadedmodules",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentEnvironmentAccountApplicationLoadedModulesResults": (
                "GraphQL/objects.html#agentenvironmentaccountapplicationloadedmodulesresults",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentEnvironmentAccountEnvironmentAttributesResults": (
                "GraphQL/objects.html#agentenvironmentaccountenvironmentattributesresults",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentEnvironmentAccountStitchedFields": (
                "GraphQL/objects.html#agentenvironmentaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentEnvironmentApplicationEnvironmentAttributes": (
                "GraphQL/objects.html#agentenvironmentapplicationenvironmentattributes",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentEnvironmentApplicationInstance": (
                "GraphQL/objects.html#agentenvironmentapplicationinstance",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentEnvironmentApplicationInstanceDetails": (
                "GraphQL/objects.html#agentenvironmentapplicationinstancedetails",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentEnvironmentApplicationInstancesResult": (
                "GraphQL/objects.html#agentenvironmentapplicationinstancesresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentEnvironmentApplicationLoadedModule": (
                "GraphQL/objects.html#agentenvironmentapplicationloadedmodule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentEnvironmentAttribute": (
                "GraphQL/objects.html#agentenvironmentattribute",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentEnvironmentLoadedModuleAttribute": (
                "GraphQL/objects.html#agentenvironmentloadedmoduleattribute",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentFeatures": (
                "GraphQL/objects.html#agentfeatures",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentReleasesAgentRelease": (
                "GraphQL/objects.html#agentreleasesagentrelease",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentReleasesOperatingSystem": (
                "GraphQL/objects.html#agentreleasesoperatingsystem",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AgentReleasesOsVersion": (
                "GraphQL/objects.html#agentreleasesosversion",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiDecisionsAccountStitchedFields": (
                "GraphQL/objects.html#aidecisionsaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiDecisionsAnnotationEntry": (
                "GraphQL/objects.html#aidecisionsannotationentry",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiDecisionsApplicableIncidentSearch": (
                "GraphQL/objects.html#aidecisionsapplicableincidentsearch",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiDecisionsDecision": (
                "GraphQL/objects.html#aidecisionsdecision",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiDecisionsDecisionListing": (
                "GraphQL/objects.html#aidecisionsdecisionlisting",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiDecisionsMergeFeedback": (
                "GraphQL/objects.html#aidecisionsmergefeedback",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiDecisionsOperationResult": (
                "GraphQL/objects.html#aidecisionsoperationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiDecisionsOpinionEntry": (
                "GraphQL/objects.html#aidecisionsopinionentry",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiDecisionsOverrideConfiguration": (
                "GraphQL/objects.html#aidecisionsoverrideconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiDecisionsRule": (
                "GraphQL/objects.html#aidecisionsrule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiDecisionsRuleMetadata": (
                "GraphQL/objects.html#aidecisionsrulemetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiDecisionsSelectorApplicability": (
                "GraphQL/objects.html#aidecisionsselectorapplicability",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiDecisionsSelectorExamples": (
                "GraphQL/objects.html#aidecisionsselectorexamples",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiDecisionsSimulation": (
                "GraphQL/objects.html#aidecisionssimulation",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiDecisionsSuggestion": (
                "GraphQL/objects.html#aidecisionssuggestion",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiIssuesAccountStitchedFields": (
                "GraphQL/objects.html#aiissuesaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiIssuesAnomalyIncident": (
                "GraphQL/objects.html#aiissuesanomalyincident",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiIssuesConfigurationByEnvironment": (
                "GraphQL/objects.html#aiissuesconfigurationbyenvironment",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiIssuesConfigurationOverrideResponse": (
                "GraphQL/objects.html#aiissuesconfigurationoverrideresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiIssuesEnvironmentConfiguration": (
                "GraphQL/objects.html#aiissuesenvironmentconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiIssuesGracePeriodConfig": (
                "GraphQL/objects.html#aiissuesgraceperiodconfig",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiIssuesIIncident": (
                "GraphQL/objects.html#aiissuesiincident",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiIssuesIncidentData": (
                "GraphQL/objects.html#aiissuesincidentdata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiIssuesIncidentUserActionResponse": (
                "GraphQL/objects.html#aiissuesincidentuseractionresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiIssuesIssue": (
                "GraphQL/objects.html#aiissuesissue",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiIssuesIssueData": (
                "GraphQL/objects.html#aiissuesissuedata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiIssuesIssueUserActionResponse": (
                "GraphQL/objects.html#aiissuesissueuseractionresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiIssuesIssueUserActionResult": (
                "GraphQL/objects.html#aiissuesissueuseractionresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiIssuesKeyValue": (
                "GraphQL/objects.html#aiissueskeyvalue",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiIssuesKeyValues": (
                "GraphQL/objects.html#aiissueskeyvalues",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiIssuesNewRelicIncident": (
                "GraphQL/objects.html#aiissuesnewrelicincident",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiIssuesRestIncident": (
                "GraphQL/objects.html#aiissuesrestincident",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsAccountStitchedFields": (
                "GraphQL/objects.html#ainotificationsaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsAuth": (
                "GraphQL/objects.html#ainotificationsauth",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsBasicAuth": (
                "GraphQL/objects.html#ainotificationsbasicauth",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsChannel": (
                "GraphQL/objects.html#ainotificationschannel",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsChannelResponse": (
                "GraphQL/objects.html#ainotificationschannelresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsChannelSchemaResult": (
                "GraphQL/objects.html#ainotificationschannelschemaresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsChannelTestResponse": (
                "GraphQL/objects.html#ainotificationschanneltestresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsChannelsResponse": (
                "GraphQL/objects.html#ainotificationschannelsresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsConstraintError": (
                "GraphQL/objects.html#ainotificationsconstrainterror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsConstraintsError": (
                "GraphQL/objects.html#ainotificationsconstraintserror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsCustomHeader": (
                "GraphQL/objects.html#ainotificationscustomheader",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsCustomHeadersAuth": (
                "GraphQL/objects.html#ainotificationscustomheadersauth",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsDataValidationError": (
                "GraphQL/objects.html#ainotificationsdatavalidationerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsDeleteResponse": (
                "GraphQL/objects.html#ainotificationsdeleteresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsDestination": (
                "GraphQL/objects.html#ainotificationsdestination",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsDestinationResponse": (
                "GraphQL/objects.html#ainotificationsdestinationresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsDestinationTestResponse": (
                "GraphQL/objects.html#ainotificationsdestinationtestresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsDestinationsResponse": (
                "GraphQL/objects.html#ainotificationsdestinationsresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsError": (
                "GraphQL/objects.html#ainotificationserror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsFieldError": (
                "GraphQL/objects.html#ainotificationsfielderror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsOAuth2Auth": (
                "GraphQL/objects.html#ainotificationsoauth2auth",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsOAuthUrlResponse": (
                "GraphQL/objects.html#ainotificationsoauthurlresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsProperty": (
                "GraphQL/objects.html#ainotificationsproperty",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsResponseError": (
                "GraphQL/objects.html#ainotificationsresponseerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsSchema": (
                "GraphQL/objects.html#ainotificationsschema",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsSchemaField": (
                "GraphQL/objects.html#ainotificationsschemafield",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsSecureUrl": (
                "GraphQL/objects.html#ainotificationssecureurl",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsSelectComponentOptions": (
                "GraphQL/objects.html#ainotificationsselectcomponentoptions",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsSuggestion": (
                "GraphQL/objects.html#ainotificationssuggestion",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsSuggestionError": (
                "GraphQL/objects.html#ainotificationssuggestionerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsSuggestionsResponse": (
                "GraphQL/objects.html#ainotificationssuggestionsresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsTokenAuth": (
                "GraphQL/objects.html#ainotificationstokenauth",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsUiComponent": (
                "GraphQL/objects.html#ainotificationsuicomponent",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsVariable": (
                "GraphQL/objects.html#ainotificationsvariable",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiNotificationsVariableResult": (
                "GraphQL/objects.html#ainotificationsvariableresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiTopologyAccountStitchedFields": (
                "GraphQL/objects.html#aitopologyaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiTopologyCollectorOperationResult": (
                "GraphQL/objects.html#aitopologycollectoroperationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiTopologyDefiningAttribute": (
                "GraphQL/objects.html#aitopologydefiningattribute",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiTopologyEdge": (
                "GraphQL/objects.html#aitopologyedge",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiTopologyEdgeListing": (
                "GraphQL/objects.html#aitopologyedgelisting",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiTopologyGraph": (
                "GraphQL/objects.html#aitopologygraph",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiTopologyVertex": (
                "GraphQL/objects.html#aitopologyvertex",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiTopologyVertexListing": (
                "GraphQL/objects.html#aitopologyvertexlisting",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsAccountStitchedFields": (
                "GraphQL/objects.html#aiworkflowsaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsBatchCreateMigratedWorkflowsResponseError": (
                "GraphQL/objects.html#aiworkflowsbatchcreatemigratedworkflowsresponseerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsBatchDeleteMigratedWorkflowsResponseError": (
                "GraphQL/objects.html#aiworkflowsbatchdeletemigratedworkflowsresponseerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsConfiguration": (
                "GraphQL/objects.html#aiworkflowsconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsCreateResponseError": (
                "GraphQL/objects.html#aiworkflowscreateresponseerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsCreateWorkflowResponse": (
                "GraphQL/objects.html#aiworkflowscreateworkflowresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsDeleteResponseError": (
                "GraphQL/objects.html#aiworkflowsdeleteresponseerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsDeleteWorkflowResponse": (
                "GraphQL/objects.html#aiworkflowsdeleteworkflowresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsDestinationConfiguration": (
                "GraphQL/objects.html#aiworkflowsdestinationconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsEnrichment": (
                "GraphQL/objects.html#aiworkflowsenrichment",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsFetchWorkflowsByIssuesFilterResponseError": (
                "GraphQL/objects.html#aiworkflowsfetchworkflowsbyissuesfilterresponseerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsFilter": (
                "GraphQL/objects.html#aiworkflowsfilter",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsNrqlConfiguration": (
                "GraphQL/objects.html#aiworkflowsnrqlconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsPredicate": (
                "GraphQL/objects.html#aiworkflowspredicate",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsResponseError": (
                "GraphQL/objects.html#aiworkflowsresponseerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsTestNotificationResponse": (
                "GraphQL/objects.html#aiworkflowstestnotificationresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsTestResponseError": (
                "GraphQL/objects.html#aiworkflowstestresponseerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsTestWorkflowResponse": (
                "GraphQL/objects.html#aiworkflowstestworkflowresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsUpdateResponseError": (
                "GraphQL/objects.html#aiworkflowsupdateresponseerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsUpdateWorkflowResponse": (
                "GraphQL/objects.html#aiworkflowsupdateworkflowresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsWorkflow": (
                "GraphQL/objects.html#aiworkflowsworkflow",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AiWorkflowsWorkflows": (
                "GraphQL/objects.html#aiworkflowsworkflows",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertableEntity": (
                "GraphQL/objects.html#alertableentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertableEntityOutline": (
                "GraphQL/objects.html#alertableentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsAccountStitchedFields": (
                "GraphQL/objects.html#alertsaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsAsNrqlBaselineCondition": (
                "GraphQL/objects.html#alertsasnrqlbaselinecondition",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsAsNrqlCondition": (
                "GraphQL/objects.html#alertsasnrqlcondition",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsAsNrqlConditionsSearchResultSet": (
                "GraphQL/objects.html#alertsasnrqlconditionssearchresultset",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsAsNrqlOutlierCondition": (
                "GraphQL/objects.html#alertsasnrqloutliercondition",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsAsNrqlStaticCondition": (
                "GraphQL/objects.html#alertsasnrqlstaticcondition",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsCampfireNotificationChannel": (
                "GraphQL/objects.html#alertscampfirenotificationchannel",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsCampfireNotificationChannelConfig": (
                "GraphQL/objects.html#alertscampfirenotificationchannelconfig",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsConditionDeleteResponse": (
                "GraphQL/objects.html#alertsconditiondeleteresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsCrossAccountElectionStatus": (
                "GraphQL/objects.html#alertscrossaccountelectionstatus",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsCrossAccountParticipant": (
                "GraphQL/objects.html#alertscrossaccountparticipant",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsEmailNotificationChannel": (
                "GraphQL/objects.html#alertsemailnotificationchannel",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsEmailNotificationChannelConfig": (
                "GraphQL/objects.html#alertsemailnotificationchannelconfig",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsHipChatNotificationChannel": (
                "GraphQL/objects.html#alertshipchatnotificationchannel",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsHipChatNotificationChannelConfig": (
                "GraphQL/objects.html#alertshipchatnotificationchannelconfig",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsMutingRule": (
                "GraphQL/objects.html#alertsmutingrule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsMutingRuleCondition": (
                "GraphQL/objects.html#alertsmutingrulecondition",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsMutingRuleConditionGroup": (
                "GraphQL/objects.html#alertsmutingruleconditiongroup",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsMutingRuleDeleteResponse": (
                "GraphQL/objects.html#alertsmutingruledeleteresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsMutingRuleSchedule": (
                "GraphQL/objects.html#alertsmutingruleschedule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNotificationChannel": (
                "GraphQL/objects.html#alertsnotificationchannel",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNotificationChannelCreateError": (
                "GraphQL/objects.html#alertsnotificationchannelcreateerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNotificationChannelCreateResponse": (
                "GraphQL/objects.html#alertsnotificationchannelcreateresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNotificationChannelDeleteError": (
                "GraphQL/objects.html#alertsnotificationchanneldeleteerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNotificationChannelDeleteResponse": (
                "GraphQL/objects.html#alertsnotificationchanneldeleteresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNotificationChannelId": (
                "GraphQL/objects.html#alertsnotificationchannelid",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNotificationChannelMutation": (
                "GraphQL/objects.html#alertsnotificationchannelmutation",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNotificationChannelPoliciesResultSet": (
                "GraphQL/objects.html#alertsnotificationchannelpoliciesresultset",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNotificationChannelPolicy": (
                "GraphQL/objects.html#alertsnotificationchannelpolicy",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNotificationChannelUpdateError": (
                "GraphQL/objects.html#alertsnotificationchannelupdateerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNotificationChannelUpdateResponse": (
                "GraphQL/objects.html#alertsnotificationchannelupdateresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNotificationChannelsAddToPolicyError": (
                "GraphQL/objects.html#alertsnotificationchannelsaddtopolicyerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNotificationChannelsAddToPolicyResponse": (
                "GraphQL/objects.html#alertsnotificationchannelsaddtopolicyresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNotificationChannelsRemoveFromPolicyError": (
                "GraphQL/objects.html#alertsnotificationchannelsremovefrompolicyerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNotificationChannelsRemoveFromPolicyResponse": (
                "GraphQL/objects.html#alertsnotificationchannelsremovefrompolicyresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNotificationChannelsResultSet": (
                "GraphQL/objects.html#alertsnotificationchannelsresultset",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNrqlBaselineCondition": (
                "GraphQL/objects.html#alertsnrqlbaselinecondition",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNrqlCondition": (
                "GraphQL/objects.html#alertsnrqlcondition",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNrqlConditionExpiration": (
                "GraphQL/objects.html#alertsnrqlconditionexpiration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNrqlConditionPrediction": (
                "GraphQL/objects.html#alertsnrqlconditionprediction",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNrqlConditionQuery": (
                "GraphQL/objects.html#alertsnrqlconditionquery",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNrqlConditionSignal": (
                "GraphQL/objects.html#alertsnrqlconditionsignal",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNrqlConditionTerms": (
                "GraphQL/objects.html#alertsnrqlconditionterms",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNrqlConditionTermsWithPrediction": (
                "GraphQL/objects.html#alertsnrqlconditiontermswithprediction",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNrqlConditionsSearchResultSet": (
                "GraphQL/objects.html#alertsnrqlconditionssearchresultset",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNrqlOutlierCondition": (
                "GraphQL/objects.html#alertsnrqloutliercondition",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNrqlStaticCondition": (
                "GraphQL/objects.html#alertsnrqlstaticcondition",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsNrqlTerms": (
                "GraphQL/objects.html#alertsnrqlterms",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsOpsGenieNotificationChannel": (
                "GraphQL/objects.html#alertsopsgenienotificationchannel",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsOpsGenieNotificationChannelConfig": (
                "GraphQL/objects.html#alertsopsgenienotificationchannelconfig",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsPagerDutyNotificationChannel": (
                "GraphQL/objects.html#alertspagerdutynotificationchannel",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsPagerDutyNotificationChannelConfig": (
                "GraphQL/objects.html#alertspagerdutynotificationchannelconfig",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsPoliciesSearchResultSet": (
                "GraphQL/objects.html#alertspoliciessearchresultset",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsPolicy": (
                "GraphQL/objects.html#alertspolicy",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsPolicyDeleteResponse": (
                "GraphQL/objects.html#alertspolicydeleteresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsSlackNotificationChannel": (
                "GraphQL/objects.html#alertsslacknotificationchannel",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsSlackNotificationChannelConfig": (
                "GraphQL/objects.html#alertsslacknotificationchannelconfig",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsUserNotificationChannel": (
                "GraphQL/objects.html#alertsusernotificationchannel",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsUserNotificationChannelConfig": (
                "GraphQL/objects.html#alertsusernotificationchannelconfig",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsVictorOpsNotificationChannel": (
                "GraphQL/objects.html#alertsvictoropsnotificationchannel",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsVictorOpsNotificationChannelConfig": (
                "GraphQL/objects.html#alertsvictoropsnotificationchannelconfig",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsWebhookBasicAuthInput": (
                "GraphQL/objects.html#alertswebhookbasicauthinput",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsWebhookCustomHeaderInput": (
                "GraphQL/objects.html#alertswebhookcustomheaderinput",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsWebhookNotificationChannel": (
                "GraphQL/objects.html#alertswebhooknotificationchannel",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsWebhookNotificationChannelConfig": (
                "GraphQL/objects.html#alertswebhooknotificationchannelconfig",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsXMattersNotificationChannel": (
                "GraphQL/objects.html#alertsxmattersnotificationchannel",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AlertsXMattersNotificationChannelConfig": (
                "GraphQL/objects.html#alertsxmattersnotificationchannelconfig",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApiAccessActorStitchedFields": (
                "GraphQL/objects.html#apiaccessactorstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApiAccessCreateKeyResponse": (
                "GraphQL/objects.html#apiaccesscreatekeyresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApiAccessDeleteKeyResponse": (
                "GraphQL/objects.html#apiaccessdeletekeyresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApiAccessDeletedKey": (
                "GraphQL/objects.html#apiaccessdeletedkey",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApiAccessIngestKey": (
                "GraphQL/objects.html#apiaccessingestkey",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApiAccessIngestKeyError": (
                "GraphQL/objects.html#apiaccessingestkeyerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApiAccessKey": (
                "GraphQL/objects.html#apiaccesskey",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApiAccessKeyError": (
                "GraphQL/objects.html#apiaccesskeyerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApiAccessKeySearchResult": (
                "GraphQL/objects.html#apiaccesskeysearchresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApiAccessNrPlatformStitchedFields": (
                "GraphQL/objects.html#apiaccessnrplatformstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApiAccessUpdateKeyResponse": (
                "GraphQL/objects.html#apiaccessupdatekeyresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApiAccessUserKey": (
                "GraphQL/objects.html#apiaccessuserkey",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApiAccessUserKeyError": (
                "GraphQL/objects.html#apiaccessuserkeyerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApiAccessValidateUserKeyResult": (
                "GraphQL/objects.html#apiaccessvalidateuserkeyresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApmApplicationDeployment": (
                "GraphQL/objects.html#apmapplicationdeployment",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApmApplicationEntity": (
                "GraphQL/objects.html#apmapplicationentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApmApplicationEntityOutline": (
                "GraphQL/objects.html#apmapplicationentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApmApplicationEntitySettingsResult": (
                "GraphQL/objects.html#apmapplicationentitysettingsresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApmApplicationRunningAgentVersions": (
                "GraphQL/objects.html#apmapplicationrunningagentversions",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApmApplicationSettings": (
                "GraphQL/objects.html#apmapplicationsettings",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApmApplicationSummaryData": (
                "GraphQL/objects.html#apmapplicationsummarydata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApmBrowserApplicationEntity": (
                "GraphQL/objects.html#apmbrowserapplicationentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApmBrowserApplicationEntityOutline": (
                "GraphQL/objects.html#apmbrowserapplicationentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApmBrowserApplicationSummaryData": (
                "GraphQL/objects.html#apmbrowserapplicationsummarydata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApmDatabaseInstanceEntity": (
                "GraphQL/objects.html#apmdatabaseinstanceentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApmDatabaseInstanceEntityOutline": (
                "GraphQL/objects.html#apmdatabaseinstanceentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApmExternalServiceEntity": (
                "GraphQL/objects.html#apmexternalserviceentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApmExternalServiceEntityOutline": (
                "GraphQL/objects.html#apmexternalserviceentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ApmExternalServiceSummaryData": (
                "GraphQL/objects.html#apmexternalservicesummarydata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AuthenticationDomainType": (
                "GraphQL/objects.html#authenticationdomaintype",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AuthorizationManagementAccessGrant": (
                "GraphQL/objects.html#authorizationmanagementaccessgrant",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AuthorizationManagementAuthenticationDomain": (
                "GraphQL/objects.html#authorizationmanagementauthenticationdomain",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AuthorizationManagementAuthenticationDomainSearch": (
                "GraphQL/objects.html#authorizationmanagementauthenticationdomainsearch",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AuthorizationManagementGrantAccessPayload": (
                "GraphQL/objects.html#authorizationmanagementgrantaccesspayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AuthorizationManagementGrantedRole": (
                "GraphQL/objects.html#authorizationmanagementgrantedrole",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AuthorizationManagementGrantedRoleSearch": (
                "GraphQL/objects.html#authorizationmanagementgrantedrolesearch",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AuthorizationManagementGroup": (
                "GraphQL/objects.html#authorizationmanagementgroup",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AuthorizationManagementGroupSearch": (
                "GraphQL/objects.html#authorizationmanagementgroupsearch",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AuthorizationManagementOrganizationStitchedFields": (
                "GraphQL/objects.html#authorizationmanagementorganizationstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AuthorizationManagementRevokeAccessPayload": (
                "GraphQL/objects.html#authorizationmanagementrevokeaccesspayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AuthorizationManagementRole": (
                "GraphQL/objects.html#authorizationmanagementrole",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.AuthorizationManagementRoleSearch": (
                "GraphQL/objects.html#authorizationmanagementrolesearch",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.BrowserApplicationEntity": (
                "GraphQL/objects.html#browserapplicationentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.BrowserApplicationEntityOutline": (
                "GraphQL/objects.html#browserapplicationentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.BrowserApplicationRunningAgentVersions": (
                "GraphQL/objects.html#browserapplicationrunningagentversions",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.BrowserApplicationSettings": (
                "GraphQL/objects.html#browserapplicationsettings",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.BrowserApplicationSummaryData": (
                "GraphQL/objects.html#browserapplicationsummarydata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ChangeTrackingActorStitchedFields": (
                "GraphQL/objects.html#changetrackingactorstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ChangeTrackingChangeTrackingEvent": (
                "GraphQL/objects.html#changetrackingchangetrackingevent",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ChangeTrackingChangeTrackingSearchResult": (
                "GraphQL/objects.html#changetrackingchangetrackingsearchresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ChangeTrackingCreateEventResponse": (
                "GraphQL/objects.html#changetrackingcreateeventresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ChangeTrackingDeployment": (
                "GraphQL/objects.html#changetrackingdeployment",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ChangeTrackingDeploymentEvent": (
                "GraphQL/objects.html#changetrackingdeploymentevent",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ChangeTrackingDeploymentSearchResult": (
                "GraphQL/objects.html#changetrackingdeploymentsearchresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ChangeTrackingEvent": (
                "GraphQL/objects.html#changetrackingevent",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ChangeTrackingFeatureFlagEvent": (
                "GraphQL/objects.html#changetrackingfeatureflagevent",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ChangeTrackingGenericEvent": (
                "GraphQL/objects.html#changetrackinggenericevent",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAccountFields": (
                "GraphQL/objects.html#cloudaccountfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAccountMutationError": (
                "GraphQL/objects.html#cloudaccountmutationerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudActorFields": (
                "GraphQL/objects.html#cloudactorfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAlbIntegration": (
                "GraphQL/objects.html#cloudalbintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudApigatewayIntegration": (
                "GraphQL/objects.html#cloudapigatewayintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAutoscalingIntegration": (
                "GraphQL/objects.html#cloudautoscalingintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsAppsyncIntegration": (
                "GraphQL/objects.html#cloudawsappsyncintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsAthenaIntegration": (
                "GraphQL/objects.html#cloudawsathenaintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsAutoDiscoveryIntegration": (
                "GraphQL/objects.html#cloudawsautodiscoveryintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsCognitoIntegration": (
                "GraphQL/objects.html#cloudawscognitointegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsConnectIntegration": (
                "GraphQL/objects.html#cloudawsconnectintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsDirectconnectIntegration": (
                "GraphQL/objects.html#cloudawsdirectconnectintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsDocdbIntegration": (
                "GraphQL/objects.html#cloudawsdocdbintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsFsxIntegration": (
                "GraphQL/objects.html#cloudawsfsxintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsGlueIntegration": (
                "GraphQL/objects.html#cloudawsglueintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsGovCloudProvider": (
                "GraphQL/objects.html#cloudawsgovcloudprovider",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsKinesisanalyticsIntegration": (
                "GraphQL/objects.html#cloudawskinesisanalyticsintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsMediaconvertIntegration": (
                "GraphQL/objects.html#cloudawsmediaconvertintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsMediapackagevodIntegration": (
                "GraphQL/objects.html#cloudawsmediapackagevodintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsMetadataGovIntegration": (
                "GraphQL/objects.html#cloudawsmetadatagovintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsMetadataIntegration": (
                "GraphQL/objects.html#cloudawsmetadataintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsMqIntegration": (
                "GraphQL/objects.html#cloudawsmqintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsMsElasticacheGovIntegration": (
                "GraphQL/objects.html#cloudawsmselasticachegovintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsMsElasticacheIntegration": (
                "GraphQL/objects.html#cloudawsmselasticacheintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsMskIntegration": (
                "GraphQL/objects.html#cloudawsmskintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsNeptuneIntegration": (
                "GraphQL/objects.html#cloudawsneptuneintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsProvider": (
                "GraphQL/objects.html#cloudawsprovider",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsQldbIntegration": (
                "GraphQL/objects.html#cloudawsqldbintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsRoute53resolverIntegration": (
                "GraphQL/objects.html#cloudawsroute53resolverintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsStatesIntegration": (
                "GraphQL/objects.html#cloudawsstatesintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsTagsGlobalGovIntegration": (
                "GraphQL/objects.html#cloudawstagsglobalgovintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsTagsGlobalIntegration": (
                "GraphQL/objects.html#cloudawstagsglobalintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsTransitgatewayIntegration": (
                "GraphQL/objects.html#cloudawstransitgatewayintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsWafIntegration": (
                "GraphQL/objects.html#cloudawswafintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsWafv2Integration": (
                "GraphQL/objects.html#cloudawswafv2integration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAwsXrayIntegration": (
                "GraphQL/objects.html#cloudawsxrayintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureApimanagementIntegration": (
                "GraphQL/objects.html#cloudazureapimanagementintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureAppgatewayIntegration": (
                "GraphQL/objects.html#cloudazureappgatewayintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureAppserviceIntegration": (
                "GraphQL/objects.html#cloudazureappserviceintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureAutoDiscoveryIntegration": (
                "GraphQL/objects.html#cloudazureautodiscoveryintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureContainersIntegration": (
                "GraphQL/objects.html#cloudazurecontainersintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureCosmosdbIntegration": (
                "GraphQL/objects.html#cloudazurecosmosdbintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureCostmanagementIntegration": (
                "GraphQL/objects.html#cloudazurecostmanagementintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureDatafactoryIntegration": (
                "GraphQL/objects.html#cloudazuredatafactoryintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureEventhubIntegration": (
                "GraphQL/objects.html#cloudazureeventhubintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureExpressrouteIntegration": (
                "GraphQL/objects.html#cloudazureexpressrouteintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureFirewallsIntegration": (
                "GraphQL/objects.html#cloudazurefirewallsintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureFrontdoorIntegration": (
                "GraphQL/objects.html#cloudazurefrontdoorintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureFunctionsIntegration": (
                "GraphQL/objects.html#cloudazurefunctionsintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureKeyvaultIntegration": (
                "GraphQL/objects.html#cloudazurekeyvaultintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureLoadbalancerIntegration": (
                "GraphQL/objects.html#cloudazureloadbalancerintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureLogicappsIntegration": (
                "GraphQL/objects.html#cloudazurelogicappsintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureMachinelearningIntegration": (
                "GraphQL/objects.html#cloudazuremachinelearningintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureMariadbIntegration": (
                "GraphQL/objects.html#cloudazuremariadbintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureMonitorIntegration": (
                "GraphQL/objects.html#cloudazuremonitorintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureMysqlIntegration": (
                "GraphQL/objects.html#cloudazuremysqlintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureMysqlflexibleIntegration": (
                "GraphQL/objects.html#cloudazuremysqlflexibleintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzurePostgresqlIntegration": (
                "GraphQL/objects.html#cloudazurepostgresqlintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzurePostgresqlflexibleIntegration": (
                "GraphQL/objects.html#cloudazurepostgresqlflexibleintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzurePowerbidedicatedIntegration": (
                "GraphQL/objects.html#cloudazurepowerbidedicatedintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureRediscacheIntegration": (
                "GraphQL/objects.html#cloudazurerediscacheintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureServicebusIntegration": (
                "GraphQL/objects.html#cloudazureservicebusintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureSqlIntegration": (
                "GraphQL/objects.html#cloudazuresqlintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureSqlmanagedIntegration": (
                "GraphQL/objects.html#cloudazuresqlmanagedintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureStorageIntegration": (
                "GraphQL/objects.html#cloudazurestorageintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureVirtualmachineIntegration": (
                "GraphQL/objects.html#cloudazurevirtualmachineintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureVirtualnetworksIntegration": (
                "GraphQL/objects.html#cloudazurevirtualnetworksintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureVmsIntegration": (
                "GraphQL/objects.html#cloudazurevmsintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudAzureVpngatewaysIntegration": (
                "GraphQL/objects.html#cloudazurevpngatewaysintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudBaseIntegration": (
                "GraphQL/objects.html#cloudbaseintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudBaseProvider": (
                "GraphQL/objects.html#cloudbaseprovider",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudBillingIntegration": (
                "GraphQL/objects.html#cloudbillingintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudCciAwsS3Integration": (
                "GraphQL/objects.html#cloudcciawss3integration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudCloudfrontIntegration": (
                "GraphQL/objects.html#cloudcloudfrontintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudCloudtrailIntegration": (
                "GraphQL/objects.html#cloudcloudtrailintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudConfigureIntegrationPayload": (
                "GraphQL/objects.html#cloudconfigureintegrationpayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudConfluentKafkaConnectorResourceIntegration": (
                "GraphQL/objects.html#cloudconfluentkafkaconnectorresourceintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudConfluentKafkaKsqlResourceIntegration": (
                "GraphQL/objects.html#cloudconfluentkafkaksqlresourceintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudConfluentKafkaResourceIntegration": (
                "GraphQL/objects.html#cloudconfluentkafkaresourceintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudDashboardTemplate": (
                "GraphQL/objects.html#clouddashboardtemplate",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudDisableIntegrationPayload": (
                "GraphQL/objects.html#clouddisableintegrationpayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudDynamodbIntegration": (
                "GraphQL/objects.html#clouddynamodbintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudEbsIntegration": (
                "GraphQL/objects.html#cloudebsintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudEc2Integration": (
                "GraphQL/objects.html#cloudec2integration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudEcsIntegration": (
                "GraphQL/objects.html#cloudecsintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudEfsIntegration": (
                "GraphQL/objects.html#cloudefsintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudElasticacheIntegration": (
                "GraphQL/objects.html#cloudelasticacheintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudElasticbeanstalkIntegration": (
                "GraphQL/objects.html#cloudelasticbeanstalkintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudElasticsearchIntegration": (
                "GraphQL/objects.html#cloudelasticsearchintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudElbIntegration": (
                "GraphQL/objects.html#cloudelbintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudEmrIntegration": (
                "GraphQL/objects.html#cloudemrintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudFossaIssuesIntegration": (
                "GraphQL/objects.html#cloudfossaissuesintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpAiplatformIntegration": (
                "GraphQL/objects.html#cloudgcpaiplatformintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpAlloydbIntegration": (
                "GraphQL/objects.html#cloudgcpalloydbintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpAppengineIntegration": (
                "GraphQL/objects.html#cloudgcpappengineintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpBigqueryIntegration": (
                "GraphQL/objects.html#cloudgcpbigqueryintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpBigtableIntegration": (
                "GraphQL/objects.html#cloudgcpbigtableintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpComposerIntegration": (
                "GraphQL/objects.html#cloudgcpcomposerintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpDataflowIntegration": (
                "GraphQL/objects.html#cloudgcpdataflowintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpDataprocIntegration": (
                "GraphQL/objects.html#cloudgcpdataprocintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpDatastoreIntegration": (
                "GraphQL/objects.html#cloudgcpdatastoreintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpFirebasedatabaseIntegration": (
                "GraphQL/objects.html#cloudgcpfirebasedatabaseintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpFirebasehostingIntegration": (
                "GraphQL/objects.html#cloudgcpfirebasehostingintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpFirebasestorageIntegration": (
                "GraphQL/objects.html#cloudgcpfirebasestorageintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpFirestoreIntegration": (
                "GraphQL/objects.html#cloudgcpfirestoreintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpFunctionsIntegration": (
                "GraphQL/objects.html#cloudgcpfunctionsintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpInterconnectIntegration": (
                "GraphQL/objects.html#cloudgcpinterconnectintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpKubernetesIntegration": (
                "GraphQL/objects.html#cloudgcpkubernetesintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpLoadbalancingIntegration": (
                "GraphQL/objects.html#cloudgcploadbalancingintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpMemcacheIntegration": (
                "GraphQL/objects.html#cloudgcpmemcacheintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpProvider": (
                "GraphQL/objects.html#cloudgcpprovider",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpPubsubIntegration": (
                "GraphQL/objects.html#cloudgcppubsubintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpRedisIntegration": (
                "GraphQL/objects.html#cloudgcpredisintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpRouterIntegration": (
                "GraphQL/objects.html#cloudgcprouterintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpRunIntegration": (
                "GraphQL/objects.html#cloudgcprunintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpSpannerIntegration": (
                "GraphQL/objects.html#cloudgcpspannerintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpSqlIntegration": (
                "GraphQL/objects.html#cloudgcpsqlintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpStorageIntegration": (
                "GraphQL/objects.html#cloudgcpstorageintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpVmsIntegration": (
                "GraphQL/objects.html#cloudgcpvmsintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudGcpVpcaccessIntegration": (
                "GraphQL/objects.html#cloudgcpvpcaccessintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudHealthIntegration": (
                "GraphQL/objects.html#cloudhealthintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudIamIntegration": (
                "GraphQL/objects.html#cloudiamintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudIntegration": (
                "GraphQL/objects.html#cloudintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudIntegrationMutationError": (
                "GraphQL/objects.html#cloudintegrationmutationerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudIotIntegration": (
                "GraphQL/objects.html#cloudiotintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudKinesisFirehoseIntegration": (
                "GraphQL/objects.html#cloudkinesisfirehoseintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudKinesisIntegration": (
                "GraphQL/objects.html#cloudkinesisintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudLambdaIntegration": (
                "GraphQL/objects.html#cloudlambdaintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudLinkAccountPayload": (
                "GraphQL/objects.html#cloudlinkaccountpayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudLinkedAccount": (
                "GraphQL/objects.html#cloudlinkedaccount",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudLogGroupInstrumentationStatus": (
                "GraphQL/objects.html#cloudloggroupinstrumentationstatus",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudMigrateAwsGovCloudToAssumeRolePayload": (
                "GraphQL/objects.html#cloudmigrateawsgovcloudtoassumerolepayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudNamespaceInstrumentationStatus": (
                "GraphQL/objects.html#cloudnamespaceinstrumentationstatus",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudOciCompartmentInstrumentationDetails": (
                "GraphQL/objects.html#cloudocicompartmentinstrumentationdetails",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudOciInstrumentedPayloadUrlPayload": (
                "GraphQL/objects.html#cloudociinstrumentedpayloadurlpayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudOciLogGroupInstrumentationDetails": (
                "GraphQL/objects.html#cloudociloggroupinstrumentationdetails",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudOciLogGroupInstrumentedPayloadUrlPayload": (
                "GraphQL/objects.html#cloudociloggroupinstrumentedpayloadurlpayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudOciLogsIntegration": (
                "GraphQL/objects.html#cloudocilogsintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudOciMetadataAndTagsIntegration": (
                "GraphQL/objects.html#cloudocimetadataandtagsintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudOciTenancyDetails": (
                "GraphQL/objects.html#cloudocitenancydetails",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudProvider": (
                "GraphQL/objects.html#cloudprovider",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudRdsIntegration": (
                "GraphQL/objects.html#cloudrdsintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudRedshiftIntegration": (
                "GraphQL/objects.html#cloudredshiftintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudRenameAccountPayload": (
                "GraphQL/objects.html#cloudrenameaccountpayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudRoute53Integration": (
                "GraphQL/objects.html#cloudroute53integration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudS3Integration": (
                "GraphQL/objects.html#clouds3integration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudSecurityHubIntegration": (
                "GraphQL/objects.html#cloudsecurityhubintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudService": (
                "GraphQL/objects.html#cloudservice",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudSesIntegration": (
                "GraphQL/objects.html#cloudsesintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudSnsIntegration": (
                "GraphQL/objects.html#cloudsnsintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudSqsIntegration": (
                "GraphQL/objects.html#cloudsqsintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudTemplateParam": (
                "GraphQL/objects.html#cloudtemplateparam",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudTrustedadvisorIntegration": (
                "GraphQL/objects.html#cloudtrustedadvisorintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudUnlinkAccountPayload": (
                "GraphQL/objects.html#cloudunlinkaccountpayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudUpdateAccountPayload": (
                "GraphQL/objects.html#cloudupdateaccountpayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CloudVpcIntegration": (
                "GraphQL/objects.html#cloudvpcintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationActorStitchedFields": (
                "GraphQL/objects.html#collaborationactorstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationBotResponse": (
                "GraphQL/objects.html#collaborationbotresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationBotResponseFeedback": (
                "GraphQL/objects.html#collaborationbotresponsefeedback",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationCodeMark": (
                "GraphQL/objects.html#collaborationcodemark",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationComment": (
                "GraphQL/objects.html#collaborationcomment",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationCommentConnection": (
                "GraphQL/objects.html#collaborationcommentconnection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationCommentCreator": (
                "GraphQL/objects.html#collaborationcommentcreator",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationCommentSyncStatus": (
                "GraphQL/objects.html#collaborationcommentsyncstatus",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationContext": (
                "GraphQL/objects.html#collaborationcontext",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationEmail": (
                "GraphQL/objects.html#collaborationemail",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationExternalCommentCreator": (
                "GraphQL/objects.html#collaborationexternalcommentcreator",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationExternalServiceConnection": (
                "GraphQL/objects.html#collaborationexternalserviceconnection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationExternalServiceConnectionGroup": (
                "GraphQL/objects.html#collaborationexternalserviceconnectiongroup",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationFile": (
                "GraphQL/objects.html#collaborationfile",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationGrokMessage": (
                "GraphQL/objects.html#collaborationgrokmessage",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationLinkedContexts": (
                "GraphQL/objects.html#collaborationlinkedcontexts",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationMention": (
                "GraphQL/objects.html#collaborationmention",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationMessageSent": (
                "GraphQL/objects.html#collaborationmessagesent",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationSocketConnection": (
                "GraphQL/objects.html#collaborationsocketconnection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationSubscriber": (
                "GraphQL/objects.html#collaborationsubscriber",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationSubscriberConnection": (
                "GraphQL/objects.html#collaborationsubscriberconnection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationSubscriptionsWithUnread": (
                "GraphQL/objects.html#collaborationsubscriptionswithunread",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationThread": (
                "GraphQL/objects.html#collaborationthread",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationThreadConnection": (
                "GraphQL/objects.html#collaborationthreadconnection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollaborationThreadsCount": (
                "GraphQL/objects.html#collaborationthreadscount",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CollectionEntity": (
                "GraphQL/objects.html#collectionentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Consumption": (
                "GraphQL/objects.html#consumption",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CrossAccountNrdbResultContainer": (
                "GraphQL/objects.html#crossaccountnrdbresultcontainer",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CustomRoleRoleMutationResult": (
                "GraphQL/objects.html#customrolerolemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CustomerAdministration": (
                "GraphQL/objects.html#customeradministration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.CustomerAdministrationJobs": (
                "GraphQL/objects.html#customeradministrationjobs",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardActorStitchedFields": (
                "GraphQL/objects.html#dashboardactorstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardAddWidgetsToPageError": (
                "GraphQL/objects.html#dashboardaddwidgetstopageerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardAddWidgetsToPageResult": (
                "GraphQL/objects.html#dashboardaddwidgetstopageresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardAreaWidgetConfiguration": (
                "GraphQL/objects.html#dashboardareawidgetconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardBarWidgetConfiguration": (
                "GraphQL/objects.html#dashboardbarwidgetconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardBillboardWidgetConfiguration": (
                "GraphQL/objects.html#dashboardbillboardwidgetconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardBillboardWidgetThreshold": (
                "GraphQL/objects.html#dashboardbillboardwidgetthreshold",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardCreateError": (
                "GraphQL/objects.html#dashboardcreateerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardCreateResult": (
                "GraphQL/objects.html#dashboardcreateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardDeleteError": (
                "GraphQL/objects.html#dashboarddeleteerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardDeleteResult": (
                "GraphQL/objects.html#dashboarddeleteresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardEntity": (
                "GraphQL/objects.html#dashboardentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardEntityOutline": (
                "GraphQL/objects.html#dashboardentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardEntityOwnerInfo": (
                "GraphQL/objects.html#dashboardentityownerinfo",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardEntityResult": (
                "GraphQL/objects.html#dashboardentityresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardLineWidgetConfiguration": (
                "GraphQL/objects.html#dashboardlinewidgetconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardLiveUrl": (
                "GraphQL/objects.html#dashboardliveurl",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardLiveUrlAuth": (
                "GraphQL/objects.html#dashboardliveurlauth",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardLiveUrlAuthFactor": (
                "GraphQL/objects.html#dashboardliveurlauthfactor",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardLiveUrlAuthPasswordDetails": (
                "GraphQL/objects.html#dashboardliveurlauthpassworddetails",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardLiveUrlCreationPoliciesResult": (
                "GraphQL/objects.html#dashboardliveurlcreationpoliciesresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardLiveUrlCreationPolicy": (
                "GraphQL/objects.html#dashboardliveurlcreationpolicy",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardLiveUrlError": (
                "GraphQL/objects.html#dashboardliveurlerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardLiveUrlResult": (
                "GraphQL/objects.html#dashboardliveurlresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardMarkdownWidgetConfiguration": (
                "GraphQL/objects.html#dashboardmarkdownwidgetconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardOwnerInfo": (
                "GraphQL/objects.html#dashboardownerinfo",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardPage": (
                "GraphQL/objects.html#dashboardpage",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardPieWidgetConfiguration": (
                "GraphQL/objects.html#dashboardpiewidgetconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardResetLiveUrlPasswordResult": (
                "GraphQL/objects.html#dashboardresetliveurlpasswordresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardRevokeLiveDashboardUrlResult": (
                "GraphQL/objects.html#dashboardrevokelivedashboardurlresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardRevokeLiveUrlResult": (
                "GraphQL/objects.html#dashboardrevokeliveurlresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardTableWidgetConfiguration": (
                "GraphQL/objects.html#dashboardtablewidgetconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardUndeleteError": (
                "GraphQL/objects.html#dashboardundeleteerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardUndeleteResult": (
                "GraphQL/objects.html#dashboardundeleteresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardUpdateError": (
                "GraphQL/objects.html#dashboardupdateerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardUpdatePageError": (
                "GraphQL/objects.html#dashboardupdatepageerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardUpdatePageResult": (
                "GraphQL/objects.html#dashboardupdatepageresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardUpdateResult": (
                "GraphQL/objects.html#dashboardupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardUpdateWidgetsInPageError": (
                "GraphQL/objects.html#dashboardupdatewidgetsinpageerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardUpdateWidgetsInPageResult": (
                "GraphQL/objects.html#dashboardupdatewidgetsinpageresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardVariable": (
                "GraphQL/objects.html#dashboardvariable",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardVariableDefaultItem": (
                "GraphQL/objects.html#dashboardvariabledefaultitem",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardVariableDefaultValue": (
                "GraphQL/objects.html#dashboardvariabledefaultvalue",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardVariableEnumItem": (
                "GraphQL/objects.html#dashboardvariableenumitem",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardVariableNrqlQuery": (
                "GraphQL/objects.html#dashboardvariablenrqlquery",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardVariableOptions": (
                "GraphQL/objects.html#dashboardvariableoptions",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardWidget": (
                "GraphQL/objects.html#dashboardwidget",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardWidgetConfiguration": (
                "GraphQL/objects.html#dashboardwidgetconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardWidgetLayout": (
                "GraphQL/objects.html#dashboardwidgetlayout",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardWidgetNrqlQuery": (
                "GraphQL/objects.html#dashboardwidgetnrqlquery",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DashboardWidgetVisualization": (
                "GraphQL/objects.html#dashboardwidgetvisualization",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataDictionaryAttribute": (
                "GraphQL/objects.html#datadictionaryattribute",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataDictionaryDataSource": (
                "GraphQL/objects.html#datadictionarydatasource",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataDictionaryDocsStitchedFields": (
                "GraphQL/objects.html#datadictionarydocsstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataDictionaryEvent": (
                "GraphQL/objects.html#datadictionaryevent",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataDictionaryUnit": (
                "GraphQL/objects.html#datadictionaryunit",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataManagementAccountLimit": (
                "GraphQL/objects.html#datamanagementaccountlimit",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataManagementAccountStitchedFields": (
                "GraphQL/objects.html#datamanagementaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataManagementAppliedRules": (
                "GraphQL/objects.html#datamanagementappliedrules",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataManagementBulkCopyResult": (
                "GraphQL/objects.html#datamanagementbulkcopyresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataManagementCustomizableRetention": (
                "GraphQL/objects.html#datamanagementcustomizableretention",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataManagementEventNamespaces": (
                "GraphQL/objects.html#datamanagementeventnamespaces",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataManagementFeatureSetting": (
                "GraphQL/objects.html#datamanagementfeaturesetting",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataManagementNamespaceLevelRetention": (
                "GraphQL/objects.html#datamanagementnamespacelevelretention",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataManagementRenderedRetention": (
                "GraphQL/objects.html#datamanagementrenderedretention",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataManagementRetention": (
                "GraphQL/objects.html#datamanagementretention",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataManagementRetentionValues": (
                "GraphQL/objects.html#datamanagementretentionvalues",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataManagementRule": (
                "GraphQL/objects.html#datamanagementrule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataSourceGapsActorStitchedFields": (
                "GraphQL/objects.html#datasourcegapsactorstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataSourceGapsGap": (
                "GraphQL/objects.html#datasourcegapsgap",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataSourceGapsGapType": (
                "GraphQL/objects.html#datasourcegapsgaptype",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DataSourceGapsGapsResult": (
                "GraphQL/objects.html#datasourcegapsgapsresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DistributedTracingActorStitchedFields": (
                "GraphQL/objects.html#distributedtracingactorstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DistributedTracingEntityTracingSummary": (
                "GraphQL/objects.html#distributedtracingentitytracingsummary",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DistributedTracingLinkedSpan": (
                "GraphQL/objects.html#distributedtracinglinkedspan",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DistributedTracingSpan": (
                "GraphQL/objects.html#distributedtracingspan",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DistributedTracingSpanAnomaly": (
                "GraphQL/objects.html#distributedtracingspananomaly",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DistributedTracingSpanConnection": (
                "GraphQL/objects.html#distributedtracingspanconnection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DistributedTracingTrace": (
                "GraphQL/objects.html#distributedtracingtrace",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DistributedTracingTraceSummary": (
                "GraphQL/objects.html#distributedtracingtracesummary",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DocumentationFields": (
                "GraphQL/objects.html#documentationfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.DomainType": (
                "GraphQL/objects.html#domaintype",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeAccountStitchedFields": (
                "GraphQL/objects.html#edgeaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeAgentEndpointDetail": (
                "GraphQL/objects.html#edgeagentendpointdetail",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeCreateSpanAttributeRuleResponseError": (
                "GraphQL/objects.html#edgecreatespanattributeruleresponseerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeCreateSpanAttributeRulesResponse": (
                "GraphQL/objects.html#edgecreatespanattributerulesresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeCreateTraceFilterRuleResponses": (
                "GraphQL/objects.html#edgecreatetracefilterruleresponses",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeCreateTraceObserverResponse": (
                "GraphQL/objects.html#edgecreatetraceobserverresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeCreateTraceObserverResponseError": (
                "GraphQL/objects.html#edgecreatetraceobserverresponseerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeCreateTraceObserverResponses": (
                "GraphQL/objects.html#edgecreatetraceobserverresponses",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeDataSource": (
                "GraphQL/objects.html#edgedatasource",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeDataSourceGroup": (
                "GraphQL/objects.html#edgedatasourcegroup",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeDeleteSpanAttributeRuleResponse": (
                "GraphQL/objects.html#edgedeletespanattributeruleresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeDeleteSpanAttributeRuleResponseError": (
                "GraphQL/objects.html#edgedeletespanattributeruleresponseerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeDeleteTraceFilterRuleResponses": (
                "GraphQL/objects.html#edgedeletetracefilterruleresponses",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeDeleteTraceObserverResponse": (
                "GraphQL/objects.html#edgedeletetraceobserverresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeDeleteTraceObserverResponseError": (
                "GraphQL/objects.html#edgedeletetraceobserverresponseerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeDeleteTraceObserverResponses": (
                "GraphQL/objects.html#edgedeletetraceobserverresponses",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeEndpoint": (
                "GraphQL/objects.html#edgeendpoint",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeEndpointDetail": (
                "GraphQL/objects.html#edgeendpointdetail",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeHttpsEndpointDetail": (
                "GraphQL/objects.html#edgehttpsendpointdetail",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeRandomTraceFilter": (
                "GraphQL/objects.html#edgerandomtracefilter",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeSpanAttributeRule": (
                "GraphQL/objects.html#edgespanattributerule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeSpanAttributesTraceFilter": (
                "GraphQL/objects.html#edgespanattributestracefilter",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeTraceFilters": (
                "GraphQL/objects.html#edgetracefilters",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeTraceObserver": (
                "GraphQL/objects.html#edgetraceobserver",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeTracing": (
                "GraphQL/objects.html#edgetracing",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeUpdateTraceObserverResponse": (
                "GraphQL/objects.html#edgeupdatetraceobserverresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeUpdateTraceObserverResponseError": (
                "GraphQL/objects.html#edgeupdatetraceobserverresponseerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EdgeUpdateTraceObserverResponses": (
                "GraphQL/objects.html#edgeupdatetraceobserverresponses",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Entity": (
                "GraphQL/objects.html#entity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityAlertViolation": (
                "GraphQL/objects.html#entityalertviolation",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityCollection": (
                "GraphQL/objects.html#entitycollection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityCollectionDefinition": (
                "GraphQL/objects.html#entitycollectiondefinition",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityCollectionScopeAccounts": (
                "GraphQL/objects.html#entitycollectionscopeaccounts",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityDeleteError": (
                "GraphQL/objects.html#entitydeleteerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityDeleteResult": (
                "GraphQL/objects.html#entitydeleteresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityGoldenContext": (
                "GraphQL/objects.html#entitygoldencontext",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityGoldenContextScopedGoldenMetrics": (
                "GraphQL/objects.html#entitygoldencontextscopedgoldenmetrics",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityGoldenContextScopedGoldenTags": (
                "GraphQL/objects.html#entitygoldencontextscopedgoldentags",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityGoldenGoldenMetricsError": (
                "GraphQL/objects.html#entitygoldengoldenmetricserror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityGoldenMetric": (
                "GraphQL/objects.html#entitygoldenmetric",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityGoldenMetricDefinition": (
                "GraphQL/objects.html#entitygoldenmetricdefinition",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityGoldenMetricsDomainTypeScoped": (
                "GraphQL/objects.html#entitygoldenmetricsdomaintypescoped",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityGoldenMetricsDomainTypeScopedResponse": (
                "GraphQL/objects.html#entitygoldenmetricsdomaintypescopedresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityGoldenOriginalDefinitionWithSelector": (
                "GraphQL/objects.html#entitygoldenoriginaldefinitionwithselector",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityGoldenOriginalQueryWithSelector": (
                "GraphQL/objects.html#entitygoldenoriginalquerywithselector",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityGoldenTag": (
                "GraphQL/objects.html#entitygoldentag",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityGoldenTagsDomainTypeScoped": (
                "GraphQL/objects.html#entitygoldentagsdomaintypescoped",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityGoldenTagsDomainTypeScopedResponse": (
                "GraphQL/objects.html#entitygoldentagsdomaintypescopedresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementActor": (
                "GraphQL/objects.html#entitymanagementactor",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementActorStitchedFields": (
                "GraphQL/objects.html#entitymanagementactorstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementAgentConfigurationEntity": (
                "GraphQL/objects.html#entitymanagementagentconfigurationentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementAgentConfigurationVersionEntity": (
                "GraphQL/objects.html#entitymanagementagentconfigurationversionentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementAgentDeployment": (
                "GraphQL/objects.html#entitymanagementagentdeployment",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementAgentEffectiveConfigurationEntity": (
                "GraphQL/objects.html#entitymanagementagenteffectiveconfigurationentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementAgentEntity": (
                "GraphQL/objects.html#entitymanagementagententity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementAgentTypeDefinitionEntity": (
                "GraphQL/objects.html#entitymanagementagenttypedefinitionentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementAiAgentEntity": (
                "GraphQL/objects.html#entitymanagementaiagententity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementAiAgentEntityCreateResult": (
                "GraphQL/objects.html#entitymanagementaiagententitycreateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementAiAgentEntityUpdateResult": (
                "GraphQL/objects.html#entitymanagementaiagententityupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementAiAgentToolConfig": (
                "GraphQL/objects.html#entitymanagementaiagenttoolconfig",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementAiCapableEntity": (
                "GraphQL/objects.html#entitymanagementaicapableentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementAiToolEntity": (
                "GraphQL/objects.html#entitymanagementaitoolentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementAiToolEntityCreateResult": (
                "GraphQL/objects.html#entitymanagementaitoolentitycreateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementAiToolEntityUpdateResult": (
                "GraphQL/objects.html#entitymanagementaitoolentityupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementAiToolParameter": (
                "GraphQL/objects.html#entitymanagementaitoolparameter",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementAttribute": (
                "GraphQL/objects.html#entitymanagementattribute",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementBlob": (
                "GraphQL/objects.html#entitymanagementblob",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementBlobSignature": (
                "GraphQL/objects.html#entitymanagementblobsignature",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementBudgetAccount": (
                "GraphQL/objects.html#entitymanagementbudgetaccount",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementBudgetAlertPolicy": (
                "GraphQL/objects.html#entitymanagementbudgetalertpolicy",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementBudgetEntity": (
                "GraphQL/objects.html#entitymanagementbudgetentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementBudgetLimit": (
                "GraphQL/objects.html#entitymanagementbudgetlimit",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementBudgetSegment": (
                "GraphQL/objects.html#entitymanagementbudgetsegment",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementCategoryScope": (
                "GraphQL/objects.html#entitymanagementcategoryscope",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementCharacterTextSplitterOptions": (
                "GraphQL/objects.html#entitymanagementcharactertextsplitteroptions",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementCollectionElementsResult": (
                "GraphQL/objects.html#entitymanagementcollectionelementsresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementCollectionEntity": (
                "GraphQL/objects.html#entitymanagementcollectionentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementCollectionEntityCreateResult": (
                "GraphQL/objects.html#entitymanagementcollectionentitycreateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementCollectionEntityUpdateResult": (
                "GraphQL/objects.html#entitymanagementcollectionentityupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementCollectionsContainingEntityResult": (
                "GraphQL/objects.html#entitymanagementcollectionscontainingentityresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementCommunicationLog": (
                "GraphQL/objects.html#entitymanagementcommunicationlog",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementComponentEntity": (
                "GraphQL/objects.html#entitymanagementcomponententity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementConfig": (
                "GraphQL/objects.html#entitymanagementconfig",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementConfiguration": (
                "GraphQL/objects.html#entitymanagementconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementConfluenceIntegration": (
                "GraphQL/objects.html#entitymanagementconfluenceintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementConfluenceIntegrationCreateResult": (
                "GraphQL/objects.html#entitymanagementconfluenceintegrationcreateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementConfluenceIntegrationUpdateResult": (
                "GraphQL/objects.html#entitymanagementconfluenceintegrationupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementConfluenceRagSettingsEntity": (
                "GraphQL/objects.html#entitymanagementconfluenceragsettingsentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementConfluenceRagSettingsEntityCreateResult": (
                "GraphQL/objects.html#entitymanagementconfluenceragsettingsentitycreateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementConfluenceRagSettingsEntityUpdateResult": (
                "GraphQL/objects.html#entitymanagementconfluenceragsettingsentityupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementConnectionSettings": (
                "GraphQL/objects.html#entitymanagementconnectionsettings",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementCount": (
                "GraphQL/objects.html#entitymanagementcount",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementCustomerImpactEntity": (
                "GraphQL/objects.html#entitymanagementcustomerimpactentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementCustomerImpactQueryEntity": (
                "GraphQL/objects.html#entitymanagementcustomerimpactqueryentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementDeploymentAgentConfigurationVersion": (
                "GraphQL/objects.html#entitymanagementdeploymentagentconfigurationversion",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementDiscoverySettings": (
                "GraphQL/objects.html#entitymanagementdiscoverysettings",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementEntity": (
                "GraphQL/objects.html#entitymanagemententity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementEntityDeleteResult": (
                "GraphQL/objects.html#entitymanagemententitydeleteresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementEntityReference": (
                "GraphQL/objects.html#entitymanagemententityreference",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementEntitySearchResult": (
                "GraphQL/objects.html#entitymanagemententitysearchresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementExecutionIssue": (
                "GraphQL/objects.html#entitymanagementexecutionissue",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementExternalOwner": (
                "GraphQL/objects.html#entitymanagementexternalowner",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementFleetControlProperties": (
                "GraphQL/objects.html#entitymanagementfleetcontrolproperties",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementFleetDeployment": (
                "GraphQL/objects.html#entitymanagementfleetdeployment",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementFleetDeploymentEntity": (
                "GraphQL/objects.html#entitymanagementfleetdeploymententity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementFleetEntity": (
                "GraphQL/objects.html#entitymanagementfleetentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementFleetRingEntity": (
                "GraphQL/objects.html#entitymanagementfleetringentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementGenericEntity": (
                "GraphQL/objects.html#entitymanagementgenericentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementGenericEntityUpdateResult": (
                "GraphQL/objects.html#entitymanagementgenericentityupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementGitHubIntegrationEntity": (
                "GraphQL/objects.html#entitymanagementgithubintegrationentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementGitHubSyncOptions": (
                "GraphQL/objects.html#entitymanagementgithubsyncoptions",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementGitRepositoryEntity": (
                "GraphQL/objects.html#entitymanagementgitrepositoryentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementGitRepositoryEntityCreateResult": (
                "GraphQL/objects.html#entitymanagementgitrepositoryentitycreateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementGitRepositoryEntityUpdateResult": (
                "GraphQL/objects.html#entitymanagementgitrepositoryentityupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementGithubAppTokenCredential": (
                "GraphQL/objects.html#entitymanagementgithubapptokencredential",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementGithubConnection": (
                "GraphQL/objects.html#entitymanagementgithubconnection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementGithubCredentials": (
                "GraphQL/objects.html#entitymanagementgithubcredentials",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementInboxIssueCategoryEntity": (
                "GraphQL/objects.html#entitymanagementinboxissuecategoryentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementInboxIssueCategoryEntityCreateResult": (
                "GraphQL/objects.html#entitymanagementinboxissuecategoryentitycreateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementInboxIssueCategoryEntityUpdateResult": (
                "GraphQL/objects.html#entitymanagementinboxissuecategoryentityupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementInfrastructureManager": (
                "GraphQL/objects.html#entitymanagementinfrastructuremanager",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementJiraBasicAuthCredential": (
                "GraphQL/objects.html#entitymanagementjirabasicauthcredential",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementJiraConnection": (
                "GraphQL/objects.html#entitymanagementjiraconnection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementJiraCredentials": (
                "GraphQL/objects.html#entitymanagementjiracredentials",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementJiraOAuthCredential": (
                "GraphQL/objects.html#entitymanagementjiraoauthcredential",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementJiraSyncConfiguration": (
                "GraphQL/objects.html#entitymanagementjirasyncconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementLlmConfig": (
                "GraphQL/objects.html#entitymanagementllmconfig",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementMaintenanceWindowEntity": (
                "GraphQL/objects.html#entitymanagementmaintenancewindowentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementMarkdownTextSplitterOptions": (
                "GraphQL/objects.html#entitymanagementmarkdowntextsplitteroptions",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementMetadata": (
                "GraphQL/objects.html#entitymanagementmetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementNewRelicBasicAuthCredential": (
                "GraphQL/objects.html#entitymanagementnewrelicbasicauthcredential",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementNewRelicConnection": (
                "GraphQL/objects.html#entitymanagementnewrelicconnection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementNotebookEntity": (
                "GraphQL/objects.html#entitymanagementnotebookentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementNotificationAttachmentEntity": (
                "GraphQL/objects.html#entitymanagementnotificationattachmententity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementNrqlRuleEngine": (
                "GraphQL/objects.html#entitymanagementnrqlruleengine",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementParentInfo": (
                "GraphQL/objects.html#entitymanagementparentinfo",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementPerformanceInboxSettingEntity": (
                "GraphQL/objects.html#entitymanagementperformanceinboxsettingentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementPerformanceInboxSettingEntityCreateResult": (
                "GraphQL/objects.html#entitymanagementperformanceinboxsettingentitycreateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementPerformanceInboxSettingEntityUpdateResult": (
                "GraphQL/objects.html#entitymanagementperformanceinboxsettingentityupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementPipelineCloudRuleEntity": (
                "GraphQL/objects.html#entitymanagementpipelinecloudruleentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementPipelineCloudRuleEntityCreateResult": (
                "GraphQL/objects.html#entitymanagementpipelinecloudruleentitycreateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementPipelineCloudRuleEntityUpdateResult": (
                "GraphQL/objects.html#entitymanagementpipelinecloudruleentityupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementRagDocumentEntity": (
                "GraphQL/objects.html#entitymanagementragdocumententity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementRagToolEntity": (
                "GraphQL/objects.html#entitymanagementragtoolentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementRagToolEntityCreateResult": (
                "GraphQL/objects.html#entitymanagementragtoolentitycreateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementRagToolEntityUpdateResult": (
                "GraphQL/objects.html#entitymanagementragtoolentityupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementRelationship": (
                "GraphQL/objects.html#entitymanagementrelationship",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementRelationshipCreateResult": (
                "GraphQL/objects.html#entitymanagementrelationshipcreateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementRelationshipDeleteResult": (
                "GraphQL/objects.html#entitymanagementrelationshipdeleteresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementRelationshipUpdateResult": (
                "GraphQL/objects.html#entitymanagementrelationshipupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementRepositoryLicense": (
                "GraphQL/objects.html#entitymanagementrepositorylicense",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementRingDeploymentTracker": (
                "GraphQL/objects.html#entitymanagementringdeploymenttracker",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementRuleExecutionStatus": (
                "GraphQL/objects.html#entitymanagementruleexecutionstatus",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementSchedule": (
                "GraphQL/objects.html#entitymanagementschedule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementScopedReference": (
                "GraphQL/objects.html#entitymanagementscopedreference",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementScorecardEntity": (
                "GraphQL/objects.html#entitymanagementscorecardentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementScorecardEntityCreateResult": (
                "GraphQL/objects.html#entitymanagementscorecardentitycreateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementScorecardEntityUpdateResult": (
                "GraphQL/objects.html#entitymanagementscorecardentityupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementScorecardRuleEntity": (
                "GraphQL/objects.html#entitymanagementscorecardruleentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementScorecardRuleEntityCreateResult": (
                "GraphQL/objects.html#entitymanagementscorecardruleentitycreateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementScorecardRuleEntityUpdateResult": (
                "GraphQL/objects.html#entitymanagementscorecardruleentityupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementSecretReference": (
                "GraphQL/objects.html#entitymanagementsecretreference",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementServiceNowApiKeyCredential": (
                "GraphQL/objects.html#entitymanagementservicenowapikeycredential",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementServiceNowConnection": (
                "GraphQL/objects.html#entitymanagementservicenowconnection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementServiceNowCredentials": (
                "GraphQL/objects.html#entitymanagementservicenowcredentials",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementServiceNowOAuthCredential": (
                "GraphQL/objects.html#entitymanagementservicenowoauthcredential",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementSignatureDetails": (
                "GraphQL/objects.html#entitymanagementsignaturedetails",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementSigningCredential": (
                "GraphQL/objects.html#entitymanagementsigningcredential",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementSlackConnection": (
                "GraphQL/objects.html#entitymanagementslackconnection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementSlackSyncConfiguration": (
                "GraphQL/objects.html#entitymanagementslacksyncconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementStatusPageAnnouncementEntity": (
                "GraphQL/objects.html#entitymanagementstatuspageannouncemententity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementStatusPageIncidentEntity": (
                "GraphQL/objects.html#entitymanagementstatuspageincidententity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementSyncGroupRule": (
                "GraphQL/objects.html#entitymanagementsyncgrouprule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementSyncGroupRuleCondition": (
                "GraphQL/objects.html#entitymanagementsyncgrouprulecondition",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementSyncGroupsSettings": (
                "GraphQL/objects.html#entitymanagementsyncgroupssettings",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementSystemActor": (
                "GraphQL/objects.html#entitymanagementsystemactor",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementTag": (
                "GraphQL/objects.html#entitymanagementtag",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementTeamEntity": (
                "GraphQL/objects.html#entitymanagementteamentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementTeamEntityCreateResult": (
                "GraphQL/objects.html#entitymanagementteamentitycreateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementTeamEntityUpdateResult": (
                "GraphQL/objects.html#entitymanagementteamentityupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementTeamExternalIntegration": (
                "GraphQL/objects.html#entitymanagementteamexternalintegration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementTeamResource": (
                "GraphQL/objects.html#entitymanagementteamresource",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementTeamsHierarchyLevelEntity": (
                "GraphQL/objects.html#entitymanagementteamshierarchylevelentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementTeamsOrganizationSettingsEntity": (
                "GraphQL/objects.html#entitymanagementteamsorganizationsettingsentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementTeamsOrganizationSettingsEntityUpdateResult": (
                "GraphQL/objects.html#entitymanagementteamsorganizationsettingsentityupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementTemplateField": (
                "GraphQL/objects.html#entitymanagementtemplatefield",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementTokenTextSplitterOptions": (
                "GraphQL/objects.html#entitymanagementtokentextsplitteroptions",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementUserActor": (
                "GraphQL/objects.html#entitymanagementuseractor",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementUserEntity": (
                "GraphQL/objects.html#entitymanagementuserentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementUserMetadata": (
                "GraphQL/objects.html#entitymanagementusermetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementWorkItem": (
                "GraphQL/objects.html#entitymanagementworkitem",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementWorkItemAssignment": (
                "GraphQL/objects.html#entitymanagementworkitemassignment",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementWorkItemAttribute": (
                "GraphQL/objects.html#entitymanagementworkitemattribute",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementWorkItemLink": (
                "GraphQL/objects.html#entitymanagementworkitemlink",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementWorkItemMessage": (
                "GraphQL/objects.html#entitymanagementworkitemmessage",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementWorkflowDefinition": (
                "GraphQL/objects.html#entitymanagementworkflowdefinition",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementWorkflowDefinitionVersion": (
                "GraphQL/objects.html#entitymanagementworkflowdefinitionversion",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityManagementWorkflowSchedule": (
                "GraphQL/objects.html#entitymanagementworkflowschedule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityOutline": (
                "GraphQL/objects.html#entityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityRelationship": (
                "GraphQL/objects.html#entityrelationship",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityRelationshipDetectedEdge": (
                "GraphQL/objects.html#entityrelationshipdetectededge",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityRelationshipEdge": (
                "GraphQL/objects.html#entityrelationshipedge",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityRelationshipNode": (
                "GraphQL/objects.html#entityrelationshipnode",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityRelationshipRelatedEntitiesResult": (
                "GraphQL/objects.html#entityrelationshiprelatedentitiesresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityRelationshipUserDefinedCreateOrReplaceResult": (
                "GraphQL/objects.html#entityrelationshipuserdefinedcreateorreplaceresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityRelationshipUserDefinedCreateOrReplaceResultError": (
                "GraphQL/objects.html#entityrelationshipuserdefinedcreateorreplaceresulterror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityRelationshipUserDefinedDeleteResult": (
                "GraphQL/objects.html#entityrelationshipuserdefineddeleteresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityRelationshipUserDefinedDeleteResultError": (
                "GraphQL/objects.html#entityrelationshipuserdefineddeleteresulterror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityRelationshipUserDefinedEdge": (
                "GraphQL/objects.html#entityrelationshipuserdefinededge",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityRelationshipVertex": (
                "GraphQL/objects.html#entityrelationshipvertex",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntitySearch": (
                "GraphQL/objects.html#entitysearch",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntitySearchCounts": (
                "GraphQL/objects.html#entitysearchcounts",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntitySearchResult": (
                "GraphQL/objects.html#entitysearchresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntitySearchTypes": (
                "GraphQL/objects.html#entitysearchtypes",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityTag": (
                "GraphQL/objects.html#entitytag",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityTagValueWithMetadata": (
                "GraphQL/objects.html#entitytagvaluewithmetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EntityTagWithMetadata": (
                "GraphQL/objects.html#entitytagwithmetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxActorStitchedFields": (
                "GraphQL/objects.html#errorsinboxactorstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxAssignErrorGroupError": (
                "GraphQL/objects.html#errorsinboxassignerrorgrouperror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxAssignErrorGroupResponse": (
                "GraphQL/objects.html#errorsinboxassignerrorgroupresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxAssignment": (
                "GraphQL/objects.html#errorsinboxassignment",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxDeleteErrorGroupResourceResponse": (
                "GraphQL/objects.html#errorsinboxdeleteerrorgroupresourceresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxErrorGroup": (
                "GraphQL/objects.html#errorsinboxerrorgroup",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxErrorGroupBase": (
                "GraphQL/objects.html#errorsinboxerrorgroupbase",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxErrorGroupOutline": (
                "GraphQL/objects.html#errorsinboxerrorgroupoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxErrorGroupStateTypeResult": (
                "GraphQL/objects.html#errorsinboxerrorgroupstatetyperesult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxErrorGroupsResponse": (
                "GraphQL/objects.html#errorsinboxerrorgroupsresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxJiraIssue": (
                "GraphQL/objects.html#errorsinboxjiraissue",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxOccurrences": (
                "GraphQL/objects.html#errorsinboxoccurrences",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxResource": (
                "GraphQL/objects.html#errorsinboxresource",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxResourcesResponse": (
                "GraphQL/objects.html#errorsinboxresourcesresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxResponseError": (
                "GraphQL/objects.html#errorsinboxresponseerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxUpdateErrorGroupStateError": (
                "GraphQL/objects.html#errorsinboxupdateerrorgroupstateerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxUpdateErrorGroupStateResponse": (
                "GraphQL/objects.html#errorsinboxupdateerrorgroupstateresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ErrorsInboxVersion": (
                "GraphQL/objects.html#errorsinboxversion",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EventAttributeDefinition": (
                "GraphQL/objects.html#eventattributedefinition",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EventDefinition": (
                "GraphQL/objects.html#eventdefinition",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EventsToMetricsAccountStitchedFields": (
                "GraphQL/objects.html#eventstometricsaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EventsToMetricsCreateRuleFailure": (
                "GraphQL/objects.html#eventstometricscreaterulefailure",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EventsToMetricsCreateRuleResult": (
                "GraphQL/objects.html#eventstometricscreateruleresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EventsToMetricsCreateRuleSubmission": (
                "GraphQL/objects.html#eventstometricscreaterulesubmission",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EventsToMetricsDeleteRuleFailure": (
                "GraphQL/objects.html#eventstometricsdeleterulefailure",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EventsToMetricsDeleteRuleResult": (
                "GraphQL/objects.html#eventstometricsdeleteruleresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EventsToMetricsDeleteRuleSubmission": (
                "GraphQL/objects.html#eventstometricsdeleterulesubmission",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EventsToMetricsError": (
                "GraphQL/objects.html#eventstometricserror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EventsToMetricsListRuleResult": (
                "GraphQL/objects.html#eventstometricslistruleresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EventsToMetricsRule": (
                "GraphQL/objects.html#eventstometricsrule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EventsToMetricsUpdateRuleFailure": (
                "GraphQL/objects.html#eventstometricsupdaterulefailure",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EventsToMetricsUpdateRuleResult": (
                "GraphQL/objects.html#eventstometricsupdateruleresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.EventsToMetricsUpdateRuleSubmission": (
                "GraphQL/objects.html#eventstometricsupdaterulesubmission",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ExternalEntity": (
                "GraphQL/objects.html#externalentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ExternalEntityOutline": (
                "GraphQL/objects.html#externalentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlActor": (
                "GraphQL/objects.html#fleetcontrolactor",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlActorStitchedFields": (
                "GraphQL/objects.html#fleetcontrolactorstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlCollectionEntity": (
                "GraphQL/objects.html#fleetcontrolcollectionentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlConfigurationVersionList": (
                "GraphQL/objects.html#fleetcontrolconfigurationversionlist",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlCreateFleetResult": (
                "GraphQL/objects.html#fleetcontrolcreatefleetresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlDeleteFleetResult": (
                "GraphQL/objects.html#fleetcontroldeletefleetresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlDeployFleetResult": (
                "GraphQL/objects.html#fleetcontroldeployfleetresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlDeployResult": (
                "GraphQL/objects.html#fleetcontroldeployresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlFleetDeploymentCreateResult": (
                "GraphQL/objects.html#fleetcontrolfleetdeploymentcreateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlFleetDeploymentDeleteResult": (
                "GraphQL/objects.html#fleetcontrolfleetdeploymentdeleteresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlFleetDeploymentResult": (
                "GraphQL/objects.html#fleetcontrolfleetdeploymentresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlFleetDeploymentUpdateResult": (
                "GraphQL/objects.html#fleetcontrolfleetdeploymentupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlFleetEntityResult": (
                "GraphQL/objects.html#fleetcontrolfleetentityresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlFleetMemberEntityResult": (
                "GraphQL/objects.html#fleetcontrolfleetmemberentityresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlFleetMemberRing": (
                "GraphQL/objects.html#fleetcontrolfleetmemberring",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlFleetMembersItemsResult": (
                "GraphQL/objects.html#fleetcontrolfleetmembersitemsresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlFleetMembersResult": (
                "GraphQL/objects.html#fleetcontrolfleetmembersresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlMetadata": (
                "GraphQL/objects.html#fleetcontrolmetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlRingsDeploymentTracker": (
                "GraphQL/objects.html#fleetcontrolringsdeploymenttracker",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlScopedReference": (
                "GraphQL/objects.html#fleetcontrolscopedreference",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlTag": (
                "GraphQL/objects.html#fleetcontroltag",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.FleetControlUpdateFleetResult": (
                "GraphQL/objects.html#fleetcontrolupdatefleetresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.GenericEntity": (
                "GraphQL/objects.html#genericentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.GenericEntityOutline": (
                "GraphQL/objects.html#genericentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.GenericInfrastructureEntity": (
                "GraphQL/objects.html#genericinfrastructureentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.GenericInfrastructureEntityOutline": (
                "GraphQL/objects.html#genericinfrastructureentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.HistoricalDataExportAccountStitchedFields": (
                "GraphQL/objects.html#historicaldataexportaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.HistoricalDataExportCustomerExportResponse": (
                "GraphQL/objects.html#historicaldataexportcustomerexportresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.IncidentIntelligenceEnvironmentAccountStitchedFields": (
                "GraphQL/objects.html#incidentintelligenceenvironmentaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.IncidentIntelligenceEnvironmentActorStitchedFields": (
                "GraphQL/objects.html#incidentintelligenceenvironmentactorstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.IncidentIntelligenceEnvironmentConsentAccounts": (
                "GraphQL/objects.html#incidentintelligenceenvironmentconsentaccounts",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.IncidentIntelligenceEnvironmentConsentAuthorizedAccounts": (
                "GraphQL/objects.html#incidentintelligenceenvironmentconsentauthorizedaccounts",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.IncidentIntelligenceEnvironmentConsentedAccount": (
                "GraphQL/objects.html#incidentintelligenceenvironmentconsentedaccount",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.IncidentIntelligenceEnvironmentCreateEnvironment": (
                "GraphQL/objects.html#incidentintelligenceenvironmentcreateenvironment",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.IncidentIntelligenceEnvironmentCreateEnvironmentResultDetails": (
                "GraphQL/objects.html#incidentintelligenceenvironmentcreateenvironmentresultdetails",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.IncidentIntelligenceEnvironmentCurrentEnvironmentResult": (
                "GraphQL/objects.html#incidentintelligenceenvironmentcurrentenvironmentresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.IncidentIntelligenceEnvironmentCurrentEnvironmentResultReasonDetails": (
                "GraphQL/objects.html#incidentintelligenceenvironmentcurrentenvironmentresultreasondetails",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.IncidentIntelligenceEnvironmentDeleteEnvironment": (
                "GraphQL/objects.html#incidentintelligenceenvironmentdeleteenvironment",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.IncidentIntelligenceEnvironmentDissentAccounts": (
                "GraphQL/objects.html#incidentintelligenceenvironmentdissentaccounts",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.IncidentIntelligenceEnvironmentEnvironmentAlreadyExists": (
                "GraphQL/objects.html#incidentintelligenceenvironmentenvironmentalreadyexists",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.IncidentIntelligenceEnvironmentEnvironmentCreated": (
                "GraphQL/objects.html#incidentintelligenceenvironmentenvironmentcreated",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.IncidentIntelligenceEnvironmentIncidentIntelligenceEnvironment": (
                "GraphQL/objects.html#incidentintelligenceenvironmentincidentintelligenceenvironment",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.IncidentIntelligenceEnvironmentMultipleEnvironmentsAvailable": (
                "GraphQL/objects.html#incidentintelligenceenvironmentmultipleenvironmentsavailable",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.IncidentIntelligenceEnvironmentUserNotAuthorizedForAccount": (
                "GraphQL/objects.html#incidentintelligenceenvironmentusernotauthorizedforaccount",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.IncidentIntelligenceEnvironmentUserNotCapableToOperateOnAccount": (
                "GraphQL/objects.html#incidentintelligenceenvironmentusernotcapabletooperateonaccount",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.InfrastructureAwsLambdaFunctionEntity": (
                "GraphQL/objects.html#infrastructureawslambdafunctionentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.InfrastructureAwsLambdaFunctionEntityOutline": (
                "GraphQL/objects.html#infrastructureawslambdafunctionentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.InfrastructureHostEntity": (
                "GraphQL/objects.html#infrastructurehostentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.InfrastructureHostEntityOutline": (
                "GraphQL/objects.html#infrastructurehostentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.InfrastructureHostSummaryData": (
                "GraphQL/objects.html#infrastructurehostsummarydata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.InfrastructureIntegrationEntity": (
                "GraphQL/objects.html#infrastructureintegrationentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.InfrastructureIntegrationEntityOutline": (
                "GraphQL/objects.html#infrastructureintegrationentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.InstallationAccountStitchedFields": (
                "GraphQL/objects.html#installationaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.InstallationInstallStatus": (
                "GraphQL/objects.html#installationinstallstatus",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.InstallationInstallStatusResult": (
                "GraphQL/objects.html#installationinstallstatusresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.InstallationRecipeEvent": (
                "GraphQL/objects.html#installationrecipeevent",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.InstallationRecipeEventResult": (
                "GraphQL/objects.html#installationrecipeeventresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.InstallationStatusError": (
                "GraphQL/objects.html#installationstatuserror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.KeyTransactionApplication": (
                "GraphQL/objects.html#keytransactionapplication",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.KeyTransactionCreateResult": (
                "GraphQL/objects.html#keytransactioncreateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.KeyTransactionDeleteResult": (
                "GraphQL/objects.html#keytransactiondeleteresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.KeyTransactionEntity": (
                "GraphQL/objects.html#keytransactionentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.KeyTransactionEntityOutline": (
                "GraphQL/objects.html#keytransactionentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.KeyTransactionUpdateResult": (
                "GraphQL/objects.html#keytransactionupdateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.KnowledgeDocsStitchedFields": (
                "GraphQL/objects.html#knowledgedocsstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.KnowledgeSearchResponse": (
                "GraphQL/objects.html#knowledgesearchresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.KnowledgeSearchResult": (
                "GraphQL/objects.html#knowledgesearchresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.KnowledgeTag": (
                "GraphQL/objects.html#knowledgetag",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.KnowledgeTagsResponse": (
                "GraphQL/objects.html#knowledgetagsresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsAccountStitchedFields": (
                "GraphQL/objects.html#logconfigurationsaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsCreateDataPartitionRuleError": (
                "GraphQL/objects.html#logconfigurationscreatedatapartitionruleerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsCreateDataPartitionRuleResponse": (
                "GraphQL/objects.html#logconfigurationscreatedatapartitionruleresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsCreateParsingRuleResponse": (
                "GraphQL/objects.html#logconfigurationscreateparsingruleresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsDataPartitionRule": (
                "GraphQL/objects.html#logconfigurationsdatapartitionrule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsDataPartitionRuleMatchingCriteria": (
                "GraphQL/objects.html#logconfigurationsdatapartitionrulematchingcriteria",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsDataPartitionRuleMutationError": (
                "GraphQL/objects.html#logconfigurationsdatapartitionrulemutationerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsDeleteDataPartitionRuleResponse": (
                "GraphQL/objects.html#logconfigurationsdeletedatapartitionruleresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsDeleteParsingRuleResponse": (
                "GraphQL/objects.html#logconfigurationsdeleteparsingruleresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsGrokTestExtractedAttribute": (
                "GraphQL/objects.html#logconfigurationsgroktestextractedattribute",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsGrokTestResult": (
                "GraphQL/objects.html#logconfigurationsgroktestresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsLiveArchiveConfiguration": (
                "GraphQL/objects.html#logconfigurationslivearchiveconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsObfuscationAction": (
                "GraphQL/objects.html#logconfigurationsobfuscationaction",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsObfuscationExpression": (
                "GraphQL/objects.html#logconfigurationsobfuscationexpression",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsObfuscationRule": (
                "GraphQL/objects.html#logconfigurationsobfuscationrule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsParsingRule": (
                "GraphQL/objects.html#logconfigurationsparsingrule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsParsingRuleMutationError": (
                "GraphQL/objects.html#logconfigurationsparsingrulemutationerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsPipelineConfiguration": (
                "GraphQL/objects.html#logconfigurationspipelineconfiguration",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsUpdateDataPartitionRuleResponse": (
                "GraphQL/objects.html#logconfigurationsupdatedatapartitionruleresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsUpdateParsingRuleResponse": (
                "GraphQL/objects.html#logconfigurationsupdateparsingruleresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.LogConfigurationsUpsertPipelineConfigurationResponse": (
                "GraphQL/objects.html#logconfigurationsupsertpipelineconfigurationresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MachineLearningAccountStitchedFields": (
                "GraphQL/objects.html#machinelearningaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MachineLearningActorStitchedFields": (
                "GraphQL/objects.html#machinelearningactorstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MachineLearningExperiment": (
                "GraphQL/objects.html#machinelearningexperiment",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MachineLearningExperimentConnection": (
                "GraphQL/objects.html#machinelearningexperimentconnection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MachineLearningFileDataSource": (
                "GraphQL/objects.html#machinelearningfiledatasource",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MachineLearningFileDataSourceConnection": (
                "GraphQL/objects.html#machinelearningfiledatasourceconnection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MachineLearningModel": (
                "GraphQL/objects.html#machinelearningmodel",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MachineLearningModelConnection": (
                "GraphQL/objects.html#machinelearningmodelconnection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MachineLearningProject": (
                "GraphQL/objects.html#machinelearningproject",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MachineLearningProjectConnection": (
                "GraphQL/objects.html#machinelearningprojectconnection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MachineLearningRagQueryDataResponse": (
                "GraphQL/objects.html#machinelearningragquerydataresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MachineLearningStreamDataSource": (
                "GraphQL/objects.html#machinelearningstreamdatasource",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MachineLearningStreamDataSourceConnection": (
                "GraphQL/objects.html#machinelearningstreamdatasourceconnection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MachineLearningTag": (
                "GraphQL/objects.html#machinelearningtag",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MachineLearningTagConnection": (
                "GraphQL/objects.html#machinelearningtagconnection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MachineLearningTransactionResponse": (
                "GraphQL/objects.html#machinelearningtransactionresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MetricNormalizationAccountStitchedFields": (
                "GraphQL/objects.html#metricnormalizationaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MetricNormalizationRule": (
                "GraphQL/objects.html#metricnormalizationrule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MetricNormalizationRuleMetricGroupingIssue": (
                "GraphQL/objects.html#metricnormalizationrulemetricgroupingissue",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MetricNormalizationRuleMutationError": (
                "GraphQL/objects.html#metricnormalizationrulemutationerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MetricNormalizationRuleMutationResponse": (
                "GraphQL/objects.html#metricnormalizationrulemutationresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MobileAppSummaryData": (
                "GraphQL/objects.html#mobileappsummarydata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MobileApplicationEntity": (
                "GraphQL/objects.html#mobileapplicationentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MobileApplicationEntityOutline": (
                "GraphQL/objects.html#mobileapplicationentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MobilePushNotificationActorStitchedFields": (
                "GraphQL/objects.html#mobilepushnotificationactorstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MobilePushNotificationDevice": (
                "GraphQL/objects.html#mobilepushnotificationdevice",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MobilePushNotificationRemoveDeviceResult": (
                "GraphQL/objects.html#mobilepushnotificationremovedeviceresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MobilePushNotificationSendPushResult": (
                "GraphQL/objects.html#mobilepushnotificationsendpushresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantAuthorizationGrant": (
                "GraphQL/objects.html#multitenantauthorizationgrant",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantAuthorizationGrantCollection": (
                "GraphQL/objects.html#multitenantauthorizationgrantcollection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantAuthorizationGrantGroup": (
                "GraphQL/objects.html#multitenantauthorizationgrantgroup",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantAuthorizationGrantRole": (
                "GraphQL/objects.html#multitenantauthorizationgrantrole",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantAuthorizationGrantScope": (
                "GraphQL/objects.html#multitenantauthorizationgrantscope",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantAuthorizationGrantee": (
                "GraphQL/objects.html#multitenantauthorizationgrantee",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantAuthorizationPermission": (
                "GraphQL/objects.html#multitenantauthorizationpermission",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantAuthorizationPermissionCollection": (
                "GraphQL/objects.html#multitenantauthorizationpermissioncollection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantAuthorizationRole": (
                "GraphQL/objects.html#multitenantauthorizationrole",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantAuthorizationRoleCollection": (
                "GraphQL/objects.html#multitenantauthorizationrolecollection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantIdentityGroup": (
                "GraphQL/objects.html#multitenantidentitygroup",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantIdentityGroupCollection": (
                "GraphQL/objects.html#multitenantidentitygroupcollection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantIdentityGroupUser": (
                "GraphQL/objects.html#multitenantidentitygroupuser",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantIdentityGroupUsers": (
                "GraphQL/objects.html#multitenantidentitygroupusers",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantIdentityPendingUpgradeRequest": (
                "GraphQL/objects.html#multitenantidentitypendingupgraderequest",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantIdentityUser": (
                "GraphQL/objects.html#multitenantidentityuser",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantIdentityUserCollection": (
                "GraphQL/objects.html#multitenantidentityusercollection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantIdentityUserGroup": (
                "GraphQL/objects.html#multitenantidentityusergroup",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantIdentityUserGroups": (
                "GraphQL/objects.html#multitenantidentityusergroups",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.MultiTenantIdentityUserType": (
                "GraphQL/objects.html#multitenantidentityusertype",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdStorageAccountScope": (
                "GraphQL/objects.html#nerdstorageaccountscope",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdStorageActorScope": (
                "GraphQL/objects.html#nerdstorageactorscope",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdStorageCollectionMember": (
                "GraphQL/objects.html#nerdstoragecollectionmember",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdStorageDeleteResult": (
                "GraphQL/objects.html#nerdstoragedeleteresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdStorageEntityScope": (
                "GraphQL/objects.html#nerdstorageentityscope",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdStorageVaultActorStitchedFields": (
                "GraphQL/objects.html#nerdstoragevaultactorstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdStorageVaultDeleteSecretResult": (
                "GraphQL/objects.html#nerdstoragevaultdeletesecretresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdStorageVaultResultError": (
                "GraphQL/objects.html#nerdstoragevaultresulterror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdStorageVaultSecret": (
                "GraphQL/objects.html#nerdstoragevaultsecret",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdStorageVaultWriteSecretResult": (
                "GraphQL/objects.html#nerdstoragevaultwritesecretresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdpackAllowListResult": (
                "GraphQL/objects.html#nerdpackallowlistresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdpackAllowedAccount": (
                "GraphQL/objects.html#nerdpackallowedaccount",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdpackAssetInfo": (
                "GraphQL/objects.html#nerdpackassetinfo",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdpackData": (
                "GraphQL/objects.html#nerdpackdata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdpackMutationResultPerAccount": (
                "GraphQL/objects.html#nerdpackmutationresultperaccount",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdpackNerdpacks": (
                "GraphQL/objects.html#nerdpacknerdpacks",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdpackRemovedTagInfo": (
                "GraphQL/objects.html#nerdpackremovedtaginfo",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdpackRemovedTagResponse": (
                "GraphQL/objects.html#nerdpackremovedtagresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdpackSubscribeResult": (
                "GraphQL/objects.html#nerdpacksubscriberesult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdpackSubscription": (
                "GraphQL/objects.html#nerdpacksubscription",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdpackUnsubscribeResult": (
                "GraphQL/objects.html#nerdpackunsubscriberesult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdpackVersion": (
                "GraphQL/objects.html#nerdpackversion",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NerdpackVersionsResult": (
                "GraphQL/objects.html#nerdpackversionsresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogActorStitchedFields": (
                "GraphQL/objects.html#nr1catalogactorstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogAlertConditionOutline": (
                "GraphQL/objects.html#nr1catalogalertconditionoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogAlertConditionTemplate": (
                "GraphQL/objects.html#nr1catalogalertconditiontemplate",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogAlertConditionTemplateMetadata": (
                "GraphQL/objects.html#nr1catalogalertconditiontemplatemetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogAlertPolicyOutline": (
                "GraphQL/objects.html#nr1catalogalertpolicyoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogAlertPolicyTemplate": (
                "GraphQL/objects.html#nr1catalogalertpolicytemplate",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogAlertPolicyTemplateMetadata": (
                "GraphQL/objects.html#nr1catalogalertpolicytemplatemetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogAllSupportedEntityTypes": (
                "GraphQL/objects.html#nr1catalogallsupportedentitytypes",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogAuthor": (
                "GraphQL/objects.html#nr1catalogauthor",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogCategory": (
                "GraphQL/objects.html#nr1catalogcategory",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogCategoryFacet": (
                "GraphQL/objects.html#nr1catalogcategoryfacet",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogCommunityContactChannel": (
                "GraphQL/objects.html#nr1catalogcommunitycontactchannel",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogComponentFacet": (
                "GraphQL/objects.html#nr1catalogcomponentfacet",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogDashboardOutline": (
                "GraphQL/objects.html#nr1catalogdashboardoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogDashboardTemplate": (
                "GraphQL/objects.html#nr1catalogdashboardtemplate",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogDashboardTemplateMetadata": (
                "GraphQL/objects.html#nr1catalogdashboardtemplatemetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogDataSource": (
                "GraphQL/objects.html#nr1catalogdatasource",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogDataSourceInstall": (
                "GraphQL/objects.html#nr1catalogdatasourceinstall",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogDataSourceInstallDirective": (
                "GraphQL/objects.html#nr1catalogdatasourceinstalldirective",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogDataSourceMetadata": (
                "GraphQL/objects.html#nr1catalogdatasourcemetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogEmailContactChannel": (
                "GraphQL/objects.html#nr1catalogemailcontactchannel",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogIcon": (
                "GraphQL/objects.html#nr1catalogicon",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogInstallAlertPolicyTemplateResult": (
                "GraphQL/objects.html#nr1cataloginstallalertpolicytemplateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogInstallDashboardTemplateResult": (
                "GraphQL/objects.html#nr1cataloginstalldashboardtemplateresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogInstallPlan": (
                "GraphQL/objects.html#nr1cataloginstallplan",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogInstallPlanDirective": (
                "GraphQL/objects.html#nr1cataloginstallplandirective",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogInstallPlanStep": (
                "GraphQL/objects.html#nr1cataloginstallplanstep",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogInstallPlanTarget": (
                "GraphQL/objects.html#nr1cataloginstallplantarget",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogInstaller": (
                "GraphQL/objects.html#nr1cataloginstaller",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogIssuesContactChannel": (
                "GraphQL/objects.html#nr1catalogissuescontactchannel",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogLauncher": (
                "GraphQL/objects.html#nr1cataloglauncher",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogLauncherMetadata": (
                "GraphQL/objects.html#nr1cataloglaunchermetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogLinkInstallDirective": (
                "GraphQL/objects.html#nr1cataloglinkinstalldirective",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogLinkInstallPlanDirective": (
                "GraphQL/objects.html#nr1cataloglinkinstallplandirective",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogNerdlet": (
                "GraphQL/objects.html#nr1catalognerdlet",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogNerdletInstallDirective": (
                "GraphQL/objects.html#nr1catalognerdletinstalldirective",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogNerdletInstallPlanDirective": (
                "GraphQL/objects.html#nr1catalognerdletinstallplandirective",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogNerdletMetadata": (
                "GraphQL/objects.html#nr1catalognerdletmetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogNerdpack": (
                "GraphQL/objects.html#nr1catalognerdpack",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogNerdpackItem": (
                "GraphQL/objects.html#nr1catalognerdpackitem",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogNerdpackItemMetadata": (
                "GraphQL/objects.html#nr1catalognerdpackitemmetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogNerdpackMetadata": (
                "GraphQL/objects.html#nr1catalognerdpackmetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogNoSupportedEntityTypes": (
                "GraphQL/objects.html#nr1catalognosupportedentitytypes",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogPreview": (
                "GraphQL/objects.html#nr1catalogpreview",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogQuickstart": (
                "GraphQL/objects.html#nr1catalogquickstart",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogQuickstartAlert": (
                "GraphQL/objects.html#nr1catalogquickstartalert",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogQuickstartAlertCondition": (
                "GraphQL/objects.html#nr1catalogquickstartalertcondition",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogQuickstartAlertConditionMetadata": (
                "GraphQL/objects.html#nr1catalogquickstartalertconditionmetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogQuickstartAlertMetadata": (
                "GraphQL/objects.html#nr1catalogquickstartalertmetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogQuickstartComponent": (
                "GraphQL/objects.html#nr1catalogquickstartcomponent",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogQuickstartComponentMetadata": (
                "GraphQL/objects.html#nr1catalogquickstartcomponentmetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogQuickstartDashboard": (
                "GraphQL/objects.html#nr1catalogquickstartdashboard",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogQuickstartDashboardMetadata": (
                "GraphQL/objects.html#nr1catalogquickstartdashboardmetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogQuickstartDocumentation": (
                "GraphQL/objects.html#nr1catalogquickstartdocumentation",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogQuickstartDocumentationMetadata": (
                "GraphQL/objects.html#nr1catalogquickstartdocumentationmetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogQuickstartInstallPlan": (
                "GraphQL/objects.html#nr1catalogquickstartinstallplan",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogQuickstartInstallPlanMetadata": (
                "GraphQL/objects.html#nr1catalogquickstartinstallplanmetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogQuickstartMetadata": (
                "GraphQL/objects.html#nr1catalogquickstartmetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogQuickstartsListing": (
                "GraphQL/objects.html#nr1catalogquickstartslisting",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogReleaseNote": (
                "GraphQL/objects.html#nr1catalogreleasenote",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogScreenshot": (
                "GraphQL/objects.html#nr1catalogscreenshot",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogSearchFacets": (
                "GraphQL/objects.html#nr1catalogsearchfacets",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogSearchResponse": (
                "GraphQL/objects.html#nr1catalogsearchresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogSearchResult": (
                "GraphQL/objects.html#nr1catalogsearchresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogSearchResultTypeFacet": (
                "GraphQL/objects.html#nr1catalogsearchresulttypefacet",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogSpecificSupportedEntityTypes": (
                "GraphQL/objects.html#nr1catalogspecificsupportedentitytypes",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogSubmitMetadataError": (
                "GraphQL/objects.html#nr1catalogsubmitmetadataerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogSubmitMetadataResult": (
                "GraphQL/objects.html#nr1catalogsubmitmetadataresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogSupportChannels": (
                "GraphQL/objects.html#nr1catalogsupportchannels",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogSupportedEntityTypes": (
                "GraphQL/objects.html#nr1catalogsupportedentitytypes",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogTargetedInstallPlanDirective": (
                "GraphQL/objects.html#nr1catalogtargetedinstallplandirective",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogVisualization": (
                "GraphQL/objects.html#nr1catalogvisualization",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Nr1CatalogVisualizationMetadata": (
                "GraphQL/objects.html#nr1catalogvisualizationmetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NrdbMetadata": (
                "GraphQL/objects.html#nrdbmetadata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NrdbMetadataTimeWindow": (
                "GraphQL/objects.html#nrdbmetadatatimewindow",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NrdbQueryProgress": (
                "GraphQL/objects.html#nrdbqueryprogress",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NrdbResultContainer": (
                "GraphQL/objects.html#nrdbresultcontainer",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NrqlCancelQueryMutationResponse": (
                "GraphQL/objects.html#nrqlcancelquerymutationresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NrqlDropRulesAccountStitchedFields": (
                "GraphQL/objects.html#nrqldroprulesaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NrqlDropRulesCreateDropRuleFailure": (
                "GraphQL/objects.html#nrqldroprulescreatedroprulefailure",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NrqlDropRulesCreateDropRuleResult": (
                "GraphQL/objects.html#nrqldroprulescreatedropruleresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NrqlDropRulesCreateDropRuleSubmission": (
                "GraphQL/objects.html#nrqldroprulescreatedroprulesubmission",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NrqlDropRulesDeleteDropRuleFailure": (
                "GraphQL/objects.html#nrqldroprulesdeletedroprulefailure",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NrqlDropRulesDeleteDropRuleResult": (
                "GraphQL/objects.html#nrqldroprulesdeletedropruleresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NrqlDropRulesDeleteDropRuleSubmission": (
                "GraphQL/objects.html#nrqldroprulesdeletedroprulesubmission",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NrqlDropRulesDropRule": (
                "GraphQL/objects.html#nrqldroprulesdroprule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NrqlDropRulesError": (
                "GraphQL/objects.html#nrqldropruleserror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NrqlDropRulesListDropRulesResult": (
                "GraphQL/objects.html#nrqldropruleslistdroprulesresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NrqlFacetSuggestion": (
                "GraphQL/objects.html#nrqlfacetsuggestion",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.NrqlHistoricalQuery": (
                "GraphQL/objects.html#nrqlhistoricalquery",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.Organization": (
                "GraphQL/objects.html#organization",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationAccount": (
                "GraphQL/objects.html#organizationaccount",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationAccountCollection": (
                "GraphQL/objects.html#organizationaccountcollection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationAccountShare": (
                "GraphQL/objects.html#organizationaccountshare",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationAccountShareCollection": (
                "GraphQL/objects.html#organizationaccountsharecollection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationAccountShareLimitingRoleWrapper": (
                "GraphQL/objects.html#organizationaccountsharelimitingrolewrapper",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationAccountShareOrganizationWrapper": (
                "GraphQL/objects.html#organizationaccountshareorganizationwrapper",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationAccountShares": (
                "GraphQL/objects.html#organizationaccountshares",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationAuthenticationDomain": (
                "GraphQL/objects.html#organizationauthenticationdomain",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationAuthenticationDomainCollection": (
                "GraphQL/objects.html#organizationauthenticationdomaincollection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationCreateOrganizationResponse": (
                "GraphQL/objects.html#organizationcreateorganizationresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationCreateSharedAccountResponse": (
                "GraphQL/objects.html#organizationcreatesharedaccountresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationCustomerContract": (
                "GraphQL/objects.html#organizationcustomercontract",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationCustomerContractWrapper": (
                "GraphQL/objects.html#organizationcustomercontractwrapper",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationCustomerOrganization": (
                "GraphQL/objects.html#organizationcustomerorganization",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationCustomerOrganizationWrapper": (
                "GraphQL/objects.html#organizationcustomerorganizationwrapper",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationError": (
                "GraphQL/objects.html#organizationerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationInformation": (
                "GraphQL/objects.html#organizationinformation",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationMembersOrganizationMember": (
                "GraphQL/objects.html#organizationmembersorganizationmember",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationMembersOrganizationMemberCollection": (
                "GraphQL/objects.html#organizationmembersorganizationmembercollection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationNrdbResultContainer": (
                "GraphQL/objects.html#organizationnrdbresultcontainer",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationOrganizationAdministrator": (
                "GraphQL/objects.html#organizationorganizationadministrator",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationOrganizationCreateAsyncCustomerResult": (
                "GraphQL/objects.html#organizationorganizationcreateasynccustomerresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationOrganizationCreateAsyncJobResult": (
                "GraphQL/objects.html#organizationorganizationcreateasyncjobresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationOrganizationCreateAsyncOrganizationResult": (
                "GraphQL/objects.html#organizationorganizationcreateasyncorganizationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationOrganizationCreateAsyncResult": (
                "GraphQL/objects.html#organizationorganizationcreateasyncresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationOrganizationCreateAsyncResultCollection": (
                "GraphQL/objects.html#organizationorganizationcreateasyncresultcollection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationOrganizationGroup": (
                "GraphQL/objects.html#organizationorganizationgroup",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationOrganizationGroupWrapper": (
                "GraphQL/objects.html#organizationorganizationgroupwrapper",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationProvisioningUpdateSubscriptionResult": (
                "GraphQL/objects.html#organizationprovisioningupdatesubscriptionresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationProvisioningUserError": (
                "GraphQL/objects.html#organizationprovisioningusererror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationRevokeSharedAccountResponse": (
                "GraphQL/objects.html#organizationrevokesharedaccountresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationSharedAccount": (
                "GraphQL/objects.html#organizationsharedaccount",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationUpdateResponse": (
                "GraphQL/objects.html#organizationupdateresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.OrganizationUpdateSharedAccountResponse": (
                "GraphQL/objects.html#organizationupdatesharedaccountresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.PixieAccountStitchedFields": (
                "GraphQL/objects.html#pixieaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.PixieActorStitchedFields": (
                "GraphQL/objects.html#pixieactorstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.PixieLinkPixieProjectError": (
                "GraphQL/objects.html#pixielinkpixieprojecterror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.PixieLinkPixieProjectResult": (
                "GraphQL/objects.html#pixielinkpixieprojectresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.PixieLinkedPixieProject": (
                "GraphQL/objects.html#pixielinkedpixieproject",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.PixiePixieProject": (
                "GraphQL/objects.html#pixiepixieproject",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.PixieRecordPixieTosAcceptanceError": (
                "GraphQL/objects.html#pixierecordpixietosacceptanceerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.PixieRecordPixieTosAcceptanceResult": (
                "GraphQL/objects.html#pixierecordpixietosacceptanceresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.QueryHistoryActorStitchedFields": (
                "GraphQL/objects.html#queryhistoryactorstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.QueryHistoryNrqlHistoryResult": (
                "GraphQL/objects.html#queryhistorynrqlhistoryresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ReferenceEntityCreateRepositoryError": (
                "GraphQL/objects.html#referenceentitycreaterepositoryerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ReferenceEntityCreateRepositoryResult": (
                "GraphQL/objects.html#referenceentitycreaterepositoryresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.RequestContext": (
                "GraphQL/objects.html#requestcontext",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.RootMutationType": (
                "GraphQL/objects.html#rootmutationtype",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.RootQueryType": (
                "GraphQL/objects.html#rootquerytype",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecretsManagementCreateSecretResponse": (
                "GraphQL/objects.html#secretsmanagementcreatesecretresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecretsManagementDeleteSecretResponse": (
                "GraphQL/objects.html#secretsmanagementdeletesecretresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecretsManagementDeleteSecretVersionResponse": (
                "GraphQL/objects.html#secretsmanagementdeletesecretversionresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecretsManagementRecoverSecretResponse": (
                "GraphQL/objects.html#secretsmanagementrecoversecretresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecretsManagementRecoverSecretVersionResponse": (
                "GraphQL/objects.html#secretsmanagementrecoversecretversionresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecretsManagementRetrievedValue": (
                "GraphQL/objects.html#secretsmanagementretrievedvalue",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecretsManagementScopeResponse": (
                "GraphQL/objects.html#secretsmanagementscoperesponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecretsManagementSecretMetadataResponse": (
                "GraphQL/objects.html#secretsmanagementsecretmetadataresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecretsManagementSecretQueryResponse": (
                "GraphQL/objects.html#secretsmanagementsecretqueryresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecretsManagementSecretVersionResponse": (
                "GraphQL/objects.html#secretsmanagementsecretversionresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecretsManagementSecretVersionsQueryResponse": (
                "GraphQL/objects.html#secretsmanagementsecretversionsqueryresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecretsManagementSecretsCollectionItem": (
                "GraphQL/objects.html#secretsmanagementsecretscollectionitem",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecretsManagementSecretsCollectionQueryResponse": (
                "GraphQL/objects.html#secretsmanagementsecretscollectionqueryresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecretsManagementTag": (
                "GraphQL/objects.html#secretsmanagementtag",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecretsManagementUpdateSecretResponse": (
                "GraphQL/objects.html#secretsmanagementupdatesecretresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecureCredentialEntity": (
                "GraphQL/objects.html#securecredentialentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecureCredentialEntityOutline": (
                "GraphQL/objects.html#securecredentialentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SecureCredentialSummaryData": (
                "GraphQL/objects.html#securecredentialsummarydata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ServiceLevelDefinition": (
                "GraphQL/objects.html#serviceleveldefinition",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ServiceLevelEvents": (
                "GraphQL/objects.html#servicelevelevents",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ServiceLevelEventsQuery": (
                "GraphQL/objects.html#serviceleveleventsquery",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ServiceLevelEventsQuerySelect": (
                "GraphQL/objects.html#serviceleveleventsqueryselect",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ServiceLevelIndicator": (
                "GraphQL/objects.html#servicelevelindicator",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ServiceLevelIndicatorResultQueries": (
                "GraphQL/objects.html#servicelevelindicatorresultqueries",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ServiceLevelObjective": (
                "GraphQL/objects.html#servicelevelobjective",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ServiceLevelObjectiveResultQueries": (
                "GraphQL/objects.html#servicelevelobjectiveresultqueries",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ServiceLevelObjectiveRollingTimeWindow": (
                "GraphQL/objects.html#servicelevelobjectiverollingtimewindow",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ServiceLevelObjectiveTimeWindow": (
                "GraphQL/objects.html#servicelevelobjectivetimewindow",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ServiceLevelResultQuery": (
                "GraphQL/objects.html#servicelevelresultquery",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SessionsClient": (
                "GraphQL/objects.html#sessionsclient",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SessionsPrincipal": (
                "GraphQL/objects.html#sessionsprincipal",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SessionsRevokeSessionResponse": (
                "GraphQL/objects.html#sessionsrevokesessionresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SessionsSessionCollection": (
                "GraphQL/objects.html#sessionssessioncollection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SessionsSessionResponse": (
                "GraphQL/objects.html#sessionssessionresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.StackTraceApmException": (
                "GraphQL/objects.html#stacktraceapmexception",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.StackTraceApmStackTrace": (
                "GraphQL/objects.html#stacktraceapmstacktrace",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.StackTraceApmStackTraceFrame": (
                "GraphQL/objects.html#stacktraceapmstacktraceframe",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.StackTraceBrowserException": (
                "GraphQL/objects.html#stacktracebrowserexception",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.StackTraceBrowserStackTrace": (
                "GraphQL/objects.html#stacktracebrowserstacktrace",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.StackTraceBrowserStackTraceFrame": (
                "GraphQL/objects.html#stacktracebrowserstacktraceframe",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.StackTraceMobileCrash": (
                "GraphQL/objects.html#stacktracemobilecrash",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.StackTraceMobileCrashStackTrace": (
                "GraphQL/objects.html#stacktracemobilecrashstacktrace",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.StackTraceMobileCrashStackTraceFrame": (
                "GraphQL/objects.html#stacktracemobilecrashstacktraceframe",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.StackTraceMobileException": (
                "GraphQL/objects.html#stacktracemobileexception",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.StackTraceMobileExceptionStackTrace": (
                "GraphQL/objects.html#stacktracemobileexceptionstacktrace",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.StackTraceMobileExceptionStackTraceFrame": (
                "GraphQL/objects.html#stacktracemobileexceptionstacktraceframe",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.StreamingExportAccountStitchedFields": (
                "GraphQL/objects.html#streamingexportaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.StreamingExportAwsDetails": (
                "GraphQL/objects.html#streamingexportawsdetails",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.StreamingExportAzureDetails": (
                "GraphQL/objects.html#streamingexportazuredetails",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.StreamingExportGcpDetails": (
                "GraphQL/objects.html#streamingexportgcpdetails",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.StreamingExportRule": (
                "GraphQL/objects.html#streamingexportrule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SuggestedAnomalyBasedNrqlQuery": (
                "GraphQL/objects.html#suggestedanomalybasednrqlquery",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SuggestedHistoryBasedNrqlQuery": (
                "GraphQL/objects.html#suggestedhistorybasednrqlquery",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SuggestedNrqlQuery": (
                "GraphQL/objects.html#suggestednrqlquery",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SuggestedNrqlQueryAnomaly": (
                "GraphQL/objects.html#suggestednrqlqueryanomaly",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SuggestedNrqlQueryResponse": (
                "GraphQL/objects.html#suggestednrqlqueryresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticMonitorEntity": (
                "GraphQL/objects.html#syntheticmonitorentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticMonitorEntityOutline": (
                "GraphQL/objects.html#syntheticmonitorentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticMonitorSummaryData": (
                "GraphQL/objects.html#syntheticmonitorsummarydata",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsAccountStitchedFields": (
                "GraphQL/objects.html#syntheticsaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsBrokenLinksMonitor": (
                "GraphQL/objects.html#syntheticsbrokenlinksmonitor",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsBrokenLinksMonitorCreateMutationResult": (
                "GraphQL/objects.html#syntheticsbrokenlinksmonitorcreatemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsBrokenLinksMonitorUpdateMutationResult": (
                "GraphQL/objects.html#syntheticsbrokenlinksmonitorupdatemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsCertCheckMonitor": (
                "GraphQL/objects.html#syntheticscertcheckmonitor",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsCertCheckMonitorCreateMutationResult": (
                "GraphQL/objects.html#syntheticscertcheckmonitorcreatemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsCertCheckMonitorUpdateMutationResult": (
                "GraphQL/objects.html#syntheticscertcheckmonitorupdatemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsCustomHeader": (
                "GraphQL/objects.html#syntheticscustomheader",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsDailyMonitorDowntimeMutationResult": (
                "GraphQL/objects.html#syntheticsdailymonitordowntimemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsDateWindowEndOutput": (
                "GraphQL/objects.html#syntheticsdatewindowendoutput",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsDaysOfWeekOutput": (
                "GraphQL/objects.html#syntheticsdaysofweekoutput",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsDeviceEmulation": (
                "GraphQL/objects.html#syntheticsdeviceemulation",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsError": (
                "GraphQL/objects.html#syntheticserror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsExtendedTypeMonitorRuntime": (
                "GraphQL/objects.html#syntheticsextendedtypemonitorruntime",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsLocations": (
                "GraphQL/objects.html#syntheticslocations",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsMonitorCreateError": (
                "GraphQL/objects.html#syntheticsmonitorcreateerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsMonitorDeleteMutationResult": (
                "GraphQL/objects.html#syntheticsmonitordeletemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsMonitorDowntimeDeleteResult": (
                "GraphQL/objects.html#syntheticsmonitordowntimedeleteresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsMonitorDowntimeMonthlyFrequencyOutput": (
                "GraphQL/objects.html#syntheticsmonitordowntimemonthlyfrequencyoutput",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsMonitorDowntimeMutationResult": (
                "GraphQL/objects.html#syntheticsmonitordowntimemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsMonitorScriptQueryResponse": (
                "GraphQL/objects.html#syntheticsmonitorscriptqueryresponse",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsMonitorUpdateError": (
                "GraphQL/objects.html#syntheticsmonitorupdateerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsMonthlyMonitorDowntimeMutationResult": (
                "GraphQL/objects.html#syntheticsmonthlymonitordowntimemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsOnceMonitorDowntimeMutationResult": (
                "GraphQL/objects.html#syntheticsoncemonitordowntimemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsPrivateLocationDeleteResult": (
                "GraphQL/objects.html#syntheticsprivatelocationdeleteresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsPrivateLocationMutationError": (
                "GraphQL/objects.html#syntheticsprivatelocationmutationerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsPrivateLocationMutationResult": (
                "GraphQL/objects.html#syntheticsprivatelocationmutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsPrivateLocationPurgeQueueResult": (
                "GraphQL/objects.html#syntheticsprivatelocationpurgequeueresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsRuntime": (
                "GraphQL/objects.html#syntheticsruntime",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsScriptApiMonitor": (
                "GraphQL/objects.html#syntheticsscriptapimonitor",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsScriptApiMonitorCreateMutationResult": (
                "GraphQL/objects.html#syntheticsscriptapimonitorcreatemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsScriptApiMonitorUpdateMutationResult": (
                "GraphQL/objects.html#syntheticsscriptapimonitorupdatemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsScriptBrowserMonitor": (
                "GraphQL/objects.html#syntheticsscriptbrowsermonitor",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsScriptBrowserMonitorAdvancedOptions": (
                "GraphQL/objects.html#syntheticsscriptbrowsermonitoradvancedoptions",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsScriptBrowserMonitorCreateMutationResult": (
                "GraphQL/objects.html#syntheticsscriptbrowsermonitorcreatemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsScriptBrowserMonitorUpdateMutationResult": (
                "GraphQL/objects.html#syntheticsscriptbrowsermonitorupdatemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsSecureCredentialMutationResult": (
                "GraphQL/objects.html#syntheticssecurecredentialmutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsSimpleBrowserMonitor": (
                "GraphQL/objects.html#syntheticssimplebrowsermonitor",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsSimpleBrowserMonitorAdvancedOptions": (
                "GraphQL/objects.html#syntheticssimplebrowsermonitoradvancedoptions",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsSimpleBrowserMonitorCreateMutationResult": (
                "GraphQL/objects.html#syntheticssimplebrowsermonitorcreatemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsSimpleBrowserMonitorUpdateMutationResult": (
                "GraphQL/objects.html#syntheticssimplebrowsermonitorupdatemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsSimpleMonitor": (
                "GraphQL/objects.html#syntheticssimplemonitor",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsSimpleMonitorAdvancedOptions": (
                "GraphQL/objects.html#syntheticssimplemonitoradvancedoptions",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsSimpleMonitorUpdateMutationResult": (
                "GraphQL/objects.html#syntheticssimplemonitorupdatemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsStep": (
                "GraphQL/objects.html#syntheticsstep",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsStepMonitor": (
                "GraphQL/objects.html#syntheticsstepmonitor",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsStepMonitorAdvancedOptions": (
                "GraphQL/objects.html#syntheticsstepmonitoradvancedoptions",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsStepMonitorCreateMutationResult": (
                "GraphQL/objects.html#syntheticsstepmonitorcreatemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsStepMonitorUpdateMutationResult": (
                "GraphQL/objects.html#syntheticsstepmonitorupdatemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsSyntheticMonitorAsset": (
                "GraphQL/objects.html#syntheticssyntheticmonitorasset",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SyntheticsWeeklyMonitorDowntimeMutationResult": (
                "GraphQL/objects.html#syntheticsweeklymonitordowntimemutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SystemIdentityCreatedSystemIdentity": (
                "GraphQL/objects.html#systemidentitycreatedsystemidentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SystemIdentityGroupCollection": (
                "GraphQL/objects.html#systemidentitygroupcollection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SystemIdentityGroupList": (
                "GraphQL/objects.html#systemidentitygrouplist",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SystemIdentityGroupResponseType": (
                "GraphQL/objects.html#systemidentitygroupresponsetype",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SystemIdentityGroupType": (
                "GraphQL/objects.html#systemidentitygrouptype",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SystemIdentityIdentityCollection": (
                "GraphQL/objects.html#systemidentityidentitycollection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SystemIdentityNestedGroupCollection": (
                "GraphQL/objects.html#systemidentitynestedgroupcollection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SystemIdentityNestedIdentityCollection": (
                "GraphQL/objects.html#systemidentitynestedidentitycollection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SystemIdentityResponseType": (
                "GraphQL/objects.html#systemidentityresponsetype",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.SystemIdentityType": (
                "GraphQL/objects.html#systemidentitytype",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.TaggingMutationError": (
                "GraphQL/objects.html#taggingmutationerror",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.TaggingMutationResult": (
                "GraphQL/objects.html#taggingmutationresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.TeamEntity": (
                "GraphQL/objects.html#teamentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.TeamEntityOutline": (
                "GraphQL/objects.html#teamentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ThirdPartyServiceEntity": (
                "GraphQL/objects.html#thirdpartyserviceentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.ThirdPartyServiceEntityOutline": (
                "GraphQL/objects.html#thirdpartyserviceentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.TimeWindow": (
                "GraphQL/objects.html#timewindow",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.TimeZoneInfo": (
                "GraphQL/objects.html#timezoneinfo",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UnavailableEntity": (
                "GraphQL/objects.html#unavailableentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UnavailableEntityOutline": (
                "GraphQL/objects.html#unavailableentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.User": (
                "GraphQL/objects.html#user",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementAddUsersToGroupsPayload": (
                "GraphQL/objects.html#usermanagementadduserstogroupspayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementAuthenticationDomain": (
                "GraphQL/objects.html#usermanagementauthenticationdomain",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementAuthenticationDomains": (
                "GraphQL/objects.html#usermanagementauthenticationdomains",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementCreateGroupPayload": (
                "GraphQL/objects.html#usermanagementcreategrouppayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementCreateUserPayload": (
                "GraphQL/objects.html#usermanagementcreateuserpayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementCreatedUser": (
                "GraphQL/objects.html#usermanagementcreateduser",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementDeleteGroupPayload": (
                "GraphQL/objects.html#usermanagementdeletegrouppayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementDeleteUserPayload": (
                "GraphQL/objects.html#usermanagementdeleteuserpayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementDeletedUser": (
                "GraphQL/objects.html#usermanagementdeleteduser",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementGroup": (
                "GraphQL/objects.html#usermanagementgroup",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementGroupUser": (
                "GraphQL/objects.html#usermanagementgroupuser",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementGroupUsers": (
                "GraphQL/objects.html#usermanagementgroupusers",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementGroups": (
                "GraphQL/objects.html#usermanagementgroups",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementOrganizationStitchedFields": (
                "GraphQL/objects.html#usermanagementorganizationstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementOrganizationUserType": (
                "GraphQL/objects.html#usermanagementorganizationusertype",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementPendingUpgradeRequest": (
                "GraphQL/objects.html#usermanagementpendingupgraderequest",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementRemoveUsersFromGroupsPayload": (
                "GraphQL/objects.html#usermanagementremoveusersfromgroupspayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementUpdateGroupPayload": (
                "GraphQL/objects.html#usermanagementupdategrouppayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementUpdateUserPayload": (
                "GraphQL/objects.html#usermanagementupdateuserpayload",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementUser": (
                "GraphQL/objects.html#usermanagementuser",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementUserGroup": (
                "GraphQL/objects.html#usermanagementusergroup",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementUserGroups": (
                "GraphQL/objects.html#usermanagementusergroups",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementUserType": (
                "GraphQL/objects.html#usermanagementusertype",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserManagementUsers": (
                "GraphQL/objects.html#usermanagementusers",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UserReference": (
                "GraphQL/objects.html#userreference",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UsersActorStitchedFields": (
                "GraphQL/objects.html#usersactorstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UsersUserSearch": (
                "GraphQL/objects.html#usersusersearch",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.UsersUserSearchResult": (
                "GraphQL/objects.html#usersusersearchresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WhatsNewAnnouncementContent": (
                "GraphQL/objects.html#whatsnewannouncementcontent",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WhatsNewContent": (
                "GraphQL/objects.html#whatsnewcontent",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WhatsNewDocsStitchedFields": (
                "GraphQL/objects.html#whatsnewdocsstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WhatsNewEolAnnouncementContent": (
                "GraphQL/objects.html#whatsneweolannouncementcontent",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WhatsNewSearchResult": (
                "GraphQL/objects.html#whatsnewsearchresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadAccountStitchedFields": (
                "GraphQL/objects.html#workloadaccountstitchedfields",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadAutomaticStatus": (
                "GraphQL/objects.html#workloadautomaticstatus",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadCollection": (
                "GraphQL/objects.html#workloadcollection",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadCollectionWithoutStatus": (
                "GraphQL/objects.html#workloadcollectionwithoutstatus",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadEntity": (
                "GraphQL/objects.html#workloadentity",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadEntityOutline": (
                "GraphQL/objects.html#workloadentityoutline",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadEntityRef": (
                "GraphQL/objects.html#workloadentityref",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadEntitySearchQuery": (
                "GraphQL/objects.html#workloadentitysearchquery",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadRegularRule": (
                "GraphQL/objects.html#workloadregularrule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadRemainingEntitiesRule": (
                "GraphQL/objects.html#workloadremainingentitiesrule",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadRemainingEntitiesRuleRollup": (
                "GraphQL/objects.html#workloadremainingentitiesrulerollup",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadRollup": (
                "GraphQL/objects.html#workloadrollup",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadRollupRuleDetails": (
                "GraphQL/objects.html#workloadrollupruledetails",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadRollupRuleStatusResult": (
                "GraphQL/objects.html#workloadrolluprulestatusresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadScopeAccounts": (
                "GraphQL/objects.html#workloadscopeaccounts",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadStaticStatus": (
                "GraphQL/objects.html#workloadstaticstatus",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadStaticStatusResult": (
                "GraphQL/objects.html#workloadstaticstatusresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadStatus": (
                "GraphQL/objects.html#workloadstatus",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadStatusConfig": (
                "GraphQL/objects.html#workloadstatusconfig",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadStatusResult": (
                "GraphQL/objects.html#workloadstatusresult",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadValidAccounts": (
                "GraphQL/objects.html#workloadvalidaccounts",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
            "newrelic_sb_sdk.graphql.objects.WorkloadWorkloadStatus": (
                "GraphQL/objects.html#workloadworkloadstatus",
                "newrelic_sb_sdk/graphql/objects.py",
            ),
        },
        "newrelic_sb_sdk.graphql.scalars": {
            "newrelic_sb_sdk.graphql.scalars.AgentApplicationSettingsCustomJsConfiguration": (
                "GraphQL/scalars.html#agentapplicationsettingscustomjsconfiguration",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.AgentApplicationSettingsErrorCollectorHttpStatus": (
                "GraphQL/scalars.html#agentapplicationsettingserrorcollectorhttpstatus",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.AgentApplicationSettingsRawJsConfiguration": (
                "GraphQL/scalars.html#agentapplicationsettingsrawjsconfiguration",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.AiDecisionsRuleExpression": (
                "GraphQL/scalars.html#aidecisionsruleexpression",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.AttributeMap": (
                "GraphQL/scalars.html#attributemap",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.ChangeTrackingRawCustomAttributesMap": (
                "GraphQL/scalars.html#changetrackingrawcustomattributesmap",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.CollaborationRawContextMetadata": (
                "GraphQL/scalars.html#collaborationrawcontextmetadata",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.DashboardWidgetRawConfiguration": (
                "GraphQL/scalars.html#dashboardwidgetrawconfiguration",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.DistributedTracingSpanAttributes": (
                "GraphQL/scalars.html#distributedtracingspanattributes",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.Duration": (
                "GraphQL/scalars.html#duration",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.EntityAlertViolationInt": (
                "GraphQL/scalars.html#entityalertviolationint",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.EntityGuid": (
                "GraphQL/scalars.html#entityguid",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.EntitySearchQuery": (
                "GraphQL/scalars.html#entitysearchquery",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.EpochMilliseconds": (
                "GraphQL/scalars.html#epochmilliseconds",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.EpochSeconds": (
                "GraphQL/scalars.html#epochseconds",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.ErrorsInboxRawEvent": (
                "GraphQL/scalars.html#errorsinboxrawevent",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.InstallationRawMetadata": (
                "GraphQL/scalars.html#installationrawmetadata",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.LogConfigurationsLogDataPartitionName": (
                "GraphQL/scalars.html#logconfigurationslogdatapartitionname",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.Milliseconds": (
                "GraphQL/scalars.html#milliseconds",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.Minutes": (
                "GraphQL/scalars.html#minutes",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.NaiveDateTime": (
                "GraphQL/scalars.html#naivedatetime",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.NerdStorageDocument": (
                "GraphQL/scalars.html#nerdstoragedocument",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.NerdpackTagName": (
                "GraphQL/scalars.html#nerdpacktagname",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.Nr1CatalogRawNerdletState": (
                "GraphQL/scalars.html#nr1catalograwnerdletstate",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.NrdbRawResults": (
                "GraphQL/scalars.html#nrdbrawresults",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.NrdbResult": (
                "GraphQL/scalars.html#nrdbresult",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.Nrql": (
                "GraphQL/scalars.html#nrql",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.Seconds": (
                "GraphQL/scalars.html#seconds",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.SecureValue": (
                "GraphQL/scalars.html#securevalue",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
            "newrelic_sb_sdk.graphql.scalars.SemVer": (
                "GraphQL/scalars.html#semver",
                "newrelic_sb_sdk/graphql/scalars.py",
            ),
        },
        "newrelic_sb_sdk.shortcuts.accounts": {
            "newrelic_sb_sdk.shortcuts.accounts.get_account": (
                "Shortcuts/accounts.html#get_account",
                "newrelic_sb_sdk/shortcuts/accounts.py",
            ),
            "newrelic_sb_sdk.shortcuts.accounts.get_all_accounts": (
                "Shortcuts/accounts.html#get_all_accounts",
                "newrelic_sb_sdk/shortcuts/accounts.py",
            ),
        },
        "newrelic_sb_sdk.shortcuts.credentials": {
            "newrelic_sb_sdk.shortcuts.credentials.validate": (
                "Shortcuts/credentials.html#validate",
                "newrelic_sb_sdk/shortcuts/credentials.py",
            )
        },
        "newrelic_sb_sdk.shortcuts.dashboards": {
            "newrelic_sb_sdk.shortcuts.dashboards._patch_datetime": (
                "Shortcuts/dashboards.html#_patch_datetime",
                "newrelic_sb_sdk/shortcuts/dashboards.py",
            ),
            "newrelic_sb_sdk.shortcuts.dashboards.get_all_dashboards": (
                "Shortcuts/dashboards.html#get_all_dashboards",
                "newrelic_sb_sdk/shortcuts/dashboards.py",
            ),
            "newrelic_sb_sdk.shortcuts.dashboards.get_dashboard": (
                "Shortcuts/dashboards.html#get_dashboard",
                "newrelic_sb_sdk/shortcuts/dashboards.py",
            ),
        },
        "newrelic_sb_sdk.shortcuts.historical_data_export": {
            "newrelic_sb_sdk.shortcuts.historical_data_export._perform_historical_data_export": (
                "Shortcuts/historical "
                "data "
                "export.html#_perform_historical_data_export",
                "newrelic_sb_sdk/shortcuts/historical_data_export.py",
            ),
            "newrelic_sb_sdk.shortcuts.historical_data_export.can_execute_historical_data_export": (
                "Shortcuts/historical "
                "data "
                "export.html#can_execute_historical_data_export",
                "newrelic_sb_sdk/shortcuts/historical_data_export.py",
            ),
            "newrelic_sb_sdk.shortcuts.historical_data_export.cancel_historical_data_export": (
                "Shortcuts/historical "
                "data "
                "export.html#cancel_historical_data_export",
                "newrelic_sb_sdk/shortcuts/historical_data_export.py",
            ),
            "newrelic_sb_sdk.shortcuts.historical_data_export.create_historical_data_export": (
                "Shortcuts/historical "
                "data "
                "export.html#create_historical_data_export",
                "newrelic_sb_sdk/shortcuts/historical_data_export.py",
            ),
            "newrelic_sb_sdk.shortcuts.historical_data_export.get_all_historical_data_exports": (
                "Shortcuts/historical "
                "data "
                "export.html#get_all_historical_data_exports",
                "newrelic_sb_sdk/shortcuts/historical_data_export.py",
            ),
            "newrelic_sb_sdk.shortcuts.historical_data_export.get_historical_data_export": (
                "Shortcuts/historical "
                "data "
                "export.html#get_historical_data_export",
                "newrelic_sb_sdk/shortcuts/historical_data_export.py",
            ),
            "newrelic_sb_sdk.shortcuts.historical_data_export.perform_historical_data_export": (
                "Shortcuts/historical "
                "data "
                "export.html#perform_historical_data_export",
                "newrelic_sb_sdk/shortcuts/historical_data_export.py",
            ),
        },
        "newrelic_sb_sdk.shortcuts.nrql": {
            "newrelic_sb_sdk.shortcuts.nrql._check_nrql_query_progress": (
                "Shortcuts/nrql.html#_check_nrql_query_progress",
                "newrelic_sb_sdk/shortcuts/nrql.py",
            ),
            "newrelic_sb_sdk.shortcuts.nrql._perform_nrql_query": (
                "Shortcuts/nrql.html#_perform_nrql_query",
                "newrelic_sb_sdk/shortcuts/nrql.py",
            ),
            "newrelic_sb_sdk.shortcuts.nrql.nrql": (
                "Shortcuts/nrql.html#nrql",
                "newrelic_sb_sdk/shortcuts/nrql.py",
            ),
            "newrelic_sb_sdk.shortcuts.nrql.perform_nrql_query": (
                "Shortcuts/nrql.html#perform_nrql_query",
                "newrelic_sb_sdk/shortcuts/nrql.py",
            ),
        },
        "newrelic_sb_sdk.utils.download": {
            "newrelic_sb_sdk.utils.download.Downloader": (
                "Utils/download.html#downloader",
                "newrelic_sb_sdk/utils/download.py",
            ),
            "newrelic_sb_sdk.utils.download.Downloader.__init__": (
                "Utils/download.html#downloader.__init__",
                "newrelic_sb_sdk/utils/download.py",
            ),
            "newrelic_sb_sdk.utils.download.Downloader.run": (
                "Utils/download.html#downloader.run",
                "newrelic_sb_sdk/utils/download.py",
            ),
            "newrelic_sb_sdk.utils.download.download_file": (
                "Utils/download.html#download_file",
                "newrelic_sb_sdk/utils/download.py",
            ),
            "newrelic_sb_sdk.utils.download.download_files": (
                "Utils/download.html#download_files",
                "newrelic_sb_sdk/utils/download.py",
            ),
        },
        "newrelic_sb_sdk.utils.exceptions": {
            "newrelic_sb_sdk.utils.exceptions.NewRelicError": (
                "Utils/exceptions.html#newrelicerror",
                "newrelic_sb_sdk/utils/exceptions.py",
            )
        },
        "newrelic_sb_sdk.utils.query": {
            "newrelic_sb_sdk.utils.query.build_query": (
                "Utils/query.html#build_query",
                "newrelic_sb_sdk/utils/query.py",
            )
        },
        "newrelic_sb_sdk.utils.response": {
            "newrelic_sb_sdk.utils.response.get_response_data": (
                "Utils/response.html#get_response_data",
                "newrelic_sb_sdk/utils/response.py",
            ),
            "newrelic_sb_sdk.utils.response.print_response": (
                "Utils/response.html#print_response",
                "newrelic_sb_sdk/utils/response.py",
            ),
            "newrelic_sb_sdk.utils.response.raise_response_errors": (
                "Utils/response.html#raise_response_errors",
                "newrelic_sb_sdk/utils/response.py",
            ),
        },
        "newrelic_sb_sdk.utils.text": {
            "newrelic_sb_sdk.utils.text.camel2snake": (
                "Utils/text.html#camel2snake",
                "newrelic_sb_sdk/utils/text.py",
            ),
            "newrelic_sb_sdk.utils.text.camelize_keys": (
                "Utils/text.html#camelize_keys",
                "newrelic_sb_sdk/utils/text.py",
            ),
            "newrelic_sb_sdk.utils.text.snake2camel": (
                "Utils/text.html#snake2camel",
                "newrelic_sb_sdk/utils/text.py",
            ),
            "newrelic_sb_sdk.utils.text.snakeize_keys": (
                "Utils/text.html#snakeize_keys",
                "newrelic_sb_sdk/utils/text.py",
            ),
        },
        "newrelic_sb_sdk.version": {},
    },
}
