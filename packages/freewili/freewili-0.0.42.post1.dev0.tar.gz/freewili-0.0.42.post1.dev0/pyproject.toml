[project]
authors = [
    {name = "David Rebbe", email = "drebbe@intrepidcs.com"},
]
license = {text = "MIT"}
requires-python = ">=3.10"
dependencies = [
    "pyserial == 3.5",
    "pillow == 11.1.0",
    "typing-extensions == 4.12.2",
    "result == 0.17.0",
    "numpy>=2.2.4",
    "pyfwfinder==0.4.2",
]

name = "freewili"
description = ""
readme = "README.md"
keywords = [
    "freewili",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://freewili.com/"
Repository = "https://github.com/freewili/freewili-python"
Documentation = "https://freewili.github.io/freewili-python/"

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.hatch.build.hooks.version]
path = "freewili/_version.py"
template = '''
version = "{version}"
'''

[tool.uv-dynamic-versioning]
metadata = false # I couldn't get pypi to upload with this enabled.
strict = true
style = "pep440"
dirty = true

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple"
publish-url = "https://pypi.org/legacy"

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple"
publish-url = "https://test.pypi.org/legacy"

[tool.uv.sources]
result = { git = "https://github.com/montasaurus/result" }
# pyfwfinder = { path = "../freewili-finder" }

[project.scripts]
fwi-serial = "freewili.cli_serial:main"
fwi-convert = "freewili.cli_convert:main"

[dependency-groups]
dev = [
    "mypy == 1.15.0",
    "ruff == 0.12.0",
    "pre-commit == 4.1.0",
    "pytest>=8.3.5",
    "check-wheel-contents>=0.6.1",
    "twine>=6.1.0",
    "sphinx>=8.1.3",
    "sphinx-autobuild>=2024.10.3",
    "sphinx-rtd-theme>=3.0.2",
    "furo>=2024.8.6",
    "sphinxcontrib-programoutput>=0.18",
    "pytest-cov>=6.2.1",
]

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_untyped_calls = true

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "I",  # isort
    "N",  # PEP8 naming convetions
    "D"  # pydocstyle
]

ignore = [
    "C901", # too complex
    "D401", # imperative mood
    "D105", # missing docstring in magic method
    "D107", # missing docstring in __init__
]

[tool.ruff.lint.pydocstyle]
convention = "google"
