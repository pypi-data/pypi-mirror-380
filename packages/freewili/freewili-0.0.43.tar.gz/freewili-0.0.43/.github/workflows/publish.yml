name: "Publish to test PyPI"

on:
  push:

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock

      - name: Set up Python
        run: |
          uv python install 3.10
          uv venv -p 3.10
          source .venv/bin/activate
          uv sync
          uv sync --dev

      - name: Build
        run: uv build --verbose

      - name: Tests
        run: |
          source .venv/bin/activate
          uv sync --dev
          uv run pytest --verbose

      - name: Documentation
        run: |
          source .venv/bin/activate
          uv sync --dev
          sphinx-build doc/source/ doc/build
      
      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: doc/build/
      
      - uses: actions/upload-artifact@v4
        with:
          name: freewili-dist-${{ github.sha }}
          path: |
            dist/
            doc/build/
  
  deploy_pypi:
    name: "Deploy PyPI"
    runs-on: ubuntu-latest
    needs: build
    if: |
      github.ref_name	 == 'master' ||
      startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock

      - name: Set up Python
        run: |
          uv python install 3.10
          uv venv -p 3.10
          source .venv/bin/activate
          uv sync
          uv sync --dev

      - uses: actions/download-artifact@v4
        with:
          name: freewili-dist-${{ github.sha }}
          path: freewili-dist/

      - name: "Publish to Test PyPI"
        run: |
          source .venv/bin/activate
          uv sync --dev
          check-wheel-contents freewili-dist/dist/*.whl
          twine upload -r testpypi -u __token__ -p ${{ secrets.PYPI_TEST_TOKEN }} --verbose freewili-dist/dist/*

      - name: "Publish to PyPI"
        if: |
          github.ref_name	 == 'master' ||
          startsWith(github.event.ref, 'refs/tags/v')
        run: |
          source .venv/bin/activate
          uv sync --dev
          check-wheel-contents freewili-dist/dist/*.whl
          twine upload -u __token__ -p ${{ secrets.PYPI_TOKEN }} --verbose freewili-dist/dist/*
      

  deploy_documentation:
    name: "Deploy Documentation"
    if: |
      github.ref_name	 == 'master' ||
      startsWith(github.event.ref, 'refs/tags/v')
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: "Deploy to GitHub Pages"
        id: deployment
        uses: actions/deploy-pages@v4
