Metadata-Version: 2.1
Name: deepmd-kit
Version: 3.1.1
Summary: A deep learning package for many-body potential energy representation and molecular dynamics
Keywords: deepmd
Author: DeepModeling
Author-Email: Han Wang <wang_han@iapcm.ac.cn>
License:                    GNU LESSER GENERAL PUBLIC LICENSE
                               Version 3, 29 June 2007
        
         Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
         Everyone is permitted to copy and distribute verbatim copies
         of this license document, but changing it is not allowed.
        
        
          This version of the GNU Lesser General Public License incorporates
        the terms and conditions of version 3 of the GNU General Public
        License, supplemented by the additional permissions listed below.
        
          0. Additional Definitions.
        
          As used herein, "this License" refers to version 3 of the GNU Lesser
        General Public License, and the "GNU GPL" refers to version 3 of the GNU
        General Public License.
        
          "The Library" refers to a covered work governed by this License,
        other than an Application or a Combined Work as defined below.
        
          An "Application" is any work that makes use of an interface provided
        by the Library, but which is not otherwise based on the Library.
        Defining a subclass of a class defined by the Library is deemed a mode
        of using an interface provided by the Library.
        
          A "Combined Work" is a work produced by combining or linking an
        Application with the Library.  The particular version of the Library
        with which the Combined Work was made is also called the "Linked
        Version".
        
          The "Minimal Corresponding Source" for a Combined Work means the
        Corresponding Source for the Combined Work, excluding any source code
        for portions of the Combined Work that, considered in isolation, are
        based on the Application, and not on the Linked Version.
        
          The "Corresponding Application Code" for a Combined Work means the
        object code and/or source code for the Application, including any data
        and utility programs needed for reproducing the Combined Work from the
        Application, but excluding the System Libraries of the Combined Work.
        
          1. Exception to Section 3 of the GNU GPL.
        
          You may convey a covered work under sections 3 and 4 of this License
        without being bound by section 3 of the GNU GPL.
        
          2. Conveying Modified Versions.
        
          If you modify a copy of the Library, and, in your modifications, a
        facility refers to a function or data to be supplied by an Application
        that uses the facility (other than as an argument passed when the
        facility is invoked), then you may convey a copy of the modified
        version:
        
           a) under this License, provided that you make a good faith effort to
           ensure that, in the event an Application does not supply the
           function or data, the facility still operates, and performs
           whatever part of its purpose remains meaningful, or
        
           b) under the GNU GPL, with none of the additional permissions of
           this License applicable to that copy.
        
          3. Object Code Incorporating Material from Library Header Files.
        
          The object code form of an Application may incorporate material from
        a header file that is part of the Library.  You may convey such object
        code under terms of your choice, provided that, if the incorporated
        material is not limited to numerical parameters, data structure
        layouts and accessors, or small macros, inline functions and templates
        (ten or fewer lines in length), you do both of the following:
        
           a) Give prominent notice with each copy of the object code that the
           Library is used in it and that the Library and its use are
           covered by this License.
        
           b) Accompany the object code with a copy of the GNU GPL and this license
           document.
        
          4. Combined Works.
        
          You may convey a Combined Work under terms of your choice that,
        taken together, effectively do not restrict modification of the
        portions of the Library contained in the Combined Work and reverse
        engineering for debugging such modifications, if you also do each of
        the following:
        
           a) Give prominent notice with each copy of the Combined Work that
           the Library is used in it and that the Library and its use are
           covered by this License.
        
           b) Accompany the Combined Work with a copy of the GNU GPL and this license
           document.
        
           c) For a Combined Work that displays copyright notices during
           execution, include the copyright notice for the Library among
           these notices, as well as a reference directing the user to the
           copies of the GNU GPL and this license document.
        
           d) Do one of the following:
        
               0) Convey the Minimal Corresponding Source under the terms of this
               License, and the Corresponding Application Code in a form
               suitable for, and under terms that permit, the user to
               recombine or relink the Application with a modified version of
               the Linked Version to produce a modified Combined Work, in the
               manner specified by section 6 of the GNU GPL for conveying
               Corresponding Source.
        
               1) Use a suitable shared library mechanism for linking with the
               Library.  A suitable mechanism is one that (a) uses at run time
               a copy of the Library already present on the user's computer
               system, and (b) will operate properly with a modified version
               of the Library that is interface-compatible with the Linked
               Version.
        
           e) Provide Installation Information, but only if you would otherwise
           be required to provide such information under section 6 of the
           GNU GPL, and only to the extent that such information is
           necessary to install and execute a modified version of the
           Combined Work produced by recombining or relinking the
           Application with a modified version of the Linked Version. (If
           you use option 4d0, the Installation Information must accompany
           the Minimal Corresponding Source and Corresponding Application
           Code. If you use option 4d1, you must provide the Installation
           Information in the manner specified by section 6 of the GNU GPL
           for conveying Corresponding Source.)
        
          5. Combined Libraries.
        
          You may place library facilities that are a work based on the
        Library side by side in a single library together with other library
        facilities that are not Applications and are not covered by this
        License, and convey such a combined library under terms of your
        choice, if you do both of the following:
        
           a) Accompany the combined library with a copy of the same work based
           on the Library, uncombined with any other library facilities,
           conveyed under the terms of this License.
        
           b) Give prominent notice with the combined library that part of it
           is a work based on the Library, and explaining where to find the
           accompanying uncombined form of the same work.
        
          6. Revised Versions of the GNU Lesser General Public License.
        
          The Free Software Foundation may publish revised and/or new versions
        of the GNU Lesser General Public License from time to time. Such new
        versions will be similar in spirit to the present version, but may
        differ in detail to address new problems or concerns.
        
          Each version is given a distinguishing version number. If the
        Library as you received it specifies that a certain numbered version
        of the GNU Lesser General Public License "or any later version"
        applies to it, you have the option of following the terms and
        conditions either of that published version or of any later version
        published by the Free Software Foundation. If the Library as you
        received it does not specify a version number of the GNU Lesser
        General Public License, you may choose any version of the GNU Lesser
        General Public License ever published by the Free Software Foundation.
        
          If the Library as you received it specifies that a proxy can decide
        whether future versions of the GNU Lesser General Public License shall
        apply, that proxy's public statement of acceptance of any version is
        permanent authorization for you to choose that version for the
        Library.
Classifier: Natural Language :: English
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: Microsoft :: Windows
Classifier: Development Status :: 5 - Production/Stable
Classifier: Programming Language :: C
Classifier: Programming Language :: C++
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Environment :: GPU :: NVIDIA CUDA :: 12 :: 12.2
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Scientific/Engineering :: Chemistry
Classifier: Environment :: Console
Project-URL: Homepage, https://github.com/deepmodeling/deepmd-kit
Project-URL: Documentation, https://docs.deepmodeling.com/projects/deepmd
Project-URL: Repository, https://github.com/deepmodeling/deepmd-kit
Requires-Python: >=3.9
Requires-Dist: numpy>=1.21
Requires-Dist: scipy
Requires-Dist: pyyaml
Requires-Dist: dargs>=0.4.7
Requires-Dist: typing_extensions; python_version < "3.8"
Requires-Dist: importlib_metadata>=1.4; python_version < "3.8"
Requires-Dist: h5py
Requires-Dist: h5py!=3.11.0,>=3.6.0; platform_system == "Linux" and platform_machine == "aarch64"
Requires-Dist: wcmatch
Requires-Dist: packaging
Requires-Dist: ml_dtypes
Requires-Dist: mendeleev
Requires-Dist: array-api-compat
Requires-Dist: dpdata>=0.2.7; extra == "test"
Requires-Dist: ase>=3.23.0; extra == "test"
Requires-Dist: pytest; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Requires-Dist: pytest-sugar; extra == "test"
Requires-Dist: pytest-split; extra == "test"
Requires-Dist: dpgui; extra == "test"
Requires-Dist: array-api-strict!=2.1.1,>=2; python_version >= "3.9" and extra == "test"
Requires-Dist: sphinx>=3.1.1; extra == "docs"
Requires-Dist: sphinx-book-theme; extra == "docs"
Requires-Dist: myst-nb>=1.0.0; extra == "docs"
Requires-Dist: myst-parser>=0.19.2; extra == "docs"
Requires-Dist: sphinx-design; extra == "docs"
Requires-Dist: breathe; extra == "docs"
Requires-Dist: exhale>=0.3.7; extra == "docs"
Requires-Dist: numpydoc; extra == "docs"
Requires-Dist: ase; extra == "docs"
Requires-Dist: deepmodeling-sphinx>=0.3.0; extra == "docs"
Requires-Dist: dargs>=0.3.4; extra == "docs"
Requires-Dist: sphinx-argparse<0.5.0; extra == "docs"
Requires-Dist: pygments-lammps; extra == "docs"
Requires-Dist: sphinxcontrib-bibtex; extra == "docs"
Requires-Dist: sphinx-autoapi>=3.0.0; extra == "docs"
Requires-Dist: sphinxcontrib-programoutput; extra == "docs"
Requires-Dist: sphinxcontrib-moderncmakedomain; extra == "docs"
Requires-Dist: sphinx-remove-toctrees; extra == "docs"
Requires-Dist: lammps[mpi]~=2025.7.22.1.0; extra == "lmp"
Requires-Dist: ipi; extra == "ipi"
Requires-Dist: dpgui; extra == "gui"
Requires-Dist: nvidia-cuda-runtime-cu11; extra == "cu11"
Requires-Dist: nvidia-cublas-cu11; extra == "cu11"
Requires-Dist: nvidia-cufft-cu11; extra == "cu11"
Requires-Dist: nvidia-curand-cu11; extra == "cu11"
Requires-Dist: nvidia-cusolver-cu11; extra == "cu11"
Requires-Dist: nvidia-cusparse-cu11; extra == "cu11"
Requires-Dist: nvidia-cudnn-cu11<9; extra == "cu11"
Requires-Dist: nvidia-cuda-nvcc-cu11; extra == "cu11"
Requires-Dist: nvidia-cuda-runtime-cu12; extra == "cu12"
Requires-Dist: nvidia-cublas-cu12; extra == "cu12"
Requires-Dist: nvidia-cufft-cu12; extra == "cu12"
Requires-Dist: nvidia-curand-cu12; extra == "cu12"
Requires-Dist: nvidia-cusolver-cu12; extra == "cu12"
Requires-Dist: nvidia-cusparse-cu12; extra == "cu12"
Requires-Dist: nvidia-cudnn-cu12; extra == "cu12"
Requires-Dist: nvidia-cuda-nvcc-cu12; extra == "cu12"
Requires-Dist: jax>=0.4.33; python_version >= "3.10" and extra == "jax"
Requires-Dist: jax>=0.4.33; python_version >= "3.10" and extra == "jax"
Requires-Dist: flax>=0.10.0; python_version >= "3.10" and extra == "jax"
Requires-Dist: flax>=0.10.0; python_version >= "3.10" and extra == "jax"
Requires-Dist: orbax-checkpoint; python_version >= "3.10" and extra == "jax"
Requires-Dist: orbax-checkpoint; python_version >= "3.10" and extra == "jax"
Requires-Dist: tensorflow-cpu==2.19.1; platform_machine != "aarch64" and (platform_machine != "arm64" or platform_system != "Darwin") and extra == "cpu"
Requires-Dist: tensorflow==2.19.1; (platform_machine == "aarch64" or (platform_machine == "arm64" and platform_system == "Darwin")) and extra == "cpu"
Requires-Dist: tensorflow==2.19.1; extra == "gpu"
Requires-Dist: tensorflow-metal; platform_machine == "arm64" and platform_system == "Darwin" and extra == "gpu"
Requires-Dist: horovod; extra == "mpi"
Requires-Dist: mpi4py; extra == "mpi"
Requires-Dist: torch==2.8.0.*; extra == "torch"
Requires-Dist: mpich; extra == "torch"
Provides-Extra: test
Provides-Extra: docs
Provides-Extra: lmp
Provides-Extra: ipi
Provides-Extra: gui
Provides-Extra: cu11
Provides-Extra: cu12
Provides-Extra: jax
Provides-Extra: cpu
Provides-Extra: gpu
Provides-Extra: mpi
Provides-Extra: torch
Description-Content-Type: text/markdown

[<picture><source media="(prefers-color-scheme: dark)" srcset="https://github.com/deepmodeling/deepmd-kit/raw/master/./doc/_static/logo-dark.svg"><source media="(prefers-color-scheme: light)" srcset="https://github.com/deepmodeling/deepmd-kit/raw/master/./doc/_static/logo.svg"><img alt="DeePMD-kit logo" src="https://github.com/deepmodeling/deepmd-kit/raw/master/./doc/_static/logo.svg"></picture>](https://github.com/deepmodeling/deepmd-kit/tree/master/./doc/logo.md)

---

# DeePMD-kit

[![GitHub release](https://img.shields.io/github/release/deepmodeling/deepmd-kit.svg?maxAge=86400)](https://github.com/deepmodeling/deepmd-kit/releases)
[![offline packages](https://img.shields.io/github/downloads/deepmodeling/deepmd-kit/total?label=offline%20packages)](https://github.com/deepmodeling/deepmd-kit/releases)
[![conda-forge](https://img.shields.io/conda/dn/conda-forge/deepmd-kit?color=red&label=conda-forge&logo=conda-forge)](https://anaconda.org/conda-forge/deepmd-kit)
[![pip install](https://img.shields.io/pypi/dm/deepmd-kit?label=pip%20install)](https://pypi.org/project/deepmd-kit)
[![docker pull](https://img.shields.io/docker/pulls/deepmodeling/deepmd-kit)](https://hub.docker.com/r/deepmodeling/deepmd-kit)
[![Documentation Status](https://readthedocs.org/projects/deepmd/badge/)](https://deepmd.readthedocs.io/)

## About DeePMD-kit

DeePMD-kit is a package written in Python/C++, designed to minimize the effort required to build deep learning-based model of interatomic potential energy and force field and to perform molecular dynamics (MD). This brings new hopes to addressing the accuracy-versus-efficiency dilemma in molecular simulations. Applications of DeePMD-kit span from finite molecules to extended systems and from metallic systems to chemically bonded systems.

For more information, check the [documentation](https://deepmd.readthedocs.io/).

### Highlighted features

- **interfaced with multiple backends**, including TensorFlow, PyTorch, JAX, and Paddle, the most popular deep learning frameworks, making the training process highly automatic and efficient.
- **interfaced with high-performance classical MD and quantum (path-integral) MD packages**, including LAMMPS, i-PI, AMBER, CP2K, GROMACS, OpenMM, and ABACUS.
- **implements the Deep Potential series models**, which have been successfully applied to finite and extended systems, including organic molecules, metals, semiconductors, insulators, etc.
- **implements MPI and GPU supports**, making it highly efficient for high-performance parallel and distributed computing.
- **highly modularized**, easy to adapt to different descriptors for deep learning-based potential energy models.

### License and credits

The project DeePMD-kit is licensed under [GNU LGPLv3.0](https://github.com/deepmodeling/deepmd-kit/tree/master/./LICENSE).
If you use this code in any future publications, please cite the following publications for general purpose:

- Han Wang, Linfeng Zhang, Jiequn Han, and Weinan E. "DeePMD-kit: A deep learning package for many-body potential energy representation and molecular dynamics." Computer Physics Communications 228 (2018): 178-184.
  [![doi:10.1016/j.cpc.2018.03.016](https://img.shields.io/badge/DOI-10.1016%2Fj.cpc.2018.03.016-blue)](https://doi.org/10.1016/j.cpc.2018.03.016)
  [![Citations](https://citations.njzjz.win/10.1016/j.cpc.2018.03.016)](https://badge.dimensions.ai/details/doi/10.1016/j.cpc.2018.03.016)
- Jinzhe Zeng, Duo Zhang, Denghui Lu, Pinghui Mo, Zeyu Li, Yixiao Chen, Marián Rynik, Li'ang Huang, Ziyao Li, Shaochen Shi, Yingze Wang, Haotian Ye, Ping Tuo, Jiabin Yang, Ye Ding, Yifan Li, Davide Tisi, Qiyu Zeng, Han Bao, Yu Xia, Jiameng Huang, Koki Muraoka, Yibo Wang, Junhan Chang, Fengbo Yuan, Sigbjørn Løland Bore, Chun Cai, Yinnian Lin, Bo Wang, Jiayan Xu, Jia-Xin Zhu, Chenxing Luo, Yuzhi Zhang, Rhys E. A. Goodall, Wenshuo Liang, Anurag Kumar Singh, Sikai Yao, Jingchao Zhang, Renata Wentzcovitch, Jiequn Han, Jie Liu, Weile Jia, Darrin M. York, Weinan E, Roberto Car, Linfeng Zhang, Han Wang. "DeePMD-kit v2: A software package for deep potential models." J. Chem. Phys. 159 (2023): 054801.
  [![doi:10.1063/5.0155600](https://img.shields.io/badge/DOI-10.1063%2F5.0155600-blue)](https://doi.org/10.1063/5.0155600)
  [![Citations](https://citations.njzjz.win/10.1063/5.0155600)](https://badge.dimensions.ai/details/doi/10.1063/5.0155600)
- Jinzhe Zeng, Duo Zhang, Anyang Peng, Xiangyu Zhang, Sensen He, Yan Wang, Xinzijian Liu, Hangrui Bi, Yifan Li, Chun Cai, Chengqian Zhang, Yiming Du, Jia-Xin Zhu, Pinghui Mo, Zhengtao Huang, Qiyu Zeng, Shaochen Shi, Xuejian Qin, Zhaoxi Yu, Chenxing Luo, Ye Ding, Yun-Pei Liu, Ruosong Shi, Zhenyu Wang, Sigbjørn Løland Bore, Junhan Chang, Zhe Deng, Zhaohan Ding, Siyuan Han, Wanrun Jiang, Guolin Ke, Zhaoqing Liu, Denghui Lu, Koki Muraoka, Hananeh Oliaei, Anurag Kumar Singh, Haohui Que, Weihong Xu, Zhangmancang Xu, Yong-Bin Zhuang, Jiayu Dai, Timothy J. Giese, Weile Jia, Ben Xu, Darrin M. York, Linfeng Zhang, Han Wang. "DeePMD-kit v3: A Multiple-Backend Framework for Machine Learning Potentials." J. Chem. Theory Comput. 21 (2025): 4375-4385.
  [![doi:10.1021/acs.jctc.5c00340](https://img.shields.io/badge/DOI-10.1021%2Facs.jctc.5c00340-blue)](https://doi.org/10.1021/acs.jctc.5c00340)
  [![Citations](https://citations.njzjz.win/10.1021/acs.jctc.5c00340)](https://badge.dimensions.ai/details/doi/10.1021/acs.jctc.5c00340)

In addition, please follow [the bib file](https://github.com/deepmodeling/deepmd-kit/tree/master/CITATIONS.bib) to cite the methods you used.

### Highlights in major versions

#### Initial version

The goal of Deep Potential is to employ deep learning techniques and realize an inter-atomic potential energy model that is general, accurate, computationally efficient and scalable. The key component is to respect the extensive and symmetry-invariant properties of a potential energy model by assigning a local reference frame and a local environment to each atom. Each environment contains a finite number of atoms, whose local coordinates are arranged in a symmetry-preserving way. These local coordinates are then transformed, through a sub-network, to so-called _atomic energy_. Summing up all the atomic energies gives the potential energy of the system.

The initial proof of concept is in the [Deep Potential][1] paper, which employed an approach that was devised to train the neural network model with the potential energy only. With typical _ab initio_ molecular dynamics (AIMD) datasets this is insufficient to reproduce the trajectories. The Deep Potential Molecular Dynamics ([DeePMD][2]) model overcomes this limitation. In addition, the learning process in DeePMD improves significantly over the Deep Potential method thanks to the introduction of a flexible family of loss functions. The NN potential constructed in this way reproduces accurately the AIMD trajectories, both classical and quantum (path integral), in extended and finite systems, at a cost that scales linearly with system size and is always several orders of magnitude lower than that of equivalent AIMD simulations.

Although highly efficient, the original Deep Potential model satisfies the extensive and symmetry-invariant properties of a potential energy model at the price of introducing discontinuities in the model. This has negligible influence on a trajectory from canonical sampling but might not be sufficient for calculations of dynamical and mechanical properties. These points motivated us to develop the Deep Potential-Smooth Edition ([DeepPot-SE][3]) model, which replaces the non-smooth local frame with a smooth and adaptive embedding network. DeepPot-SE shows great ability in modeling many kinds of systems that are of interest in the fields of physics, chemistry, biology, and materials science.

In addition to building up potential energy models, DeePMD-kit can also be used to build up coarse-grained models. In these models, the quantity that we want to parameterize is the free energy, or the coarse-grained potential, of the coarse-grained particles. See the [DeePCG paper][4] for more details.

#### v1

- Code refactor to make it highly modularized.
- GPU support for descriptors.

#### v2

- Model compression. Accelerate the efficiency of model inference 4-15 times.
- New descriptors. Including `se_e2_r`, `se_e3`, and `se_atten` (DPA-1).
- Hybridization of descriptors. Hybrid descriptor constructed from the concatenation of several descriptors.
- Atom type embedding. Enable atom-type embedding to decline training complexity and refine performance.
- Training and inference of the dipole (vector) and polarizability (matrix).
- Split of training and validation dataset.
- Optimized training on GPUs, including CUDA and ROCm.
- Non-von-Neumann.
- C API to interface with the third-party packages.

See [our v2 paper](https://doi.org/10.1063/5.0155600) for details of all features until v2.2.3.

#### v3

- Multiple backends supported. Add PyTorch and JAX backends.
- The DPA2 and DPA3 models.
- Plugin mechanisms for external models.

See [our v3 paper](https://doi.org/10.1021/acs.jctc.5c00340) for details of all features until v3.0.

## Install and use DeePMD-kit

Please read the [online documentation](https://deepmd.readthedocs.io/) for how to install and use DeePMD-kit.

## Code structure

The code is organized as follows:

- `examples`: examples.
- `deepmd`: DeePMD-kit python modules.
- `source/lib`: source code of the core library.
- `source/op`: Operator (OP) implementation.
- `source/api_cc`: source code of DeePMD-kit C++ API.
- `source/api_c`: source code of the C API.
- `source/nodejs`: source code of the Node.js API.
- `source/ipi`: source code of i-PI client.
- `source/lmp`: source code of LAMMPS module.
- `source/gmx`: source code of Gromacs plugin.

# Contributing

See [DeePMD-kit Contributing Guide](https://github.com/deepmodeling/deepmd-kit/tree/master/CONTRIBUTING.md) to become a contributor! 🤓

[1]: https://arxiv.org/abs/1707.01478
[2]: https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.120.143001
[3]: https://arxiv.org/abs/1805.09003
[4]: https://aip.scitation.org/doi/full/10.1063/1.5027645
