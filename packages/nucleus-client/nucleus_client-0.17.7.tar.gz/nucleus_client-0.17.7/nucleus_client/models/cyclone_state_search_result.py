# coding: utf-8

"""
    Nucleus API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    OpenAPI spec version: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class CycloneStateSearchResult(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'str',
        'conf_name': 'str',
        'cyclone_client_code': 'str',
        'cyclone_client_id': 'str',
        'integration_id': 'str',
        'integration_name': 'str',
        'nucleus_client_code': 'str',
        'nucleus_client_id': 'str',
        'resource_id': 'str',
        'resource_name': 'str',
        'server_id': 'str',
        'server_name': 'str',
        'subscriber_name': 'str',
        'sync_history': 'list[CycloneStateSync]'
    }

    attribute_map = {
        'id': '_id',
        'conf_name': 'conf_name',
        'cyclone_client_code': 'cyclone_client_code',
        'cyclone_client_id': 'cyclone_client_id',
        'integration_id': 'integration_id',
        'integration_name': 'integration_name',
        'nucleus_client_code': 'nucleus_client_code',
        'nucleus_client_id': 'nucleus_client_id',
        'resource_id': 'resource_id',
        'resource_name': 'resource_name',
        'server_id': 'server_id',
        'server_name': 'server_name',
        'subscriber_name': 'subscriber_name',
        'sync_history': 'sync_history'
    }

    def __init__(self, id=None, conf_name=None, cyclone_client_code=None, cyclone_client_id=None, integration_id=None, integration_name=None, nucleus_client_code=None, nucleus_client_id=None, resource_id=None, resource_name=None, server_id=None, server_name=None, subscriber_name=None, sync_history=None):  # noqa: E501
        """CycloneStateSearchResult - a model defined in OpenAPI"""  # noqa: E501

        self._id = None
        self._conf_name = None
        self._cyclone_client_code = None
        self._cyclone_client_id = None
        self._integration_id = None
        self._integration_name = None
        self._nucleus_client_code = None
        self._nucleus_client_id = None
        self._resource_id = None
        self._resource_name = None
        self._server_id = None
        self._server_name = None
        self._subscriber_name = None
        self._sync_history = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if conf_name is not None:
            self.conf_name = conf_name
        if cyclone_client_code is not None:
            self.cyclone_client_code = cyclone_client_code
        if cyclone_client_id is not None:
            self.cyclone_client_id = cyclone_client_id
        if integration_id is not None:
            self.integration_id = integration_id
        if integration_name is not None:
            self.integration_name = integration_name
        if nucleus_client_code is not None:
            self.nucleus_client_code = nucleus_client_code
        if nucleus_client_id is not None:
            self.nucleus_client_id = nucleus_client_id
        if resource_id is not None:
            self.resource_id = resource_id
        if resource_name is not None:
            self.resource_name = resource_name
        if server_id is not None:
            self.server_id = server_id
        if server_name is not None:
            self.server_name = server_name
        if subscriber_name is not None:
            self.subscriber_name = subscriber_name
        self.sync_history = sync_history

    @property
    def id(self):
        """Gets the id of this CycloneStateSearchResult.  # noqa: E501


        :return: The id of this CycloneStateSearchResult.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CycloneStateSearchResult.


        :param id: The id of this CycloneStateSearchResult.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def conf_name(self):
        """Gets the conf_name of this CycloneStateSearchResult.  # noqa: E501


        :return: The conf_name of this CycloneStateSearchResult.  # noqa: E501
        :rtype: str
        """
        return self._conf_name

    @conf_name.setter
    def conf_name(self, conf_name):
        """Sets the conf_name of this CycloneStateSearchResult.


        :param conf_name: The conf_name of this CycloneStateSearchResult.  # noqa: E501
        :type: str
        """

        self._conf_name = conf_name

    @property
    def cyclone_client_code(self):
        """Gets the cyclone_client_code of this CycloneStateSearchResult.  # noqa: E501


        :return: The cyclone_client_code of this CycloneStateSearchResult.  # noqa: E501
        :rtype: str
        """
        return self._cyclone_client_code

    @cyclone_client_code.setter
    def cyclone_client_code(self, cyclone_client_code):
        """Sets the cyclone_client_code of this CycloneStateSearchResult.


        :param cyclone_client_code: The cyclone_client_code of this CycloneStateSearchResult.  # noqa: E501
        :type: str
        """

        self._cyclone_client_code = cyclone_client_code

    @property
    def cyclone_client_id(self):
        """Gets the cyclone_client_id of this CycloneStateSearchResult.  # noqa: E501


        :return: The cyclone_client_id of this CycloneStateSearchResult.  # noqa: E501
        :rtype: str
        """
        return self._cyclone_client_id

    @cyclone_client_id.setter
    def cyclone_client_id(self, cyclone_client_id):
        """Sets the cyclone_client_id of this CycloneStateSearchResult.


        :param cyclone_client_id: The cyclone_client_id of this CycloneStateSearchResult.  # noqa: E501
        :type: str
        """

        self._cyclone_client_id = cyclone_client_id

    @property
    def integration_id(self):
        """Gets the integration_id of this CycloneStateSearchResult.  # noqa: E501


        :return: The integration_id of this CycloneStateSearchResult.  # noqa: E501
        :rtype: str
        """
        return self._integration_id

    @integration_id.setter
    def integration_id(self, integration_id):
        """Sets the integration_id of this CycloneStateSearchResult.


        :param integration_id: The integration_id of this CycloneStateSearchResult.  # noqa: E501
        :type: str
        """

        self._integration_id = integration_id

    @property
    def integration_name(self):
        """Gets the integration_name of this CycloneStateSearchResult.  # noqa: E501


        :return: The integration_name of this CycloneStateSearchResult.  # noqa: E501
        :rtype: str
        """
        return self._integration_name

    @integration_name.setter
    def integration_name(self, integration_name):
        """Sets the integration_name of this CycloneStateSearchResult.


        :param integration_name: The integration_name of this CycloneStateSearchResult.  # noqa: E501
        :type: str
        """

        self._integration_name = integration_name

    @property
    def nucleus_client_code(self):
        """Gets the nucleus_client_code of this CycloneStateSearchResult.  # noqa: E501


        :return: The nucleus_client_code of this CycloneStateSearchResult.  # noqa: E501
        :rtype: str
        """
        return self._nucleus_client_code

    @nucleus_client_code.setter
    def nucleus_client_code(self, nucleus_client_code):
        """Sets the nucleus_client_code of this CycloneStateSearchResult.


        :param nucleus_client_code: The nucleus_client_code of this CycloneStateSearchResult.  # noqa: E501
        :type: str
        """

        self._nucleus_client_code = nucleus_client_code

    @property
    def nucleus_client_id(self):
        """Gets the nucleus_client_id of this CycloneStateSearchResult.  # noqa: E501


        :return: The nucleus_client_id of this CycloneStateSearchResult.  # noqa: E501
        :rtype: str
        """
        return self._nucleus_client_id

    @nucleus_client_id.setter
    def nucleus_client_id(self, nucleus_client_id):
        """Sets the nucleus_client_id of this CycloneStateSearchResult.


        :param nucleus_client_id: The nucleus_client_id of this CycloneStateSearchResult.  # noqa: E501
        :type: str
        """

        self._nucleus_client_id = nucleus_client_id

    @property
    def resource_id(self):
        """Gets the resource_id of this CycloneStateSearchResult.  # noqa: E501


        :return: The resource_id of this CycloneStateSearchResult.  # noqa: E501
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this CycloneStateSearchResult.


        :param resource_id: The resource_id of this CycloneStateSearchResult.  # noqa: E501
        :type: str
        """

        self._resource_id = resource_id

    @property
    def resource_name(self):
        """Gets the resource_name of this CycloneStateSearchResult.  # noqa: E501


        :return: The resource_name of this CycloneStateSearchResult.  # noqa: E501
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this CycloneStateSearchResult.


        :param resource_name: The resource_name of this CycloneStateSearchResult.  # noqa: E501
        :type: str
        """

        self._resource_name = resource_name

    @property
    def server_id(self):
        """Gets the server_id of this CycloneStateSearchResult.  # noqa: E501


        :return: The server_id of this CycloneStateSearchResult.  # noqa: E501
        :rtype: str
        """
        return self._server_id

    @server_id.setter
    def server_id(self, server_id):
        """Sets the server_id of this CycloneStateSearchResult.


        :param server_id: The server_id of this CycloneStateSearchResult.  # noqa: E501
        :type: str
        """

        self._server_id = server_id

    @property
    def server_name(self):
        """Gets the server_name of this CycloneStateSearchResult.  # noqa: E501


        :return: The server_name of this CycloneStateSearchResult.  # noqa: E501
        :rtype: str
        """
        return self._server_name

    @server_name.setter
    def server_name(self, server_name):
        """Sets the server_name of this CycloneStateSearchResult.


        :param server_name: The server_name of this CycloneStateSearchResult.  # noqa: E501
        :type: str
        """

        self._server_name = server_name

    @property
    def subscriber_name(self):
        """Gets the subscriber_name of this CycloneStateSearchResult.  # noqa: E501


        :return: The subscriber_name of this CycloneStateSearchResult.  # noqa: E501
        :rtype: str
        """
        return self._subscriber_name

    @subscriber_name.setter
    def subscriber_name(self, subscriber_name):
        """Sets the subscriber_name of this CycloneStateSearchResult.


        :param subscriber_name: The subscriber_name of this CycloneStateSearchResult.  # noqa: E501
        :type: str
        """

        self._subscriber_name = subscriber_name

    @property
    def sync_history(self):
        """Gets the sync_history of this CycloneStateSearchResult.  # noqa: E501


        :return: The sync_history of this CycloneStateSearchResult.  # noqa: E501
        :rtype: list[CycloneStateSync]
        """
        return self._sync_history

    @sync_history.setter
    def sync_history(self, sync_history):
        """Sets the sync_history of this CycloneStateSearchResult.


        :param sync_history: The sync_history of this CycloneStateSearchResult.  # noqa: E501
        :type: list[CycloneStateSync]
        """
        if sync_history is None:
            raise ValueError("Invalid value for `sync_history`, must not be `None`")  # noqa: E501

        self._sync_history = sync_history

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CycloneStateSearchResult):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
