# coding: utf-8

"""
    Nucleus API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    OpenAPI spec version: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class CycloneStateMetadata(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'ct_last_version': 'str',
        'table_hash': 'str',
        'tracking_reset': 'bool',
        'tracking_reset_date': 'date'
    }

    attribute_map = {
        'ct_last_version': 'ct_last_version',
        'table_hash': 'table_hash',
        'tracking_reset': 'tracking_reset',
        'tracking_reset_date': 'tracking_reset_date'
    }

    def __init__(self, ct_last_version=None, table_hash=None, tracking_reset=None, tracking_reset_date=None):  # noqa: E501
        """CycloneStateMetadata - a model defined in OpenAPI"""  # noqa: E501

        self._ct_last_version = None
        self._table_hash = None
        self._tracking_reset = None
        self._tracking_reset_date = None
        self.discriminator = None

        if ct_last_version is not None:
            self.ct_last_version = ct_last_version
        if table_hash is not None:
            self.table_hash = table_hash
        if tracking_reset is not None:
            self.tracking_reset = tracking_reset
        if tracking_reset_date is not None:
            self.tracking_reset_date = tracking_reset_date

    @property
    def ct_last_version(self):
        """Gets the ct_last_version of this CycloneStateMetadata.  # noqa: E501


        :return: The ct_last_version of this CycloneStateMetadata.  # noqa: E501
        :rtype: str
        """
        return self._ct_last_version

    @ct_last_version.setter
    def ct_last_version(self, ct_last_version):
        """Sets the ct_last_version of this CycloneStateMetadata.


        :param ct_last_version: The ct_last_version of this CycloneStateMetadata.  # noqa: E501
        :type: str
        """

        self._ct_last_version = ct_last_version

    @property
    def table_hash(self):
        """Gets the table_hash of this CycloneStateMetadata.  # noqa: E501


        :return: The table_hash of this CycloneStateMetadata.  # noqa: E501
        :rtype: str
        """
        return self._table_hash

    @table_hash.setter
    def table_hash(self, table_hash):
        """Sets the table_hash of this CycloneStateMetadata.


        :param table_hash: The table_hash of this CycloneStateMetadata.  # noqa: E501
        :type: str
        """

        self._table_hash = table_hash

    @property
    def tracking_reset(self):
        """Gets the tracking_reset of this CycloneStateMetadata.  # noqa: E501


        :return: The tracking_reset of this CycloneStateMetadata.  # noqa: E501
        :rtype: bool
        """
        return self._tracking_reset

    @tracking_reset.setter
    def tracking_reset(self, tracking_reset):
        """Sets the tracking_reset of this CycloneStateMetadata.


        :param tracking_reset: The tracking_reset of this CycloneStateMetadata.  # noqa: E501
        :type: bool
        """

        self._tracking_reset = tracking_reset

    @property
    def tracking_reset_date(self):
        """Gets the tracking_reset_date of this CycloneStateMetadata.  # noqa: E501


        :return: The tracking_reset_date of this CycloneStateMetadata.  # noqa: E501
        :rtype: date
        """
        return self._tracking_reset_date

    @tracking_reset_date.setter
    def tracking_reset_date(self, tracking_reset_date):
        """Sets the tracking_reset_date of this CycloneStateMetadata.


        :param tracking_reset_date: The tracking_reset_date of this CycloneStateMetadata.  # noqa: E501
        :type: date
        """

        self._tracking_reset_date = tracking_reset_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CycloneStateMetadata):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
