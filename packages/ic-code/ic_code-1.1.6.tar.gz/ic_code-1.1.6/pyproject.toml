[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ic-code"
version = "1.1.6"
authors = [
    {name = "sykim", email = "cruiser594@gmail.com"},
]
description = "Infrastructure CLI tool for managing AWS, Azure, GCP, OCI, NCP, CloudFlare, SSH, and more"
readme = "README.md"
requires-python = ">=3.9,<3.14"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Environment :: Console",
]
keywords = ["cli", "infrastructure", "aws", "oci", "gcp", "azure", "ncp", "naver-cloud", "cloudflare", "ssh", "devops", "multi-cloud"]
dependencies = [
    # Core dependencies - aligned with requirements.txt
    "boto3>=1.26.0,<2.0.0",
    "botocore>=1.29.0,<2.0.0",
    "requests>=2.28.0,<3.0.0",      # Required for NCP REST API calls
    "rich>=12.0.0,<15.0.0",
    "PyYAML>=6.0,<7.0.0",           # Required for NCP configuration files
    "paramiko>=2.11.0,<5.0.0",
    "python-dotenv>=0.19.0,<2.0.0",
    "cryptography>=3.4.8,<50.0.0",  # Required for NCP HMAC-SHA256 signatures
    "netifaces>=0.11.0,<1.0.0",
    "tqdm>=4.67.0,<5.0.0",
    "jsonschema>=4.23.0,<5.0.0",
    "python-dateutil>=2.8.0,<3.0.0",
    "click>=8.0.0,<9.0.0",
    "packaging>=21.0,<25.0",
    "setuptools>=61.0,<71.0",
    # Configuration system dependencies
    "watchdog>=3.0.0,<4.0.0",
    "cerberus>=1.3.4,<2.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "InquirerPy>=0.3.4,<1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
]

[project.urls]
"Homepage" = "https://github.com/dgr009/ic"
"Bug Reports" = "https://github.com/dgr009/ic/issues"
"Source" = "https://github.com/dgr009/ic"
"Documentation" = "https://github.com/dgr009/ic#readme"

[project.scripts]
ic = "ic.cli:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["ic*", "common*", "mcp*"]

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.md", "*.txt"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --tb=short"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "performance: Performance tests",
    "security: Security tests",
    "slow: Slow running tests",
    "ci_safe: Tests safe to run in CI environment",
    "requires_config: Tests that require configuration files",
    "requires_credentials: Tests that require live credentials"
]