# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: zepben/protobuf/cim/iec61970/base/auxiliaryequipment/CurrentTransformer.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from zepben.protobuf.cim.iec61970.base.auxiliaryequipment import Sensor_pb2 as zepben_dot_protobuf_dot_cim_dot_iec61970_dot_base_dot_auxiliaryequipment_dot_Sensor__pb2
from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nMzepben/protobuf/cim/iec61970/base/auxiliaryequipment/CurrentTransformer.proto\x12\x34zepben.protobuf.cim.iec61970.base.auxiliaryequipment\x1a\x41zepben/protobuf/cim/iec61970/base/auxiliaryequipment/Sensor.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xbb\x01\n\x12\x43urrentTransformer\x12H\n\x02sn\x18\x01 \x01(\x0b\x32<.zepben.protobuf.cim.iec61970.base.auxiliaryequipment.Sensor\x12\x34\n\x0e\x63oreBurdenNull\x18\x02 \x01(\x0e\x32\x1a.google.protobuf.NullValueH\x00\x12\x17\n\rcoreBurdenSet\x18\x03 \x01(\x05H\x00\x42\x0c\n\ncoreBurdenB<\n8com.zepben.protobuf.cim.iec61970.base.auxiliaryequipmentP\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'zepben.protobuf.cim.iec61970.base.auxiliaryequipment.CurrentTransformer_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n8com.zepben.protobuf.cim.iec61970.base.auxiliaryequipmentP\001'
  _globals['_CURRENTTRANSFORMER']._serialized_start=233
  _globals['_CURRENTTRANSFORMER']._serialized_end=420
# @@protoc_insertion_point(module_scope)
