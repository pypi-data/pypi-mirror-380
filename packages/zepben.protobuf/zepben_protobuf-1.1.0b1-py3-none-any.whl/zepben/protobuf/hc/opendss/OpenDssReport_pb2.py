# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: zepben/protobuf/hc/opendss/OpenDssReport.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from zepben.protobuf.hc.opendss import EnergyMeter_pb2 as zepben_dot_protobuf_dot_hc_dot_opendss_dot_EnergyMeter__pb2
from zepben.protobuf.hc.opendss import Diagnostics_pb2 as zepben_dot_protobuf_dot_hc_dot_opendss_dot_Diagnostics__pb2
from zepben.protobuf.hc.opendss import SamplePointReport_pb2 as zepben_dot_protobuf_dot_hc_dot_opendss_dot_SamplePointReport__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n.zepben/protobuf/hc/opendss/OpenDssReport.proto\x12\x1azepben.protobuf.hc.opendss\x1a,zepben/protobuf/hc/opendss/EnergyMeter.proto\x1a,zepben/protobuf/hc/opendss/Diagnostics.proto\x1a\x32zepben/protobuf/hc/opendss/SamplePointReport.proto\"\xef\x05\n\rOpenDssReport\x12#\n\x02\x64i\x18\x01 \x01(\x0b\x32\x15.DemandIntervalReportH\x00\x12\"\n\x03phv\x18\x02 \x01(\x0b\x32\x13.PhaseVoltageReportH\x00\x12\x1d\n\x02ov\x18\x03 \x01(\x0b\x32\x0f.OverloadReportH\x00\x12\x1c\n\x02vr\x18\x04 \x01(\x0b\x32\x0e.VoltageReportH\x00\x12\x37\n\x02sr\x18\x05 \x01(\x0b\x32).zepben.protobuf.hc.opendss.SummaryReportH\x00\x12\x32\n\x02\x65l\x18\x06 \x01(\x0b\x32$.zepben.protobuf.hc.opendss.EventLogH\x00\x12\x34\n\x02tr\x18\x07 \x01(\x0b\x32&.zepben.protobuf.hc.opendss.TapsReportH\x00\x12\x34\n\x02lr\x18\x08 \x01(\x0b\x32&.zepben.protobuf.hc.opendss.LoopReportH\x00\x12>\n\x03ibr\x18\t \x01(\x0b\x32/.zepben.protobuf.hc.opendss.IsolatedBusesReportH\x00\x12\x35\n\x02le\x18\n \x01(\x0b\x32\'.zepben.protobuf.hc.opendss.LossesEntryH\x00\x12:\n\x06losses\x18\x0b \x01(\x0b\x32(.zepben.protobuf.hc.opendss.LossesTotalsH\x00\x12\x36\n\x02nm\x18\x0c \x01(\x0b\x32(.zepben.protobuf.hc.opendss.NodeMismatchH\x00\x12\x39\n\x03kvm\x18\r \x01(\x0b\x32*.zepben.protobuf.hc.opendss.KVBaseMismatchH\x00\x12\x11\n\x07\x66\x61ilure\x18\x0e \x01(\x08H\x00\x12<\n\x03spr\x18\x0f \x01(\x0b\x32-.zepben.protobuf.hc.opendss.SamplePointReportH\x00\x42\x08\n\x06report\"P\n\x12OpenDssReportBatch\x12:\n\x07reports\x18\x01 \x03(\x0b\x32).zepben.protobuf.hc.opendss.OpenDssReportB\"\n\x1e\x63om.zepben.protobuf.hc.opendssP\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'zepben.protobuf.hc.opendss.OpenDssReport_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\036com.zepben.protobuf.hc.opendssP\001'
  _globals['_OPENDSSREPORT']._serialized_start=223
  _globals['_OPENDSSREPORT']._serialized_end=974
  _globals['_OPENDSSREPORTBATCH']._serialized_start=976
  _globals['_OPENDSSREPORTBATCH']._serialized_end=1056
# @@protoc_insertion_point(module_scope)
