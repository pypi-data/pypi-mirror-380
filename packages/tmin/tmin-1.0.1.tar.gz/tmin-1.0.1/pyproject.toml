[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tmin"
version = "1.0.1"
description = "A comprehensive pipe thickness analysis tool for mechanical integrity engineering"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Andrew Trepagnier", email = "andrew.trepagnier@icloud.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.23",
    "matplotlib>=3.5",
    "sympy>=1.11",
    "toml>=0.10.0",
    "jupyter>=1.0.0",
    "notebook>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-xdist>=3.0",
    "black>=22.0",
    "flake8>=5.0",
    "mypy>=1.0",
]

[project.scripts]
tmin = "tmin.cli:main"

[project.urls]
Homepage = "https://github.com/AndrewTrepagnier/tmin"
Repository = "https://github.com/AndrewTrepagnier/tmin"
Issues = "https://github.com/AndrewTrepagnier/tmin/issues"

[tool.setuptools.packages.find]
include = ["tmin*"]

[tool.setuptools.package-data]
tmin = ["asmetables/*.py"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=tmin",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["tmin"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]