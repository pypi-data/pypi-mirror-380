#!/bin/bash
# generated by getlino
# Copyright 2015-2023 Rumma & Ko Ltd
# License: GNU Affero General Public License v3 (see file COPYING for details)
#
# Update the application source code in this environment. Run either `pip
# --update` or `git pull` depending on the options specified during startsite.
# Also remove all `*.pyc` files in these repositories.

set -e
umask 0007

CURDIR=`pwd`
ENVDIR={{envdir}}
REPOS=$ENVDIR/{{repos_link}}

echo "Lino sites that use $ENVDIR:"
find -L /usr/local -samefile $ENVDIR

read -p "Do you have a snapshot of all Lino sites ? [yN] " -n 1 -r
echo    # (optional) move to a new line
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
    [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1 # handle exits from shell or function but don't exit interactive shell
fi

function pull() {
    repo=$REPOS/$1
    cd $repo && pwd && git pull --rebase && cd -
    find -name '*.pyc' -exec rm -f {} +
    cd $CURDIR
}

. $ENVDIR/bin/activate
logger -s Started pull.sh for $VIRTUAL_ENV from $CURDIR
logger -s Write current virtualenv to $VIRTUAL_ENV/requirements.txt
python -m pip freeze > $VIRTUAL_ENV/requirements.txt
python -m pip install -U pip

{% if dev_packages -%}
{% for name in dev_packages.split() -%}
pull {{name}}
{% endfor %}
{%- endif %}

{% if pip_packages -%}
pip install -U --upgrade-strategy eager {{pip_packages}}
{%- endif %}


# How to manually update all packages of the venv:
# pip install -U -r <(pip freeze | sed 's/==/>=/g')
# https://stackoverflow.com/questions/2720014/how-to-upgrade-all-python-packages-with-pip
# pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1  | xargs pip install -U
# pip list --outdated --format=freeze | awk 'NR>2 {print $1}' | xargs -n1 pip install -U
# ERROR: List format 'freeze' can not be used with the --outdated option.
# ERROR: You must give at least one requirement to install (see "pip help install")

logger -s Finished pull.sh for $VIRTUAL_ENV from $CURDIR
