[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hibiz-any-llm"
version = "0.0.18"
description = "A comprehensive Python wrapper for Large Language Models with database integration and usage tracking"
readme = "README.md"
authors = [
    {name = "Akilan R M", email = "akilan@hibizsolutions.com"}
]
maintainers = [
     {name = "Akilan R M", email = "akilan@hibizsolutions.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Database",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]

license = "MIT"
license-files = ["LICEN[CS]E*"]

keywords = [
    "llm",
    "language-model",
    "openai",
    "azure",
    "gpt",
    "ai",
    "machine-learning",
    "database",
    "postgresql",
    "mysql",
    "mongodb",
    "usage-tracking",
    "api-wrapper"
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.0",
    "psycopg2-binary>=2.9.0",
    "sqlalchemy>=2.0.41",
    "tiktoken>=0.4.0",
    "python-dotenv>=0.19.0",
    "typing-extensions>=4.0.0",
]


[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
llm_wrapper = ["py.typed", "*.pyi"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "psycopg2.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    'class .*\\bProtocol\\):',
    '@(abc\\.)?abstractmethod',
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
]