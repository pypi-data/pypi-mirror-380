# {{ project_name }}

[![Python](https://img.shields.io/badge/python-3.12+-blue.svg)](https://www.python.org/downloads/)
[![MATER](https://img.shields.io/badge/framework-MATER-orange.svg)]((https://isterre-dynamic-modeling.gricad-pages.univ-grenoble-alpes.fr/mater-project/mater)
[![UV](https://img.shields.io/badge/managed_by-UV-blue.svg)](https://docs.astral.sh/uv/)
[![License](https://img.shields.io/badge/license-LGPLv3-blue.svg)](LICENSE)


**Generated MATER simulation project for {{ project_name }} using [init-mater-project](https://pypi.org/project/init-mater-project/).**

## Quick Start

```bash
# Install dependencies
uv sync

# Run example simulation
uv run mater-cli run --example

# View results in examples/example_outputs/
```

> ðŸ’¡ Tip: All commands support --help flag as well as --example flag to work with minimal example data. 

## Usage

### Data Pipeline
Add raw datasets to data/raw/.

Generate transformation scripts:  
```bash
uv run mater-cli data generate
```

Modify the scripts to transform your raw data to MATER-formatted input data.

Build your input data from the scripts:  
```bash
uv run mater-cli data build
```

### Dimensions Pipeline  
Map your dimensions to MATER references:  
```bash
uv run mater-cli dimensions map
```

Modify the mapping file, removing TODOs and defining your parent hierarchy.

Validate and resolve edits:  
```bash
uv run mater-cli dimensions map --mode resolve
```

Build your dimensions hierarchy :  
```bash
uv run mater-cli dimensions build
```

### Simulations Run 
Run a simulation with your data:  
```bash
uv run mater-cli simulation run
```

View variables and dimensions linked to the simulation:  
```bash
uv run mater-cli simulation list-variables
uv run mater-cli simulation list-dimensions
```

## Project Structure

```
{{ project_name }}/
â”œâ”€â”€ config.toml                   # Main configuration
â”œâ”€â”€ data/
â”‚   â”œâ”€â”€ raw/                      # Your original datasets
â”‚   â”œâ”€â”€ input/                    # MATER-formatted data
â”‚   â”œâ”€â”€ dimensions_hierarchy/     # Dimensions mapping
â”‚   â””â”€â”€ references/               # Reference data provided by KER Team
â”œâ”€â”€ transforms/
â”‚   â””â”€â”€ datasets/                 # Transformation scripts
â”œâ”€â”€ outputs/                      # Simulation results
â””â”€â”€ examples/                     # Example data & outputs
```

## Configuration

All settings in `config.toml` - see inline comments for details.

Key sections:
- `[simulation]` - Time range, scenario, frequency
- `[paths]` - File and directory paths  
- `[provider]` - Your contact information
- `[metadata]` - Dataset source and project info

## Documentation

- **[Detailed Documentation](link-to-come)** â€” MkDocs with configuration, user guide, developer guide, testing, deployment, architecture
- **[License](LICENSE)** â€” LGPLv3 License details
