[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "adamsnrc"
version = "2.0.13"
description = "A robust Python client for the Nuclear Regulatory Commission's ADAMS API"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Max Oliver", email = "max.oliver@cintrax.com.br"}
]
maintainers = [
    {name = "Max Oliver", email = "max.oliver@cintrax.com.br"}
]
keywords = ["adams", "nrc", "nuclear", "regulatory", "api", "client", "documents"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "requests>=2.28.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-mock>=3.8.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "twine>=4.0.0",
    "build>=0.10.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

[project.urls]
Homepage = "https://github.com/maxoliverbr/adamsnrc"
Documentation = "https://adamsnrc.readthedocs.io/"
Repository = "https://github.com/maxoliverbr/adamsnrc"
"Bug Tracker" = "https://github.com/maxoliverbr/adamsnrc/issues"

[project.scripts]
adamsnrc = "adamsnrc.cli:main"

[tool.setuptools.packages.find]
include = ["adamsnrc*"]
exclude = [
    "*.tests*",
    "*.test*",
    "tests*",
    "test*",
    "venv*",
    ".venv*",
    "env*",
    "ENV*",
    "build*",
    "dist*",
    ".git*",
    "*.egg-info*",
]

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
]
ignore = [
    "E203",  # whitespace before ':'
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "E501",  # line too long (we'll handle this manually)
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "2.0.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "requests.*",
    "xml.etree.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["adamsnrc"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
] 