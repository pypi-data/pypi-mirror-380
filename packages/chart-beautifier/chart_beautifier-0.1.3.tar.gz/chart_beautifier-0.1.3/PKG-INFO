Metadata-Version: 2.4
Name: chart-beautifier
Version: 0.1.3
Summary: A Python SDK for creating beautiful and interactive charts
Home-page: https://github.com/yourusername/chart-beautifier
Author: Your Name
Author-email: Kostas Krachtopoulos <kkrachtop@gmail.com>
License-Expression: MIT
Project-URL: Homepage, https://github.com/yourusername/chart-beautifier
Project-URL: Documentation, https://chart-beautifier.readthedocs.io
Project-URL: Repository, https://github.com/yourusername/chart-beautifier
Project-URL: Issues, https://github.com/yourusername/chart-beautifier/issues
Keywords: charts,visualization,sdk,api
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests>=2.25.0
Requires-Dist: pydantic>=1.8.0
Provides-Extra: dev
Requires-Dist: pytest>=6.0; extra == "dev"
Requires-Dist: pytest-cov>=2.0; extra == "dev"
Requires-Dist: black>=21.0; extra == "dev"
Requires-Dist: flake8>=3.8; extra == "dev"
Requires-Dist: mypy>=0.800; extra == "dev"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# Chart Beautifier SDK

A Python SDK for creating beautiful and interactive charts.

## Installation

```bash
pip install chart-beautifier
```

## Quick Start

```python
from chart_beautifier import ChartBeautifierClient

# Initialize the client
client = ChartBeautifierClient(api_key="your_api_key")

# Create a chart
chart_data = {
    "labels": ["Jan", "Feb", "Mar", "Apr", "May"],
    "datasets": [{
        "label": "Sales",
        "data": [12, 19, 3, 5, 2]
    }]
}

chart = client.create_chart(chart_data, chart_type="line")
print(f"Created chart: {chart['chart_id']}")
```

## Features

- ðŸŽ¨ Beautiful chart generation
- ðŸ“Š Multiple chart types support
- ðŸ”§ Easy-to-use Python API
- ðŸš€ Fast and reliable
- ðŸ“± Responsive design

## API Reference

### ChartBeautifierClient

The main client class for interacting with the Chart Beautifier API.

#### Methods

- `create_chart(data, chart_type)`: Create a new chart
- `get_chart(chart_id)`: Retrieve a chart by ID
- `update_chart(chart_id, updates)`: Update an existing chart
- `delete_chart(chart_id)`: Delete a chart

## Development

### Setup

```bash
git clone https://github.com/yourusername/chart-beautifier.git
cd chart-beautifier
pip install -e ".[dev]"
```

### Running Tests

```bash
pytest
```

### Code Formatting

```bash
black chart_beautifier/
```

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.
