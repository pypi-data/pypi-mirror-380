The function weighted_score_table in the hana_ml.algorithms.pal.wst module performs a weighted score calculation on a given data set, using specified maps and weights, and returns a DataFrame with the weighted score for each entry.
------
Here is the executable code template for the `weighted_score_table` function:

```python
from hana_ml.algorithms.pal.wst import weighted_score_table
from hana_ml import DataFrame

# Assuming that connection_context is the connection to the HANA database

# Create the data DataFrame
data_records = [(0, 'male', 5000, 1.73),
                (1, 'male', 9000, 1.80),
                (2, 'female', 6000, 1.55),
                (3, 'male', 15000, 1.65),
                (4, 'female', 2000, 1.70),
                (5, 'female', 12000, 1.65),
                (6, 'male', 1000, 1.65),
                (7, 'male', 8000, 1.60),
                (8, 'female', 5500, 1.85),
                (9, 'female', 9500, 1.85)]
df_train = DataFrame(connection_context, data_records, ('ID', 'GENDER', 'INCOME', 'HEIGHT'))

# Create the maps DataFrame
maps_records = [('male', 2.0, 0, 0.0, 1.5, 0.0),
                ('female', 1.5, 5500, 1.0, 1.6, 1.0),
                (None, 0.0, 9000, 2.0, 1.71, 2.0),
                (None, 0.0, 12000, 3.0, 1.80, 3.0)]
df_map = DataFrame(connection_context, maps_records, ('GENDER', 'VAL1', 'INCOME', 'VAL2', 'HEIGHT', 'VAL3'))

# Create the weights DataFrame
weights_records = [(0.5, 1, 2),
                   (2.0, -1, 4),
                   (1.0, -1, 4)]
df_weight = DataFrame(connection_context, weights_records, ('WEIGHT', 'ISDIS', 'ROWNUM'))

# Perform weighted_score_table
res = weighted_score_table(data=df_train, maps=df_map, weights=df_weight, key='ID', thread_ratio=0.3)

# Print the result
print(res.collect())
```

Please replace the `connection_context` with your actual HANA database connection.