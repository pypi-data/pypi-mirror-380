# GitHub Action creating a release
# This workflow is triggered either when a new tag is pushed
# or manually initiated with the option to specify a tag as a parameter.

name: "CD"

on:
  push:
    tags:
      - "v*.*.*" # Match tags that start with "v"
  workflow_dispatch:
    inputs:
      version:
        description: The release version (vMAJOR.MINOR.PATCH).
        required: true

jobs:
  create_github_release:
    name: Create a GitHub release ðŸ”–
    timeout-minutes: 5
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Resolve the version
        id: var
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            version=$(git describe --tags --abbrev=0)
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            version="${{ github.event.inputs.version }}"
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
        shell: bash

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Set up the environment
        run: pip install .[test]

      - name: Create a release
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          tag: ${{ steps.var.outputs.version }}

  publish_to_pypi:
    name: Publish to PyPI ðŸš€
    timeout-minutes: 5
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/${{ github.event.repository.name }}
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing.
      contents: read # Required as per https://github.com/pypa/gh-action-pypi-publish/issues/237

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.2"
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Build a binary wheel and a source tarball
        run: uv build

      - name: Publish package distributions to PyPI
        run: uv publish
