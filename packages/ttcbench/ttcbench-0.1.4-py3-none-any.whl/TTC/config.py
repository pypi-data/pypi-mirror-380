# TTC/config.py
from typing import Optional, List
from pydantic import BaseModel, ConfigDict

# üîß –¥–µ—Ñ–æ–ª—Ç—ã (–ø–æ–¥–ø—Ä–∞–≤–∏—à—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
DEFAULT_BASE_URL = "http://87.255.209.214:3000/v1"
DEFAULT_MODEL_ID = "Qwen2.5-72B-Instruct-GPTQ-Int4"

class BenchConfig(BaseModel):
    model_config = ConfigDict(protected_namespaces=())

    # –±–∞–∑–æ–≤—ã–µ
    task: str = "textgen"
    backend: str = "openai"

    # –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    base_url: str = DEFAULT_BASE_URL
    model_id: str = DEFAULT_MODEL_ID

    # –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±–µ–Ω—á–∞ (—é–∑–µ—Ä –∏—Ö –Ω–µ —Ç—Ä–æ–≥–∞–µ—Ç)
    warmup_steps: int = 0
    steps: int = 1
    batch_size: int = 1
    seq_in: int = 0
    seq_out: int = 256
    prompt: Optional[str] = None
    timeout_s: int = 120
    endpoint: Optional[str] = None

    # –≥–µ–Ω–µ—Ä–∞—Ü–∏—è (–≤—Å–µ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è —é–∑–µ—Ä–∞)
    temperature: Optional[float] = None
    top_p: Optional[float] = None
    stream: bool = False
    json_mode: bool = False
    system: Optional[str] = None
    stop: Optional[List[str]] = None

    # auth
    api_key: Optional[str] = None
