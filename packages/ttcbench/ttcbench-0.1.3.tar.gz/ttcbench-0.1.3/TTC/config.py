# TTC/config.py
from typing import Optional, List
from pydantic import BaseModel, ConfigDict

# üîß –î–ï–§–û–õ–¢–´ (–º–µ–Ω—è—Ç—å —Ç—É—Ç –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
DEFAULT_BASE_URL = "http://87.255.209.214:3000/v1"
DEFAULT_MODEL_ID = "Qwen2.5-72B-Instruct-GPTQ-Int4"

class BenchConfig(BaseModel):
    model_config = ConfigDict(protected_namespaces=())

    # –±–∞–∑–æ–≤—ã–µ
    task: str = "textgen"
    backend: str = "openai"

    # –∞–¥—Ä–µ—Å –∏ –º–æ–¥–µ–ª—å —Ç–µ–ø–µ—Ä—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞–¥–∞–Ω—ã –∑–¥–µ—Å—å
    base_url: str = DEFAULT_BASE_URL
    model_id: str = DEFAULT_MODEL_ID

    # –±–µ–Ω—á-–Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    warmup_steps: int = 5
    steps: int = 30
    batch_size: int = 1
    seq_in: int = 0
    seq_out: int = 128
    prompt: Optional[str] = None
    timeout_s: int = 120
    endpoint: Optional[str] = None  # –Ω–∞–ø—Ä–∏–º–µ—Ä: "/v1/chat/completions"

    # –≥–µ–Ω–µ—Ä–∞—Ü–∏—è (–≤—Å–µ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    temperature: Optional[float] = None
    top_p: Optional[float] = None
    stream: bool = False
    json_mode: bool = False
    system: Optional[str] = None
    stop: Optional[List[str]] = None

    # auth
    api_key: Optional[str] = None
