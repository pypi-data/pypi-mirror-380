# coding: utf-8

"""
    FAB Client Lib

    Python client lib to access Flatland Association Benchmarks / AI4REALNET Campaign Hub Backend API, generated with openapi-generator

    The version of the OpenAPI document: 0.0.0
    Contact: contact@flatland-association.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fab_clientlib.models.definitions_benchmarks_get200_response_all_of_body_inner import DefinitionsBenchmarksGet200ResponseAllOfBodyInner

class TestDefinitionsBenchmarksGet200ResponseAllOfBodyInner(unittest.TestCase):
    """DefinitionsBenchmarksGet200ResponseAllOfBodyInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DefinitionsBenchmarksGet200ResponseAllOfBodyInner:
        """Test DefinitionsBenchmarksGet200ResponseAllOfBodyInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DefinitionsBenchmarksGet200ResponseAllOfBodyInner`
        """
        model = DefinitionsBenchmarksGet200ResponseAllOfBodyInner()
        if include_optional:
            return DefinitionsBenchmarksGet200ResponseAllOfBodyInner(
                id = '',
                name = '',
                description = '',
                field_ids = [
                    ''
                    ],
                test_ids = [
                    ''
                    ]
            )
        else:
            return DefinitionsBenchmarksGet200ResponseAllOfBodyInner(
        )
        """

    def testDefinitionsBenchmarksGet200ResponseAllOfBodyInner(self):
        """Test DefinitionsBenchmarksGet200ResponseAllOfBodyInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
