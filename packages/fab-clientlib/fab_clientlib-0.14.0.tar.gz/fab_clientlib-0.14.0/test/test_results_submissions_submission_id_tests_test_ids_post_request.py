# coding: utf-8

"""
    FAB Client Lib

    Python client lib to access Flatland Association Benchmarks / AI4REALNET Campaign Hub Backend API, generated with openapi-generator

    The version of the OpenAPI document: 0.0.0
    Contact: contact@flatland-association.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fab_clientlib.models.results_submissions_submission_id_tests_test_ids_post_request import ResultsSubmissionsSubmissionIdTestsTestIdsPostRequest


class TestResultsSubmissionsSubmissionIdTestsTestIdsPostRequest(unittest.TestCase):
    """ResultsSubmissionsSubmissionIdTestsTestIdsPostRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResultsSubmissionsSubmissionIdTestsTestIdsPostRequest:
        """Test ResultsSubmissionsSubmissionIdTestsTestIdsPostRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResultsSubmissionsSubmissionIdTestsTestIdsPostRequest`
        """
        model = ResultsSubmissionsSubmissionIdTestsTestIdsPostRequest()
        if include_optional:
            return ResultsSubmissionsSubmissionIdTestsTestIdsPostRequest(
                data = [
                    fab_clientlib.models._results_submissions__submission_id__tests__test_ids__post_request_data_inner._results_submissions__submission_id__tests__test_ids__post_request_data_inner(
                        scenario_id = '',
                        scores = {
                            'key' : 1.337
                            }, )
                    ]
            )
        else:
            return ResultsSubmissionsSubmissionIdTestsTestIdsPostRequest(
        )
        """

    def testResultsSubmissionsSubmissionIdTestsTestIdsPostRequest(self):
        """Test ResultsSubmissionsSubmissionIdTestsTestIdsPostRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
