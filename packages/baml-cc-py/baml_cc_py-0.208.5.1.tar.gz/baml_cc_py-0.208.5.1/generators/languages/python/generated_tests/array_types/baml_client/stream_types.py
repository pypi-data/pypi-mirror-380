# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

import typing
import typing_extensions
from pydantic import BaseModel, ConfigDict

import baml_py

from . import types

StreamStateValueT = typing.TypeVar('StreamStateValueT')
class StreamState(BaseModel, typing.Generic[StreamStateValueT]):
    value: StreamStateValueT
    state: typing_extensions.Literal["Pending", "Incomplete", "Complete"]
# #########################################################################
# Generated classes (8)
# #########################################################################

class ArrayWithConstraints(BaseModel):
    nonEmptyStrings: typing.List[str]
    limitedInts: typing.List[int]
    positiveFloats: typing.List[float]

class MixedArrays(BaseModel):
    primitiveArray: typing.List[typing.Union[str, int, float, bool]]
    nullableArray: typing.List[typing.Optional[str]]
    optionalItems: typing.List[typing.Optional[str]]
    arrayOfArrays: typing.List[typing.List[str]]
    complexMixed: typing.List[typing.Union["User", "Product", "Tag"]]

class NestedArrays(BaseModel):
    matrix: typing.List[typing.List[int]]
    stringMatrix: typing.List[typing.List[str]]
    threeDimensional: typing.List[typing.List[typing.List[float]]]

class ObjectArrays(BaseModel):
    users: typing.List["User"]
    products: typing.List["Product"]
    tags: typing.List["Tag"]

class Product(BaseModel):
    id: typing.Optional[int] = None
    name: typing.Optional[str] = None
    price: typing.Optional[float] = None
    tags: typing.List[str]
    inStock: typing.Optional[bool] = None

class SimpleArrays(BaseModel):
    strings: typing.List[str]
    integers: typing.List[int]
    floats: typing.List[float]
    booleans: typing.List[bool]

class Tag(BaseModel):
    id: typing.Optional[int] = None
    name: typing.Optional[str] = None
    color: typing.Optional[str] = None

class User(BaseModel):
    id: typing.Optional[int] = None
    name: typing.Optional[str] = None
    email: typing.Optional[str] = None
    isActive: typing.Optional[bool] = None

# #########################################################################
# Generated type aliases (0)
# #########################################################################
