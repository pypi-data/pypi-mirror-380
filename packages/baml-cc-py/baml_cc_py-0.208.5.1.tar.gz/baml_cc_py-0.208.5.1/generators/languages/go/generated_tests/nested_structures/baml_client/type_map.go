// ----------------------------------------------------------------------------
//
//  Welcome to Baml! To use this generated code, please run the following:
//
//  $ go get github.com/boundaryml/baml
//
// ----------------------------------------------------------------------------

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ go install github.com/boundaryml/baml/baml-cli

package baml_client

import (
    "nested_structures/baml_client/types"
    "nested_structures/baml_client/stream_types"
)

var typeMap = map[string]reflect.Type{
"TYPES.Address": reflect.TypeOf(types.Address{}),
    "STREAM_TYPES.Address": reflect.TypeOf(stream_types.Address{}),
"TYPES.Approval": reflect.TypeOf(types.Approval{}),
    "STREAM_TYPES.Approval": reflect.TypeOf(stream_types.Approval{}),
"TYPES.Budget": reflect.TypeOf(types.Budget{}),
    "STREAM_TYPES.Budget": reflect.TypeOf(stream_types.Budget{}),
"TYPES.Company": reflect.TypeOf(types.Company{}),
    "STREAM_TYPES.Company": reflect.TypeOf(stream_types.Company{}),
"TYPES.CompanyMetadata": reflect.TypeOf(types.CompanyMetadata{}),
    "STREAM_TYPES.CompanyMetadata": reflect.TypeOf(stream_types.CompanyMetadata{}),
"TYPES.ComplexNested": reflect.TypeOf(types.ComplexNested{}),
    "STREAM_TYPES.ComplexNested": reflect.TypeOf(stream_types.ComplexNested{}),
"TYPES.Contact": reflect.TypeOf(types.Contact{}),
    "STREAM_TYPES.Contact": reflect.TypeOf(stream_types.Contact{}),
"TYPES.Coordinates": reflect.TypeOf(types.Coordinates{}),
    "STREAM_TYPES.Coordinates": reflect.TypeOf(stream_types.Coordinates{}),
"TYPES.DeeplyNested": reflect.TypeOf(types.DeeplyNested{}),
    "STREAM_TYPES.DeeplyNested": reflect.TypeOf(stream_types.DeeplyNested{}),
"TYPES.Department": reflect.TypeOf(types.Department{}),
    "STREAM_TYPES.Department": reflect.TypeOf(stream_types.Department{}),
"TYPES.DisplaySettings": reflect.TypeOf(types.DisplaySettings{}),
    "STREAM_TYPES.DisplaySettings": reflect.TypeOf(stream_types.DisplaySettings{}),
"TYPES.Employee": reflect.TypeOf(types.Employee{}),
    "STREAM_TYPES.Employee": reflect.TypeOf(stream_types.Employee{}),
"TYPES.Level1": reflect.TypeOf(types.Level1{}),
    "STREAM_TYPES.Level1": reflect.TypeOf(stream_types.Level1{}),
"TYPES.Level2": reflect.TypeOf(types.Level2{}),
    "STREAM_TYPES.Level2": reflect.TypeOf(stream_types.Level2{}),
"TYPES.Level3": reflect.TypeOf(types.Level3{}),
    "STREAM_TYPES.Level3": reflect.TypeOf(stream_types.Level3{}),
"TYPES.Level4": reflect.TypeOf(types.Level4{}),
    "STREAM_TYPES.Level4": reflect.TypeOf(stream_types.Level4{}),
"TYPES.Level5": reflect.TypeOf(types.Level5{}),
    "STREAM_TYPES.Level5": reflect.TypeOf(stream_types.Level5{}),
"TYPES.Metadata": reflect.TypeOf(types.Metadata{}),
    "STREAM_TYPES.Metadata": reflect.TypeOf(stream_types.Metadata{}),
"TYPES.Milestone": reflect.TypeOf(types.Milestone{}),
    "STREAM_TYPES.Milestone": reflect.TypeOf(stream_types.Milestone{}),
"TYPES.NotificationSettings": reflect.TypeOf(types.NotificationSettings{}),
    "STREAM_TYPES.NotificationSettings": reflect.TypeOf(stream_types.NotificationSettings{}),
"TYPES.Preferences": reflect.TypeOf(types.Preferences{}),
    "STREAM_TYPES.Preferences": reflect.TypeOf(stream_types.Preferences{}),
"TYPES.PrivacySettings": reflect.TypeOf(types.PrivacySettings{}),
    "STREAM_TYPES.PrivacySettings": reflect.TypeOf(stream_types.PrivacySettings{}),
"TYPES.Profile": reflect.TypeOf(types.Profile{}),
    "STREAM_TYPES.Profile": reflect.TypeOf(stream_types.Profile{}),
"TYPES.Project": reflect.TypeOf(types.Project{}),
    "STREAM_TYPES.Project": reflect.TypeOf(stream_types.Project{}),
"TYPES.RecursiveStructure": reflect.TypeOf(types.RecursiveStructure{}),
    "STREAM_TYPES.RecursiveStructure": reflect.TypeOf(stream_types.RecursiveStructure{}),
"TYPES.SimpleNested": reflect.TypeOf(types.SimpleNested{}),
    "STREAM_TYPES.SimpleNested": reflect.TypeOf(stream_types.SimpleNested{}),
"TYPES.SocialLinks": reflect.TypeOf(types.SocialLinks{}),
    "STREAM_TYPES.SocialLinks": reflect.TypeOf(stream_types.SocialLinks{}),
"TYPES.Task": reflect.TypeOf(types.Task{}),
    "STREAM_TYPES.Task": reflect.TypeOf(stream_types.Task{}),
"TYPES.User": reflect.TypeOf(types.User{}),
    "STREAM_TYPES.User": reflect.TypeOf(stream_types.User{}),
"TYPES.UserSettings": reflect.TypeOf(types.UserSettings{}),
    "STREAM_TYPES.UserSettings": reflect.TypeOf(stream_types.UserSettings{}),


"TYPES.Union__string_dark__string_light": reflect.TypeOf(types.Union2KdarkOrKlight{}),
"TYPES.Union__string_grid__string_list": reflect.TypeOf(types.Union2KgridOrKlist{}),
"TYPES.Union__bool__int__string": reflect.TypeOf(types.Union3BoolOrIntOrString{}),
"TYPES.Union__string_daily__string_immediate__string_weekly": reflect.TypeOf(types.Union3KdailyOrKimmediateOrKweekly{}),
"TYPES.Union__string_done__string_in_progress__string_todo": reflect.TypeOf(types.Union3KdoneOrKin_progressOrKtodo{}),
"TYPES.Union__string_friends__string_private__string_public": reflect.TypeOf(types.Union3KfriendsOrKprivateOrKpublic{}),
"TYPES.Union__string_high__string_low__string_medium": reflect.TypeOf(types.Union3KhighOrKlowOrKmedium{}),
"TYPES.Union__string_active__string_cancelled__string_completed__string_planning": reflect.TypeOf(types.Union4KactiveOrKcancelledOrKcompletedOrKplanning{}),
"TYPES.Union__string_enterprise__string_large__string_medium__string_small": reflect.TypeOf(types.Union4KenterpriseOrKlargeOrKmediumOrKsmall{}),




}