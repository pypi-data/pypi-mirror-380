// ----------------------------------------------------------------------------
//
//  Welcome to Baml! To use this generated code, please run the following:
//
//  $ go get github.com/boundaryml/baml
//
// ----------------------------------------------------------------------------

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ go install github.com/boundaryml/baml/baml-cli

package baml_client

import (
    "media_types/baml_client/types"
    "media_types/baml_client/stream_types"
)

var typeMap = map[string]reflect.Type{
"TYPES.MediaAnalysisResult": reflect.TypeOf(types.MediaAnalysisResult{}),
    "STREAM_TYPES.MediaAnalysisResult": reflect.TypeOf(stream_types.MediaAnalysisResult{}),
"TYPES.MediaArrayAnalysisResult": reflect.TypeOf(types.MediaArrayAnalysisResult{}),
    "STREAM_TYPES.MediaArrayAnalysisResult": reflect.TypeOf(stream_types.MediaArrayAnalysisResult{}),
"TYPES.MediaMapAnalysisResult": reflect.TypeOf(types.MediaMapAnalysisResult{}),
    "STREAM_TYPES.MediaMapAnalysisResult": reflect.TypeOf(stream_types.MediaMapAnalysisResult{}),
"TYPES.MixedMediaAnalysisResult": reflect.TypeOf(types.MixedMediaAnalysisResult{}),
    "STREAM_TYPES.MixedMediaAnalysisResult": reflect.TypeOf(stream_types.MixedMediaAnalysisResult{}),
"TYPES.OptionalMediaAnalysisResult": reflect.TypeOf(types.OptionalMediaAnalysisResult{}),
    "STREAM_TYPES.OptionalMediaAnalysisResult": reflect.TypeOf(stream_types.OptionalMediaAnalysisResult{}),


"TYPES.Union__audio__image__pdf__video": reflect.TypeOf(types.Union4AudioOrImageOrPDFOrVideo{}),




}