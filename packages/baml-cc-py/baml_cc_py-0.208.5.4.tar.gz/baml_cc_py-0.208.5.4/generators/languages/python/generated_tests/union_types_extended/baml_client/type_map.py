# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

from . import types
from . import stream_types


type_map = {

    "types.Admin": types.Admin,
    "stream_types.Admin": stream_types.Admin,

    "types.ApiError": types.ApiError,
    "stream_types.ApiError": stream_types.ApiError,

    "types.ApiPending": types.ApiPending,
    "stream_types.ApiPending": stream_types.ApiPending,

    "types.ApiSuccess": types.ApiSuccess,
    "stream_types.ApiSuccess": stream_types.ApiSuccess,

    "types.Bird": types.Bird,
    "stream_types.Bird": stream_types.Bird,

    "types.Cat": types.Cat,
    "stream_types.Cat": stream_types.Cat,

    "types.Circle": types.Circle,
    "stream_types.Circle": stream_types.Circle,

    "types.ComplexUnions": types.ComplexUnions,
    "stream_types.ComplexUnions": stream_types.ComplexUnions,

    "types.DataResponse": types.DataResponse,
    "stream_types.DataResponse": stream_types.DataResponse,

    "types.DiscriminatedUnions": types.DiscriminatedUnions,
    "stream_types.DiscriminatedUnions": stream_types.DiscriminatedUnions,

    "types.Dog": types.Dog,
    "stream_types.Dog": stream_types.Dog,

    "types.Error": types.Error,
    "stream_types.Error": stream_types.Error,

    "types.ErrorResponse": types.ErrorResponse,
    "stream_types.ErrorResponse": stream_types.ErrorResponse,

    "types.PrimitiveUnions": types.PrimitiveUnions,
    "stream_types.PrimitiveUnions": stream_types.PrimitiveUnions,

    "types.Product": types.Product,
    "stream_types.Product": stream_types.Product,

    "types.Rectangle": types.Rectangle,
    "stream_types.Rectangle": stream_types.Rectangle,

    "types.RecursiveUnion": types.RecursiveUnion,
    "stream_types.RecursiveUnion": stream_types.RecursiveUnion,

    "types.Result": types.Result,
    "stream_types.Result": stream_types.Result,

    "types.Success": types.Success,
    "stream_types.Success": stream_types.Success,

    "types.Triangle": types.Triangle,
    "stream_types.Triangle": stream_types.Triangle,

    "types.UnionArrays": types.UnionArrays,
    "stream_types.UnionArrays": stream_types.UnionArrays,

    "types.User": types.User,
    "stream_types.User": stream_types.User,

    "types.Warning": types.Warning,
    "stream_types.Warning": stream_types.Warning,


}