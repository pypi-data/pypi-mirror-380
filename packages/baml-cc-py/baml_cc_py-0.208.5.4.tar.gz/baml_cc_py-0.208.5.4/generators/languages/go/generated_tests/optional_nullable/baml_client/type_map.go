// ----------------------------------------------------------------------------
//
//  Welcome to Baml! To use this generated code, please run the following:
//
//  $ go get github.com/boundaryml/baml
//
// ----------------------------------------------------------------------------

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ go install github.com/boundaryml/baml/baml-cli

package baml_client

import (
    "optional_nullable/baml_client/types"
    "optional_nullable/baml_client/stream_types"
)

var typeMap = map[string]reflect.Type{
"TYPES.ComplexOptional": reflect.TypeOf(types.ComplexOptional{}),
    "STREAM_TYPES.ComplexOptional": reflect.TypeOf(stream_types.ComplexOptional{}),
"TYPES.MixedOptionalNullable": reflect.TypeOf(types.MixedOptionalNullable{}),
    "STREAM_TYPES.MixedOptionalNullable": reflect.TypeOf(stream_types.MixedOptionalNullable{}),
"TYPES.NullableTypes": reflect.TypeOf(types.NullableTypes{}),
    "STREAM_TYPES.NullableTypes": reflect.TypeOf(stream_types.NullableTypes{}),
"TYPES.OptionalData": reflect.TypeOf(types.OptionalData{}),
    "STREAM_TYPES.OptionalData": reflect.TypeOf(stream_types.OptionalData{}),
"TYPES.OptionalFields": reflect.TypeOf(types.OptionalFields{}),
    "STREAM_TYPES.OptionalFields": reflect.TypeOf(stream_types.OptionalFields{}),
"TYPES.OptionalItem": reflect.TypeOf(types.OptionalItem{}),
    "STREAM_TYPES.OptionalItem": reflect.TypeOf(stream_types.OptionalItem{}),
"TYPES.OptionalValue": reflect.TypeOf(types.OptionalValue{}),
    "STREAM_TYPES.OptionalValue": reflect.TypeOf(stream_types.OptionalValue{}),
"TYPES.Product": reflect.TypeOf(types.Product{}),
    "STREAM_TYPES.Product": reflect.TypeOf(stream_types.Product{}),
"TYPES.UnionWithNull": reflect.TypeOf(types.UnionWithNull{}),
    "STREAM_TYPES.UnionWithNull": reflect.TypeOf(stream_types.UnionWithNull{}),
"TYPES.User": reflect.TypeOf(types.User{}),
    "STREAM_TYPES.User": reflect.TypeOf(stream_types.User{}),


"TYPES.Union__int__string": reflect.TypeOf(types.Union2IntOrString{}),
"TYPES.Union__Product__User": reflect.TypeOf(types.Union2ProductOrUser{}),

"STREAM_TYPES.Union__Product__User": reflect.TypeOf(stream_types.Union2ProductOrUser{}),



}