// ----------------------------------------------------------------------------
//
//  Welcome to Baml! To use this generated code, please run the following:
//
//  $ go get github.com/boundaryml/baml
//
// ----------------------------------------------------------------------------

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ go install github.com/boundaryml/baml/baml-cli

package baml_client

import (
    "mixed_complex_types/baml_client/types"
    "mixed_complex_types/baml_client/stream_types"
)

var typeMap = map[string]reflect.Type{
"TYPES.Action": reflect.TypeOf(types.Action{}),
    "STREAM_TYPES.Action": reflect.TypeOf(stream_types.Action{}),
"TYPES.Asset": reflect.TypeOf(types.Asset{}),
    "STREAM_TYPES.Asset": reflect.TypeOf(stream_types.Asset{}),
"TYPES.AssetMetadata": reflect.TypeOf(types.AssetMetadata{}),
    "STREAM_TYPES.AssetMetadata": reflect.TypeOf(stream_types.AssetMetadata{}),
"TYPES.ButtonWidget": reflect.TypeOf(types.ButtonWidget{}),
    "STREAM_TYPES.ButtonWidget": reflect.TypeOf(stream_types.ButtonWidget{}),
"TYPES.ComplexData": reflect.TypeOf(types.ComplexData{}),
    "STREAM_TYPES.ComplexData": reflect.TypeOf(stream_types.ComplexData{}),
"TYPES.Condition": reflect.TypeOf(types.Condition{}),
    "STREAM_TYPES.Condition": reflect.TypeOf(stream_types.Condition{}),
"TYPES.Configuration": reflect.TypeOf(types.Configuration{}),
    "STREAM_TYPES.Configuration": reflect.TypeOf(stream_types.Configuration{}),
"TYPES.ContainerWidget": reflect.TypeOf(types.ContainerWidget{}),
    "STREAM_TYPES.ContainerWidget": reflect.TypeOf(stream_types.ContainerWidget{}),
"TYPES.DataObject": reflect.TypeOf(types.DataObject{}),
    "STREAM_TYPES.DataObject": reflect.TypeOf(stream_types.DataObject{}),
"TYPES.Dimensions": reflect.TypeOf(types.Dimensions{}),
    "STREAM_TYPES.Dimensions": reflect.TypeOf(stream_types.Dimensions{}),
"TYPES.Environment": reflect.TypeOf(types.Environment{}),
    "STREAM_TYPES.Environment": reflect.TypeOf(stream_types.Environment{}),
"TYPES.Error": reflect.TypeOf(types.Error{}),
    "STREAM_TYPES.Error": reflect.TypeOf(stream_types.Error{}),
"TYPES.ErrorDetail": reflect.TypeOf(types.ErrorDetail{}),
    "STREAM_TYPES.ErrorDetail": reflect.TypeOf(stream_types.ErrorDetail{}),
"TYPES.Feature": reflect.TypeOf(types.Feature{}),
    "STREAM_TYPES.Feature": reflect.TypeOf(stream_types.Feature{}),
"TYPES.ImageWidget": reflect.TypeOf(types.ImageWidget{}),
    "STREAM_TYPES.ImageWidget": reflect.TypeOf(stream_types.ImageWidget{}),
"TYPES.Item": reflect.TypeOf(types.Item{}),
    "STREAM_TYPES.Item": reflect.TypeOf(stream_types.Item{}),
"TYPES.KitchenSink": reflect.TypeOf(types.KitchenSink{}),
    "STREAM_TYPES.KitchenSink": reflect.TypeOf(stream_types.KitchenSink{}),
"TYPES.Node": reflect.TypeOf(types.Node{}),
    "STREAM_TYPES.Node": reflect.TypeOf(stream_types.Node{}),
"TYPES.NodeMetadata": reflect.TypeOf(types.NodeMetadata{}),
    "STREAM_TYPES.NodeMetadata": reflect.TypeOf(stream_types.NodeMetadata{}),
"TYPES.PrimaryData": reflect.TypeOf(types.PrimaryData{}),
    "STREAM_TYPES.PrimaryData": reflect.TypeOf(stream_types.PrimaryData{}),
"TYPES.Record": reflect.TypeOf(types.Record{}),
    "STREAM_TYPES.Record": reflect.TypeOf(stream_types.Record{}),
"TYPES.ResponseMetadata": reflect.TypeOf(types.ResponseMetadata{}),
    "STREAM_TYPES.ResponseMetadata": reflect.TypeOf(stream_types.ResponseMetadata{}),
"TYPES.Rule": reflect.TypeOf(types.Rule{}),
    "STREAM_TYPES.Rule": reflect.TypeOf(stream_types.Rule{}),
"TYPES.SecondaryData": reflect.TypeOf(types.SecondaryData{}),
    "STREAM_TYPES.SecondaryData": reflect.TypeOf(stream_types.SecondaryData{}),
"TYPES.Setting": reflect.TypeOf(types.Setting{}),
    "STREAM_TYPES.Setting": reflect.TypeOf(stream_types.Setting{}),
"TYPES.SimpleCondition": reflect.TypeOf(types.SimpleCondition{}),
    "STREAM_TYPES.SimpleCondition": reflect.TypeOf(stream_types.SimpleCondition{}),
"TYPES.Success": reflect.TypeOf(types.Success{}),
    "STREAM_TYPES.Success": reflect.TypeOf(stream_types.Success{}),
"TYPES.TertiaryData": reflect.TypeOf(types.TertiaryData{}),
    "STREAM_TYPES.TertiaryData": reflect.TypeOf(stream_types.TertiaryData{}),
"TYPES.TextWidget": reflect.TypeOf(types.TextWidget{}),
    "STREAM_TYPES.TextWidget": reflect.TypeOf(stream_types.TextWidget{}),
"TYPES.UltraComplex": reflect.TypeOf(types.UltraComplex{}),
    "STREAM_TYPES.UltraComplex": reflect.TypeOf(stream_types.UltraComplex{}),
"TYPES.User": reflect.TypeOf(types.User{}),
    "STREAM_TYPES.User": reflect.TypeOf(stream_types.User{}),
"TYPES.UserProfile": reflect.TypeOf(types.UserProfile{}),
    "STREAM_TYPES.UserProfile": reflect.TypeOf(stream_types.UserProfile{}),
"TYPES.UserResponse": reflect.TypeOf(types.UserResponse{}),
    "STREAM_TYPES.UserResponse": reflect.TypeOf(stream_types.UserResponse{}),
"TYPES.Variant": reflect.TypeOf(types.Variant{}),
    "STREAM_TYPES.Variant": reflect.TypeOf(stream_types.Variant{}),
"TYPES.Widget": reflect.TypeOf(types.Widget{}),
    "STREAM_TYPES.Widget": reflect.TypeOf(stream_types.Widget{}),


"TYPES.Union__Condition__SimpleCondition": reflect.TypeOf(types.Union2ConditionOrSimpleCondition{}),
"TYPES.Union__Error__Success": reflect.TypeOf(types.Union2ErrorOrSuccess{}),
"TYPES.Union__string_branch__string_leaf": reflect.TypeOf(types.Union2KbranchOrKleaf{}),
"TYPES.Union__string_error__string_success": reflect.TypeOf(types.Union2KerrorOrKsuccess{}),
"TYPES.Union__bool__int__string": reflect.TypeOf(types.Union3BoolOrIntOrString{}),
"TYPES.Union__DataObject__int__string": reflect.TypeOf(types.Union3DataObjectOrIntOrString{}),
"TYPES.Union__float__int__string": reflect.TypeOf(types.Union3FloatOrIntOrString{}),
"TYPES.Union__string_and__string_not__string_or": reflect.TypeOf(types.Union3KandOrKnotOrKor{}),
"TYPES.Union__string_archived__string_draft__string_published": reflect.TypeOf(types.Union3KarchivedOrKdraftOrKpublished{}),
"TYPES.Union__string_audio__string_document__string_image": reflect.TypeOf(types.Union3KaudioOrKdocumentOrKimage{}),
"TYPES.Union__string_flex__string_grid__string_stack": reflect.TypeOf(types.Union3KflexOrKgridOrKstack{}),
"TYPES.Union__string_html__string_markdown__string_plain": reflect.TypeOf(types.Union3KhtmlOrKmarkdownOrKplain{}),
"TYPES.Union__bool__float__int__string": reflect.TypeOf(types.Union4BoolOrFloatOrIntOrString{}),
"TYPES.Union__List__Node__Map__string_Node__int__string": reflect.TypeOf(types.Union4IntOrListNodeOrMapStringKeyNodeValueOrString{}),
"TYPES.Union__string_button__string_container__string_image__string_text": reflect.TypeOf(types.Union4KbuttonOrKcontainerOrKimageOrKtext{}),
"TYPES.Union__int_1__int_2__int_3__int_4__int_5": reflect.TypeOf(types.Union5IntK1OrIntK2OrIntK3OrIntK4OrIntK5{}),
"TYPES.Union__string_contains__string_eq__string_gt__string_lt__string_ne": reflect.TypeOf(types.Union5KcontainsOrKeqOrKgtOrKltOrKne{}),

"STREAM_TYPES.Union__Condition__SimpleCondition": reflect.TypeOf(stream_types.Union2ConditionOrSimpleCondition{}),
"STREAM_TYPES.Union__Error__Success": reflect.TypeOf(stream_types.Union2ErrorOrSuccess{}),
"STREAM_TYPES.Union__DataObject__int__string": reflect.TypeOf(stream_types.Union3DataObjectOrIntOrString{}),
"STREAM_TYPES.Union__List__Node__Map__string_Node__int__string": reflect.TypeOf(stream_types.Union4IntOrListNodeOrMapStringKeyNodeValueOrString{}),



}