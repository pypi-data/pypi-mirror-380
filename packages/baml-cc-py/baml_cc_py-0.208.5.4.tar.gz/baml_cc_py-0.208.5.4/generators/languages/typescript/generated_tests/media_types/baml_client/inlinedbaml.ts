/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ npm install @boundaryml/baml
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code

const fileMap = {
  
  "baml_src/main.baml": "// Test media types in BAML - image, audio, PDF, video\n// Media types can only be used as input parameters, not outputs\n\nclass MediaAnalysisResult {\n  topics string[]\n  analysisText string\n}\n\nclass MediaArrayAnalysisResult {\n  analysisText string\n  mediaCount int\n}\n\nclass MediaMapAnalysisResult {\n  analysisText string\n  keyCount int\n  keys string[]\n}\n\nclass OptionalMediaAnalysisResult {\n  analysisText string\n  providedMediaTypes string[]\n  missingMediaTypes string[]\n}\n\nclass MixedMediaAnalysisResult {\n  title string\n  description string\n  hasImage bool\n  hasVideo bool\n  hasAudio bool\n  hasPdf bool\n  additionalImageCount int\n  metadataKeys string[]\n}\n\n// Test functions with media types as input parameters\nfunction TestMediaInput(media: image | audio | pdf | video, textInput: string) -> MediaAnalysisResult {\n  client \"openai/gpt-4o-mini\"\n  prompt #\"\n\n    Describe what is provided.\n\n    {{ ctx.output_format }}\n\n\n    {{ _.role('user') }}\n    Text: {{ textInput }}\n    {{ media }}    \n  \"#\n}\n\nfunction TestMediaArrayInputs(\n  imageArray: image[], \n  textInput: string\n) -> MediaArrayAnalysisResult {\n  client \"openai/gpt-4o-mini\"\n  prompt #\"\n    {{ ctx.output_format }}\n\n    {{ _.role('user') }}\n    Text: {{ textInput }}\n    {{ imageArray }}    \n  \"#\n}\n",
}
export const getBamlFiles = () => {
    return fileMap;
}