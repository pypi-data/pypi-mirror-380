[package]
edition = "2021"
name = "internal-baml-core"
version.workspace = true
authors.workspace = true
description.workspace = true
license-file.workspace = true
readme = "README.md"

[lints.rust]
dead_code = "allow"
elided_named_lifetimes = "deny"
unused_imports = "allow"
unused_variables = "allow"

[lints.clippy]
large_enum_variant = "allow"
type_complexity = "allow"

[dependencies]
anyhow.workspace = true
baml-compiler = { path = "../../baml-compiler" }
baml-derive.workspace = true
baml-types = { path = "../baml-types" }
bstd.workspace = true
chrono.workspace = true
derive_builder.workspace = true
either.workspace = true
enumflags2.workspace = true
log.workspace = true
indexmap.workspace = true
internal-baml-ast = { path = "../ast" }
internal-baml-diagnostics = { path = "../diagnostics" }
internal-llm-client = { path = "../llm-client" }
internal-baml-jinja-types = { path = "../jinja" }
internal-baml-parser-database = { path = "../parser-database" }
internal-baml-prompt-parser = { path = "../prompt-parser" }
baml-rpc.workspace = true
minijinja.workspace = true
rayon = "1.8.0"
regex.workspace = true
semver.workspace = true
serde.workspace = true
serde_json.workspace = true
shellwords = "1.1.0"
strsim.workspace = true
strum.workspace = true
textwrap.workspace = true
whoami = "1.4.1"
itertools.workspace = true
once_cell.workspace = true


[dev-dependencies]
base64.workspace = true
dissimilar.workspace = true
expect-test.workspace = true
indoc.workspace = true
either.workspace = true
