/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ npm install @boundaryml/baml
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code

const fileMap = {
  
  "baml_src/main.baml": "class SemanticContainer {\n    sixteen_digit_number int\n    string_with_twenty_words string @stream.done\n    class_1 ClassWithoutDone\n    class_2 ClassWithBlockDone\n    class_done_needed ClassWithBlockDone @stream.not_null\n    class_needed ClassWithoutDone @stream.not_null\n    three_small_things SmallThing[] @description(\"Should have three items.\")\n    final_string string\n}\n\nclass ClassWithoutDone {\n    i_16_digits int\n    s_20_words string @description(\"A string with 20 words in it\") @stream.with_state\n}\n\nclass ClassWithBlockDone {\n    i_16_digits int\n    s_20_words string\n    @@stream.done\n}\n\nclass SmallThing {\n    i_16_digits int @stream.not_null\n    i_8_digits int\n}\n\nfunction MakeSemanticContainer() -> SemanticContainer {\n    client \"openai/gpt-4o\"\n    prompt #\"\n        {{ ctx.output_format }}\n    \"#\n}\n\nfunction MakeClassWithBlockDone() -> ClassWithBlockDone {\n    client \"openai/gpt-4o\"\n    prompt #\"\n        {{ ctx.output_format }}\n    \"#\n}\n\nfunction MakeClassWithExternalDone() -> ClassWithoutDone @stream.done {\n    client \"openai/gpt-4o\"\n    prompt #\"\n        {{ ctx.output_format }}\n    \"#\n}",
}
export const getBamlFiles = () => {
    return fileMap;
}