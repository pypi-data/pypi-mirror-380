[tool.poetry]
name = "tidy3d"
version = "2.10.0rc2"
description = "A fast FDTD solver"
authors = ["Tyler Hughes <tyler@flexcompute.com>"]
license = "LGPLv2+"
readme = "README.md"
homepage = "https://github.com/flexcompute/tidy3d"
repository = "https://github.com/flexcompute/tidy3d"
classifiers = [
  "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Operating System :: OS Independent",
]
documentation = "https://docs.flexcompute.com/projects/tidy3d/en/latest/"
include = [{ path = "tidy3d/style.mplstyle", format = ["sdist", "wheel"] }]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/flexcompute/tidy3d/issues"

[tool.poetry.dependencies]
python = ">=3.10,<3.14"
pyroots = ">=0.5.0"
xarray = ">=2023.08"
importlib-metadata = ">=6.0.0"
h5netcdf = "1.0.2"
h5py = "^3.0.0"
rich = "^13.0"
numpy = "*"
matplotlib = "*"
shapely = "^2.0"
pandas = "*"
pydantic = "^2.0"
PyYAML = "*"
dask = "*"
toml = "*"
autograd = ">=1.7.0"
scipy = "*"
### NOT CORE
boto3 = "^1.28.0"
requests = "^2.31.0"
pyjwt = "*"
click = "^8.1.0"
responses = "*"
joblib = "*"
### END NOT CORE

### Optional dependencies ###
# development core
ruff = { version = "0.11.11", optional = true }
coverage = { version = "*", optional = true }
dill = { version = "*", optional = true }
ipython = { version = "*", optional = true }
memory_profiler = { version = "*", optional = true }
psutil = { version = "*", optional = true }
pre-commit = { version = "*", optional = true }
pylint = { version = "*", optional = true }
pytest = { version = ">=8.1", optional = true }
pytest-timeout = { version = "*", optional = true }
pytest-xdist = "^3.6.1"
pytest-cov = "^6.0.0"
pytest-env = "^1.1.5"
tox = { version = "*", optional = true }
diff-cover = { version = "*", optional = true }

# gdstk
gdstk = { version = ">=0.9.49", optional = true }

# design
bayesian-optimization = { version = "<2", optional = true }
pygad = { version = "3.3.1", optional = true }
pyswarms = { version = "*", optional = true }

# pytorch
torch = [
  { version = "^2.2.0", source = "PyPI", platform = "darwin", optional = true },
  { version = "^2.2.0", source = "torch-cpu", platform = "!=darwin", optional = true },
]

# scikit-rf
scikit-rf = { version = "*", optional = true }

# trimesh
networkx = { version = "^2.6.3", optional = true }
rtree = { version = "1.2.0", optional = true }
trimesh = { version = ">=4.6", optional = true }

# docs
jupyter = { version = "*", optional = true }
jinja2 = { version = ">=3.1.2", optional = true }
nbconvert = { version = ">=7.11.0", optional = true }
sphinx = { version = ">=6", optional = true }
nbsphinx = { version = ">=0.8.7", optional = true }
sphinx-copybutton = { version = ">=0.5.2", optional = true }
sphinx-book-theme = { version = ">=1.0.1", optional = true }
pydata-sphinx-theme = { version = ">=0.13.3", optional = true }
# divparams = {optional = true, git = "https://github.com/daquinteroflex/sphinxcontrib-divparams.git"} # TODO FIX
tmm = { version = "*", optional = true }
grcwa = { version = "*", optional = true }
sphinx-design = { version = "*", optional = true }
sphinx-favicon = { version = "*", optional = true }
sphinx-sitemap = { version = ">=2.5.1", optional = true }
sphinx-notfound-page = { version = "*", optional = true }
sphinx-tabs = { version = "*", optional = true }
nbdime = { version = "*", optional = true }
myst-parser = { version = "*", optional = true }
optax = { version = ">=0.2.2", optional = true }
signac = { version = "*", optional = true }
flax = { version = ">=0.8.2", optional = true }
sax = { version = "^0.11", optional = true }
vtk = { version = ">=9.2.6", optional = true }
sphinxemoji = { version = "*", optional = true }
devsim = { version = "*", optional = true }
cma = { version = "*", optional = true }
openpyxl = { version = "*", optional = true }
# tidy3d-extras = { version = "2.10.0rc2", optional = true }

[tool.poetry.extras]
dev = [
  'bayesian-optimization',
  "coverage",
  'dill',
  'divparams',
  'gdstk',
  'grcwa',
  'ipython',
  'ipython',
  'torch',
  'jinja2',
  'jupyter',
  'myst-parser',
  'memory_profiler',
  'psutil',
  'nbconvert',
  'nbdime',
  'nbsphinx',
  'networkx',
  'optax',
  'pre-commit',
  'pydata-sphinx-theme',
  'pygad',
  'pylint',
  'pyswarms',
  'pytest',
  'pytest-timeout',
  'pytest-xdist',
  'pytest-env',
  'pytest-cov',
  'rtree',
  'ruff',
  'sax',
  'signac',
  'sphinx',
  'sphinx-book-theme',
  'sphinx-design',
  'sphinx-copybutton',
  'sphinx-favicon',
  'sphinx-notfound-page',
  'sphinx-sitemap',
  'sphinx-tabs',
  'sphinxemoji',
  'tmm',
  'tox',
  'trimesh',
  'scikit-rf',
  'vtk',
  'devsim',
  'cma',
  'diff-cover',
  "openpyxl",
]
docs = [
  "jupyter",
  "jinja2",
  "nbconvert",
  "sphinx",
  "nbsphinx",
  "ipython",
  "divparams",
  'sphinx-design',
  "sphinx-copybutton",
  'sphinx-favicon',
  "sphinx-book-theme",
  "pydata-sphinx-theme",
  "tmm",
  "gdstk",
  "grcwa",
  "sphinx-sitemap",
  'sphinx-notfound-page',
  "nbdime",
  "optax",
  "signac",
  "sax",
  "pylint",
  "sphinx-tabs",
  "sphinxemoji",
  "myst-parser",
  "devsim",
  "cma",
  "openpyxl"
]
gdstk = ["gdstk"]
scikit-rf = ["scikit-rf"]
trimesh = ["trimesh", "networkx", "rtree"]
vtk = ["vtk"]
ruff = ["ruff"]
heatcharge = ["trimesh", "vtk", "devsim"]
# plugins with extra deps
pytorch = ["torch"]
design = ["bayesian-optimization", "pygad", "pyswarms"]
# extras = ["tidy3d-extras"]

[tool.poetry.scripts]
tidy3d = "tidy3d.web.cli:tidy3d_cli"

[[tool.poetry.source]]
name = "pypi"
priority = "primary"


[[tool.poetry.source]]
name = "torch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py39"
line-length = 100
extend-exclude = ["docs/faq/", "docs/notebooks/"]

[tool.ruff.lint]
extend-select = [
  "E",      # pycodestyle errors
  "F",      # pyflakes
  "B",      # bugbear
  "I",      # isort
  "UP",     # pyupgrade
  "W",      # pycodestyle
  "C4",     # flake8-comprehensions
  "NPY",    # numpy-specific rules
  "RUF",    # ruff builtins
  "ISC",    # implicit string concatenation
  "PIE",    # flake8-pie
  "RSE",    # unnecessary parantheses on raised exceptions
  "TID",    # no relative imports from parent modules
  "PLE",    # pylint errors
  "PLC",    # pylint conventions
]
extend-ignore = [
  "RUF001", # ambiguous unicode characters
  "RUF002", # ambiguous unicode characters
  "RUF003", # ambiguous unicode characters
  "RUF012", # type hints for mutable defaults
  "RUF015", # next(iter(...)) instead of list(...)[0]
  "E501",   # line too long
  "B905",   # `zip()` without an explicit `strict=` parameter
  "UP007",  # TODO: Remove once Python >= 3.10
  "NPY002", # TODO: Revisit RNG handling
]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.flake8-tidy-imports]
banned-module-level-imports = ["scipy", "matplotlib"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = [
    "B015",   # useless comparison
    "B018",   # useless expression
    "E402",   # module-level import not at top of file
    "E731",   # lambda assignment
    "F841",   # unused local variable
    "S101",   # asserts allowed in tests
    "NPY201", # numpy 2.* compatibility check
    "TID252", # allow relative imports in tests
    "TID253", # allow heavy imports in tests
]
"tidy3d/plugins/**/*" = [
    "TID253", # allow heavy imports in plugins (not used by MC)
]

[tool.pytest.ini_options]
# TODO: remove --assert=plain when https://github.com/scipy/scipy/issues/22236 is resolved
addopts = "--cov=tidy3d --doctest-modules -n auto --dist worksteal --assert=plain -m 'not numerical'"
markers = [
  "numerical: marks numerical tests for adjoint gradients that require running simulations (deselect with '-m \"not numerical\"')",
]
env = ["MPLBACKEND=Agg", "OMP_NUM_THREADS=1"]
doctest_optionflags = "NORMALIZE_WHITESPACE ELLIPSIS"
norecursedirs = [
  "tests/_test_local",
  "tests/test_cli",
  "tests/_test_data",
  "tests/_test_notebooks",
  "tidy3d/web",
  "docs/notebooks",
  "docs/faq",
]
filterwarnings = "ignore::DeprecationWarning"
testpaths = ["tidy3d", "tests", "docs"]
python_files = "*.py"
