[build-system]
requires = ["setuptools>=65", "wheel", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "awsquery"
version = "0.4.0"
description = "Advanced CLI tool for querying AWS APIs with flexible filtering and automatic parameter resolution"
readme = "README.md"
authors = [{ name = "Florian Motlik", email = "flo@flomotlik.me" }]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
keywords = ["aws", "cli", "query", "cloud", "devops", "boto3"]
requires-python = ">=3.8"
dependencies = [
    "boto3>=1.35.0",
    "botocore>=1.35.0",
    "tabulate>=0.9.0",
    "argcomplete>=3.0.0",
    "PyYAML>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-timeout>=2.1.0",
    "pytest-xdist>=3.3.0",
    "moto>=4.2.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "flake8-docstrings>=1.7.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pylint>=3.0.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "boto3-stubs[essential]>=1.35.0",
    "types-tabulate>=0.9.0",
    "types-PyYAML>=6.0.0",
    "interrogate>=1.5.0",
    "tox>=4.0.0",
    "twine>=4.0.0",
    "build>=0.10.0",
    "mutmut>=2.4.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
]

[project.scripts]
awsquery = "awsquery.cli:main"

[project.urls]
Homepage = "https://github.com/yourusername/awsquery"
Documentation = "https://awsquery.readthedocs.io"
Repository = "https://github.com/yourusername/awsquery.git"
Issues = "https://github.com/yourusername/awsquery/issues"
Changelog = "https://github.com/yourusername/awsquery/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
awsquery = ["policy.json", "default_filters.yaml"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true

[tool.pylint.format]
max-line-length = 100

[tool.pylint.messages_control]
disable = [
    "C0111", # missing-docstring
    "C0103", # invalid-name
    "C0114", # missing-module-docstring
    "C0115", # missing-class-docstring
    "C0116", # missing-function-docstring
    "C0415", # import-outside-toplevel
    "R0903", # too-few-public-methods
    "R0911", # too-many-return-statements
    "R0912", # too-many-branches
    "R0913", # too-many-arguments
    "R0914", # too-many-locals
    "R0915", # too-many-statements
    "R0917", # too-many-positional-arguments
    "R1705", # no-else-return
    "R1720", # no-else-raise
    "R1721", # unnecessary-comprehension
    "R1723", # no-else-break
    "W0212", # protected-access
    "W0613", # unused-argument
    "W0612", # unused-variable
    "W0611", # unused-import
    "W0702", # bare-except
    "W0718", # broad-exception-caught
    "W1309", # f-string-without-interpolation
    "W1514", # unspecified-encoding
    "C0201", # consider-iterating-dictionary
    "R0401", # cyclic-import
    "R0801", # duplicate-code
]

[tool.mutmut]
paths_to_mutate = ["src/awsquery/"]
runner = "python -m pytest -x --no-cov -q"
src_root = "src"

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
addopts = "-ra -q"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["src/awsquery"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
