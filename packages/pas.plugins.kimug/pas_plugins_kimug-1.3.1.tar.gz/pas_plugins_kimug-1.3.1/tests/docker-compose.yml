services:
  keycloak:
    build:
      context: keycloak
      args:
        KEYCLOAK_VERSION: 26.2.4
    command: ['start-dev', '--import-realm']
    depends_on:
      - db
    environment:
      JAVA_OPTS_APPEND: -Dkeycloak.profile.feature.upload_scripts=enabled
      KC_DB: postgres
      KC_DB_PASSWORD: postgres
      KC_DB_URL: jdbc:postgresql://db/keycloak
      KC_DB_USERNAME: postgres
      KC_HEALTH_ENABLED: false
      KC_HTTP_ENABLED: true
      KC_METRICS_ENABLED: false
      KC_HOSTNAME_URL: http://keycloak.traefik.me/
      KC_PROXY: reencrypt
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ./keycloak/import:/opt/keycloak/data/import
    ports:
      - 8180:8080
    # network_mode: host
    networks:
      local:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`keycloak.traefik.me`)"

  db:
    image: postgres:14.16
    networks:
      local:
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 45s
      interval: 5s
      retries: 10
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: keycloak
      POSTGRES_HOST: postgres
  traefik:
    image: traefik:v3.1
    networks:
      local:
        aliases:
            - keycloak.traefik.me
    command:
      - "--api.insecure=true"
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - 80:80
      # # The Web UI (enabled by --api.insecure=true)
      - 8000:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


networks:
  local:

