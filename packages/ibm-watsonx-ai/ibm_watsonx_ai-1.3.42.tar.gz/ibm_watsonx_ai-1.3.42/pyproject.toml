#  -----------------------------------------------------------------------------------------
#  (C) Copyright IBM Corp. 2023-2025.
#  https://opensource.org/licenses/BSD-3-Clause
#  -----------------------------------------------------------------------------------------

[build-system]
requires = ["setuptools", "build"]
build-backend = "setuptools.build_meta"

[project]
name = "ibm_watsonx_ai"
dynamic = ["version"]
requires-python = ">=3.10,<3.14"
authors = [
  {name = "IBM"}
]
maintainers = [
  {name = "Łukasz Ćmielowski", email = "lukasz.cmielowski@pl.ibm.com"},
  {name = "Dorota Lączak", email = "dorota.laczak@ibm.com"}
]
description = "IBM watsonx.ai API Client"
readme = "README.md"
license = {text = "BSD-3-Clause"}
keywords = [
    "watsonx.ai",
    "machine learning",
    "IBM",
    "Bluemix",
    "client",
    "API",
    "IBM Cloud",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Natural Language :: English",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Internet",
]
dependencies = [
    "requests",
    "httpx<0.29,>=0.27",
    "urllib3",
    "pandas<2.3.0,>=0.24.2",
    "certifi",
    "lomond",
    "tabulate",
    "packaging",
    "ibm-cos-sdk<2.15.0,>=2.12.0",
    "cachetools"
]

[project.urls]
Homepage = "https://ibm.github.io/watsonx-ai-python-sdk"

[project.optional-dependencies]
rag = [
    "langchain-core>=0.3,<0.4",
    "langchain>=0.3,<0.4",
    "langchain-community>=0.3,<0.4",
    "langchain-elasticsearch==0.3.0",
    "langchain-ibm>=0.3,<0.4",
    "langgraph==0.2.40",
    "langchain-chroma==0.1.4; python_version<='3.12'", # chroma-hnswlib cannot be installed on MacOS and Win with py313
    "pymilvus<2.5.7", # issue: 49386  pymilvus 2.5.7 is not compatible with lanchain-milvus 0.1.8
    "langchain-milvus==0.1.8",
    "grpcio>=1.54.3",
    "python-docx==1.1.2",
    "python-pptx==1.0.2",
    "pypdf>=4.2.0",
    "beautifulsoup4==4.12.3",
    "markdown==3.4.1",
    "pyYAML>=5.1.2",
    "scikit-learn>=1.3.0",
    "openpyxl==3.1.5",
    "langchain-db2>=0.1,<0.2"
]
mcp = [
    "mcp>=1.6.0,<2.0"
]


[dependency-groups]
lint = [
    "ruff<0.13,>=0.12.2",
    "black"
]
typing = [
    "mypy<1.18,>=1.17.1",
    "types-requests",
    "types-tabulate",
]
test = [
    "pytest<9,>=8",
    "allure-pytest",
    "pytest-mock",
    "pytest-asyncio",
    "pytest-cov",
    "matplotlib",
    "tensorflow==2.18.*",
]
dev = [
    "ipykernel>=6.29.5,<7",
    "setuptools",
    "pyarrow",
    "sphinx",
    "sphinx-design",
    "furo",
    "twine",
    { include-group = "lint" },
    { include-group = "typing" },
    { include-group = "test" },
]


[tool.setuptools.dynamic]
version = {file = "VERSION"}


[tool.setuptools]
package-data = {messages = ["messages/messages_en.json"], foundation_models = ["foundation_models/extensions/rag/pattern/_default_inference_service_schema/request.json", "foundation_models/extensions/rag/pattern/_default_inference_service_schema/response.json"], api_version_param = ["utils/API_VERSION_PARAM"]}
include-package-data = true
license-files = []


[tool.setuptools.packages.find]
exclude = ["tests.*", "tests"]


[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope="session"
addopts = "--clean-alluredir --alluredir=target/allure-results"
markers = [
    "asyncio: async function",
    "flaky: flaky test",
    "smokeCPD: smoke tests CPD suite",
    "smokeWXCLOUD: smoke tests CLOUD suite",
    "smokeWXCPD: smoke tests WX.CPD suite",
    "wip: work in progress test",
    "order: mark for ordering tests",
    "unittest: isolated source code tests",
    "timeout: specify time for test"
]
testpaths = [
    "tests"
]
filterwarnings = [
    "always::PendingDeprecationWarning",
    "always::DeprecationWarning",
    "ignore:.*Model needs to be:UserWarning",
    "ignore:.*invalid escape sequence.*:DeprecationWarning"
]

[tool.mypy]
packages = [
    "ibm_watsonx_ai.foundation_models",
    "ibm_watsonx_ai.experiment.fm_tune",
    "ibm_watsonx_ai.experiment.autoai.optimizers.rag_optimizer",
    "ibm_watsonx_ai.experiment.autoai.engines.rag_engine"
]
exclude = 'ibm_watsonx_ai/foundation_models/extensions/rag/pattern/default_.*\.py'
disallow_untyped_defs = true
disallow_incomplete_defs = true
ignore_missing_imports = true
explicit_package_bases = true
follow_imports = "silent"

[tool.uv.pip]
extra = ["rag"]
