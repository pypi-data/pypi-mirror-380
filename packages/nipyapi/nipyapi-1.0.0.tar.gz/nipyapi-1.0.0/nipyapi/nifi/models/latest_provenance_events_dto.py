"""
    Apache NiFi REST API

    REST API definition for Apache NiFi web services

    OpenAPI spec version: 2.5.0
    Contact: dev@nifi.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
import re


class LatestProvenanceEventsDTO(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'component_id': 'str',
'provenance_events': 'list[ProvenanceEventDTO]'    }

    attribute_map = {
        'component_id': 'componentId',
'provenance_events': 'provenanceEvents'    }

    def __init__(self, component_id=None, provenance_events=None):
        """
        LatestProvenanceEventsDTO - a model defined in Swagger
        """

        self._component_id = None
        self._provenance_events = None

        if component_id is not None:
          self.component_id = component_id
        if provenance_events is not None:
          self.provenance_events = provenance_events

    @property
    def component_id(self):
        """
        Gets the component_id of this LatestProvenanceEventsDTO.

        :return: The component_id of this LatestProvenanceEventsDTO.
        :rtype: str
        """
        return self._component_id

    @component_id.setter
    def component_id(self, component_id):
        """
        Sets the component_id of this LatestProvenanceEventsDTO.

        :param component_id: The component_id of this LatestProvenanceEventsDTO.
        :type: str
        """

        self._component_id = component_id

    @property
    def provenance_events(self):
        """
        Gets the provenance_events of this LatestProvenanceEventsDTO.

        :return: The provenance_events of this LatestProvenanceEventsDTO.
        :rtype: list[ProvenanceEventDTO]
        """
        return self._provenance_events

    @provenance_events.setter
    def provenance_events(self, provenance_events):
        """
        Sets the provenance_events of this LatestProvenanceEventsDTO.

        :param provenance_events: The provenance_events of this LatestProvenanceEventsDTO.
        :type: list[ProvenanceEventDTO]
        """

        self._provenance_events = provenance_events

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in self.swagger_types.items():
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, LatestProvenanceEventsDTO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
