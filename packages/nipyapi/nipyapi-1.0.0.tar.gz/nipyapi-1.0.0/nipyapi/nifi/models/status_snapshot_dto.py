"""
    Apache NiFi REST API

    REST API definition for Apache NiFi web services

    OpenAPI spec version: 2.5.0
    Contact: dev@nifi.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
import re


class StatusSnapshotDTO(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'status_metrics': 'dict(str, int)',
'timestamp': 'datetime'    }

    attribute_map = {
        'status_metrics': 'statusMetrics',
'timestamp': 'timestamp'    }

    def __init__(self, status_metrics=None, timestamp=None):
        """
        StatusSnapshotDTO - a model defined in Swagger
        """

        self._status_metrics = None
        self._timestamp = None

        if status_metrics is not None:
          self.status_metrics = status_metrics
        if timestamp is not None:
          self.timestamp = timestamp

    @property
    def status_metrics(self):
        """
        Gets the status_metrics of this StatusSnapshotDTO.
        The status metrics.

        :return: The status_metrics of this StatusSnapshotDTO.
        :rtype: dict(str, int)
        """
        return self._status_metrics

    @status_metrics.setter
    def status_metrics(self, status_metrics):
        """
        Sets the status_metrics of this StatusSnapshotDTO.
        The status metrics.

        :param status_metrics: The status_metrics of this StatusSnapshotDTO.
        :type: dict(str, int)
        """

        self._status_metrics = status_metrics

    @property
    def timestamp(self):
        """
        Gets the timestamp of this StatusSnapshotDTO.
        The timestamp of the snapshot.

        :return: The timestamp of this StatusSnapshotDTO.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """
        Sets the timestamp of this StatusSnapshotDTO.
        The timestamp of the snapshot.

        :param timestamp: The timestamp of this StatusSnapshotDTO.
        :type: datetime
        """

        self._timestamp = timestamp

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in self.swagger_types.items():
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, StatusSnapshotDTO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
