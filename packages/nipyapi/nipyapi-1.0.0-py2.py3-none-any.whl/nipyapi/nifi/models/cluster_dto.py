"""
    Apache NiFi REST API

    REST API definition for Apache NiFi web services

    OpenAPI spec version: 2.5.0
    Contact: dev@nifi.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
import re


class ClusterDTO(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'generated': 'str',
'nodes': 'list[NodeDTO]'    }

    attribute_map = {
        'generated': 'generated',
'nodes': 'nodes'    }

    def __init__(self, generated=None, nodes=None):
        """
        ClusterDTO - a model defined in Swagger
        """

        self._generated = None
        self._nodes = None

        if generated is not None:
          self.generated = generated
        if nodes is not None:
          self.nodes = nodes

    @property
    def generated(self):
        """
        Gets the generated of this ClusterDTO.
        The timestamp the report was generated.

        :return: The generated of this ClusterDTO.
        :rtype: str
        """
        return self._generated

    @generated.setter
    def generated(self, generated):
        """
        Sets the generated of this ClusterDTO.
        The timestamp the report was generated.

        :param generated: The generated of this ClusterDTO.
        :type: str
        """

        self._generated = generated

    @property
    def nodes(self):
        """
        Gets the nodes of this ClusterDTO.
        The collection of nodes that are part of the cluster.

        :return: The nodes of this ClusterDTO.
        :rtype: list[NodeDTO]
        """
        return self._nodes

    @nodes.setter
    def nodes(self, nodes):
        """
        Sets the nodes of this ClusterDTO.
        The collection of nodes that are part of the cluster.

        :param nodes: The nodes of this ClusterDTO.
        :type: list[NodeDTO]
        """

        self._nodes = nodes

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in self.swagger_types.items():
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ClusterDTO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
