"""
    Apache NiFi REST API

    REST API definition for Apache NiFi web services

    OpenAPI spec version: 2.5.0
    Contact: dev@nifi.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
import re


class ControllerServiceApiDTO(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'bundle': 'BundleDTO',
'type': 'str'    }

    attribute_map = {
        'bundle': 'bundle',
'type': 'type'    }

    def __init__(self, bundle=None, type=None):
        """
        ControllerServiceApiDTO - a model defined in Swagger
        """

        self._bundle = None
        self._type = None

        if bundle is not None:
          self.bundle = bundle
        if type is not None:
          self.type = type

    @property
    def bundle(self):
        """
        Gets the bundle of this ControllerServiceApiDTO.

        :return: The bundle of this ControllerServiceApiDTO.
        :rtype: BundleDTO
        """
        return self._bundle

    @bundle.setter
    def bundle(self, bundle):
        """
        Sets the bundle of this ControllerServiceApiDTO.

        :param bundle: The bundle of this ControllerServiceApiDTO.
        :type: BundleDTO
        """

        self._bundle = bundle

    @property
    def type(self):
        """
        Gets the type of this ControllerServiceApiDTO.
        The fully qualified name of the service interface.

        :return: The type of this ControllerServiceApiDTO.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """
        Sets the type of this ControllerServiceApiDTO.
        The fully qualified name of the service interface.

        :param type: The type of this ControllerServiceApiDTO.
        :type: str
        """

        self._type = type

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in self.swagger_types.items():
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ControllerServiceApiDTO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
