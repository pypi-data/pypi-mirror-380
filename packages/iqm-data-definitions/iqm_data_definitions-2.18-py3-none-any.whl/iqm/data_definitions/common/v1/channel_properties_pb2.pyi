"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

Definition of channel properties for hw devices
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class ChannelPropertyDictionary(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class ChannelPropertyMappingEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___ChannelPropertyEntry: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___ChannelPropertyEntry | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    CHANNEL_PROPERTY_MAPPING_FIELD_NUMBER: builtins.int
    @property
    def channel_property_mapping(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___ChannelPropertyEntry]: ...
    def __init__(
        self,
        *,
        channel_property_mapping: collections.abc.Mapping[builtins.str, global___ChannelPropertyEntry] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["channel_property_mapping", b"channel_property_mapping"]) -> None: ...

global___ChannelPropertyDictionary = ChannelPropertyDictionary

@typing.final
class ChannelPropertyEntry(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AWG_FIELD_NUMBER: builtins.int
    RO_FIELD_NUMBER: builtins.int
    @property
    def awg(self) -> global___AWGProperties: ...
    @property
    def ro(self) -> global___ReadoutProperties: ...
    def __init__(
        self,
        *,
        awg: global___AWGProperties | None = ...,
        ro: global___ReadoutProperties | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["awg", b"awg", "ro", b"ro", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["awg", b"awg", "ro", b"ro", "value", b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["value", b"value"]) -> typing.Literal["awg", "ro"] | None: ...

global___ChannelPropertyEntry = ChannelPropertyEntry

@typing.final
class ChannelProperties(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SAMPLING_RATE_FIELD_NUMBER: builtins.int
    INSTRUCTION_DURATION_GRANULARITY_FIELD_NUMBER: builtins.int
    INSTRUCTION_DURATION_MIN_FIELD_NUMBER: builtins.int
    COMPATIBLE_INSTRUCTIONS_FIELD_NUMBER: builtins.int
    INSTRUCTION_DURATION_GRANULARITY_SAMPLES_FIELD_NUMBER: builtins.int
    INSTRUCTION_DURATION_MIN_SAMPLES_FIELD_NUMBER: builtins.int
    sampling_rate: builtins.float
    """sample rate of the instrument responsible for the channel (in Hz)"""
    instruction_duration_granularity: builtins.float
    """Unused"""
    instruction_duration_min: builtins.float
    """Unused"""
    instruction_duration_granularity_samples: builtins.int
    """all instruction durations on this channel must be multiples of this granularity (in samples)"""
    instruction_duration_min_samples: builtins.int
    """all instruction durations on this channel must at least this long (in samples)"""
    @property
    def compatible_instructions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """instruction types that are allowed on this channel"""

    def __init__(
        self,
        *,
        sampling_rate: builtins.float = ...,
        instruction_duration_granularity: builtins.float = ...,
        instruction_duration_min: builtins.float = ...,
        compatible_instructions: collections.abc.Iterable[builtins.str] | None = ...,
        instruction_duration_granularity_samples: builtins.int = ...,
        instruction_duration_min_samples: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["compatible_instructions", b"compatible_instructions", "instruction_duration_granularity", b"instruction_duration_granularity", "instruction_duration_granularity_samples", b"instruction_duration_granularity_samples", "instruction_duration_min", b"instruction_duration_min", "instruction_duration_min_samples", b"instruction_duration_min_samples", "sampling_rate", b"sampling_rate"]) -> None: ...

global___ChannelProperties = ChannelProperties

@typing.final
class AWGProperties(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CHANNEL_PROPERTIES_FIELD_NUMBER: builtins.int
    FAST_FEEDBACK_SOURCES_FIELD_NUMBER: builtins.int
    LOCAL_OSCILLATOR_FIELD_NUMBER: builtins.int
    MIXER_CORRECTION_FIELD_NUMBER: builtins.int
    local_oscillator: builtins.bool
    """Whether this AWG contains a local oscillator or not."""
    mixer_correction: builtins.bool
    """ Whether this AWG has mixer correction or not."""
    @property
    def channel_properties(self) -> global___ChannelProperties: ...
    @property
    def fast_feedback_sources(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Defines compatible fast feedback sources"""

    def __init__(
        self,
        *,
        channel_properties: global___ChannelProperties | None = ...,
        fast_feedback_sources: collections.abc.Iterable[builtins.str] | None = ...,
        local_oscillator: builtins.bool = ...,
        mixer_correction: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["channel_properties", b"channel_properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["channel_properties", b"channel_properties", "fast_feedback_sources", b"fast_feedback_sources", "local_oscillator", b"local_oscillator", "mixer_correction", b"mixer_correction"]) -> None: ...

global___AWGProperties = AWGProperties

@typing.final
class ReadoutProperties(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CHANNEL_PROPERTIES_FIELD_NUMBER: builtins.int
    INTEGRATION_START_DEAD_TIME_FIELD_NUMBER: builtins.int
    INTEGRATION_STOP_DEAD_TIME_FIELD_NUMBER: builtins.int
    INTEGRATION_START_DEAD_TIME_SAMPLES_FIELD_NUMBER: builtins.int
    INTEGRATION_STOP_DEAD_TIME_SAMPLES_FIELD_NUMBER: builtins.int
    integration_start_dead_time: builtins.float
    """Unused."""
    integration_stop_dead_time: builtins.float
    """Unused."""
    integration_start_dead_time_samples: builtins.int
    """Dead time samples before integration"""
    integration_stop_dead_time_samples: builtins.int
    """Dead time samples after integration."""
    @property
    def channel_properties(self) -> global___ChannelProperties: ...
    def __init__(
        self,
        *,
        channel_properties: global___ChannelProperties | None = ...,
        integration_start_dead_time: builtins.float = ...,
        integration_stop_dead_time: builtins.float = ...,
        integration_start_dead_time_samples: builtins.int = ...,
        integration_stop_dead_time_samples: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["channel_properties", b"channel_properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["channel_properties", b"channel_properties", "integration_start_dead_time", b"integration_start_dead_time", "integration_start_dead_time_samples", b"integration_start_dead_time_samples", "integration_stop_dead_time", b"integration_stop_dead_time", "integration_stop_dead_time_samples", b"integration_stop_dead_time_samples"]) -> None: ...

global___ReadoutProperties = ReadoutProperties
