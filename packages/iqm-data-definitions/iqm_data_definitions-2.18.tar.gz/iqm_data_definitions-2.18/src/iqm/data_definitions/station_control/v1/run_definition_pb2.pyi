"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

Run definition, fully defining what should be executed in the run.
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import iqm.data_definitions.common.v1.sweep_pb2
import iqm.data_definitions.station_control.v1.sweep_request_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class RunDefinition(google.protobuf.message.Message):
    """The instructions required to perform a run."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class HardSweepsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> iqm.data_definitions.common.v1.sweep_pb2.CartesianSweep: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: iqm.data_definitions.common.v1.sweep_pb2.CartesianSweep | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    RUN_ID_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    EXPERIMENT_NAME_FIELD_NUMBER: builtins.int
    EXPERIMENT_LABEL_FIELD_NUMBER: builtins.int
    OPTIONS_FIELD_NUMBER: builtins.int
    ADDITIONAL_RUN_PROPERTIES_FIELD_NUMBER: builtins.int
    SOFTWARE_VERSION_SET_ID_FIELD_NUMBER: builtins.int
    HARD_SWEEPS_FIELD_NUMBER: builtins.int
    COMPONENTS_FIELD_NUMBER: builtins.int
    DEFAULT_SWEEP_PARAMETERS_FIELD_NUMBER: builtins.int
    DEFAULT_DATA_PARAMETERS_FIELD_NUMBER: builtins.int
    SWEEP_DEFINITION_FIELD_NUMBER: builtins.int
    run_id: builtins.str
    """Unique identifier (UUID) of the run."""
    username: builtins.str
    """User who defined the run."""
    experiment_name: builtins.str
    """Identifier of the experiment name."""
    experiment_label: builtins.str
    """Freeform label of the Experiment. As opposed to `experiment_name`, no core logic relies on this value."""
    software_version_set_id: builtins.int
    """Unique identifier of the software version set of the current Python runtime."""
    @property
    def options(self) -> google.protobuf.struct_pb2.Struct:
        """Experiment-specific options or toggles that generated the run."""

    @property
    def additional_run_properties(self) -> google.protobuf.struct_pb2.Struct:
        """A free-form dictionary of data, used to store information that does not fall into other categories."""

    @property
    def hard_sweeps(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, iqm.data_definitions.common.v1.sweep_pb2.CartesianSweep]:
        """ Maps `return_parameters` to hardware sweep specification which specifies
         how the data measured at each spot should be interpreted and shaped.
         The hard sweep specification is in the same format as `sweeps`,
         which means that the returned data can be interpreted as an N-dimensional sweep inside the spot.
         An empty list is interpreted such that the return parameter is a scalar.
         The hard sweep specification can also be `None`,
         in which case the shape will be whatever the instrument returns.
        """

    @property
    def components(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Chip components (qubits, couplers) that are active in the run."""

    @property
    def default_sweep_parameters(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Which of the parameters in `sweep` were added by default. The rest were added by user."""

    @property
    def default_data_parameters(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Which of the parameters in `return_parameters` were added by default. The rest were added by user."""

    @property
    def sweep_definition(self) -> iqm.data_definitions.station_control.v1.sweep_request_pb2.SweepRequest:
        """The instructions required to perform a sweep."""

    def __init__(
        self,
        *,
        run_id: builtins.str = ...,
        username: builtins.str = ...,
        experiment_name: builtins.str = ...,
        experiment_label: builtins.str = ...,
        options: google.protobuf.struct_pb2.Struct | None = ...,
        additional_run_properties: google.protobuf.struct_pb2.Struct | None = ...,
        software_version_set_id: builtins.int = ...,
        hard_sweeps: collections.abc.Mapping[builtins.str, iqm.data_definitions.common.v1.sweep_pb2.CartesianSweep] | None = ...,
        components: collections.abc.Iterable[builtins.str] | None = ...,
        default_sweep_parameters: collections.abc.Iterable[builtins.str] | None = ...,
        default_data_parameters: collections.abc.Iterable[builtins.str] | None = ...,
        sweep_definition: iqm.data_definitions.station_control.v1.sweep_request_pb2.SweepRequest | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["additional_run_properties", b"additional_run_properties", "options", b"options", "sweep_definition", b"sweep_definition"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["additional_run_properties", b"additional_run_properties", "components", b"components", "default_data_parameters", b"default_data_parameters", "default_sweep_parameters", b"default_sweep_parameters", "experiment_label", b"experiment_label", "experiment_name", b"experiment_name", "hard_sweeps", b"hard_sweeps", "options", b"options", "run_id", b"run_id", "software_version_set_id", b"software_version_set_id", "sweep_definition", b"sweep_definition", "username", b"username"]) -> None: ...

global___RunDefinition = RunDefinition
