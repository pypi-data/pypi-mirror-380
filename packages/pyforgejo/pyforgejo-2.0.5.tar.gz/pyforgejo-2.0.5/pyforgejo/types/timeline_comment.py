# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .comment import Comment
from .issue import Issue
from .label import Label
from .milestone import Milestone
from .team import Team
from .tracked_time import TrackedTime
from .user import User


class TimelineComment(UniversalBaseModel):
    """
    TimelineComment represents a timeline comment (comment of any type) on a commit or issue
    """

    assignee: typing.Optional[User] = None
    assignee_team: typing.Optional[Team] = None
    body: typing.Optional[str] = None
    created_at: typing.Optional[dt.datetime] = None
    dependent_issue: typing.Optional[Issue] = None
    html_url: typing.Optional[str] = None
    id: typing.Optional[int] = None
    issue_url: typing.Optional[str] = None
    label: typing.Optional[Label] = None
    milestone: typing.Optional[Milestone] = None
    new_ref: typing.Optional[str] = None
    new_title: typing.Optional[str] = None
    old_milestone: typing.Optional[Milestone] = None
    old_project_id: typing.Optional[int] = None
    old_ref: typing.Optional[str] = None
    old_title: typing.Optional[str] = None
    project_id: typing.Optional[int] = None
    pull_request_url: typing.Optional[str] = None
    ref_action: typing.Optional[str] = None
    ref_comment: typing.Optional[Comment] = None
    ref_commit_sha: typing.Optional[str] = pydantic.Field(default=None)
    """
    commit SHA where issue/PR was referenced
    """

    ref_issue: typing.Optional[Issue] = None
    removed_assignee: typing.Optional[bool] = pydantic.Field(default=None)
    """
    whether the assignees were removed or added
    """

    resolve_doer: typing.Optional[User] = None
    review_id: typing.Optional[int] = None
    tracked_time: typing.Optional[TrackedTime] = None
    type: typing.Optional[str] = None
    updated_at: typing.Optional[dt.datetime] = None
    user: typing.Optional[User] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
