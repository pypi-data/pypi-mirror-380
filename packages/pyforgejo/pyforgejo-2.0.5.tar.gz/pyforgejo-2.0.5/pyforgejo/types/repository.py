# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import datetime as dt
import typing

import pydantic

from ..core.pydantic_utilities import (IS_PYDANTIC_V2, UniversalBaseModel,
                                       update_forward_refs)
from .external_tracker import ExternalTracker
from .external_wiki import ExternalWiki
from .internal_tracker import InternalTracker
from .permission import Permission
from .repo_transfer import RepoTransfer
from .repository_object_format_name import RepositoryObjectFormatName
from .user import User


class Repository(UniversalBaseModel):
    """
    Repository represents a repository
    """

    allow_fast_forward_only_merge: typing.Optional[bool] = None
    allow_merge_commits: typing.Optional[bool] = None
    allow_rebase: typing.Optional[bool] = None
    allow_rebase_explicit: typing.Optional[bool] = None
    allow_rebase_update: typing.Optional[bool] = None
    allow_squash_merge: typing.Optional[bool] = None
    archived: typing.Optional[bool] = None
    archived_at: typing.Optional[dt.datetime] = None
    avatar_url: typing.Optional[str] = None
    clone_url: typing.Optional[str] = None
    created_at: typing.Optional[dt.datetime] = None
    default_allow_maintainer_edit: typing.Optional[bool] = None
    default_branch: typing.Optional[str] = None
    default_delete_branch_after_merge: typing.Optional[bool] = None
    default_merge_style: typing.Optional[str] = None
    default_update_style: typing.Optional[str] = None
    description: typing.Optional[str] = None
    empty: typing.Optional[bool] = None
    external_tracker: typing.Optional[ExternalTracker] = None
    external_wiki: typing.Optional[ExternalWiki] = None
    fork: typing.Optional[bool] = None
    forks_count: typing.Optional[int] = None
    full_name: typing.Optional[str] = None
    globally_editable_wiki: typing.Optional[bool] = None
    has_actions: typing.Optional[bool] = None
    has_issues: typing.Optional[bool] = None
    has_packages: typing.Optional[bool] = None
    has_projects: typing.Optional[bool] = None
    has_pull_requests: typing.Optional[bool] = None
    has_releases: typing.Optional[bool] = None
    has_wiki: typing.Optional[bool] = None
    html_url: typing.Optional[str] = None
    id: typing.Optional[int] = None
    ignore_whitespace_conflicts: typing.Optional[bool] = None
    internal: typing.Optional[bool] = None
    internal_tracker: typing.Optional[InternalTracker] = None
    language: typing.Optional[str] = None
    languages_url: typing.Optional[str] = None
    link: typing.Optional[str] = None
    mirror: typing.Optional[bool] = None
    mirror_interval: typing.Optional[str] = None
    mirror_updated: typing.Optional[dt.datetime] = None
    name: typing.Optional[str] = None
    object_format_name: typing.Optional[RepositoryObjectFormatName] = pydantic.Field(
        default=None
    )
    """
    ObjectFormatName of the underlying git repository
    """

    open_issues_count: typing.Optional[int] = None
    open_pr_counter: typing.Optional[int] = None
    original_url: typing.Optional[str] = None
    owner: typing.Optional[User] = None
    parent: typing.Optional["Repository"] = None
    permissions: typing.Optional[Permission] = None
    private: typing.Optional[bool] = None
    release_counter: typing.Optional[int] = None
    repo_transfer: typing.Optional[RepoTransfer] = None
    size: typing.Optional[int] = None
    ssh_url: typing.Optional[str] = None
    stars_count: typing.Optional[int] = None
    template: typing.Optional[bool] = None
    topics: typing.Optional[typing.List[str]] = None
    updated_at: typing.Optional[dt.datetime] = None
    url: typing.Optional[str] = None
    watchers_count: typing.Optional[int] = None
    website: typing.Optional[str] = None
    wiki_branch: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


update_forward_refs(Repository)
