# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class ExternalTracker(UniversalBaseModel):
    """
    ExternalTracker represents settings for external tracker
    """

    external_tracker_format: typing.Optional[str] = pydantic.Field(default=None)
    """
    External Issue Tracker URL Format. Use the placeholders {user}, {repo} and {index} for the username, repository name and issue index.
    """

    external_tracker_regexp_pattern: typing.Optional[str] = pydantic.Field(default=None)
    """
    External Issue Tracker issue regular expression
    """

    external_tracker_style: typing.Optional[str] = pydantic.Field(default=None)
    """
    External Issue Tracker Number Format, either `numeric`, `alphanumeric`, or `regexp`
    """

    external_tracker_url: typing.Optional[str] = pydantic.Field(default=None)
    """
    URL of external issue tracker.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
