# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class InternalTracker(UniversalBaseModel):
    """
    InternalTracker represents settings for internal tracker
    """

    allow_only_contributors_to_track_time: typing.Optional[bool] = pydantic.Field(
        default=None
    )
    """
    Let only contributors track time (Built-in issue tracker)
    """

    enable_issue_dependencies: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Enable dependencies for issues and pull requests (Built-in issue tracker)
    """

    enable_time_tracker: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Enable time tracking (Built-in issue tracker)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
