# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions

from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .node_info_metadata import NodeInfoMetadata
from .node_info_services import NodeInfoServices
from .node_info_software import NodeInfoSoftware
from .node_info_usage import NodeInfoUsage


class NodeInfo(UniversalBaseModel):
    """
    NodeInfo contains standardized way of exposing metadata about a server running one of the distributed social networks
    """

    metadata: typing.Optional[NodeInfoMetadata] = None
    open_registrations: typing_extensions.Annotated[
        typing.Optional[bool], FieldMetadata(alias="openRegistrations")
    ] = None
    protocols: typing.Optional[typing.List[str]] = None
    services: typing.Optional[NodeInfoServices] = None
    software: typing.Optional[NodeInfoSoftware] = None
    usage: typing.Optional[NodeInfoUsage] = None
    version: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
