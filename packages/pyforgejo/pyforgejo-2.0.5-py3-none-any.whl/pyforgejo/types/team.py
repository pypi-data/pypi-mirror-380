# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .organization import Organization
from .team_permission import TeamPermission


class Team(UniversalBaseModel):
    """
    Team represents a team in an organization
    """

    can_create_org_repo: typing.Optional[bool] = None
    description: typing.Optional[str] = None
    id: typing.Optional[int] = None
    includes_all_repositories: typing.Optional[bool] = None
    name: typing.Optional[str] = None
    organization: typing.Optional[Organization] = None
    permission: typing.Optional[TeamPermission] = None
    units: typing.Optional[typing.List[str]] = None
    units_map: typing.Optional[typing.Dict[str, str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
