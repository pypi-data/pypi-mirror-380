---
apiVersion: v1
kind: Pod
metadata:
  name: "bdms-pytest"
  annotations:
    "helm.sh/hook": test
spec:
  volumes:
  - name: rucio-config
    configMap:
      name: {{ template "bdms.rucioConfigMapName" . }}
  - name: cafile
    secret:
      defaultMode: 420
      secretName: {{ template "certprefix" . }}-server-cafile
  - name: dppsuser-certkey
    secret:
      defaultMode: 420
      secretName: {{ template "certprefix" . }}-dppsuser-certkey
  - name: scripts
    configMap:
      name: {{ template "bdms.fullname" . }}-scripts
  - name: dppsuser-certkey-600
    secret:
      defaultMode: 0600
      secretName: {{ template "certprefix" . }}-dppsuser-certkey
  - name: dppsuser-certkey-400
    secret:
      defaultMode: 0400
      secretName: {{ template "certprefix" . }}-dppsuser-certkey
  - name: dppsuser-non-dpps-certkey
    secret:
      defaultMode: 420
      secretName: {{ template "certprefix" . }}-dppsuser-non-dpps-certkey
  - name: dppsuser-non-dpps-certkey-600
    secret:
      defaultMode: 0600
      secretName: {{ template "certprefix" . }}-dppsuser-non-dpps-certkey
  - name: dppsuser-non-dpps-certkey-400
    secret:
      defaultMode: 0400
      secretName: {{ template "certprefix" . }}-dppsuser-non-dpps-certkey
  - name: dppsuser-unprivileged-certkey-600
    secret:
      defaultMode: 0600
      secretName: {{ template "certprefix" . }}-dppsuser-unprivileged-certkey
  - name: dppsuser-unprivileged-certkey-400
    secret:
      defaultMode: 0400
      secretName: {{ template "certprefix" . }}-dppsuser-unprivileged-certkey

  {{ if .Values.iam.enabled }}
  - name: trust-anchors
    persistentVolumeClaim:
      claimName: {{ include "bdms.fullname" . }}-dpps-iam-grid-ca-bundle-pvc
  - name: ca-bundle
    persistentVolumeClaim:
      claimName: {{ include "bdms.fullname" . }}-dpps-iam-ca-bundle-pvc
  - name: vomses
    configMap:
      name: {{ include "bdms.fullname" . }}-dpps-iam-vomses
  - configMap:
      defaultMode: 420
      name: {{ include "bdms.fullname" . }}-dpps-iam-voms-lsc
    name: vomsdir
  {{ end }}

  {{ if .Values.dev.mount_repo }}
  - name: repo
    hostPath:
      path: /repo
      type: Directory
  {{ end }}
  - name: storage-1-data
    persistentVolumeClaim:
      claimName: storage-1-pvc

  containers:
  - name: bdms-pytest
    image: harbor.cta-observatory.org/dpps/bdms-client:{{ .Values.dev.client_image_tag | default .Chart.AppVersion }}
    workingDir: /home/user/bdms
    securityContext:
      runAsUser: 0
    command:
    - /bin/sh
    - -c
    - |
      set -ex

      export PYTHONUNBUFFERED=1
      export PATH=$PWD/.toolkit/bin:$PATH

      export HELM_RELEASE_NAME={{ .Release.Name }}

      voms-proxy-init2 -valid 9999:00 -cert /opt/rucio/etc/usercert.pem -key /opt/rucio/etc/userkey.pem

      {{ if .Values.iam.enabled }}
      # normal k8s dns does not allow to set a name like voms.test.example
      # voms svc uses port 8443, so it does not pass through the ingress controller like other services

      function add_hosts_alias {
         original_host="${1:?}"
         host_alias="${2:?}"

         while [[ -z $(dig ${original_host} +short) ]]; do
            echo "Waiting for ${original_host} to resolve..."
            sleep 1
         done
         host_ip=$(dig ${original_host} +short | head -n 1)

         echo "${host_ip} ${host_alias}" >> /etc/hosts
      }

      add_hosts_alias "{{ include "bdms.fullname" . }}-dpps-iam-nginx-voms.default.svc.cluster.local" voms.test.example
      add_hosts_alias ingress-nginx-controller.ingress-nginx.svc.cluster.local iam.test.example

      voms-proxy-init2 -valid 9999:00 -cert /opt/rucio/etc/usercert.pem -key /opt/rucio/etc/userkey.pem -voms {{ .Values.iam.vomsAA.config.voName }} -dont-verify-ac || echo "unable to get VOMS proxy, continuing without it"
      {{ end }}

      # test access to the storage
      # xrdfs root://rucio-storage-1 spaceinfo /rucio

      {{ .Files.Get "scripts/bootstrap_rucio/wait_for_rucio.sh" | indent 10 }}

      {{ if .Values.dev.mount_repo }}
      python3 -m pip install .[test]

      {{ if .Values.dev.run_tests }}
      python3 -m pytest \
        -svv \
        -o cache_dir=$PWD/.pytest-cache \
        --cov \
        --cov-report=xml:/tmp/coverage.xml \
        --junitxml=/tmp/report.xml \
        --color=yes \
        --log-cli-level=INFO \
        --durations=10 --durations-min=30{{- if gt (int .Values.dev.n_test_jobs) 1 }} \
        -n {{ .Values.dev.n_test_jobs }}
        {{- end }}

      curl -T /tmp/coverage.xml http://testkit:8000/coverage.xml
      curl -T /tmp/report.xml http://testkit:8000/report.xml
      {{ end }}
      {{ end }}

      {{ if .Values.dev.sleep }}
      sleep infinity
      {{ end }}


    volumeMounts:
    - name: rucio-config
      mountPath: /opt/rucio/etc/rucio.cfg
      subPath: rucio.cfg

    - name: cafile
      subPath: ca.pem
      mountPath: /etc/grid-security/ca.pem

    - name: dppsuser-certkey-400
      mountPath: /opt/rucio/etc/userkey.pem
      subPath: dppsuser.key.pem

    - name: dppsuser-certkey-600
      mountPath: /opt/rucio/etc/usercert.pem
      subPath: dppsuser.pem

    - name: dppsuser-non-dpps-certkey-400
      mountPath: /opt/rucio/etc/nondppsuserkey.pem
      subPath: dppsuser.key.pem

    - name: dppsuser-non-dpps-certkey-600
      mountPath: /opt/rucio/etc/nondppsusercert.pem
      subPath: dppsuser.pem

    - name: dppsuser-unprivileged-certkey-400
      mountPath: /opt/rucio/etc/unprivilegeduserkey.pem
      subPath: dppsuser.key.pem

    - name: dppsuser-unprivileged-certkey-600
      mountPath: /opt/rucio/etc/unprivilegedusercert.pem
      subPath: dppsuser.pem


    {{ if .Values.iam.enabled }}
    - name: vomses
      mountPath: /etc/vomses
      subPath: vomses
    - mountPath: /etc/grid-security/vomsdir/{{ .Values.iam.vomsAA.config.voName }}/{{ .Values.iam.vomsAA.config.host }}.lsc
      name: vomsdir
      subPath: {{ .Values.iam.vomsAA.config.voName }}
    - name: trust-anchors
      mountPath: /etc/grid-security/certificates
      readOnly: true
    - name: ca-bundle
      mountPath: /etc/pki
      readOnly: true
    {{ else }}
    - name: cafile
      subPath: ca.pem
      mountPath: /etc/grid-security/certificates/74df993b.0
    {{ end }}

    - name: scripts
      mountPath: /scripts

    {{ if .Values.dev.mount_repo }}
    - name: repo
      mountPath: /home/user/bdms/
    {{ end }}
    - name: storage-1-data
      mountPath: /storage-1

    env:
    - name: RUCIO_CLIENT_MODE
      value: user


  restartPolicy: Never

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "bdms.fullname" . }}-scripts
data:
{{ (.Files.Glob "scripts/**").AsConfig | indent 2 }}
