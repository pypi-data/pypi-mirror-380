[build-system]
build-backend = "flit_core.buildapi"
requires = [
  "flit-core>=3.7.1,<4",
]

[project]
name = "upstage-des"
version = "0.4.0"
description = "A library for behavior-driven discrete event simulation."
readme = "README.md"
keywords = [
  "agent based modeling",
  "agents",
  "behavior modeling",
  "discrete event simulation",
  "modeling",
  "operations",
  "simpy",
  "simulation",
]
license = { file = "LICENSE" }
authors = [
  { name = "James Arruda", email = "James.Arruda@gtri.gatech.edu" },
]
requires-python = ">=3.11"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
  "simpy>=4",
]
optional-dependencies.docs = [
  "myst-parser",
  "pydata-sphinx-theme",
  "sphinx>=7",
]
optional-dependencies.lint = [
  "mypy",
  "pyproject-fmt>=2.5",
  "ruff>=0.6",
  "ssort>=0.12",
]
optional-dependencies.test = [
  "pytest",
  "pytest-cov",
  "pytest-html",
  "pytest-json-report",
  "pytest-xdist",
]
urls."Bug Tracker" = "https://github.com/gtri/upstage/issues"
urls.Documentation = "https://gtri.github.io/upstage"
urls."Source" = "https://github.com/gtri/upstage"

[tool.flit.sdist]
exclude = [
  ".gitignore",
]

[tool.ruff]
line-length = 100
cache-dir = "build/.ruff_cache"

format.docstring-code-line-length = 100
lint.select = [
  "D",
  "E",
  "F",
  "I",
  "PLE",
  "PLW",
  "UP",
]
lint.ignore = [
  "D105",
]
lint.per-file-ignores."src/upstage_des/test/__*.py" = [
  "D",
]
lint.per-file-ignores."src/upstage_des/test/test*.py" = [
  "D",
]
lint.pydocstyle.convention = "google"

[tool.pytest.ini_options]
junit_family = "xunit2"
cache_dir = "build/.pytest_cache"
addopts = [
  "--pyargs",
  "upstage_des",
  # for contributors
  "--cov-report=term-missing:skip-covered",
  "--color=yes",
  # for review
  "--html=build/reports/pytest.html",
  "--self-contained-html",
  "--cov-report=html:build/reports/htmlcov",
  "--cov-report=xml:build/reports/coverage.xml",
  "--cov-context=test",
  # coverage
  "--cov=upstage_des",
  "--no-cov-on-fail",
  # for robots
  "--junitxml=build/reports/pytest.xunit.xml",
  "--json-report",
  # misc
  "-vv",
  "--ff",
]

[tool.coverage.run]
data_file = "build/reports/.coverage"
omit = [
  "*/test/test*.py",
  "*/test/test_nucleus_state_share/*.py",
  "*/upstage_des/utils.py",
]

[tool.coverage.html]
show_contexts = true

[tool.coverage.paths]
upstage_des = [
  "src/upstage_des",
  "*/src/upstage_des",
]

[tool.coverage.report]
exclude_also = [
  "raise UpstageError*",
  "raise SimulationError*",
  "raise NotImplementedError*",
  "except LookupError",
  "except RuntimeError",
  "except SimulationError",
  "raise TypeError",
  "except TypeError",
  "raise MotionAndDetectionError",
  "except MotionAndDetectionError",
]

[tool.mypy]
# broken by ipywidgetsplugins = "pydantic.mypy"
cache_dir = "build/.mypy_cache"
sqlite_cache = true
python_version = "3.11"
allow_redefinition = true
check_untyped_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
warn_return_any = true
warn_unused_ignores = true
disable_error_code = "type-abstract"
# disallow_any_unimported = true
#exclude = [
#  "^.+/upstage_des/test.+\\.py$",
#]

[[tool.mypy.overrides]]
module = [
  "importlib.metadata",
]
ignore_missing_imports = true
