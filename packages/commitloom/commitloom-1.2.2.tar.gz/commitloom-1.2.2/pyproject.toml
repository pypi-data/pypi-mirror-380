[tool.poetry]
name = "commitloom"
version = "1.2.2"
description = "Weave perfect git commits with AI-powered intelligence"
authors = ["Petru Arakiss <petruarakiss@gmail.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/Arakiss/commitloom"
repository = "https://github.com/Arakiss/commitloom"
documentation = "https://github.com/Arakiss/commitloom#readme"
keywords = [
    "git",
    "commit",
    "ai",
    "openai",
    "cli",
    "git-tools",
    "semantic-commits"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Version Control :: Git",
    "Typing :: Typed"
]
packages = [{ include = "commitloom" }]

[tool.poetry.scripts]
loom = "commitloom.__main__:main"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/Arakiss/commitloom/issues"

[tool.poetry.dependencies]
python = "^3.11"
python-dotenv = "^1.0.1"
rich = "^13.9.4"
requests = "^2.32.3"
click = "^8.1.7"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pytest-cov = "^6.0.0"
pytest-asyncio = "^0.23.8"
ruff = "^0.1.6"
mypy = "^1.7.1"
types-requests = "^2.32.0"
pytest-mock = "^3.14.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = """
    --cov=commitloom
    --cov-report=term-missing
    --cov-fail-under=70
    --strict-markers
    --strict-config
"""
asyncio_mode = "strict"
required_plugins = ["pytest-mock"]

[tool.pytest-asyncio]
asyncio_fixture_mode = "function"

[tool.coverage.run]
source = ["commitloom"]
omit = [
    "tests/*",
    "**/__init__.py",
    "commitloom/__main__.py",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "def __repr__",
    "@abstractmethod",
]
fail_under = 70

[tool.ruff]
line-length = 100
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "B", "UP"]
ignore = ["E402"]

[tool.ruff.lint.per-file-ignores]
"commitloom/cli/cli_handler.py" = ["C901"]
"commitloom/core/git.py" = ["B904"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["commitloom"]
