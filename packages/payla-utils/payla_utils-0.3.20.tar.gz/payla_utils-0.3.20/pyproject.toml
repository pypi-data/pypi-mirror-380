[project]
name = "payla-utils"
version = "0.3.20"
description = "payla_utils python package"
authors = [{ name = "Payla Services", email = "tools@payla.de" }]
requires-python = ">= 3.11, < 4"
readme = "README-public-pypi.md"
keywords = ["payla_utils"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "Django>= 4.0",
    "structlog==25.*",
    "django-ipware>= 6.0",
    "django-admin-interface==0.30.*",
    "python-json-logger==3.*",
    "structlog-sentry==2.*",
    "sentry-sdk>=1.0",
    "djangorestframework>=3.14.0",
    "django-extensions>=3.2.1",
    "django-pgtrigger>=4.7.0",
    "pydantic>=2.10.3",
    "httpx>=0.28.1",
]

[project.optional-dependencies]
oidc = ["mozilla_django_oidc>=4.0.1"]
history = ["django-simple-history>=3.4.0,<4"]

[dependency-groups]
dev = [
    "pytest>=8.0.0,<9",
    "pytest-django>=4.5.2,<5",
    "pytest-cov>=7,<8",
    "pre-commit==4.*",
    "ipdb>=0.13.13,<0.14",
    "ruff==0.13.*",
    "psycopg>=3.1.9,<4",
    "django-environ>=0.12.0,<0.13",
    "django-simple-history>=3.4.0,<4",
    "ipython>=9.0.2,<10",
    "mozilla_django_oidc>=4.0.1",
]

[tool.hatch.build.targets.sdist]
include = ["payla_utils"]

[tool.hatch.build.targets.wheel]
include = ["payla_utils"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "pragma: no cover",
    "def __str__",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
omit = ["*/tests/*"]

[tool.ruff]
# Docs: https://beta.ruff.rs/docs/
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".pre-commit-cache",
    ".ruff_cache",
    ".tox",
    ".venv",
    "venv",
    "docs",
    "__pycache",
    "**/migrations/*",
]

line-length = 120
# Assume Python 3.10.
target-version = "py310"

[tool.ruff.format]
quote-style = "preserve"

[tool.ruff.lint]
# Rules: https://beta.ruff.rs/docs/rules/
select = [
    "F",
    "FA",
    "E",
    "B",
    "C",
    "C4",
    "C90",
    "I",
    "N",
    "EXE",
    "ISC",
    "ICN",
    "INP",
    "INT",
    "PIE",
    "SIM",
    "W",
    "T20",
    "UP",
    "T10",
    "G",
    "DJ",
    "ERA",
    "TID252",
    "RUF100",
    "TRY300",
    "TRY301",
    "TRY400",
    "FLY",
    "S",
    "BLE",
    "DTZ",
    "PYI",
    "RSE",
    "RET",
    "PTH",
    "PL",
    "PERF",
    "RUF",
]
# Later on might be useful C/C90 (Compexity), ERA (Found commented-out code), FBT
ignore = ["ISC001", "B008", "SIM102", "S101", "RUF012"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
