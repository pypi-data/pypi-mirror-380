import{d as c,aZ as I,b2 as $,b3 as A,f as M,P as D,a_ as R,ba as x,r as b}from"./AppContainer-DlJO1h2A.js";import{S as B,B as k,K as O,M as P,$ as F}from"./sidepanel-CYx2dhah.js";import{S as G}from"./ServiceDeskImpl-B4MsmRMX.js";/**
* @license
* 
* (C) Copyright IBM Corp. 2017, 2025. All Rights Reserved.
* 
* Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
* in compliance with the License. You may obtain a copy of the License at
* 
* http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software distributed under the License
* is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
* or implied. See the License for the specific language governing permissions and limitations under
* the License.
* 
* @carbon/ai-chat 0.3.3
* 
* Built: Jul 11 2025 1:09 pm -04:00
* 
* 
*/const r="[GenesysMessengerServiceDesk]",v=10;let E,o;class N extends G{constructor(){super(...arguments),this.maxFileSizeKB=0,this.doFileUpload=async e=>{const t=new DataTransfer;t.items.add(e.file);const s=()=>{this.callback.setFileUploadStatus(e.id,!0,this.getIntlText("fileSharing_uploadFailed"))};this.currentFileUploadID=e.id,c(`${r} MessagingService.requestUpload`,e),o("command","MessagingService.requestUpload",{file:t.files},null,s)}}async startChat(e,t){this.updatePersistedState({agentsJoined:{},lastAgentMessageID:null},!1),await this.ensureGenesys(!1);const s=e.output.generic.find(I),{preStartChatPayload:a}=t,{sessionHistoryKey:n}=t.agentAppInfo,d={...a==null?void 0:a.customAttributes,wacSessionHistoryKey:n};o("command","Database.set",{messaging:{customAttributes:d}}),$(s,"Begin conversation").forEach(h=>{o("command","MessagingService.sendMessage",{message:h})})}async handleMessagesReceived(e){c(`${r} MessagingService.messagesReceived`,e);const t=e.data.messages.filter(s=>(s==null?void 0:s.direction)==="Outbound");t.length&&(this.callback.agentTyping(!1),await A(t,async s=>this.handleOutboundMessage(s,!0)))}async handleOutboundMessage(e,t){var u,p,f,y;const s=((u=e.channel)==null?void 0:u.from)||e.from,a=(s==null?void 0:s.nickname)||(s==null?void 0:s.name)||null,n=(s==null?void 0:s.avatar)||(s==null?void 0:s.image)||null,d=a||"default-agent",{isConnected:l}=this.serviceManager.store.getState().persistedToBrowserStorage.chatState.agentState;(!this.persistedState().agentsJoined[a]||!l)&&(this.updatePersistedState({agentsJoined:{[a]:!0}}),await this.callback.agentJoined({id:d,nickname:a,profile_picture_url:n})),this.updatePersistedState({lastAgentMessageID:e.id}),((p=e.type)==null?void 0:p.toLowerCase())==="event"?t&&this.handleMessagesReceivedEvent(e):e.text?this.handleMessagesReceivedText(e,d):((f=e.content)!=null&&f.length||(y=e.files)!=null&&y.length)&&this.handleFileAttachments(e,d)}async handleMessagesReceivedEvent(e){A(e.events,async t=>{var s,a;if(t.eventType==="CoBrowse"&&((s=t.coBrowse)==null?void 0:s.type)==="OfferingExpired")c(`${r} The agent cancelled the co-browse request.`),await this.callback.screenShareEnded();else if(t.eventType==="CoBrowse"&&((a=t.coBrowse)==null?void 0:a.type)==="Offering"){c(`${r} Requesting co-browse sharing from the user...`);const n=await this.callback.screenShareRequest();c(`${r} Got result for the co-browse request: ${n}`);const{sessionId:d,sessionJoinToken:l}=t.coBrowse,h={joinCode:l,sessionId:d};n===B.ACCEPTED?o("command","CobrowseService.acceptSession",h,()=>c(`${r} Co-browse session successfully started`),f=>M(`${r} Error starting a co-browse session`,f)):o("command","CobrowseService.declineSession",h)}})}async handleMessagesReceivedText(e,t){await this.callback.sendMessageToUser(e.text,t)}async handleFileAttachments(e,t){const a=this.getFileAttachments(e).map(({filename:n,url:d})=>D({response_type:P.BUTTON,kind:O.LINK,button_type:k.URL,url:d,label:n}));if(a.length){const n={id:null,output:{generic:a}};await this.callback.sendMessageToUser(n,t)}}getFileAttachments(e){var s,a;const t=[];return(s=e.content)==null||s.filter(n=>n==null?void 0:n.attachment).forEach(({attachment:n})=>t.push({filename:n.filename,url:n.url})),(a=e.files)==null||a.forEach(n=>t.push({filename:n.name,url:n.downloadUrl})),t}handleTypingReceived(e){var t,s,a,n;if(c(`${r} MessagingService.typingReceived`,e),!R(this.persistedState().agentsJoined)){this.agentTypingTimeout&&clearTimeout(this.agentTypingTimeout);const d=((s=(t=e.data)==null?void 0:t.typing)==null?void 0:s.type)==="On";this.callback.agentTyping(d),d&&(this.agentTypingTimeout=setTimeout(()=>{this.callback.agentTyping(!1),this.agentTypingTimeout=null},((n=(a=e.data)==null?void 0:a.typing)==null?void 0:n.duration)||5e3))}}handleTypingTimeout(e){c(`${r} MessagingService.handleTypingTimeout`,e),this.callback.agentTyping(!1)}async handleFileUploaded(e){c(`${r} MessagingService.fileUploaded`,e),o("command","MessagingService.sendMessage",{message:this.getIntlText("fileSharing_agentMessageText")}),this.callback.setFileUploadStatus(this.currentFileUploadID)}handleFileUploadError(e){M(`${r} MessagingService.fileUploadError`,e),this.currentFileUploadID&&this.callback.setFileUploadStatus(this.currentFileUploadID,!0,this.getIntlText("fileSharing_uploadFailed"))}handleError(e){var t,s,a,n,d,l;if(M(`${r} MessagingService.error`,e),this.currentFileUploadID){const h=(a=(s=(t=e.data)==null?void 0:t.error)==null?void 0:s.body)==null?void 0:a.errorCode,u=((l=(d=(n=e.data)==null?void 0:n.error)==null?void 0:d.body)==null?void 0:l.errorMessage)||this.getIntlText("fileSharing_uploadFailed");switch(h){case 4001:case 4002:case 4003:case 4004:case 4005:case 4008:case 4010:this.callback.setFileUploadStatus(this.currentFileUploadID,!0,u);break}}}async handleRestored(e){var s,a;c(`${r} MessagingService.restored`,e);const{lastAgentMessageID:t}=this.persistedState();if(c(`${r} Last agent message: ${t}`),t&&((a=(s=e.data)==null?void 0:s.messages)!=null&&a.length)){const{messages:n}=e.data,d=n.findIndex(l=>l.id===t);if(d>0)for(let l=d-1;l>=0;l--){const h=n[l];h.messageType==="outbound"&&await this.handleOutboundMessage(h,!1)}}}handleOffline(e){c(`${r} MessagingService.offline`,e),this.callback.setErrorStatus({type:F.DISCONNECTED,isDisconnected:!0})}handleReconnected(e){c(`${r} MessagingService.reconnected`,e),this.callback.setErrorStatus({type:F.DISCONNECTED,isDisconnected:!1})}async handleCoBrowseEnded(e){c(`${r} CobrowseService.sessionEnded`,e),await this.callback.screenShareEnded()}async endChat(){this.stopUserTypingInterval(),this.updatePersistedState({agentsJoined:{},lastAgentMessageID:null},!1)}async sendMessageToAgent(e,t,s){e.input.text&&o("command","MessagingService.sendMessage",{message:e.input.text}),s.filesToUpload.length&&this.doFileUpload(s.filesToUpload[0])}async userReadMessages(){}async userTyping(e){this.stopUserTypingInterval(),e&&(o("command","MessagingService.sendTyping"),this.userTypingInterval=window.setInterval(()=>{o("command","MessagingService.sendTyping")},2500))}stopUserTypingInterval(){this.userTypingInterval&&(clearInterval(this.userTypingInterval),this.userTypingInterval=null)}async areAnyAgentsOnline(e){return!0}filesSelectedForUpload(e){e.forEach(t=>{if(t.file.size>this.maxFileSizeKB*1024){const s=`${this.maxFileSizeKB}KB`,a=this.instance.getIntl().formatMessage({id:"fileSharing_fileTooLarge"},{maxSize:s});this.callback.setFileUploadStatus(t.id,!0,a)}})}async screenShareStop(){o("command","CobrowseService.stopSession")}async ensureGenesys(e){return E||(E=this.installGenesys(e)),E}async installGenesys(e){var y,T,w,U;const{environment:t,deploymentID:s,scriptURL:a}=this.config;c(`${r} Creating integration using config`,this.config),this.persistedState()?c(`${r} Retrieved previous state`,this.persistedState()):this.updatePersistedState({agentsJoined:{},lastAgentMessageID:null},!1);const n={environment:t,deploymentId:s,debug:this.instance.getState().isDebugEnabled},d=window,l="Genesys";d._genesysJs=l,d[l]={t:new Date,c:n,q:[]},await x(a),o=d[l];const h=new Promise((i,g)=>{function m(S){var C;c(`${r} MessagingService.started`,S),i(!((C=S==null?void 0:S.data)!=null&&C.newSession))}o("subscribe","MessagingService.started",m,g)});o("subscribe","MessagingService.messagesReceived",i=>this.handleMessagesReceived(i)),o("subscribe","MessagingService.typingReceived",i=>this.handleTypingReceived(i)),o("subscribe","MessagingService.typingTimeout",i=>this.handleTypingTimeout(i)),o("subscribe","MessagingService.fileUploaded",i=>this.handleFileUploaded(i)),o("subscribe","MessagingService.fileUploadError",i=>this.handleFileUploadError(i)),o("subscribe","MessagingService.error",i=>this.handleError(i)),o("subscribe","MessagingService.reconnected",i=>this.handleReconnected(i)),o("subscribe","MessagingService.offline",i=>this.handleOffline(i)),o("subscribe","MessagingService.restored",i=>this.handleRestored(i)),o("subscribe","CobrowseService.sessionEnded",i=>this.handleCoBrowseEnded(i)),await b(new Promise((i,g)=>{o("registerPlugin","ConfigPlugin",m=>{m.command("GenesysJS.configuration").then(S=>{this.genesysConfig=S,c(`${r} Received GenesysJS.configuration`,this.genesysConfig),i()}).catch(g)})}),v*1e3,`The GenesysJS.configuration command failed to return a configuration after ${v} seconds.`),(y=this.genesysConfig)!=null&&y.auth.enabled&&(c(`${r} Authentication is enabled`),o("registerPlugin","AuthProvider",i=>{i.registerCommand("getAuthCode",g=>{c(`${r} AuthProvider.getAuthCode`,g),this.eventBus.fire({type:"agent:genesysMessenger:getAuthCode",genesysEvent:g},this.instance)}),i.registerCommand("reAuthenticate",g=>{c(`${r} AuthProvider.reAuthenticate`,g),this.eventBus.fire({type:"agent:genesysMessenger:reAuthenticate",genesysEvent:g},this.instance)}),i.subscribe("Auth.loggedOut",g=>{c(`${r} AuthProvider.loggedOut`,g),this.eventBus.fire({type:"agent:genesysMessenger:loggedOut",genesysEvent:g},this.instance)}),i.subscribe("Auth.authError",g=>{c(`${r} AuthProvider.authError`,g),this.eventBus.fire({type:"agent:genesysMessenger:authError",genesysError:g},this.instance)}),i.ready(),this.eventBus.fire({type:"agent:genesysMessenger:AuthProvider",authProvider:i},this.instance)})),await b(new Promise(i=>{o("subscribe","MessagingService.ready",g=>{c(`${r} MessagingService.ready`,g),i()})}),v*1e3,`The Genesys MessagingService failed to report ready after ${v} seconds.`);let u=!1;e&&(u=await b(h,v*1e3,`The MessagingService.started event failed to fire after ${v} seconds.`));const p=new Set;(U=(w=(T=this.genesysConfig)==null?void 0:T.messenger)==null?void 0:w.fileUpload)!=null&&U.modes&&Object.values(this.genesysConfig.messenger.fileUpload.modes).forEach(i=>{var g;i.maxFileSizeKB>0&&(this.maxFileSizeKB=Math.max(this.maxFileSizeKB,i.maxFileSizeKB)),(g=i.fileTypes)==null||g.forEach(m=>p.add(m))});const f=Array.from(p).join(",")||void 0;return this.callback.updateCapabilities({allowFileUploads:this.maxFileSizeKB>0,allowedFileUploadTypes:f}),u}async reconnect(){return c(`${r} Reconnecting to agent...`),this.ensureGenesys(!0)}addAllEvents(){this.addEvent("MessagingService.ready"),this.addEvent("MessagingService.started"),this.addEvent("MessagingService.messagesReceived"),this.addEvent("MessagingService.uploading"),this.addEvent("MessagingService.uploadApproved"),this.addEvent("MessagingService.fileUploaded"),this.addEvent("MessagingService.fileUploadError"),this.addEvent("MessagingService.fileUploadCancelled"),this.addEvent("MessagingService.fileReceived"),this.addEvent("MessagingService.messagesUpdated"),this.addEvent("MessagingService.fileDownloaded"),this.addEvent("MessagingService.fileDownloadError"),this.addEvent("MessagingService.fileDeleted"),this.addEvent("MessagingService.oldMessages"),this.addEvent("MessagingService.historyComplete"),this.addEvent("MessagingService.typingReceived"),this.addEvent("MessagingService.typingTimeout"),this.addEvent("MessagingService.typingStarted"),this.addEvent("MessagingService.restored"),this.addEvent("MessagingService.sessionCleared"),this.addEvent("MessagingService.offline"),this.addEvent("MessagingService.reconnecting"),this.addEvent("MessagingService.reconnected"),this.addEvent("MessagingService.conversationDisconnected"),this.addEvent("MessagingService.readOnlyConversation"),this.addEvent("MessagingService.conversationReset"),this.addEvent("MessagingService.error")}addEvent(e){o("subscribe",e,(...t)=>{console.log(`${r} (All) ${e}`,t)})}}export{N as GenesysMessengerServiceDesk};
