[build-system]
requires = [ "setuptools>=61.0", "wheel",]
build-backend = "setuptools.build_meta"

[project]
name = "rfd-protocol"
version = "5.5.1"
description = "Reality-First Development Protocol - Prevents AI hallucination and ensures spec-driven development"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [ "Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing", "Topic :: Software Development :: Build Tools",]
dependencies = [ "click>=8.0.0", "requests>=2.28.0", "pyyaml>=6.0", "questionary>=1.10.0", "python-frontmatter>=1.0.0", "packaging>=21.0", "tomli>=1.2.0; python_version<'3.11'",]
[[project.authors]]
name = "RFD Protocol Team"
email = "team@rfd-protocol.dev"

[[project.maintainers]]
name = "RFD Protocol Team"
email = "team@rfd-protocol.dev"

[project.license]
text = "MIT"

[project.optional-dependencies]
dev = [ "pytest>=7.4.0", "pytest-cov>=4.1.0", "pytest-xdist>=3.5.0", "pytest-mock>=3.12.0", "pytest-timeout>=2.2.0", "black>=23.12.0", "ruff>=0.1.9", "mypy>=1.8.0", "pre-commit>=2.20.0", "python-semantic-release>=8.7.0", "tox>=4.11.0", "coverage[toml]>=7.4.0",]
test = [ "pytest>=7.4.0", "pytest-cov>=4.1.0", "pytest-timeout>=2.2.0", "coverage[toml]>=7.4.0",]
docs = [ "mkdocs>=1.5.3", "mkdocs-material>=9.5.0", "mkdocstrings[python]>=0.24.0",]

[project.scripts]
rfd = "rfd.cli:cli"

[project.urls]
Homepage = "https://github.com/rfd-protocol/rfd"
Repository = "https://github.com/rfd-protocol/rfd"
Documentation = "https://github.com/rfd-protocol/rfd/docs"

[tool.black]
line-length = 120
target-version = [ "py38",]
include = "\\.pyi?$"
extend-exclude = "/(\n  # directories\n  \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | build\n  | dist\n)/\n"

[tool.ruff]
target-version = "py38"
line-length = 120

[tool.semantic_release]
version_toml = [ "pyproject.toml:project.version",]
version_variables = [ "src/rfd/__init__.py:__version__",]
branch = "main"
build_command = "pip install build && python -m build"
dist_path = "dist"
upload_to_pypi = true
upload_to_release = true
commit_subject = "chore(release): v{version} [skip ci]"
commit_message = "Automatically generated by python-semantic-release"
commit_author = "RFD Bot <bot@rfd-protocol.dev>"
logging_use_named_masks = true
major_on_zero = false
tag_format = "v{version}"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
show_error_codes = true
namespace_packages = true
ignore_missing_imports = true
[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pytest.ini_options]
minversion = "7.4"
testpaths = [ "tests",]
python_files = [ "test_*.py", "*_test.py",]
python_classes = [ "Test*",]
python_functions = [ "test_*",]
addopts = [ "--strict-markers", "--strict-config", "--cov=src/rfd", "--cov-report=term-missing:skip-covered", "--cov-report=html:htmlcov", "--cov-report=xml", "--cov-report=json", "--cov-fail-under=20", "--tb=short", "-ra", "--maxfail=1",]
markers = [ "unit: Unit tests (fast, isolated)", "integration: Integration tests (medium speed)", "system: System/E2E tests (slow)", "smoke: Smoke tests (critical functionality)", "regression: Regression tests", "slow: Tests that take > 5 seconds",]

[tool.ruff.lint]
select = [ "E", "W", "F", "I", "B", "C4", "UP",]
ignore = [ "E501", "B008", "C901",]

[tool.semantic_release.commit_parser_options]
allowed_tags = [ "build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test",]
minor_tags = [ "feat",]
patch_tags = [ "fix", "perf",]

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.coverage.run]
source = [ "src/rfd",]
branch = true
parallel = true
omit = [ "*/tests/*", "*/test_*.py", "*/__pycache__/*", "*/site-packages/*",]

[tool.coverage.report]
exclude_lines = [ "pragma: no cover", "def __repr__", "def __str__", "raise AssertionError", "raise NotImplementedError", "if __name__ == .__main__.:", "if TYPE_CHECKING:", "class .*\\bProtocol\\):", "@(abc\\.)?abstractmethod",]
precision = 2
show_missing = true
skip_covered = false
skip_empty = true

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = [ "src",]

[tool.setuptools.package-data]
rfd = [
    "templates/**/*.md",
    "templates/*.md",
    "templates/commands/*.md"
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [ "F401",]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease = false

[tool.semantic_release.changelog.environment]
keep_trailing_newline = true
trim_blocks = true
lstrip_blocks = true
