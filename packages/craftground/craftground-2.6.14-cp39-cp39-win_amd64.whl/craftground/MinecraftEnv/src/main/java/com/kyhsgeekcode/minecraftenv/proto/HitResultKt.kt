// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/observation_space.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.kyhsgeekcode.minecraftenv.proto;

@kotlin.jvm.JvmName("-initializehitResult")
public inline fun hitResult(block: com.kyhsgeekcode.minecraftenv.proto.HitResultKt.Dsl.() -> kotlin.Unit): com.kyhsgeekcode.minecraftenv.proto.ObservationSpace.HitResult =
  com.kyhsgeekcode.minecraftenv.proto.HitResultKt.Dsl._create(com.kyhsgeekcode.minecraftenv.proto.ObservationSpace.HitResult.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `HitResult`
 */
public object HitResultKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.kyhsgeekcode.minecraftenv.proto.ObservationSpace.HitResult.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: com.kyhsgeekcode.minecraftenv.proto.ObservationSpace.HitResult.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): com.kyhsgeekcode.minecraftenv.proto.ObservationSpace.HitResult = _builder.build()

    /**
     * `.HitResult.Type type = 1;`
     */
    public var type: com.kyhsgeekcode.minecraftenv.proto.ObservationSpace.HitResult.Type
      @JvmName("getType")
      get() = _builder.type
      @JvmName("setType")
      set(value) {
        _builder.type = value
      }
    public var typeValue: kotlin.Int
      @JvmName("getTypeValue")
      get() = _builder.typeValue
      @JvmName("setTypeValue")
      set(value) {
        _builder.typeValue = value
      }
    /**
     * `.HitResult.Type type = 1;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * `.BlockInfo target_block = 2;`
     */
    public var targetBlock: com.kyhsgeekcode.minecraftenv.proto.ObservationSpace.BlockInfo
      @JvmName("getTargetBlock")
      get() = _builder.targetBlock
      @JvmName("setTargetBlock")
      set(value) {
        _builder.targetBlock = value
      }
    /**
     * `.BlockInfo target_block = 2;`
     */
    public fun clearTargetBlock() {
      _builder.clearTargetBlock()
    }
    /**
     * `.BlockInfo target_block = 2;`
     * @return Whether the targetBlock field is set.
     */
    public fun hasTargetBlock(): kotlin.Boolean {
      return _builder.hasTargetBlock()
    }

    public val HitResultKt.Dsl.targetBlockOrNull: com.kyhsgeekcode.minecraftenv.proto.ObservationSpace.BlockInfo?
      get() = _builder.targetBlockOrNull

    /**
     * `.EntityInfo target_entity = 3;`
     */
    public var targetEntity: com.kyhsgeekcode.minecraftenv.proto.ObservationSpace.EntityInfo
      @JvmName("getTargetEntity")
      get() = _builder.targetEntity
      @JvmName("setTargetEntity")
      set(value) {
        _builder.targetEntity = value
      }
    /**
     * `.EntityInfo target_entity = 3;`
     */
    public fun clearTargetEntity() {
      _builder.clearTargetEntity()
    }
    /**
     * `.EntityInfo target_entity = 3;`
     * @return Whether the targetEntity field is set.
     */
    public fun hasTargetEntity(): kotlin.Boolean {
      return _builder.hasTargetEntity()
    }

    public val HitResultKt.Dsl.targetEntityOrNull: com.kyhsgeekcode.minecraftenv.proto.ObservationSpace.EntityInfo?
      get() = _builder.targetEntityOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.kyhsgeekcode.minecraftenv.proto.ObservationSpace.HitResult.copy(block: `com.kyhsgeekcode.minecraftenv.proto`.HitResultKt.Dsl.() -> kotlin.Unit): com.kyhsgeekcode.minecraftenv.proto.ObservationSpace.HitResult =
  `com.kyhsgeekcode.minecraftenv.proto`.HitResultKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.kyhsgeekcode.minecraftenv.proto.ObservationSpace.HitResultOrBuilder.targetBlockOrNull: com.kyhsgeekcode.minecraftenv.proto.ObservationSpace.BlockInfo?
  get() = if (hasTargetBlock()) getTargetBlock() else null

public val com.kyhsgeekcode.minecraftenv.proto.ObservationSpace.HitResultOrBuilder.targetEntityOrNull: com.kyhsgeekcode.minecraftenv.proto.ObservationSpace.EntityInfo?
  get() = if (hasTargetEntity()) getTargetEntity() else null

