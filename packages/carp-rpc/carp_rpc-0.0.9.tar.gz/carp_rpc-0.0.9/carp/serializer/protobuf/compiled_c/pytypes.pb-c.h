/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: pytypes.proto */

#ifndef PROTOBUF_C_pytypes_2eproto__INCLUDED
#define PROTOBUF_C_pytypes_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Carp__PythonValue Carp__PythonValue;
typedef struct Carp__PythonDictItem Carp__PythonDictItem;
typedef struct Carp__PythonDict Carp__PythonDict;
typedef struct Carp__PythonArray Carp__PythonArray;
typedef struct Carp__PythonValueContainer Carp__PythonValueContainer;
typedef struct Carp__PythonArrayContainer Carp__PythonArrayContainer;
typedef struct Carp__PythonDictContainer Carp__PythonDictContainer;


/* --- enums --- */


/* --- messages --- */

typedef enum {
  CARP__PYTHON_VALUE__VALUE_TYPES__NOT_SET = 0,
  CARP__PYTHON_VALUE__VALUE_TYPES__STRING = 1,
  CARP__PYTHON_VALUE__VALUE_TYPES__DOUBLE = 2,
  CARP__PYTHON_VALUE__VALUE_TYPES__INT = 3,
  CARP__PYTHON_VALUE__VALUE_TYPES__BYTES = 4,
  CARP__PYTHON_VALUE__VALUE_TYPES__SERIALIZED = 5,
  CARP__PYTHON_VALUE__VALUE_TYPES__BOOL = 6,
  CARP__PYTHON_VALUE__VALUE_TYPES__NONE = 7,
  CARP__PYTHON_VALUE__VALUE_TYPES__ARRAY = 8,
  CARP__PYTHON_VALUE__VALUE_TYPES__DICT = 9
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CARP__PYTHON_VALUE__VALUE_TYPES__CASE)
} Carp__PythonValue__ValueTypesCase;

struct  Carp__PythonValue
{
  ProtobufCMessage base;
  Carp__PythonValue__ValueTypesCase value_types_case;
  union {
    char *_string;
    double _double;
    int64_t _int;
    ProtobufCBinaryData _bytes;
    ProtobufCBinaryData _serialized;
    protobuf_c_boolean _bool;
    protobuf_c_boolean _none;
    Carp__PythonArray *_array;
    Carp__PythonDict *_dict;
  };
};
#define CARP__PYTHON_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&carp__python_value__descriptor) \
    , CARP__PYTHON_VALUE__VALUE_TYPES__NOT_SET, {0} }


struct  Carp__PythonDictItem
{
  ProtobufCMessage base;
  Carp__PythonValue *key;
  Carp__PythonValue *value;
};
#define CARP__PYTHON_DICT_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&carp__python_dict_item__descriptor) \
    , NULL, NULL }


struct  Carp__PythonDict
{
  ProtobufCMessage base;
  size_t n_items;
  Carp__PythonDictItem **items;
};
#define CARP__PYTHON_DICT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&carp__python_dict__descriptor) \
    , 0,NULL }


struct  Carp__PythonArray
{
  ProtobufCMessage base;
  size_t n_items;
  Carp__PythonValue **items;
};
#define CARP__PYTHON_ARRAY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&carp__python_array__descriptor) \
    , 0,NULL }


struct  Carp__PythonValueContainer
{
  ProtobufCMessage base;
  Carp__PythonValue *value;
};
#define CARP__PYTHON_VALUE_CONTAINER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&carp__python_value_container__descriptor) \
    , NULL }


struct  Carp__PythonArrayContainer
{
  ProtobufCMessage base;
  Carp__PythonArray *value;
};
#define CARP__PYTHON_ARRAY_CONTAINER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&carp__python_array_container__descriptor) \
    , NULL }


struct  Carp__PythonDictContainer
{
  ProtobufCMessage base;
  Carp__PythonDict *value;
};
#define CARP__PYTHON_DICT_CONTAINER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&carp__python_dict_container__descriptor) \
    , NULL }


/* Carp__PythonValue methods */
void   carp__python_value__init
                     (Carp__PythonValue         *message);
size_t carp__python_value__get_packed_size
                     (const Carp__PythonValue   *message);
size_t carp__python_value__pack
                     (const Carp__PythonValue   *message,
                      uint8_t             *out);
size_t carp__python_value__pack_to_buffer
                     (const Carp__PythonValue   *message,
                      ProtobufCBuffer     *buffer);
Carp__PythonValue *
       carp__python_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   carp__python_value__free_unpacked
                     (Carp__PythonValue *message,
                      ProtobufCAllocator *allocator);
/* Carp__PythonDictItem methods */
void   carp__python_dict_item__init
                     (Carp__PythonDictItem         *message);
size_t carp__python_dict_item__get_packed_size
                     (const Carp__PythonDictItem   *message);
size_t carp__python_dict_item__pack
                     (const Carp__PythonDictItem   *message,
                      uint8_t             *out);
size_t carp__python_dict_item__pack_to_buffer
                     (const Carp__PythonDictItem   *message,
                      ProtobufCBuffer     *buffer);
Carp__PythonDictItem *
       carp__python_dict_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   carp__python_dict_item__free_unpacked
                     (Carp__PythonDictItem *message,
                      ProtobufCAllocator *allocator);
/* Carp__PythonDict methods */
void   carp__python_dict__init
                     (Carp__PythonDict         *message);
size_t carp__python_dict__get_packed_size
                     (const Carp__PythonDict   *message);
size_t carp__python_dict__pack
                     (const Carp__PythonDict   *message,
                      uint8_t             *out);
size_t carp__python_dict__pack_to_buffer
                     (const Carp__PythonDict   *message,
                      ProtobufCBuffer     *buffer);
Carp__PythonDict *
       carp__python_dict__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   carp__python_dict__free_unpacked
                     (Carp__PythonDict *message,
                      ProtobufCAllocator *allocator);
/* Carp__PythonArray methods */
void   carp__python_array__init
                     (Carp__PythonArray         *message);
size_t carp__python_array__get_packed_size
                     (const Carp__PythonArray   *message);
size_t carp__python_array__pack
                     (const Carp__PythonArray   *message,
                      uint8_t             *out);
size_t carp__python_array__pack_to_buffer
                     (const Carp__PythonArray   *message,
                      ProtobufCBuffer     *buffer);
Carp__PythonArray *
       carp__python_array__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   carp__python_array__free_unpacked
                     (Carp__PythonArray *message,
                      ProtobufCAllocator *allocator);
/* Carp__PythonValueContainer methods */
void   carp__python_value_container__init
                     (Carp__PythonValueContainer         *message);
size_t carp__python_value_container__get_packed_size
                     (const Carp__PythonValueContainer   *message);
size_t carp__python_value_container__pack
                     (const Carp__PythonValueContainer   *message,
                      uint8_t             *out);
size_t carp__python_value_container__pack_to_buffer
                     (const Carp__PythonValueContainer   *message,
                      ProtobufCBuffer     *buffer);
Carp__PythonValueContainer *
       carp__python_value_container__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   carp__python_value_container__free_unpacked
                     (Carp__PythonValueContainer *message,
                      ProtobufCAllocator *allocator);
/* Carp__PythonArrayContainer methods */
void   carp__python_array_container__init
                     (Carp__PythonArrayContainer         *message);
size_t carp__python_array_container__get_packed_size
                     (const Carp__PythonArrayContainer   *message);
size_t carp__python_array_container__pack
                     (const Carp__PythonArrayContainer   *message,
                      uint8_t             *out);
size_t carp__python_array_container__pack_to_buffer
                     (const Carp__PythonArrayContainer   *message,
                      ProtobufCBuffer     *buffer);
Carp__PythonArrayContainer *
       carp__python_array_container__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   carp__python_array_container__free_unpacked
                     (Carp__PythonArrayContainer *message,
                      ProtobufCAllocator *allocator);
/* Carp__PythonDictContainer methods */
void   carp__python_dict_container__init
                     (Carp__PythonDictContainer         *message);
size_t carp__python_dict_container__get_packed_size
                     (const Carp__PythonDictContainer   *message);
size_t carp__python_dict_container__pack
                     (const Carp__PythonDictContainer   *message,
                      uint8_t             *out);
size_t carp__python_dict_container__pack_to_buffer
                     (const Carp__PythonDictContainer   *message,
                      ProtobufCBuffer     *buffer);
Carp__PythonDictContainer *
       carp__python_dict_container__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   carp__python_dict_container__free_unpacked
                     (Carp__PythonDictContainer *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Carp__PythonValue_Closure)
                 (const Carp__PythonValue *message,
                  void *closure_data);
typedef void (*Carp__PythonDictItem_Closure)
                 (const Carp__PythonDictItem *message,
                  void *closure_data);
typedef void (*Carp__PythonDict_Closure)
                 (const Carp__PythonDict *message,
                  void *closure_data);
typedef void (*Carp__PythonArray_Closure)
                 (const Carp__PythonArray *message,
                  void *closure_data);
typedef void (*Carp__PythonValueContainer_Closure)
                 (const Carp__PythonValueContainer *message,
                  void *closure_data);
typedef void (*Carp__PythonArrayContainer_Closure)
                 (const Carp__PythonArrayContainer *message,
                  void *closure_data);
typedef void (*Carp__PythonDictContainer_Closure)
                 (const Carp__PythonDictContainer *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor carp__python_value__descriptor;
extern const ProtobufCMessageDescriptor carp__python_dict_item__descriptor;
extern const ProtobufCMessageDescriptor carp__python_dict__descriptor;
extern const ProtobufCMessageDescriptor carp__python_array__descriptor;
extern const ProtobufCMessageDescriptor carp__python_value_container__descriptor;
extern const ProtobufCMessageDescriptor carp__python_array_container__descriptor;
extern const ProtobufCMessageDescriptor carp__python_dict_container__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_pytypes_2eproto__INCLUDED */
