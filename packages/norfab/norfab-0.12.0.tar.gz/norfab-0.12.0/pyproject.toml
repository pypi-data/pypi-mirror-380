[project]
name = "norfab"

[tool.poetry]
name = "norfab"
version = "0.12.0"
description = "Network Automations Fabric [NorFab] - communication networks automations"
authors = ["Denis Mulyalin <d.mulyalin@gmail.com>"]
maintainers = ["Denis Mulyalin <d.mulyalin@gmail.com>"]
license = "Apache-2.0 license"
readme = "README.md"
homepage = "https://github.com/norfablabs/NORFAB"
repository = "https://github.com/norfablabs/NORFAB"
documentation = "https://docs.norfablabs.com"
keywords = ["Network", "Automation", "DevOps"]
classifiers = [
    "Topic :: Utilities",
    "Programming Language :: Python :: 3.9",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
]

[tool.poetry.dependencies]
# Core Libs
python = ">=3.9,<3.12"
pyyaml = "6.0.2"
pyzmq = "27.0.2"
psutil = "7.0.0"
tornado = "6.5.2"
jinja2 = "3.1.6"
pydantic = "2.11.7"

# PICLE Client Dependencies
picle = { version = "0.9.2", optional = true }
rich = { version = "14.1.0", optional = true }
tabulate = { version = "0.9.0", optional = true }
pyreadline3 = {version = "3.4.1", optional = true }

# Nornir Service Dependencies
nornir = { version = "3.5.0", optional = true }
nornir-salt = { version = "0.22.5", optional = true }
cerberus = { version = "1.3.5", optional = true }
jmespath = { version = "1.0.1", optional = true }
napalm = { version = "5.1.0", optional = true }
ncclient = { version = "0.6.15", optional = true }
netmiko = { version = "4.6.0", optional = true }
nornir-napalm = { version = "0.5.0", optional = true }
nornir-netmiko = { version = "1.0.1", optional = true }
nornir-scrapli = { version = "2025.01.30", optional = true }
ntc-templates = { version = "8.0.0", optional = true }
paramiko = { version = "4.0.0", optional = true }
pygnmi = { version = "0.8.15", optional = true }
puresnmp = { version = "2.0.0", optional = true, extras = ['crypto'] }
requests = { version = "2.32.5", optional = true }
scrapli = { version = "2025.01.30", optional = true }
scrapli-community = { version = "2025.01.30", optional = true }
scrapli-netconf = { version = "2025.01.30", optional = true }
ttp = { version = "0.9.5", optional = true }
ttp-templates = { version = "0.3.*", optional = true }
xmltodict = { version = "0.13.0", optional = true }
lxml = { version = "4.9.4", optional = true }
textfsm = { version = "1.1.3", optional = true }
N2G = { version = "0.3.3", optional = true }
dnspython = { version = "2.4.2", optional = true }
pythonping = { version = "1.1.4", optional = true }
mcp = { version = ">=1.13.0", optional = true,  python = ">=3.10,<3.12" }

# Robot Client Dependencies
robotframework = { version = "7.3.2", optional = true }

# Agent Service Dependencies
langchain = { version = "0.3.25", optional = true }
langchain-community = { version = "0.3.24", optional = true }
langchain-core = { version = "0.3.63", optional = true }
langchain-ollama = { version = "0.3.0", optional = true }
ollama = { version = "0.5.1", optional = true }

# Netbox Service Dependencies
diskcache = { version = "5.6.3", optional = true }
pynetbox = { version = "7.5.0", optional = true }

# FastAPI Service Dependencies
fastapi = { version = "0.116.1", optional = true, extras = ["standard"] }
uvicorn = { version = "0.35.0", optional = true }
python-multipart = { version = "0.0.20", optional = true }

# docs dependencies
mkdocs = { version = "*", optional = true }
mkdocs-material = { version = "*", optional = true }
mkdocs-material-extensions = { version = "*", optional = true }
mkdocstrings = { version = "*", extras = ["python"], optional = true } 
pygments = { version = "*", optional = true }
pymdown-extensions = { version = "*", optional = true }

[tool.poetry.group.dev.dependencies]
black = ">=25.*"
pytest = { version = ">=7.1" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project.entry-points."norfab.workers"]
"nornir" = "norfab.workers.nornir_worker:NornirWorker"
"netbox" = "norfab.workers.netbox_worker:NetboxWorker"
"fastapi" = "norfab.workers.fastapi_worker:FastAPIWorker"
"agent" = "norfab.workers.agent_worker:AgentWorker"
"workflow" = "norfab.workers.workflow_worker:WorkflowWorker"
"containerlab" = "norfab.workers.containerlab_worker:ContainerlabWorker"
"fastmcp" = "norfab.workers.fastmcp_worker:FastMCPWorker"

[tool.poetry.scripts]
nfcli = 'norfab.utils.nfcli:nfcli'

[tool.poetry.extras]
nfcli = [
    "picle",
    "rich",
    "tabulate",
    "pydantic",
    "nornir-salt",
    "pyreadline3"
]
nornirservice = [
    "nornir",
    "nornir-salt",
    "cerberus",
    "jmespath",
    "napalm",
    "ncclient",
    "netmiko",
    "nornir-napalm",
    "nornir-netmiko",
    "nornir-scrapli",
    "ntc-templates",
    "paramiko",
    "pygnmi",
    "puresnmp",
    "requests",
    "scrapli",
    "scrapli-community",
    "scrapli-netconf",
    "ttp",
    "ttp-templates",
    "xmltodict",
    "lxml",
    "textfsm",
    "N2G",
    "dnspython",
    "pythonping",
    "tabulate",
    "pydantic",
]
netboxservice = [
    "requests",
    "pynetbox",
    "diskcache"
]
fastapiservice = [
    "fastapi",
    "uvicorn",
    "python-multipart",
    "diskcache"
]
robot = [
    "robot"
]
agentservice = [
    "langchain",
    "langchain-community",
    "langchain-core",
    "langchain-ollama",
    "ollama",
]
fastmcpservice = [
    "mcp"
]
full = [
    "picle",
    "rich",
    "tabulate",
    "pydantic",
    "nornir",
    "nornir-salt",
    "cerberus",
    "jmespath",
    "napalm",
    "ncclient",
    "netmiko",
    "nornir-napalm",
    "nornir-netmiko",
    "nornir-scrapli",
    "ntc-templates",
    "paramiko",
    "pygnmi",
    "puresnmp",
    "requests",
    "scrapli",
    "scrapli-community",
    "scrapli-netconf",
    "ttp",
    "ttp-templates",
    "xmltodict",
    "lxml",
    "textfsm",
    "N2G",
    "dnspython",
    "pythonping",
    "tabulate",
    "pydantic",
    "requests",
    "pynetbox",
    "diskcache",
    "robotframework",
    "langchain",
    "langchain-community",
    "langchain-core",
    "langchain-ollama",
    "ollama",
    "fastapi",
    "uvicorn",
    "python-multipart",
    "mcp"
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-material-extensions",
    "mkdocstrings",
    "pygments",
    "pymdown-extensions",
]