##################### generated by xml-casa (v2) from sidebandseparator.xml #########
##################### 78d870f5f2b127d0633b76b972cd1b81 ##############################
from __future__ import absolute_import 
from .__casac__.sidebandseparator import sidebandseparator as _sidebandseparator

from .errors import create_error_string
from .typecheck import CasaValidator as _validator
_pc = _validator( )
from .coercetype import coerce as _coerce


class sidebandseparator:
    _info_group_ = """sidebandseparator"""
    _info_desc_ = """Tool for sideband separation"""
    ### self
    def __init__(self, *args, **kwargs):
        """Create a sideband separator tool.
        
        """
        self._swigobj = kwargs.get('swig_object',None)
        if self._swigobj is None:
            self._swigobj = _sidebandseparator()

    def open(self, imagename=[  ]):
        """
        """
        return self._swigobj.open(imagename)

    def close(self):
        """Close tools and write data to disk. This is a synonym for done.
        
        """
        return self._swigobj.close()

    def done(self):
        """Close tools and write data to disk. This is a synonym for done.
        
        """
        return self._swigobj.done()

    def setshift(self, shift=[  ], signal=True):
        """
        """
        return self._swigobj.setshift(shift, signal)

    def setlimit(self, threshold=float(0.2)):
        """
        """
        return self._swigobj.setlimit(threshold)

    def setboth(self, getbothside=False):
        """
        """
        return self._swigobj.setboth(getbothside)

    def set_imageband_frequency(self, refpix=float(0.0), refval={'value': float(-1.0), 'unit': 'Hz'}):
        """
        """
        return self._swigobj.set_imageband_frequency(refpix, refval)

    def setsolveother(self, subtract_from_other=False):
        """
        """
        return self._swigobj.setsolveother(subtract_from_other)

    def separate(self, outfile='', overwrite=False):
        """
        """
        return self._swigobj.separate(outfile, overwrite)

