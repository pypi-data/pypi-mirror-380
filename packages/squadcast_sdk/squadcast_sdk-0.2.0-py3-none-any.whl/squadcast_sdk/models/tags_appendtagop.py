"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v3_incidents_tags_appendtagrequest import (
    V3IncidentsTagsAppendTagRequest,
    V3IncidentsTagsAppendTagRequestTypedDict,
)
from .v3_incidents_tags_incidentfortagsresponse import (
    V3IncidentsTagsIncidentForTagsResponse,
    V3IncidentsTagsIncidentForTagsResponseTypedDict,
)
import pydantic
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing_extensions import Annotated, TypedDict


class TagsAppendTagRequestTypedDict(TypedDict):
    incident_id: str
    v3_incidents_tags_append_tag_request: V3IncidentsTagsAppendTagRequestTypedDict


class TagsAppendTagRequest(BaseModel):
    incident_id: Annotated[
        str,
        pydantic.Field(alias="IncidentId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    v3_incidents_tags_append_tag_request: Annotated[
        V3IncidentsTagsAppendTagRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class TagsAppendTagResponseTypedDict(TypedDict):
    r"""The request has succeeded."""

    data: V3IncidentsTagsIncidentForTagsResponseTypedDict


class TagsAppendTagResponse(BaseModel):
    r"""The request has succeeded."""

    data: V3IncidentsTagsIncidentForTagsResponse
