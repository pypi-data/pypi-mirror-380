"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v4_createrotationrequest import (
    V4CreateRotationRequest,
    V4CreateRotationRequestTypedDict,
)
from .v4_rotationresponse import V4RotationResponse, V4RotationResponseTypedDict
import pydantic
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing_extensions import Annotated, TypedDict


class RotationsCreateRotationRequestTypedDict(TypedDict):
    schedule_id: str
    v4_create_rotation_request: V4CreateRotationRequestTypedDict


class RotationsCreateRotationRequest(BaseModel):
    schedule_id: Annotated[
        str,
        pydantic.Field(alias="scheduleID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    v4_create_rotation_request: Annotated[
        V4CreateRotationRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class RotationsCreateRotationResponseTypedDict(TypedDict):
    r"""The request has succeeded and a new resource has been created as a result."""

    data: V4RotationResponseTypedDict


class RotationsCreateRotationResponse(BaseModel):
    r"""The request has succeeded and a new resource has been created as a result."""

    data: V4RotationResponse
