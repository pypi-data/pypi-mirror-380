"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v3_slo_createslorequest import (
    V3SLOCreateSLORequest,
    V3SLOCreateSLORequestTypedDict,
)
from .v3_slo_slodetailedresponse import (
    V3SLOSLODetailedResponse,
    V3SLOSLODetailedResponseTypedDict,
)
import pydantic
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
    RequestMetadata,
)
from typing_extensions import Annotated, TypedDict


class SLOUpdateSLORequestTypedDict(TypedDict):
    slo_id: int
    owner_id_param: str
    v3_slo_create_slo_request: V3SLOCreateSLORequestTypedDict


class SLOUpdateSLORequest(BaseModel):
    slo_id: Annotated[
        int,
        pydantic.Field(alias="sloID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    owner_id_param: Annotated[
        str,
        pydantic.Field(alias="owner_id"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]

    v3_slo_create_slo_request: Annotated[
        V3SLOCreateSLORequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class SLOUpdateSLODataTypedDict(TypedDict):
    slo: V3SLOSLODetailedResponseTypedDict


class SLOUpdateSLOData(BaseModel):
    slo: V3SLOSLODetailedResponse


class SLOUpdateSLOResponseTypedDict(TypedDict):
    r"""The request has succeeded."""

    data: SLOUpdateSLODataTypedDict


class SLOUpdateSLOResponse(BaseModel):
    r"""The request has succeeded."""

    data: SLOUpdateSLOData
