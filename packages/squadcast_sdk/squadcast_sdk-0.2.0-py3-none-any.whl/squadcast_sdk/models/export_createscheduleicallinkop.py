"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v4_icallinkresponse import V4ICalLinkResponse, V4ICalLinkResponseTypedDict
import pydantic
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
    RequestMetadata,
)
from typing_extensions import Annotated, TypedDict


class ExportCreateScheduleIcalLinkRequestBodyTypedDict(TypedDict):
    pass


class ExportCreateScheduleIcalLinkRequestBody(BaseModel):
    pass


class ExportCreateScheduleIcalLinkRequestTypedDict(TypedDict):
    schedule_id: str
    my_on_call: bool
    request_body: ExportCreateScheduleIcalLinkRequestBodyTypedDict


class ExportCreateScheduleIcalLinkRequest(BaseModel):
    schedule_id: Annotated[
        str,
        pydantic.Field(alias="scheduleID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    my_on_call: Annotated[
        bool,
        pydantic.Field(alias="myOnCall"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ]

    request_body: Annotated[
        ExportCreateScheduleIcalLinkRequestBody,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class ExportCreateScheduleIcalLinkResponseTypedDict(TypedDict):
    r"""The request has succeeded."""

    data: V4ICalLinkResponseTypedDict


class ExportCreateScheduleIcalLinkResponse(BaseModel):
    r"""The request has succeeded."""

    data: V4ICalLinkResponse
