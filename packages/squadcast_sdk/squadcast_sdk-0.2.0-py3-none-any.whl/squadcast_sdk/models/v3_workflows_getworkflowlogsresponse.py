"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from squadcast_sdk.types import BaseModel
from typing import List, Literal
from typing_extensions import TypedDict


StatusEnum = Literal[
    "queued",
    "running",
    "successful",
    "partial",
    "failed",
]


class V3WorkflowsGetWorkflowLogsResponseDataTypedDict(TypedDict):
    id: str
    status: StatusEnum
    incident_id: str
    action_execution: str
    message: str
    executed_at: str


class V3WorkflowsGetWorkflowLogsResponseData(BaseModel):
    id: str

    status: StatusEnum

    incident_id: str

    action_execution: str

    message: str

    executed_at: str


class V3WorkflowsGetWorkflowLogsResponseMetaTypedDict(TypedDict):
    total_count: int


class V3WorkflowsGetWorkflowLogsResponseMeta(BaseModel):
    total_count: int


class V3WorkflowsGetWorkflowLogsResponseTypedDict(TypedDict):
    data: List[V3WorkflowsGetWorkflowLogsResponseDataTypedDict]
    meta: V3WorkflowsGetWorkflowLogsResponseMetaTypedDict


class V3WorkflowsGetWorkflowLogsResponse(BaseModel):
    data: List[V3WorkflowsGetWorkflowLogsResponseData]

    meta: V3WorkflowsGetWorkflowLogsResponseMeta
