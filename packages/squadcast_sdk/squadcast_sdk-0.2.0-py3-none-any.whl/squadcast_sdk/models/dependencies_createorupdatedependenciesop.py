"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v3_services_dependencies_createorupdatedependenciesrequest import (
    V3ServicesDependenciesCreateOrUpdateDependenciesRequest,
    V3ServicesDependenciesCreateOrUpdateDependenciesRequestTypedDict,
)
import pydantic
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing_extensions import Annotated, TypedDict


class DependenciesCreateOrUpdateDependenciesRequestTypedDict(TypedDict):
    service_id: str
    v3_services_dependencies_create_or_update_dependencies_request: (
        V3ServicesDependenciesCreateOrUpdateDependenciesRequestTypedDict
    )


class DependenciesCreateOrUpdateDependenciesRequest(BaseModel):
    service_id: Annotated[
        str,
        pydantic.Field(alias="serviceID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    v3_services_dependencies_create_or_update_dependencies_request: Annotated[
        V3ServicesDependenciesCreateOrUpdateDependenciesRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class DependenciesCreateOrUpdateDependenciesDataTypedDict(TypedDict):
    ok: bool


class DependenciesCreateOrUpdateDependenciesData(BaseModel):
    ok: bool


class DependenciesCreateOrUpdateDependenciesResponseTypedDict(TypedDict):
    r"""The request has succeeded and a new resource has been created as a result."""

    data: DependenciesCreateOrUpdateDependenciesDataTypedDict


class DependenciesCreateOrUpdateDependenciesResponse(BaseModel):
    r"""The request has succeeded and a new resource has been created as a result."""

    data: DependenciesCreateOrUpdateDependenciesData
