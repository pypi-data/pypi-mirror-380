"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v3_services_overlay_dedupkeyoverlay import (
    V3ServicesOverlayDedupKeyOverlay,
    V3ServicesOverlayDedupKeyOverlayTypedDict,
)
from datetime import datetime
from pydantic import model_serializer
from squadcast_sdk.types import BaseModel, Nullable, UNSET_SENTINEL
from typing import Literal
from typing_extensions import TypedDict


V3ServicesOverlayOverlayResponseOverlayTemplateType = Literal["dedup_key",]


class V3ServicesOverlayOverlayResponseTypedDict(TypedDict):
    created_at: datetime
    updated_at: datetime
    deleted_at: Nullable[datetime]
    org_id: str
    service_id: str
    alert_source_version: str
    alert_source_shortname: str
    overlay_template_type: V3ServicesOverlayOverlayResponseOverlayTemplateType
    overlay: V3ServicesOverlayDedupKeyOverlayTypedDict
    created_by: str
    updated_by: str
    alert_source_type: str


class V3ServicesOverlayOverlayResponse(BaseModel):
    created_at: datetime

    updated_at: datetime

    deleted_at: Nullable[datetime]

    org_id: str

    service_id: str

    alert_source_version: str

    alert_source_shortname: str

    overlay_template_type: V3ServicesOverlayOverlayResponseOverlayTemplateType

    overlay: V3ServicesOverlayDedupKeyOverlay

    created_by: str

    updated_by: str

    alert_source_type: str

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = []
        nullable_fields = ["deleted_at"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
