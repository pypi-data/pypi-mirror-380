"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v3_slo_marksloaffectedrequest import (
    V3SLOMarkSLOAffectedRequest,
    V3SLOMarkSLOAffectedRequestTypedDict,
)
from .v3_slo_sloviolatingincidentresponse import (
    V3SLOSLOViolatingIncidentResponse,
    V3SLOSLOViolatingIncidentResponseTypedDict,
)
import pydantic
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
    RequestMetadata,
)
from typing_extensions import Annotated, TypedDict


class SLOMarkSLOAffectedRequestTypedDict(TypedDict):
    slo_id: int
    owner_id_param: str
    v3_slo_mark_slo_affected_request: V3SLOMarkSLOAffectedRequestTypedDict


class SLOMarkSLOAffectedRequest(BaseModel):
    slo_id: Annotated[
        int,
        pydantic.Field(alias="sloID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    owner_id_param: Annotated[
        str,
        pydantic.Field(alias="owner_id"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]

    v3_slo_mark_slo_affected_request: Annotated[
        V3SLOMarkSLOAffectedRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class SLOMarkSLOAffectedDataTypedDict(TypedDict):
    slo_violating_incident: V3SLOSLOViolatingIncidentResponseTypedDict


class SLOMarkSLOAffectedData(BaseModel):
    slo_violating_incident: V3SLOSLOViolatingIncidentResponse


class SLOMarkSLOAffectedResponseTypedDict(TypedDict):
    r"""The request has succeeded and a new resource has been created as a result."""

    data: SLOMarkSLOAffectedDataTypedDict


class SLOMarkSLOAffectedResponse(BaseModel):
    r"""The request has succeeded and a new resource has been created as a result."""

    data: SLOMarkSLOAffectedData
