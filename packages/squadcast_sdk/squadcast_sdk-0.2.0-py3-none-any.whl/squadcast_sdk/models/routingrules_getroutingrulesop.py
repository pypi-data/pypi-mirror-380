"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v3_services_routingrules_routingruleresponse import (
    V3ServicesRoutingRulesRoutingRuleResponse,
    V3ServicesRoutingRulesRoutingRuleResponseTypedDict,
)
import pydantic
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import FieldMetadata, PathParamMetadata
from typing import List
from typing_extensions import Annotated, TypedDict


class RoutingRulesGetRoutingRulesRequestTypedDict(TypedDict):
    service_id: str


class RoutingRulesGetRoutingRulesRequest(BaseModel):
    service_id: Annotated[
        str,
        pydantic.Field(alias="serviceID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]


class RoutingRulesGetRoutingRulesDataTypedDict(TypedDict):
    rules: List[V3ServicesRoutingRulesRoutingRuleResponseTypedDict]


class RoutingRulesGetRoutingRulesData(BaseModel):
    rules: List[V3ServicesRoutingRulesRoutingRuleResponse]


class RoutingRulesGetRoutingRulesResponseTypedDict(TypedDict):
    r"""The request has succeeded."""

    data: RoutingRulesGetRoutingRulesDataTypedDict


class RoutingRulesGetRoutingRulesResponse(BaseModel):
    r"""The request has succeeded."""

    data: RoutingRulesGetRoutingRulesData
