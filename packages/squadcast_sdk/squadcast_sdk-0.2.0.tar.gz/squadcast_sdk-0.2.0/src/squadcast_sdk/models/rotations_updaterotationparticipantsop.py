"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v4_rotationparticipantsresponse import (
    V4RotationParticipantsResponse,
    V4RotationParticipantsResponseTypedDict,
)
from .v4_updaterotationparticipantsrequest import (
    V4UpdateRotationParticipantsRequest,
    V4UpdateRotationParticipantsRequestTypedDict,
)
import pydantic
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing_extensions import Annotated, TypedDict


class RotationsUpdateRotationParticipantsRequestTypedDict(TypedDict):
    schedule_id: str
    rotation_id: str
    v4_update_rotation_participants_request: (
        V4UpdateRotationParticipantsRequestTypedDict
    )


class RotationsUpdateRotationParticipantsRequest(BaseModel):
    schedule_id: Annotated[
        str,
        pydantic.Field(alias="scheduleID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    rotation_id: Annotated[
        str,
        pydantic.Field(alias="rotationID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    v4_update_rotation_participants_request: Annotated[
        V4UpdateRotationParticipantsRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class RotationsUpdateRotationParticipantsResponseTypedDict(TypedDict):
    r"""The request has succeeded."""

    data: V4RotationParticipantsResponseTypedDict


class RotationsUpdateRotationParticipantsResponse(BaseModel):
    r"""The request has succeeded."""

    data: V4RotationParticipantsResponse
