"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v3_incidents_runbooks_attachrunbooksrequest import (
    V3IncidentsRunbooksAttachRunbooksRequest,
    V3IncidentsRunbooksAttachRunbooksRequestTypedDict,
)
from .v3_incidents_runbooks_runbookresponse import (
    V3IncidentsRunbooksRunbookResponse,
    V3IncidentsRunbooksRunbookResponseTypedDict,
)
import pydantic
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import List
from typing_extensions import Annotated, TypedDict


class RunbooksAttachRunbooksRequestTypedDict(TypedDict):
    incident_id: str
    v3_incidents_runbooks_attach_runbooks_request: (
        V3IncidentsRunbooksAttachRunbooksRequestTypedDict
    )


class RunbooksAttachRunbooksRequest(BaseModel):
    incident_id: Annotated[
        str,
        pydantic.Field(alias="IncidentId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    v3_incidents_runbooks_attach_runbooks_request: Annotated[
        V3IncidentsRunbooksAttachRunbooksRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class RunbooksAttachRunbooksResponseTypedDict(TypedDict):
    r"""The request has succeeded and a new resource has been created as a result."""

    data: List[V3IncidentsRunbooksRunbookResponseTypedDict]


class RunbooksAttachRunbooksResponse(BaseModel):
    r"""The request has succeeded and a new resource has been created as a result."""

    data: List[V3IncidentsRunbooksRunbookResponse]
