"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import FieldMetadata, PathParamMetadata
from typing_extensions import Annotated, TypedDict


class GlobalEventRulesDeleteGerRulesetRequestTypedDict(TypedDict):
    ger_id: int
    alert_source_version: str
    alert_source_shortname: str


class GlobalEventRulesDeleteGerRulesetRequest(BaseModel):
    ger_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]

    alert_source_version: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]

    alert_source_shortname: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]


class GlobalEventRulesDeleteGerRulesetResponseBodyTypedDict(TypedDict):
    r"""There is no content to send for this request, but the headers may be useful."""


class GlobalEventRulesDeleteGerRulesetResponseBody(BaseModel):
    r"""There is no content to send for this request, but the headers may be useful."""
