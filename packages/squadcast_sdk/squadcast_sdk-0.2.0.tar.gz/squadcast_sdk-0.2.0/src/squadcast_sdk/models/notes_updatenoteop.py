"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v3_incidents_notes_noteresponse import (
    V3IncidentsNotesNoteResponse,
    V3IncidentsNotesNoteResponseTypedDict,
)
from .v3_incidents_notes_updatenoterequest import (
    V3IncidentsNotesUpdateNoteRequest,
    V3IncidentsNotesUpdateNoteRequestTypedDict,
)
import pydantic
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing_extensions import Annotated, TypedDict


class NotesUpdateNoteRequestTypedDict(TypedDict):
    incident_id: str
    r"""Required"""
    note_id: str
    v3_incidents_notes_update_note_request: V3IncidentsNotesUpdateNoteRequestTypedDict


class NotesUpdateNoteRequest(BaseModel):
    incident_id: Annotated[
        str,
        pydantic.Field(alias="IncidentId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Required"""

    note_id: Annotated[
        str,
        pydantic.Field(alias="NoteId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    v3_incidents_notes_update_note_request: Annotated[
        V3IncidentsNotesUpdateNoteRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class NotesUpdateNoteResponseTypedDict(TypedDict):
    r"""The request has succeeded."""

    data: V3IncidentsNotesNoteResponseTypedDict


class NotesUpdateNoteResponse(BaseModel):
    r"""The request has succeeded."""

    data: V3IncidentsNotesNoteResponse
