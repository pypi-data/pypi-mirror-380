"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v3_slo_sloviolatingincidentresponse import (
    V3SLOSLOViolatingIncidentResponse,
    V3SLOSLOViolatingIncidentResponseTypedDict,
)
import pydantic
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
    RequestMetadata,
)
from typing_extensions import Annotated, TypedDict


class SLOMarkSLOFalsePositiveRequestBodyTypedDict(TypedDict):
    pass


class SLOMarkSLOFalsePositiveRequestBody(BaseModel):
    pass


class SLOMarkSLOFalsePositiveRequestTypedDict(TypedDict):
    slo_id: int
    incident_id: int
    value: bool
    owner_id: str
    request_body: SLOMarkSLOFalsePositiveRequestBodyTypedDict


class SLOMarkSLOFalsePositiveRequest(BaseModel):
    slo_id: Annotated[
        int,
        pydantic.Field(alias="sloID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    incident_id: Annotated[
        int,
        pydantic.Field(alias="incidentID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    value: Annotated[
        bool, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]

    owner_id: Annotated[
        str, FieldMetadata(query=QueryParamMetadata(style="form", explode=False))
    ]

    request_body: Annotated[
        SLOMarkSLOFalsePositiveRequestBody,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class SLOMarkSLOFalsePositiveDataTypedDict(TypedDict):
    slo_violating_incident: V3SLOSLOViolatingIncidentResponseTypedDict


class SLOMarkSLOFalsePositiveData(BaseModel):
    slo_violating_incident: V3SLOSLOViolatingIncidentResponse


class SLOMarkSLOFalsePositiveResponseTypedDict(TypedDict):
    r"""The request has succeeded."""

    data: SLOMarkSLOFalsePositiveDataTypedDict


class SLOMarkSLOFalsePositiveResponse(BaseModel):
    r"""The request has succeeded."""

    data: SLOMarkSLOFalsePositiveData
