"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v3_services_suppressionrules_suppressionruleresponse import (
    V3ServicesSuppressionRulesSuppressionRuleResponse,
    V3ServicesSuppressionRulesSuppressionRuleResponseTypedDict,
)
import pydantic
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import FieldMetadata, PathParamMetadata
from typing import List
from typing_extensions import Annotated, TypedDict


class SuppressionRulesGetSuppressionRulesRequestTypedDict(TypedDict):
    service_id: str


class SuppressionRulesGetSuppressionRulesRequest(BaseModel):
    service_id: Annotated[
        str,
        pydantic.Field(alias="serviceID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]


class SuppressionRulesGetSuppressionRulesDataTypedDict(TypedDict):
    rules: List[V3ServicesSuppressionRulesSuppressionRuleResponseTypedDict]


class SuppressionRulesGetSuppressionRulesData(BaseModel):
    rules: List[V3ServicesSuppressionRulesSuppressionRuleResponse]


class SuppressionRulesGetSuppressionRulesResponseTypedDict(TypedDict):
    r"""The request has succeeded."""

    data: SuppressionRulesGetSuppressionRulesDataTypedDict


class SuppressionRulesGetSuppressionRulesResponse(BaseModel):
    r"""The request has succeeded."""

    data: SuppressionRulesGetSuppressionRulesData
