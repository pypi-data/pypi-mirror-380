"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v3_workflows_createworkflowrequestupdate import (
    V3WorkflowsCreateWorkflowRequestUpdate,
    V3WorkflowsCreateWorkflowRequestUpdateTypedDict,
)
from .v3_workflows_updateworkflowapiresponse import (
    V3WorkflowsUpdateWorkflowAPIResponse,
    V3WorkflowsUpdateWorkflowAPIResponseTypedDict,
)
import pydantic
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing_extensions import Annotated, TypedDict


class WorkflowsUpdateWorkflowRequestTypedDict(TypedDict):
    workflow_id: str
    v3_workflows_create_workflow_request_update: (
        V3WorkflowsCreateWorkflowRequestUpdateTypedDict
    )


class WorkflowsUpdateWorkflowRequest(BaseModel):
    workflow_id: Annotated[
        str,
        pydantic.Field(alias="workflowID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    v3_workflows_create_workflow_request_update: Annotated[
        V3WorkflowsCreateWorkflowRequestUpdate,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class WorkflowsUpdateWorkflowResponseTypedDict(TypedDict):
    r"""The request has succeeded."""

    data: V3WorkflowsUpdateWorkflowAPIResponseTypedDict


class WorkflowsUpdateWorkflowResponse(BaseModel):
    r"""The request has succeeded."""

    data: V3WorkflowsUpdateWorkflowAPIResponse
