"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v3_globaleventrules_createrulesetrequest import (
    V3GlobalEventRulesCreateRulesetRequest,
    V3GlobalEventRulesCreateRulesetRequestTypedDict,
)
from .v3_globaleventrules_rulesetresponse import (
    V3GlobalEventRulesRulesetResponse,
    V3GlobalEventRulesRulesetResponseTypedDict,
)
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing_extensions import Annotated, TypedDict


class GlobalEventRulesCreateRulesetRequestTypedDict(TypedDict):
    ger_id: int
    v3_global_event_rules_create_ruleset_request: (
        V3GlobalEventRulesCreateRulesetRequestTypedDict
    )


class GlobalEventRulesCreateRulesetRequest(BaseModel):
    ger_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]

    v3_global_event_rules_create_ruleset_request: Annotated[
        V3GlobalEventRulesCreateRulesetRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class GlobalEventRulesCreateRulesetResponseTypedDict(TypedDict):
    r"""The request has succeeded and a new resource has been created as a result."""

    data: V3GlobalEventRulesRulesetResponseTypedDict


class GlobalEventRulesCreateRulesetResponse(BaseModel):
    r"""The request has succeeded and a new resource has been created as a result."""

    data: V3GlobalEventRulesRulesetResponse
