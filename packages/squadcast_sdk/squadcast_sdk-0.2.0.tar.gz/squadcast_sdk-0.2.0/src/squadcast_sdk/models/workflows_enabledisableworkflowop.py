"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v3_workflows_enabledisableworkflowrequest import (
    V3WorkflowsEnableDisableWorkflowRequest,
    V3WorkflowsEnableDisableWorkflowRequestTypedDict,
)
import pydantic
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing_extensions import Annotated, TypedDict


class WorkflowsEnabledisableWorkflowRequestTypedDict(TypedDict):
    workflow_id: str
    v3_workflows_enable_disable_workflow_request: (
        V3WorkflowsEnableDisableWorkflowRequestTypedDict
    )


class WorkflowsEnabledisableWorkflowRequest(BaseModel):
    workflow_id: Annotated[
        str,
        pydantic.Field(alias="workflowID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    v3_workflows_enable_disable_workflow_request: Annotated[
        V3WorkflowsEnableDisableWorkflowRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class WorkflowsEnabledisableWorkflowResponseBodyTypedDict(TypedDict):
    r"""There is no content to send for this request, but the headers may be useful."""


class WorkflowsEnabledisableWorkflowResponseBody(BaseModel):
    r"""There is no content to send for this request, but the headers may be useful."""
