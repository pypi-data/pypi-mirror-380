"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v3_globaleventrules_globaleventruleresponse import (
    V3GlobalEventRulesGlobalEventRuleResponse,
    V3GlobalEventRulesGlobalEventRuleResponseTypedDict,
)
from .v3_globaleventrules_updateglobaleventrulerequest import (
    V3GlobalEventRulesUpdateGlobalEventRuleRequest,
    V3GlobalEventRulesUpdateGlobalEventRuleRequestTypedDict,
)
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing_extensions import Annotated, TypedDict


class GlobalEventRulesUpdateGlobalEventRuleByIDRequestTypedDict(TypedDict):
    ger_id: int
    v3_global_event_rules_update_global_event_rule_request: (
        V3GlobalEventRulesUpdateGlobalEventRuleRequestTypedDict
    )


class GlobalEventRulesUpdateGlobalEventRuleByIDRequest(BaseModel):
    ger_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]

    v3_global_event_rules_update_global_event_rule_request: Annotated[
        V3GlobalEventRulesUpdateGlobalEventRuleRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class GlobalEventRulesUpdateGlobalEventRuleByIDResponseTypedDict(TypedDict):
    r"""The request has succeeded."""

    data: V3GlobalEventRulesGlobalEventRuleResponseTypedDict


class GlobalEventRulesUpdateGlobalEventRuleByIDResponse(BaseModel):
    r"""The request has succeeded."""

    data: V3GlobalEventRulesGlobalEventRuleResponse
