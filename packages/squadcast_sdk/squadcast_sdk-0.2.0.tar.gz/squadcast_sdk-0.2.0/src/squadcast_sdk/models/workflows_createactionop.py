"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v3_workflows_actionrequest import (
    V3WorkflowsActionRequest,
    V3WorkflowsActionRequestTypedDict,
)
from .v3_workflows_actionresponse import (
    V3WorkflowsActionResponse,
    V3WorkflowsActionResponseTypedDict,
)
import pydantic
from squadcast_sdk.types import BaseModel
from squadcast_sdk.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing_extensions import Annotated, TypedDict


class WorkflowsCreateActionRequestTypedDict(TypedDict):
    workflow_id: str
    v3_workflows_action_request: V3WorkflowsActionRequestTypedDict


class WorkflowsCreateActionRequest(BaseModel):
    workflow_id: Annotated[
        str,
        pydantic.Field(alias="workflowID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    v3_workflows_action_request: Annotated[
        V3WorkflowsActionRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class WorkflowsCreateActionResponseTypedDict(TypedDict):
    r"""The request has succeeded and a new resource has been created as a result."""

    data: V3WorkflowsActionResponseTypedDict


class WorkflowsCreateActionResponse(BaseModel):
    r"""The request has succeeded and a new resource has been created as a result."""

    data: V3WorkflowsActionResponse
