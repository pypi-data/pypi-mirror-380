// This file is generated by create_metaschema.py do not modify directly

#ifndef METASCHEMA_H_
#define METASCHEMA_H_

template<class T>
struct item_return{ typedef T type; };

template<typename T>
inline const typename item_return<T>::type* get_metaschema() { return NULL; }

template<>
inline const item_return<char>::type* get_metaschema<char>() {
  const char* out = "{"
    " \"id\": \"http://json-schema.org/draft-04/schema#\","
    " \"$schema\": \"http://json-schema.org/draft-04/schema#\","
    " \"description\": \"Core schema meta-schema\","
    " \"definitions\": {"
    "  \"schemaArray\": {"
    "   \"type\": \"array\","
    "   \"minItems\": 1,"
    "   \"items\": {"
    "    \"$ref\": \"#\""
    "   }"
    "  },"
    "  \"positiveInteger\": {"
    "   \"type\": \"integer\","
    "   \"minimum\": 0"
    "  },"
    "  \"positiveIntegerDefault0\": {"
    "   \"allOf\": ["
    "    {"
    "     \"$ref\": \"#/definitions/positiveInteger\""
    "    },"
    "    {"
    "     \"default\": 0"
    "    }"
    "   ]"
    "  },"
    "  \"simpleTypes\": {"
    "   \"enum\": ["
    "    \"array\","
    "    \"boolean\","
    "    \"integer\","
    "    \"null\","
    "    \"number\","
    "    \"object\","
    "    \"string\","
    "    \"1darray\","
    "    \"any\","
    "    \"bytes\","
    "    \"class\","
    "    \"complex\","
    "    \"float\","
    "    \"function\","
    "    \"instance\","
    "    \"int\","
    "    \"ndarray\","
    "    \"obj\","
    "    \"ply\","
    "    \"scalar\","
    "    \"schema\","
    "    \"uint\","
    "    \"unicode\""
    "   ]"
    "  },"
    "  \"stringArray\": {"
    "   \"type\": \"array\","
    "   \"items\": {"
    "    \"type\": \"string\""
    "   },"
    "   \"minItems\": 1,"
    "   \"uniqueItems\": true"
    "  }"
    " },"
    " \"type\": \"object\","
    " \"properties\": {"
    "  \"id\": {"
    "   \"type\": \"string\""
    "  },"
    "  \"$schema\": {"
    "   \"type\": \"string\""
    "  },"
    "  \"title\": {"
    "   \"type\": \"string\""
    "  },"
    "  \"description\": {"
    "   \"type\": \"string\""
    "  },"
    "  \"default\": {},"
    "  \"multipleOf\": {"
    "   \"type\": \"number\","
    "   \"minimum\": 0,"
    "   \"exclusiveMinimum\": true"
    "  },"
    "  \"maximum\": {"
    "   \"type\": \"number\""
    "  },"
    "  \"exclusiveMaximum\": {"
    "   \"type\": \"boolean\","
    "   \"default\": false"
    "  },"
    "  \"minimum\": {"
    "   \"type\": \"number\""
    "  },"
    "  \"exclusiveMinimum\": {"
    "   \"type\": \"boolean\","
    "   \"default\": false"
    "  },"
    "  \"maxLength\": {"
    "   \"$ref\": \"#/definitions/positiveInteger\""
    "  },"
    "  \"minLength\": {"
    "   \"$ref\": \"#/definitions/positiveIntegerDefault0\""
    "  },"
    "  \"pattern\": {"
    "   \"type\": \"string\","
    "   \"format\": \"regex\""
    "  },"
    "  \"additionalItems\": {"
    "   \"anyOf\": ["
    "    {"
    "     \"type\": \"boolean\""
    "    },"
    "    {"
    "     \"$ref\": \"#\""
    "    }"
    "   ],"
    "   \"default\": {}"
    "  },"
    "  \"items\": {"
    "   \"anyOf\": ["
    "    {"
    "     \"$ref\": \"#\""
    "    },"
    "    {"
    "     \"$ref\": \"#/definitions/schemaArray\""
    "    }"
    "   ],"
    "   \"default\": {}"
    "  },"
    "  \"maxItems\": {"
    "   \"$ref\": \"#/definitions/positiveInteger\""
    "  },"
    "  \"minItems\": {"
    "   \"$ref\": \"#/definitions/positiveIntegerDefault0\""
    "  },"
    "  \"uniqueItems\": {"
    "   \"type\": \"boolean\","
    "   \"default\": false"
    "  },"
    "  \"maxProperties\": {"
    "   \"$ref\": \"#/definitions/positiveInteger\""
    "  },"
    "  \"minProperties\": {"
    "   \"$ref\": \"#/definitions/positiveIntegerDefault0\""
    "  },"
    "  \"required\": {"
    "   \"$ref\": \"#/definitions/stringArray\""
    "  },"
    "  \"additionalProperties\": {"
    "   \"anyOf\": ["
    "    {"
    "     \"type\": \"boolean\""
    "    },"
    "    {"
    "     \"$ref\": \"#\""
    "    }"
    "   ],"
    "   \"default\": {}"
    "  },"
    "  \"definitions\": {"
    "   \"type\": \"object\","
    "   \"additionalProperties\": {"
    "    \"$ref\": \"#\""
    "   },"
    "   \"default\": {}"
    "  },"
    "  \"properties\": {"
    "   \"type\": \"object\","
    "   \"additionalProperties\": {"
    "    \"$ref\": \"#\""
    "   },"
    "   \"default\": {}"
    "  },"
    "  \"patternProperties\": {"
    "   \"type\": \"object\","
    "   \"additionalProperties\": {"
    "    \"$ref\": \"#\""
    "   },"
    "   \"default\": {}"
    "  },"
    "  \"dependencies\": {"
    "   \"type\": \"object\","
    "   \"additionalProperties\": {"
    "    \"anyOf\": ["
    "     {"
    "      \"$ref\": \"#\""
    "     },"
    "     {"
    "      \"$ref\": \"#/definitions/stringArray\""
    "     }"
    "    ]"
    "   }"
    "  },"
    "  \"enum\": {"
    "   \"type\": \"array\","
    "   \"minItems\": 1,"
    "   \"uniqueItems\": true"
    "  },"
    "  \"type\": {"
    "   \"anyOf\": ["
    "    {"
    "     \"$ref\": \"#/definitions/simpleTypes\""
    "    },"
    "    {"
    "     \"type\": \"array\","
    "     \"items\": {"
    "      \"$ref\": \"#/definitions/simpleTypes\""
    "     },"
    "     \"minItems\": 1,"
    "     \"uniqueItems\": true"
    "    }"
    "   ]"
    "  },"
    "  \"format\": {"
    "   \"type\": \"string\""
    "  },"
    "  \"allOf\": {"
    "   \"$ref\": \"#/definitions/schemaArray\""
    "  },"
    "  \"anyOf\": {"
    "   \"$ref\": \"#/definitions/schemaArray\""
    "  },"
    "  \"oneOf\": {"
    "   \"$ref\": \"#/definitions/schemaArray\""
    "  },"
    "  \"not\": {"
    "   \"$ref\": \"#\""
    "  },"
    "  \"args\": {"
    "   \"description\": \"Arguments required to recreate a class instance.\","
    "   \"type\": \"array\""
    "  },"
    "  \"class\": {"
    "   \"anyOf\": ["
    "    {"
    "     \"type\": \"class\""
    "    },"
    "    {"
    "     \"items\": {"
    "      \"type\": \"class\""
    "     },"
    "     \"minItems\": 1,"
    "     \"type\": \"array\""
    "    }"
    "   ],"
    "   \"description\": \"One or more classes that the object should be an instance of.\""
    "  },"
    "  \"kwargs\": {"
    "   \"description\": \"Keyword arguments required to recreate a class instance.\","
    "   \"type\": \"object\""
    "  },"
    "  \"length\": {"
    "   \"description\": \"Number of elements in the 1D array.\","
    "   \"minimum\": 1,"
    "   \"type\": \"number\""
    "  },"
    "  \"precision\": {"
    "   \"description\": \"The size (in bits) of each item.\","
    "   \"minimum\": 1,"
    "   \"type\": \"number\""
    "  },"
    "  \"encoding\": {"
    "   \"description\": \"The encoding of string elements\","
    "   \"enum\": ["
    "    \"UTF8\","
    "    \"UTF16\","
    "    \"UTF32\","
    "    \"ASCII\","
    "    \"UCS4\""
    "   ]"
    "  },"
    "  \"shape\": {"
    "   \"description\": \"Shape of the ND array in each dimension.\","
    "   \"items\": {"
    "    \"minimum\": 1,"
    "    \"type\": \"integer\""
    "   },"
    "   \"type\": \"array\""
    "  },"
    "  \"ndim\": {"
    "   \"description\": \"Number of dimensions in the ND array.\","
    "   \"minimum\": 1,"
    "   \"type\": \"integer\""
    "  },"
    "  \"subtype\": {"
    "   \"description\": \"The base type for each item.\","
    "   \"enum\": ["
    "    \"string\","
    "    \"complex\","
    "    \"float\","
    "    \"int\","
    "    \"uint\","
    "    \"bytes\","
    "    \"unicode\","
    "    \"any\""
    "   ],"
    "   \"type\": \"string\""
    "  },"
    "  \"units\": {"
    "   \"description\": \"Physical units.\","
    "   \"type\": \"string\""
    "  },"
    "  \"aliases\": {"
    "   \"description\": \"Aliases for a property that also be used.\","
    "   \"type\": \"array\","
    "   \"items\": {"
    "    \"type\": \"string\""
    "   }"
    "  },"
    "  \"allowSingular\": {"
    "   \"description\": \"If true, the value may only contain an element matching the schema for 1) all array items, 2) the only array item in a 1-element long array, 3) the first required object property, 4) the only object property in a 1-element long object. Only valid for array & object schemas.\","
    "   \"type\": ["
    "    \"boolean\","
    "    \"string\""
    "   ],"
    "   \"default\": false"
    "  },"
    "  \"allowWrapped\": {"
    "   \"description\": \"If true, the value may be wrapped in an array. If a string, the value may be wrapped in an object at the property specified by the string.\","
    "   \"type\": ["
    "    \"boolean\","
    "    \"string\""
    "   ],"
    "   \"default\": false"
    "  },"
    "  \"deprecated\": {"
    "   \"description\": \"Message about the deprecation of a schema property that will be displayed during validation. If true, a generic warning will be displayed.\","
    "   \"type\": ["
    "    \"boolean\","
    "    \"string\""
    "   ]"
    "  },"
    "  \"pullProperties\": {"
    "   \"description\": \"Pull properties from another location in the provided JSON document. If true, any missing local properties will be pulled from the parent object. If an array of property names is provided, only those local properties in the array will be pulled from the parent object. If an object is provided, the keys should be relative or absolute paths to objects in the JSON document that properties will be pulled from with the values specifying which properties should be pulled (true for all properties and an array or a select subset).\","
    "   \"oneOf\": ["
    "    {"
    "     \"type\": \"boolean\""
    "    },"
    "    {"
    "     \"type\": \"array\","
    "     \"items\": {"
    "      \"type\": \"string\""
    "     }"
    "    },"
    "    {"
    "     \"type\": \"object\","
    "     \"additionalProperties\": {"
    "      \"oneOf\": ["
    "       {"
    "        \"type\": \"boolean\""
    "       },"
    "       {"
    "        \"type\": \"array\","
    "        \"items\": {"
    "         \"type\": \"string\""
    "        }"
    "       }"
    "      ]"
    "     }"
    "    }"
    "   ],"
    "   \"default\": false"
    "  },"
    "  \"pushProperties\": {"
    "   \"description\": \"Push properties to another location in the provided JSON document. If true, any properties missing from the parent will be pushed to the parent object. If an array of property names is provided, only those parent properties in the array will be pushed to the parent object. If an object is provided, the keys should be relative or absolute paths to objects in the JSON document that properties will be pushed to with the values specifying which properties should be pushed (true for all missing destination properties and an array or a select subset).\","
    "   \"oneOf\": ["
    "    {"
    "     \"type\": \"boolean\""
    "    },"
    "    {"
    "     \"type\": \"array\","
    "     \"items\": {"
    "      \"type\": \"string\""
    "     }"
    "    },"
    "    {"
    "     \"type\": \"object\","
    "     \"additionalProperties\": {"
    "      \"oneOf\": ["
    "       {"
    "        \"type\": \"boolean\""
    "       },"
    "       {"
    "        \"type\": \"array\","
    "        \"items\": {"
    "         \"type\": \"string\""
    "        }"
    "       }"
    "      ]"
    "     }"
    "    }"
    "   ],"
    "   \"default\": false"
    "  }"
    " },"
    " \"dependencies\": {"
    "  \"exclusiveMaximum\": ["
    "   \"maximum\""
    "  ],"
    "  \"exclusiveMinimum\": ["
    "   \"minimum\""
    "  ]"
    " },"
    " \"default\": {},"
    " \"title\": \"Ygg meta-schema for data type schemas\""
    "}";
  return out;
}

template<>
inline const item_return<wchar_t>::type* get_metaschema<wchar_t>() {
  const wchar_t* out = L"{"
    L" \"id\": \"http://json-schema.org/draft-04/schema#\","
    L" \"$schema\": \"http://json-schema.org/draft-04/schema#\","
    L" \"description\": \"Core schema meta-schema\","
    L" \"definitions\": {"
    L"  \"schemaArray\": {"
    L"   \"type\": \"array\","
    L"   \"minItems\": 1,"
    L"   \"items\": {"
    L"    \"$ref\": \"#\""
    L"   }"
    L"  },"
    L"  \"positiveInteger\": {"
    L"   \"type\": \"integer\","
    L"   \"minimum\": 0"
    L"  },"
    L"  \"positiveIntegerDefault0\": {"
    L"   \"allOf\": ["
    L"    {"
    L"     \"$ref\": \"#/definitions/positiveInteger\""
    L"    },"
    L"    {"
    L"     \"default\": 0"
    L"    }"
    L"   ]"
    L"  },"
    L"  \"simpleTypes\": {"
    L"   \"enum\": ["
    L"    \"array\","
    L"    \"boolean\","
    L"    \"integer\","
    L"    \"null\","
    L"    \"number\","
    L"    \"object\","
    L"    \"string\","
    L"    \"1darray\","
    L"    \"any\","
    L"    \"bytes\","
    L"    \"class\","
    L"    \"complex\","
    L"    \"float\","
    L"    \"function\","
    L"    \"instance\","
    L"    \"int\","
    L"    \"ndarray\","
    L"    \"obj\","
    L"    \"ply\","
    L"    \"scalar\","
    L"    \"schema\","
    L"    \"uint\","
    L"    \"unicode\""
    L"   ]"
    L"  },"
    L"  \"stringArray\": {"
    L"   \"type\": \"array\","
    L"   \"items\": {"
    L"    \"type\": \"string\""
    L"   },"
    L"   \"minItems\": 1,"
    L"   \"uniqueItems\": true"
    L"  }"
    L" },"
    L" \"type\": \"object\","
    L" \"properties\": {"
    L"  \"id\": {"
    L"   \"type\": \"string\""
    L"  },"
    L"  \"$schema\": {"
    L"   \"type\": \"string\""
    L"  },"
    L"  \"title\": {"
    L"   \"type\": \"string\""
    L"  },"
    L"  \"description\": {"
    L"   \"type\": \"string\""
    L"  },"
    L"  \"default\": {},"
    L"  \"multipleOf\": {"
    L"   \"type\": \"number\","
    L"   \"minimum\": 0,"
    L"   \"exclusiveMinimum\": true"
    L"  },"
    L"  \"maximum\": {"
    L"   \"type\": \"number\""
    L"  },"
    L"  \"exclusiveMaximum\": {"
    L"   \"type\": \"boolean\","
    L"   \"default\": false"
    L"  },"
    L"  \"minimum\": {"
    L"   \"type\": \"number\""
    L"  },"
    L"  \"exclusiveMinimum\": {"
    L"   \"type\": \"boolean\","
    L"   \"default\": false"
    L"  },"
    L"  \"maxLength\": {"
    L"   \"$ref\": \"#/definitions/positiveInteger\""
    L"  },"
    L"  \"minLength\": {"
    L"   \"$ref\": \"#/definitions/positiveIntegerDefault0\""
    L"  },"
    L"  \"pattern\": {"
    L"   \"type\": \"string\","
    L"   \"format\": \"regex\""
    L"  },"
    L"  \"additionalItems\": {"
    L"   \"anyOf\": ["
    L"    {"
    L"     \"type\": \"boolean\""
    L"    },"
    L"    {"
    L"     \"$ref\": \"#\""
    L"    }"
    L"   ],"
    L"   \"default\": {}"
    L"  },"
    L"  \"items\": {"
    L"   \"anyOf\": ["
    L"    {"
    L"     \"$ref\": \"#\""
    L"    },"
    L"    {"
    L"     \"$ref\": \"#/definitions/schemaArray\""
    L"    }"
    L"   ],"
    L"   \"default\": {}"
    L"  },"
    L"  \"maxItems\": {"
    L"   \"$ref\": \"#/definitions/positiveInteger\""
    L"  },"
    L"  \"minItems\": {"
    L"   \"$ref\": \"#/definitions/positiveIntegerDefault0\""
    L"  },"
    L"  \"uniqueItems\": {"
    L"   \"type\": \"boolean\","
    L"   \"default\": false"
    L"  },"
    L"  \"maxProperties\": {"
    L"   \"$ref\": \"#/definitions/positiveInteger\""
    L"  },"
    L"  \"minProperties\": {"
    L"   \"$ref\": \"#/definitions/positiveIntegerDefault0\""
    L"  },"
    L"  \"required\": {"
    L"   \"$ref\": \"#/definitions/stringArray\""
    L"  },"
    L"  \"additionalProperties\": {"
    L"   \"anyOf\": ["
    L"    {"
    L"     \"type\": \"boolean\""
    L"    },"
    L"    {"
    L"     \"$ref\": \"#\""
    L"    }"
    L"   ],"
    L"   \"default\": {}"
    L"  },"
    L"  \"definitions\": {"
    L"   \"type\": \"object\","
    L"   \"additionalProperties\": {"
    L"    \"$ref\": \"#\""
    L"   },"
    L"   \"default\": {}"
    L"  },"
    L"  \"properties\": {"
    L"   \"type\": \"object\","
    L"   \"additionalProperties\": {"
    L"    \"$ref\": \"#\""
    L"   },"
    L"   \"default\": {}"
    L"  },"
    L"  \"patternProperties\": {"
    L"   \"type\": \"object\","
    L"   \"additionalProperties\": {"
    L"    \"$ref\": \"#\""
    L"   },"
    L"   \"default\": {}"
    L"  },"
    L"  \"dependencies\": {"
    L"   \"type\": \"object\","
    L"   \"additionalProperties\": {"
    L"    \"anyOf\": ["
    L"     {"
    L"      \"$ref\": \"#\""
    L"     },"
    L"     {"
    L"      \"$ref\": \"#/definitions/stringArray\""
    L"     }"
    L"    ]"
    L"   }"
    L"  },"
    L"  \"enum\": {"
    L"   \"type\": \"array\","
    L"   \"minItems\": 1,"
    L"   \"uniqueItems\": true"
    L"  },"
    L"  \"type\": {"
    L"   \"anyOf\": ["
    L"    {"
    L"     \"$ref\": \"#/definitions/simpleTypes\""
    L"    },"
    L"    {"
    L"     \"type\": \"array\","
    L"     \"items\": {"
    L"      \"$ref\": \"#/definitions/simpleTypes\""
    L"     },"
    L"     \"minItems\": 1,"
    L"     \"uniqueItems\": true"
    L"    }"
    L"   ]"
    L"  },"
    L"  \"format\": {"
    L"   \"type\": \"string\""
    L"  },"
    L"  \"allOf\": {"
    L"   \"$ref\": \"#/definitions/schemaArray\""
    L"  },"
    L"  \"anyOf\": {"
    L"   \"$ref\": \"#/definitions/schemaArray\""
    L"  },"
    L"  \"oneOf\": {"
    L"   \"$ref\": \"#/definitions/schemaArray\""
    L"  },"
    L"  \"not\": {"
    L"   \"$ref\": \"#\""
    L"  },"
    L"  \"args\": {"
    L"   \"description\": \"Arguments required to recreate a class instance.\","
    L"   \"type\": \"array\""
    L"  },"
    L"  \"class\": {"
    L"   \"anyOf\": ["
    L"    {"
    L"     \"type\": \"class\""
    L"    },"
    L"    {"
    L"     \"items\": {"
    L"      \"type\": \"class\""
    L"     },"
    L"     \"minItems\": 1,"
    L"     \"type\": \"array\""
    L"    }"
    L"   ],"
    L"   \"description\": \"One or more classes that the object should be an instance of.\""
    L"  },"
    L"  \"kwargs\": {"
    L"   \"description\": \"Keyword arguments required to recreate a class instance.\","
    L"   \"type\": \"object\""
    L"  },"
    L"  \"length\": {"
    L"   \"description\": \"Number of elements in the 1D array.\","
    L"   \"minimum\": 1,"
    L"   \"type\": \"number\""
    L"  },"
    L"  \"precision\": {"
    L"   \"description\": \"The size (in bits) of each item.\","
    L"   \"minimum\": 1,"
    L"   \"type\": \"number\""
    L"  },"
    L"  \"encoding\": {"
    L"   \"description\": \"The encoding of string elements\","
    L"   \"enum\": ["
    L"    \"UTF8\","
    L"    \"UTF16\","
    L"    \"UTF32\","
    L"    \"ASCII\","
    L"    \"UCS4\""
    L"   ]"
    L"  },"
    L"  \"shape\": {"
    L"   \"description\": \"Shape of the ND array in each dimension.\","
    L"   \"items\": {"
    L"    \"minimum\": 1,"
    L"    \"type\": \"integer\""
    L"   },"
    L"   \"type\": \"array\""
    L"  },"
    L"  \"ndim\": {"
    L"   \"description\": \"Number of dimensions in the ND array.\","
    L"   \"minimum\": 1,"
    L"   \"type\": \"integer\""
    L"  },"
    L"  \"subtype\": {"
    L"   \"description\": \"The base type for each item.\","
    L"   \"enum\": ["
    L"    \"string\","
    L"    \"complex\","
    L"    \"float\","
    L"    \"int\","
    L"    \"uint\","
    L"    \"bytes\","
    L"    \"unicode\","
    L"    \"any\""
    L"   ],"
    L"   \"type\": \"string\""
    L"  },"
    L"  \"units\": {"
    L"   \"description\": \"Physical units.\","
    L"   \"type\": \"string\""
    L"  },"
    L"  \"aliases\": {"
    L"   \"description\": \"Aliases for a property that also be used.\","
    L"   \"type\": \"array\","
    L"   \"items\": {"
    L"    \"type\": \"string\""
    L"   }"
    L"  },"
    L"  \"allowSingular\": {"
    L"   \"description\": \"If true, the value may only contain an element matching the schema for 1) all array items, 2) the only array item in a 1-element long array, 3) the first required object property, 4) the only object property in a 1-element long object. Only valid for array & object schemas.\","
    L"   \"type\": ["
    L"    \"boolean\","
    L"    \"string\""
    L"   ],"
    L"   \"default\": false"
    L"  },"
    L"  \"allowWrapped\": {"
    L"   \"description\": \"If true, the value may be wrapped in an array. If a string, the value may be wrapped in an object at the property specified by the string.\","
    L"   \"type\": ["
    L"    \"boolean\","
    L"    \"string\""
    L"   ],"
    L"   \"default\": false"
    L"  },"
    L"  \"deprecated\": {"
    L"   \"description\": \"Message about the deprecation of a schema property that will be displayed during validation. If true, a generic warning will be displayed.\","
    L"   \"type\": ["
    L"    \"boolean\","
    L"    \"string\""
    L"   ]"
    L"  },"
    L"  \"pullProperties\": {"
    L"   \"description\": \"Pull properties from another location in the provided JSON document. If true, any missing local properties will be pulled from the parent object. If an array of property names is provided, only those local properties in the array will be pulled from the parent object. If an object is provided, the keys should be relative or absolute paths to objects in the JSON document that properties will be pulled from with the values specifying which properties should be pulled (true for all properties and an array or a select subset).\","
    L"   \"oneOf\": ["
    L"    {"
    L"     \"type\": \"boolean\""
    L"    },"
    L"    {"
    L"     \"type\": \"array\","
    L"     \"items\": {"
    L"      \"type\": \"string\""
    L"     }"
    L"    },"
    L"    {"
    L"     \"type\": \"object\","
    L"     \"additionalProperties\": {"
    L"      \"oneOf\": ["
    L"       {"
    L"        \"type\": \"boolean\""
    L"       },"
    L"       {"
    L"        \"type\": \"array\","
    L"        \"items\": {"
    L"         \"type\": \"string\""
    L"        }"
    L"       }"
    L"      ]"
    L"     }"
    L"    }"
    L"   ],"
    L"   \"default\": false"
    L"  },"
    L"  \"pushProperties\": {"
    L"   \"description\": \"Push properties to another location in the provided JSON document. If true, any properties missing from the parent will be pushed to the parent object. If an array of property names is provided, only those parent properties in the array will be pushed to the parent object. If an object is provided, the keys should be relative or absolute paths to objects in the JSON document that properties will be pushed to with the values specifying which properties should be pushed (true for all missing destination properties and an array or a select subset).\","
    L"   \"oneOf\": ["
    L"    {"
    L"     \"type\": \"boolean\""
    L"    },"
    L"    {"
    L"     \"type\": \"array\","
    L"     \"items\": {"
    L"      \"type\": \"string\""
    L"     }"
    L"    },"
    L"    {"
    L"     \"type\": \"object\","
    L"     \"additionalProperties\": {"
    L"      \"oneOf\": ["
    L"       {"
    L"        \"type\": \"boolean\""
    L"       },"
    L"       {"
    L"        \"type\": \"array\","
    L"        \"items\": {"
    L"         \"type\": \"string\""
    L"        }"
    L"       }"
    L"      ]"
    L"     }"
    L"    }"
    L"   ],"
    L"   \"default\": false"
    L"  }"
    L" },"
    L" \"dependencies\": {"
    L"  \"exclusiveMaximum\": ["
    L"   \"maximum\""
    L"  ],"
    L"  \"exclusiveMinimum\": ["
    L"   \"minimum\""
    L"  ]"
    L" },"
    L" \"default\": {},"
    L" \"title\": \"Ygg meta-schema for data type schemas\""
    L"}";
  return out;
}

template<typename T>
inline const typename item_return<T>::type* get_standard_metaschema() { return NULL; }

template<>
inline const item_return<char>::type* get_standard_metaschema<char>() {
  const char* out = "{"
    " \"id\": \"http://json-schema.org/draft-04/schema#\","
    " \"$schema\": \"http://json-schema.org/draft-04/schema#\","
    " \"description\": \"Core schema meta-schema\","
    " \"definitions\": {"
    "  \"schemaArray\": {"
    "   \"type\": \"array\","
    "   \"minItems\": 1,"
    "   \"items\": {"
    "    \"$ref\": \"#\""
    "   }"
    "  },"
    "  \"positiveInteger\": {"
    "   \"type\": \"integer\","
    "   \"minimum\": 0"
    "  },"
    "  \"positiveIntegerDefault0\": {"
    "   \"allOf\": ["
    "    {"
    "     \"$ref\": \"#/definitions/positiveInteger\""
    "    },"
    "    {"
    "     \"default\": 0"
    "    }"
    "   ]"
    "  },"
    "  \"simpleTypes\": {"
    "   \"enum\": ["
    "    \"array\","
    "    \"boolean\","
    "    \"integer\","
    "    \"null\","
    "    \"number\","
    "    \"object\","
    "    \"string\""
    "   ]"
    "  },"
    "  \"stringArray\": {"
    "   \"type\": \"array\","
    "   \"items\": {"
    "    \"type\": \"string\""
    "   },"
    "   \"minItems\": 1,"
    "   \"uniqueItems\": true"
    "  }"
    " },"
    " \"type\": \"object\","
    " \"properties\": {"
    "  \"id\": {"
    "   \"type\": \"string\""
    "  },"
    "  \"$schema\": {"
    "   \"type\": \"string\""
    "  },"
    "  \"title\": {"
    "   \"type\": \"string\""
    "  },"
    "  \"description\": {"
    "   \"type\": \"string\""
    "  },"
    "  \"default\": {},"
    "  \"multipleOf\": {"
    "   \"type\": \"number\","
    "   \"minimum\": 0,"
    "   \"exclusiveMinimum\": true"
    "  },"
    "  \"maximum\": {"
    "   \"type\": \"number\""
    "  },"
    "  \"exclusiveMaximum\": {"
    "   \"type\": \"boolean\","
    "   \"default\": false"
    "  },"
    "  \"minimum\": {"
    "   \"type\": \"number\""
    "  },"
    "  \"exclusiveMinimum\": {"
    "   \"type\": \"boolean\","
    "   \"default\": false"
    "  },"
    "  \"maxLength\": {"
    "   \"$ref\": \"#/definitions/positiveInteger\""
    "  },"
    "  \"minLength\": {"
    "   \"$ref\": \"#/definitions/positiveIntegerDefault0\""
    "  },"
    "  \"pattern\": {"
    "   \"type\": \"string\","
    "   \"format\": \"regex\""
    "  },"
    "  \"additionalItems\": {"
    "   \"anyOf\": ["
    "    {"
    "     \"type\": \"boolean\""
    "    },"
    "    {"
    "     \"$ref\": \"#\""
    "    }"
    "   ],"
    "   \"default\": {}"
    "  },"
    "  \"items\": {"
    "   \"anyOf\": ["
    "    {"
    "     \"$ref\": \"#\""
    "    },"
    "    {"
    "     \"$ref\": \"#/definitions/schemaArray\""
    "    }"
    "   ],"
    "   \"default\": {}"
    "  },"
    "  \"maxItems\": {"
    "   \"$ref\": \"#/definitions/positiveInteger\""
    "  },"
    "  \"minItems\": {"
    "   \"$ref\": \"#/definitions/positiveIntegerDefault0\""
    "  },"
    "  \"uniqueItems\": {"
    "   \"type\": \"boolean\","
    "   \"default\": false"
    "  },"
    "  \"maxProperties\": {"
    "   \"$ref\": \"#/definitions/positiveInteger\""
    "  },"
    "  \"minProperties\": {"
    "   \"$ref\": \"#/definitions/positiveIntegerDefault0\""
    "  },"
    "  \"required\": {"
    "   \"$ref\": \"#/definitions/stringArray\""
    "  },"
    "  \"additionalProperties\": {"
    "   \"anyOf\": ["
    "    {"
    "     \"type\": \"boolean\""
    "    },"
    "    {"
    "     \"$ref\": \"#\""
    "    }"
    "   ],"
    "   \"default\": {}"
    "  },"
    "  \"definitions\": {"
    "   \"type\": \"object\","
    "   \"additionalProperties\": {"
    "    \"$ref\": \"#\""
    "   },"
    "   \"default\": {}"
    "  },"
    "  \"properties\": {"
    "   \"type\": \"object\","
    "   \"additionalProperties\": {"
    "    \"$ref\": \"#\""
    "   },"
    "   \"default\": {}"
    "  },"
    "  \"patternProperties\": {"
    "   \"type\": \"object\","
    "   \"additionalProperties\": {"
    "    \"$ref\": \"#\""
    "   },"
    "   \"default\": {}"
    "  },"
    "  \"dependencies\": {"
    "   \"type\": \"object\","
    "   \"additionalProperties\": {"
    "    \"anyOf\": ["
    "     {"
    "      \"$ref\": \"#\""
    "     },"
    "     {"
    "      \"$ref\": \"#/definitions/stringArray\""
    "     }"
    "    ]"
    "   }"
    "  },"
    "  \"enum\": {"
    "   \"type\": \"array\","
    "   \"minItems\": 1,"
    "   \"uniqueItems\": true"
    "  },"
    "  \"type\": {"
    "   \"anyOf\": ["
    "    {"
    "     \"$ref\": \"#/definitions/simpleTypes\""
    "    },"
    "    {"
    "     \"type\": \"array\","
    "     \"items\": {"
    "      \"$ref\": \"#/definitions/simpleTypes\""
    "     },"
    "     \"minItems\": 1,"
    "     \"uniqueItems\": true"
    "    }"
    "   ]"
    "  },"
    "  \"format\": {"
    "   \"type\": \"string\""
    "  },"
    "  \"allOf\": {"
    "   \"$ref\": \"#/definitions/schemaArray\""
    "  },"
    "  \"anyOf\": {"
    "   \"$ref\": \"#/definitions/schemaArray\""
    "  },"
    "  \"oneOf\": {"
    "   \"$ref\": \"#/definitions/schemaArray\""
    "  },"
    "  \"not\": {"
    "   \"$ref\": \"#\""
    "  }"
    " },"
    " \"dependencies\": {"
    "  \"exclusiveMaximum\": ["
    "   \"maximum\""
    "  ],"
    "  \"exclusiveMinimum\": ["
    "   \"minimum\""
    "  ]"
    " },"
    " \"default\": {}"
    "}";
  return out;
}

template<>
inline const item_return<wchar_t>::type* get_standard_metaschema<wchar_t>() {
  const wchar_t* out = L"{"
    L" \"id\": \"http://json-schema.org/draft-04/schema#\","
    L" \"$schema\": \"http://json-schema.org/draft-04/schema#\","
    L" \"description\": \"Core schema meta-schema\","
    L" \"definitions\": {"
    L"  \"schemaArray\": {"
    L"   \"type\": \"array\","
    L"   \"minItems\": 1,"
    L"   \"items\": {"
    L"    \"$ref\": \"#\""
    L"   }"
    L"  },"
    L"  \"positiveInteger\": {"
    L"   \"type\": \"integer\","
    L"   \"minimum\": 0"
    L"  },"
    L"  \"positiveIntegerDefault0\": {"
    L"   \"allOf\": ["
    L"    {"
    L"     \"$ref\": \"#/definitions/positiveInteger\""
    L"    },"
    L"    {"
    L"     \"default\": 0"
    L"    }"
    L"   ]"
    L"  },"
    L"  \"simpleTypes\": {"
    L"   \"enum\": ["
    L"    \"array\","
    L"    \"boolean\","
    L"    \"integer\","
    L"    \"null\","
    L"    \"number\","
    L"    \"object\","
    L"    \"string\""
    L"   ]"
    L"  },"
    L"  \"stringArray\": {"
    L"   \"type\": \"array\","
    L"   \"items\": {"
    L"    \"type\": \"string\""
    L"   },"
    L"   \"minItems\": 1,"
    L"   \"uniqueItems\": true"
    L"  }"
    L" },"
    L" \"type\": \"object\","
    L" \"properties\": {"
    L"  \"id\": {"
    L"   \"type\": \"string\""
    L"  },"
    L"  \"$schema\": {"
    L"   \"type\": \"string\""
    L"  },"
    L"  \"title\": {"
    L"   \"type\": \"string\""
    L"  },"
    L"  \"description\": {"
    L"   \"type\": \"string\""
    L"  },"
    L"  \"default\": {},"
    L"  \"multipleOf\": {"
    L"   \"type\": \"number\","
    L"   \"minimum\": 0,"
    L"   \"exclusiveMinimum\": true"
    L"  },"
    L"  \"maximum\": {"
    L"   \"type\": \"number\""
    L"  },"
    L"  \"exclusiveMaximum\": {"
    L"   \"type\": \"boolean\","
    L"   \"default\": false"
    L"  },"
    L"  \"minimum\": {"
    L"   \"type\": \"number\""
    L"  },"
    L"  \"exclusiveMinimum\": {"
    L"   \"type\": \"boolean\","
    L"   \"default\": false"
    L"  },"
    L"  \"maxLength\": {"
    L"   \"$ref\": \"#/definitions/positiveInteger\""
    L"  },"
    L"  \"minLength\": {"
    L"   \"$ref\": \"#/definitions/positiveIntegerDefault0\""
    L"  },"
    L"  \"pattern\": {"
    L"   \"type\": \"string\","
    L"   \"format\": \"regex\""
    L"  },"
    L"  \"additionalItems\": {"
    L"   \"anyOf\": ["
    L"    {"
    L"     \"type\": \"boolean\""
    L"    },"
    L"    {"
    L"     \"$ref\": \"#\""
    L"    }"
    L"   ],"
    L"   \"default\": {}"
    L"  },"
    L"  \"items\": {"
    L"   \"anyOf\": ["
    L"    {"
    L"     \"$ref\": \"#\""
    L"    },"
    L"    {"
    L"     \"$ref\": \"#/definitions/schemaArray\""
    L"    }"
    L"   ],"
    L"   \"default\": {}"
    L"  },"
    L"  \"maxItems\": {"
    L"   \"$ref\": \"#/definitions/positiveInteger\""
    L"  },"
    L"  \"minItems\": {"
    L"   \"$ref\": \"#/definitions/positiveIntegerDefault0\""
    L"  },"
    L"  \"uniqueItems\": {"
    L"   \"type\": \"boolean\","
    L"   \"default\": false"
    L"  },"
    L"  \"maxProperties\": {"
    L"   \"$ref\": \"#/definitions/positiveInteger\""
    L"  },"
    L"  \"minProperties\": {"
    L"   \"$ref\": \"#/definitions/positiveIntegerDefault0\""
    L"  },"
    L"  \"required\": {"
    L"   \"$ref\": \"#/definitions/stringArray\""
    L"  },"
    L"  \"additionalProperties\": {"
    L"   \"anyOf\": ["
    L"    {"
    L"     \"type\": \"boolean\""
    L"    },"
    L"    {"
    L"     \"$ref\": \"#\""
    L"    }"
    L"   ],"
    L"   \"default\": {}"
    L"  },"
    L"  \"definitions\": {"
    L"   \"type\": \"object\","
    L"   \"additionalProperties\": {"
    L"    \"$ref\": \"#\""
    L"   },"
    L"   \"default\": {}"
    L"  },"
    L"  \"properties\": {"
    L"   \"type\": \"object\","
    L"   \"additionalProperties\": {"
    L"    \"$ref\": \"#\""
    L"   },"
    L"   \"default\": {}"
    L"  },"
    L"  \"patternProperties\": {"
    L"   \"type\": \"object\","
    L"   \"additionalProperties\": {"
    L"    \"$ref\": \"#\""
    L"   },"
    L"   \"default\": {}"
    L"  },"
    L"  \"dependencies\": {"
    L"   \"type\": \"object\","
    L"   \"additionalProperties\": {"
    L"    \"anyOf\": ["
    L"     {"
    L"      \"$ref\": \"#\""
    L"     },"
    L"     {"
    L"      \"$ref\": \"#/definitions/stringArray\""
    L"     }"
    L"    ]"
    L"   }"
    L"  },"
    L"  \"enum\": {"
    L"   \"type\": \"array\","
    L"   \"minItems\": 1,"
    L"   \"uniqueItems\": true"
    L"  },"
    L"  \"type\": {"
    L"   \"anyOf\": ["
    L"    {"
    L"     \"$ref\": \"#/definitions/simpleTypes\""
    L"    },"
    L"    {"
    L"     \"type\": \"array\","
    L"     \"items\": {"
    L"      \"$ref\": \"#/definitions/simpleTypes\""
    L"     },"
    L"     \"minItems\": 1,"
    L"     \"uniqueItems\": true"
    L"    }"
    L"   ]"
    L"  },"
    L"  \"format\": {"
    L"   \"type\": \"string\""
    L"  },"
    L"  \"allOf\": {"
    L"   \"$ref\": \"#/definitions/schemaArray\""
    L"  },"
    L"  \"anyOf\": {"
    L"   \"$ref\": \"#/definitions/schemaArray\""
    L"  },"
    L"  \"oneOf\": {"
    L"   \"$ref\": \"#/definitions/schemaArray\""
    L"  },"
    L"  \"not\": {"
    L"   \"$ref\": \"#\""
    L"  }"
    L" },"
    L" \"dependencies\": {"
    L"  \"exclusiveMaximum\": ["
    L"   \"maximum\""
    L"  ],"
    L"  \"exclusiveMinimum\": ["
    L"   \"minimum\""
    L"  ]"
    L" },"
    L" \"default\": {}"
    L"}";
  return out;
}


#endif // METASCHEMA_H_
