from typing import Optional
import typing

# Custom classes
class FixedString2048:
    def __init__(self) -> None: ...
    def __init__(self, arg0: str) -> None: ...
    def get(self) -> str: ...
    def set(self, arg0: str) -> None: ...
    def size(self) -> int: ...

class ExampleClass:
    def __init__(self) -> None: ...
    value1: int
    value2: float
    value3: int
    def printValues(self) -> None: ...

class ExampleClassAtomic:
    def __init__(self) -> None: ...
    def getValue1(self) -> int: ...
    def getValue2(self) -> float: ...
    def getValue3(self) -> int: ...
    def setValue1(self, value: int) -> None: ...
    def setValue2(self, value: float) -> None: ...
    def setValue3(self, value: int) -> None: ...
    def printValues(self) -> None: ...

# Publisher classes
class Publisher_bool:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> bool: ...
    def setValue(self, value: bool) -> None: ...
    def readValue(self) -> bool: ...
    def publish(self, value: bool) -> None: ...
    def push(self, value: bool) -> None: ...
    def setValueAndPush(self, value: bool) -> None: ...
    def publishOnChange(self, value: bool) -> None: ...
    def setValueAndNotifyOnChange(self, value: bool) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_int:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...
    def readValue(self) -> int: ...
    def publish(self, value: int) -> None: ...
    def push(self, value: int) -> None: ...
    def setValueAndPush(self, value: int) -> None: ...
    def publishOnChange(self, value: int) -> None: ...
    def setValueAndNotifyOnChange(self, value: int) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_uint:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...
    def readValue(self) -> int: ...
    def publish(self, value: int) -> None: ...
    def push(self, value: int) -> None: ...
    def setValueAndPush(self, value: int) -> None: ...
    def publishOnChange(self, value: int) -> None: ...
    def setValueAndNotifyOnChange(self, value: int) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_int8:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...
    def readValue(self) -> int: ...
    def publish(self, value: int) -> None: ...
    def push(self, value: int) -> None: ...
    def setValueAndPush(self, value: int) -> None: ...
    def publishOnChange(self, value: int) -> None: ...
    def setValueAndNotifyOnChange(self, value: int) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_uint8:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...
    def readValue(self) -> int: ...
    def publish(self, value: int) -> None: ...
    def push(self, value: int) -> None: ...
    def setValueAndPush(self, value: int) -> None: ...
    def publishOnChange(self, value: int) -> None: ...
    def setValueAndNotifyOnChange(self, value: int) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_int16:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...
    def readValue(self) -> int: ...
    def publish(self, value: int) -> None: ...
    def push(self, value: int) -> None: ...
    def setValueAndPush(self, value: int) -> None: ...
    def publishOnChange(self, value: int) -> None: ...
    def setValueAndNotifyOnChange(self, value: int) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_uint16:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...
    def readValue(self) -> int: ...
    def publish(self, value: int) -> None: ...
    def push(self, value: int) -> None: ...
    def setValueAndPush(self, value: int) -> None: ...
    def publishOnChange(self, value: int) -> None: ...
    def setValueAndNotifyOnChange(self, value: int) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_int64:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...
    def readValue(self) -> int: ...
    def publish(self, value: int) -> None: ...
    def push(self, value: int) -> None: ...
    def setValueAndPush(self, value: int) -> None: ...
    def publishOnChange(self, value: int) -> None: ...
    def setValueAndNotifyOnChange(self, value: int) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_uint64:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...
    def readValue(self) -> int: ...
    def publish(self, value: int) -> None: ...
    def push(self, value: int) -> None: ...
    def setValueAndPush(self, value: int) -> None: ...
    def publishOnChange(self, value: int) -> None: ...
    def setValueAndNotifyOnChange(self, value: int) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_float:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> float: ...
    def setValue(self, value: float) -> None: ...
    def readValue(self) -> float: ...
    def publish(self, value: float) -> None: ...
    def push(self, value: float) -> None: ...
    def setValueAndPush(self, value: float) -> None: ...
    def publishOnChange(self, value: float) -> None: ...
    def setValueAndNotifyOnChange(self, value: float) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_double:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> float: ...
    def setValue(self, value: float) -> None: ...
    def readValue(self) -> float: ...
    def publish(self, value: float) -> None: ...
    def push(self, value: float) -> None: ...
    def setValueAndPush(self, value: float) -> None: ...
    def publishOnChange(self, value: float) -> None: ...
    def setValueAndNotifyOnChange(self, value: float) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_FixedString2048:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> FixedString2048: ...
    def setValue(self, value: FixedString2048) -> None: ...
    def readValue(self) -> FixedString2048: ...
    def publish(self, value: FixedString2048) -> None: ...
    def push(self, value: FixedString2048) -> None: ...
    def setValueAndPush(self, value: FixedString2048) -> None: ...
    def publishOnChange(self, value: FixedString2048) -> None: ...
    def setValueAndNotifyOnChange(self, value: FixedString2048) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_ExampleClass:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> ExampleClass: ...
    def setValue(self, value: ExampleClass) -> None: ...
    def readValue(self) -> ExampleClass: ...
    def publish(self, value: ExampleClass) -> None: ...
    def push(self, value: ExampleClass) -> None: ...
    def setValueAndPush(self, value: ExampleClass) -> None: ...
    def publishOnChange(self, value: ExampleClass) -> None: ...
    def setValueAndNotifyOnChange(self, value: ExampleClass) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_ExampleClassAtomic:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> ExampleClassAtomic: ...
    def setValue(self, value: ExampleClassAtomic) -> None: ...
    def readValue(self) -> ExampleClassAtomic: ...
    def publish(self, value: ExampleClassAtomic) -> None: ...
    def push(self, value: ExampleClassAtomic) -> None: ...
    def setValueAndPush(self, value: ExampleClassAtomic) -> None: ...
    def publishOnChange(self, value: ExampleClassAtomic) -> None: ...
    def setValueAndNotifyOnChange(self, value: ExampleClassAtomic) -> None: ...
    def notifyAll(self) -> None: ...

# Atomic Publisher classes
class Publisher_atomic_bool:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> bool: ...
    def setValue(self, value: bool) -> None: ...
    def readValue(self) -> bool: ...
    def publish(self, value: bool) -> None: ...
    def push(self, value: bool) -> None: ...
    def setValueAndPush(self, value: bool) -> None: ...
    def publishOnChange(self, value: bool) -> None: ...
    def setValueAndNotifyOnChange(self, value: bool) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_atomic_int:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...
    def readValue(self) -> int: ...
    def publish(self, value: int) -> None: ...
    def push(self, value: int) -> None: ...
    def setValueAndPush(self, value: int) -> None: ...
    def publishOnChange(self, value: int) -> None: ...
    def setValueAndNotifyOnChange(self, value: int) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_atomic_uint:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...
    def readValue(self) -> int: ...
    def publish(self, value: int) -> None: ...
    def push(self, value: int) -> None: ...
    def setValueAndPush(self, value: int) -> None: ...
    def publishOnChange(self, value: int) -> None: ...
    def setValueAndNotifyOnChange(self, value: int) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_atomic_int8:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...
    def readValue(self) -> int: ...
    def publish(self, value: int) -> None: ...
    def push(self, value: int) -> None: ...
    def setValueAndPush(self, value: int) -> None: ...
    def publishOnChange(self, value: int) -> None: ...
    def setValueAndNotifyOnChange(self, value: int) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_atomic_uint8:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...
    def readValue(self) -> int: ...
    def publish(self, value: int) -> None: ...
    def push(self, value: int) -> None: ...
    def setValueAndPush(self, value: int) -> None: ...
    def publishOnChange(self, value: int) -> None: ...
    def setValueAndNotifyOnChange(self, value: int) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_atomic_int16:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...
    def readValue(self) -> int: ...
    def publish(self, value: int) -> None: ...
    def push(self, value: int) -> None: ...
    def setValueAndPush(self, value: int) -> None: ...
    def publishOnChange(self, value: int) -> None: ...
    def setValueAndNotifyOnChange(self, value: int) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_atomic_uint16:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...
    def readValue(self) -> int: ...
    def publish(self, value: int) -> None: ...
    def push(self, value: int) -> None: ...
    def setValueAndPush(self, value: int) -> None: ...
    def publishOnChange(self, value: int) -> None: ...
    def setValueAndNotifyOnChange(self, value: int) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_atomic_int64:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...
    def readValue(self) -> int: ...
    def publish(self, value: int) -> None: ...
    def push(self, value: int) -> None: ...
    def setValueAndPush(self, value: int) -> None: ...
    def publishOnChange(self, value: int) -> None: ...
    def setValueAndNotifyOnChange(self, value: int) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_atomic_uint64:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...
    def readValue(self) -> int: ...
    def publish(self, value: int) -> None: ...
    def push(self, value: int) -> None: ...
    def setValueAndPush(self, value: int) -> None: ...
    def publishOnChange(self, value: int) -> None: ...
    def setValueAndNotifyOnChange(self, value: int) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_atomic_float:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> float: ...
    def setValue(self, value: float) -> None: ...
    def readValue(self) -> float: ...
    def publish(self, value: float) -> None: ...
    def push(self, value: float) -> None: ...
    def setValueAndPush(self, value: float) -> None: ...
    def publishOnChange(self, value: float) -> None: ...
    def setValueAndNotifyOnChange(self, value: float) -> None: ...
    def notifyAll(self) -> None: ...

class Publisher_atomic_double:
    def __init__(self, topic_name: str) -> None: ...
    def rawValue(self) -> float: ...
    def setValue(self, value: float) -> None: ...
    def readValue(self) -> float: ...
    def publish(self, value: float) -> None: ...
    def push(self, value: float) -> None: ...
    def setValueAndPush(self, value: float) -> None: ...
    def publishOnChange(self, value: float) -> None: ...
    def setValueAndNotifyOnChange(self, value: float) -> None: ...
    def notifyAll(self) -> None: ...

# Subscriber classes
class Subscriber_bool:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> bool: ...
    def readValue(self) -> bool: ...
    def readWait(self) -> Optional[bool]: ...
    def readWaitMS(self, timeout: int) -> Optional[bool]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_int:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> int: ...
    def readValue(self) -> int: ...
    def readWait(self) -> Optional[int]: ...
    def readWaitMS(self, timeout: int) -> Optional[int]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_uint:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> int: ...
    def readValue(self) -> int: ...
    def readWait(self) -> Optional[int]: ...
    def readWaitMS(self, timeout: int) -> Optional[int]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_int8:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> int: ...
    def readValue(self) -> int: ...
    def readWait(self) -> Optional[int]: ...
    def readWaitMS(self, timeout: int) -> Optional[int]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_uint8:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> int: ...
    def readValue(self) -> int: ...
    def readWait(self) -> Optional[int]: ...
    def readWaitMS(self, timeout: int) -> Optional[int]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_int16:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> int: ...
    def readValue(self) -> int: ...
    def readWait(self) -> Optional[int]: ...
    def readWaitMS(self, timeout: int) -> Optional[int]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_uint16:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> int: ...
    def readValue(self) -> int: ...
    def readWait(self) -> Optional[int]: ...
    def readWaitMS(self, timeout: int) -> Optional[int]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_int64:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> int: ...
    def readValue(self) -> int: ...
    def readWait(self) -> Optional[int]: ...
    def readWaitMS(self, timeout: int) -> Optional[int]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_uint64:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> int: ...
    def readValue(self) -> int: ...
    def readWait(self) -> Optional[int]: ...
    def readWaitMS(self, timeout: int) -> Optional[int]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_float:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> float: ...
    def readValue(self) -> float: ...
    def readWait(self) -> Optional[float]: ...
    def readWaitMS(self, timeout: int) -> Optional[float]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_double:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> float: ...
    def readValue(self) -> float: ...
    def readWait(self) -> Optional[float]: ...
    def readWaitMS(self, timeout: int) -> Optional[float]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_FixedString2048:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> FixedString2048: ...
    def readValue(self) -> FixedString2048: ...
    def readWait(self) -> Optional[FixedString2048]: ...
    def readWaitMS(self, timeout: int) -> Optional[FixedString2048]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_ExampleClass:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> ExampleClass: ...
    def readValue(self) -> ExampleClass: ...
    def readWait(self) -> Optional[ExampleClass]: ...
    def readWaitMS(self, timeout: int) -> Optional[ExampleClass]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_ExampleClassAtomic:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> ExampleClassAtomic: ...
    def readValue(self) -> ExampleClassAtomic: ...
    def readWait(self) -> Optional[ExampleClassAtomic]: ...
    def readWaitMS(self, timeout: int) -> Optional[ExampleClassAtomic]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

# Atomic Subscriber classes
class Subscriber_atomic_bool:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> bool: ...
    def readValue(self) -> bool: ...
    def readWait(self) -> Optional[bool]: ...
    def readWaitMS(self, timeout: int) -> Optional[bool]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_atomic_int:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> int: ...
    def readValue(self) -> int: ...
    def readWait(self) -> Optional[int]: ...
    def readWaitMS(self, timeout: int) -> Optional[int]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_atomic_uint:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> int: ...
    def readValue(self) -> int: ...
    def readWait(self) -> Optional[int]: ...
    def readWaitMS(self, timeout: int) -> Optional[int]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_atomic_int8:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> int: ...
    def readValue(self) -> int: ...
    def readWait(self) -> Optional[int]: ...
    def readWaitMS(self, timeout: int) -> Optional[int]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_atomic_uint8:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> int: ...
    def readValue(self) -> int: ...
    def readWait(self) -> Optional[int]: ...
    def readWaitMS(self, timeout: int) -> Optional[int]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_atomic_int16:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> int: ...
    def readValue(self) -> int: ...
    def readWait(self) -> Optional[int]: ...
    def readWaitMS(self, timeout: int) -> Optional[int]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_atomic_uint16:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> int: ...
    def readValue(self) -> int: ...
    def readWait(self) -> Optional[int]: ...
    def readWaitMS(self, timeout: int) -> Optional[int]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_atomic_int64:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> int: ...
    def readValue(self) -> int: ...
    def readWait(self) -> Optional[int]: ...
    def readWaitMS(self, timeout: int) -> Optional[int]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_atomic_uint64:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> int: ...
    def readValue(self) -> int: ...
    def readWait(self) -> Optional[int]: ...
    def readWaitMS(self, timeout: int) -> Optional[int]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_atomic_float:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> float: ...
    def readValue(self) -> float: ...
    def readWait(self) -> Optional[float]: ...
    def readWaitMS(self, timeout: int) -> Optional[float]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...

class Subscriber_atomic_double:
    def __init__(self, topic_name: str, subscriber_name: str, do_subscribe: bool = False) -> None: ...
    def subscribe(self) -> None: ...
    def rawValue(self) -> float: ...
    def readValue(self) -> float: ...
    def readWait(self) -> Optional[float]: ...
    def readWaitMS(self, timeout: int) -> Optional[float]: ...
    def waitForNotify(self) -> None: ...
    def waitForNotifyMS(self, timeout: int) -> None: ...