[build-system]
requires = ["setuptools >= 61", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "nested_fit"
version = "5.5.4"
description = "The nested_fit package."

authors = [
    {name = "Martino Trassinelli"},
    {name = "Lune Maillard"},
    {name = "CÃ©sar Godinho"}
]

classifiers = [
    "Programming Language :: Fortran",
    "Programming Language :: C++",
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent"
]

dependencies = [
    "pandas",
    "numpy",
    "matplotlib",
    "scipy",
    "getdist",
    "rich",
    "plotly",
    "psutil",
    "anesthetic",
	"plotext"
]

[project.scripts]
nested_fit = "pynested_fit.cliw:main"

[project.urls]
"Homepage" = "https://github.com/martinit18/nested_fit"
"Bug Tracker" = "https://github.com/martinit18/nested_fit/issues"

# Setup cibuildwheel
[tool.cibuildwheel]
# Our wheel does not depend on the CPython ABI
# However it is simpler to just build for each cp version
build = "cp*"

# Force old toolchain (we don't use anything that requires glibc >= 2.17 dynamically)
manylinux-x86_64-image = "manylinux2014"

# Now statically link to libgcc / stdlib / libgfortran
environment = "CFLAGS='-static-libgcc -static-libstdc++' CXXFLAGS='-static-libgcc -static-libstdc++' FFLAGS='-static-libgfortran'"

# repair-wheel-command = [
# 	'auditwheel show {wheel}',
# 	'auditwheel repair -w {dest_dir} {wheel}'
# ]

[tool.cibuildwheel.macos]
archs = ["x86_64"]

[tool.cibuildwheel.linux]
archs = ["x86_64"]

[tool.setuptools_scm]
fallback_version = "1.0.0"

[options]
python_requires = ">=3.8"
