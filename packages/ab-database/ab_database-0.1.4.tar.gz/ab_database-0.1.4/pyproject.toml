[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[dependency-groups]
dev = [
  "isort>=6.0.1,<7",
  "ab-test-fixtures>=0.1.3,<1",
  "pre-commit>=4.2.0,<5",
  "pytest-asyncio>=1.0.0,<2",
  "pytest-cov>=6.2.1,<7",
  "pytest>=8.4.1,<9",
  "ruff>=0.12.3,<0.13",
  "tox>=4.27.0,<5"
]

[project]
authors = [{email = "53892067+mattcoulter7@users.noreply.github.com", name = "Matthew Coulter"}]
dependencies = [
  "ab-dependency>=0.1.4,<1",
  "pydantic>=2.11.7,<3",
  "slugify>=0.0.1,<0.0.2",
  "sqlmodel>=0.0.24,<0.0.25",
  "uuid7>=0.1.0,<0.2"
]
description = ""
name = "ab-database"
readme = "README.md"
requires-python = ">=3.12, <4"
version = "0.1.4"

[project.optional-dependencies]
all = [
  "aiochclient>=2.6.0,<3",
  "aiomysql>=0.2.0,<0.3",
  "aioodbc>=0.5.0,<0.6",
  "aiosqlite>=0.21.0,<0.22",
  "asyncpg>=0.30.0,<0.31",
  "clickhouse-driver>=0.2.9,<0.3",
  "clickhouse-sqlalchemy>=0.3.2,<0.4",
  "cockroachdb>=0.3.5,<0.4",
  "firebird-driver>=2.0.2,<3",
  "ibm-db-sa>=0.4.1,<0.5",
  "ibm-db>=3.2.6,<4",
  "mariadb>=1.1.12,<2",
  "mysqlclient>=2.2.7,<3",
  "oracledb>=3.1.1,<4",
  "psycopg2>=2.9.10,<3",
  "pyodbc>=5.2.0,<6",
  "snowflake-sqlalchemy>=1.7.4,<2",
  "sqlalchemy-firebird>=2.1.0,<3",
  "sqlalchemy-sybase>=2.0.0,<3",
  "sqlalchemy-trino>=0.5.0,<0.6",
  "sqlalchemy-vertica-python>=0.6.3,<0.7",
  "vertica-python>=1.4.0,<2"
]
clickhouse-async = [
  "aiochclient>=2.6.0,<3",
  "clickhouse-sqlalchemy>=0.3.2,<0.4"
]
clickhouse-sync = [
  "clickhouse-driver>=0.2.9,<0.3",
  "clickhouse-sqlalchemy>=0.3.2,<0.4"
]
cockroach-sync = ["cockroachdb>=0.3.5,<0.4"]
firebird-sync = [
  "firebird-driver>=2.0.2,<3",
  "sqlalchemy-firebird>=2.1.0,<3"
]
ibm-db2-sync = [
  "ibm-db-sa>=0.4.1,<0.5",
  "ibm-db>=3.2.6,<4"
]
mariadb-sync = ["mariadb>=1.1.12,<2"]
mssql-async = ["aioodbc>=0.5.0,<0.6"]
mssql-sync = ["pyodbc>=5.2.0,<6"]
mysql-async = ["aiomysql>=0.2.0,<0.3"]
mysql-sync = ["mysqlclient>=2.2.7,<3"]
oracle-sync = ["oracledb>=3.1.1,<4"]
postgres-async = ["asyncpg>=0.30.0,<0.31"]
postgres-sync = ["psycopg2>=2.9.10,<3"]
snowflake-sync = ["snowflake-sqlalchemy>=1.7.4,<2"]
sqlite-async = ["aiosqlite>=0.21.0,<0.22"]
sybase-sync = ["sqlalchemy-sybase>=2.0.0,<3"]
trino-sync = ["sqlalchemy-trino>=0.5.0,<0.6"]
vertica-sync = [
  "sqlalchemy-vertica-python>=0.6.3,<0.7",
  "vertica-python>=1.4.0,<2"
]

[tool.hatch.build.targets.sdist]
include = ["src/ab_core"]

[tool.hatch.build.targets.wheel]
include = ["src/ab_core"]

[tool.hatch.build.targets.wheel.sources]
"src/ab_core" = "ab_core"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "session"
asyncio_mode = "auto"
markers = [
  "integration: Assigns the test to the integration test suite.",
  "regression: Assigns the test to the regression test suite"
]

[tool.ruff]
line-length = 120
src = ["src"]
target-version = "py312"

[tool.ruff.lint]
exclude = [".git", ".venv", "__pycache__", "proto"]
fixable = ["ALL"]
ignore = [
  "D104" # missing docstring in public package
]
select = [
  "ARG001", # unused arguments
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "D", # pydocstyle (docstring checks)
  "E", # pycodestyle errors
  "F", # pyflakes
  "I", # isort
  "UP", # pyupgrade
  "W" # pycodestyle warnings
]
