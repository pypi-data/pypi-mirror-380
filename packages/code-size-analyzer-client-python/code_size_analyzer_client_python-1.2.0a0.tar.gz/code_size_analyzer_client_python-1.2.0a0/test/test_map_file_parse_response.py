"""
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 0.1.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from code_size_analyzer_client.models.map_file_parse_response import (
    MapFileParseResponse,
)


class TestMapFileParseResponse(unittest.TestCase):
    """MapFileParseResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MapFileParseResponse:
        """Test MapFileParseResponse
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `MapFileParseResponse`
        """
        model = MapFileParseResponse()
        if include_optional:
            return MapFileParseResponse(
                compiler_type = '',
                flash = code_size_analyzer_client.models.map_file_memory_config.MapFileMemoryConfig(
                    name = '', 
                    origin = 56, 
                    size = 56, 
                    attr = '', 
                    end = 56, 
                    sections = [
                        code_size_analyzer_client.models.map_file_section.MapFileSection(
                            name = '', 
                            start_address = 56, 
                            size = 56, )
                        ], 
                    registered_sections = [
                        code_size_analyzer_client.models.map_file_section.MapFileSection(
                            name = '', 
                            start_address = 56, 
                            size = 56, )
                        ], 
                    unregistered_sections = [
                        
                        ], 
                    used_space = 56, 
                    free_space = 56, ),
                ram = code_size_analyzer_client.models.map_file_memory_config.MapFileMemoryConfig(
                    name = '', 
                    origin = 56, 
                    size = 56, 
                    attr = '', 
                    end = 56, 
                    sections = [
                        code_size_analyzer_client.models.map_file_section.MapFileSection(
                            name = '', 
                            start_address = 56, 
                            size = 56, )
                        ], 
                    registered_sections = [
                        code_size_analyzer_client.models.map_file_section.MapFileSection(
                            name = '', 
                            start_address = 56, 
                            size = 56, )
                        ], 
                    unregistered_sections = [
                        
                        ], 
                    used_space = 56, 
                    free_space = 56, ),
                summary = code_size_analyzer_client.models.map_file_summary.MapFileSummary(
                    flash_size = 56, 
                    ram_size = 56, 
                    module_groups = [
                        code_size_analyzer_client.models.module_group.ModuleGroup(
                            flash_size = 56, 
                            ram_size = 56, 
                            name = '', 
                            modules = [
                                code_size_analyzer_client.models.module.Module(
                                    flash_size = 56, 
                                    ram_size = 56, 
                                    name = '', 
                                    symbols = [
                                        code_size_analyzer_client.models.symbol.Symbol(
                                            flash_size = 56, 
                                            ram_size = 56, 
                                            name = '', 
                                            address = 56, )
                                        ], )
                                ], )
                        ], )
            )
        else:
            return MapFileParseResponse(
                compiler_type = '',
                flash = code_size_analyzer_client.models.map_file_memory_config.MapFileMemoryConfig(
                    name = '', 
                    origin = 56, 
                    size = 56, 
                    attr = '', 
                    end = 56, 
                    sections = [
                        code_size_analyzer_client.models.map_file_section.MapFileSection(
                            name = '', 
                            start_address = 56, 
                            size = 56, )
                        ], 
                    registered_sections = [
                        code_size_analyzer_client.models.map_file_section.MapFileSection(
                            name = '', 
                            start_address = 56, 
                            size = 56, )
                        ], 
                    unregistered_sections = [
                        
                        ], 
                    used_space = 56, 
                    free_space = 56, ),
                ram = code_size_analyzer_client.models.map_file_memory_config.MapFileMemoryConfig(
                    name = '', 
                    origin = 56, 
                    size = 56, 
                    attr = '', 
                    end = 56, 
                    sections = [
                        code_size_analyzer_client.models.map_file_section.MapFileSection(
                            name = '', 
                            start_address = 56, 
                            size = 56, )
                        ], 
                    registered_sections = [
                        code_size_analyzer_client.models.map_file_section.MapFileSection(
                            name = '', 
                            start_address = 56, 
                            size = 56, )
                        ], 
                    unregistered_sections = [
                        
                        ], 
                    used_space = 56, 
                    free_space = 56, ),
                summary = code_size_analyzer_client.models.map_file_summary.MapFileSummary(
                    flash_size = 56, 
                    ram_size = 56, 
                    module_groups = [
                        code_size_analyzer_client.models.module_group.ModuleGroup(
                            flash_size = 56, 
                            ram_size = 56, 
                            name = '', 
                            modules = [
                                code_size_analyzer_client.models.module.Module(
                                    flash_size = 56, 
                                    ram_size = 56, 
                                    name = '', 
                                    symbols = [
                                        code_size_analyzer_client.models.symbol.Symbol(
                                            flash_size = 56, 
                                            ram_size = 56, 
                                            name = '', 
                                            address = 56, )
                                        ], )
                                ], )
                        ], ),
        )
        """

    def testMapFileParseResponse(self):
        """Test MapFileParseResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
