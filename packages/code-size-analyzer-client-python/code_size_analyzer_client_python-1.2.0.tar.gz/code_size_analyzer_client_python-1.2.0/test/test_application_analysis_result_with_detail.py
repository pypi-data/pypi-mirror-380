"""
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 0.1.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from code_size_analyzer_client.models.application_analysis_result_with_detail import (
    ApplicationAnalysisResultWithDetail,
)


class TestApplicationAnalysisResultWithDetail(unittest.TestCase):
    """ApplicationAnalysisResultWithDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationAnalysisResultWithDetail:
        """Test ApplicationAnalysisResultWithDetail
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ApplicationAnalysisResultWithDetail`
        """
        model = ApplicationAnalysisResultWithDetail()
        if include_optional:
            return ApplicationAnalysisResultWithDetail(
                build_number = '',
                build_sequence = 56,
                branch = '',
                build_name = '',
                board = '',
                application_name = '',
                stack = '',
                compiler = '',
                compiler_options = { },
                target = '',
                row_create_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                summary_json = {
                    'key' : code_size_analyzer_client.models.section_summary.SectionSummary(
                        code_size = 56, 
                        ram_size = 56, )
                    },
                summary_ext_json = {
                    'key' : code_size_analyzer_client.models.section_summary.SectionSummary(
                        code_size = 56, 
                        ram_size = 56, )
                    },
                sdk_commit_hash = '',
                file_data = [
                    code_size_analyzer_client.models.file_data.FileData(
                        library_name = '', 
                        file_name = '', 
                        code_size = 56, 
                        ram_size = 56, 
                        distribution_type = '', 
                        module = '', 
                        component = '', 
                        team_owner = '', 
                        path_in_source = '', 
                        uc_component_path = '', 
                        uc_categories = [
                            ''
                            ], )
                    ],
                uc_summary_json = {
                    'key' : code_size_analyzer_client.models.section_summary.SectionSummary(
                        code_size = 56, 
                        ram_size = 56, )
                    }
            )
        else:
            return ApplicationAnalysisResultWithDetail(
                build_number = '',
                build_sequence = 56,
                branch = '',
                build_name = '',
                board = '',
                application_name = '',
                stack = '',
                compiler = '',
                target = '',
                row_create_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                summary_json = {
                    'key' : code_size_analyzer_client.models.section_summary.SectionSummary(
                        code_size = 56, 
                        ram_size = 56, )
                    },
                summary_ext_json = {
                    'key' : code_size_analyzer_client.models.section_summary.SectionSummary(
                        code_size = 56, 
                        ram_size = 56, )
                    },
                sdk_commit_hash = '',
                file_data = [
                    code_size_analyzer_client.models.file_data.FileData(
                        library_name = '', 
                        file_name = '', 
                        code_size = 56, 
                        ram_size = 56, 
                        distribution_type = '', 
                        module = '', 
                        component = '', 
                        team_owner = '', 
                        path_in_source = '', 
                        uc_component_path = '', 
                        uc_categories = [
                            ''
                            ], )
                    ],
        )
        """

    def testApplicationAnalysisResultWithDetail(self):
        """Test ApplicationAnalysisResultWithDetail"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
