[project]
name = "code_size_analyzer_client-python"
dynamic = ["version"]
description = "FastAPI"
authors = [
  {name = "OpenAPI Generator Community",email = "team@openapitools.org"},
]
readme = "README.md"
keywords = ["OpenAPI", "OpenAPI-Generator", "FastAPI"]
requires-python = ">=3.10"

dependencies = [
    "urllib3 (>=2.1.0,<3.0.0)",
    "python-dateutil (>=2.8.2)",
    "pydantic (>=2)",
    "typing-extensions (>=4.7.1)",
    "lazy-imports (>=1,<2)",
    "click",
    "opentelemetry-distro[otlp]",
    "opentelemetry-instrumentation-urllib3",
    "otel_extensions==1.*",
    "retry",
    "pyyaml",
]

[project.scripts]
code_size_analyzer_cli = "code_size_analyzer_client.code_size_analyzer_cli:main"
code_size_results_cli = "code_size_analyzer_client.code_size_results_cli:cli"

[project.urls]
Repository = "https://github.com/GIT_USER_ID/GIT_REPO_ID"

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
version = {attr = "code_size_analyzer_client.__version__"}

[tool.setuptools.packages.find]
include = ["code_size_analyzer_client*"]  # package names should match these glob patterns (["*"] by default)
exclude = ["tests*"]  # exclude packages matching these glob patterns (empty by default)
namespaces = false  # to disable scanning PEP 420 namespaces (true by default)

[tool.ruff]
fix = true
line-length = 88
target-version = "py310"


[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
    "Q", # flake8-quotes
    "UP",# pyupgrade
]

ignore = [
    "E501", # line too long, handled by black
    "C901", # too complex
    "B008", # do not perform calls in argument defaults
    "B026", # Star-arg unpacking after keyword args
    "C408", # Unnecessary dict call - rewrite as a literal
    "E741", # ambiguous variable name
]

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.poetry]
requires-poetry = ">=2.0"

[tool.poetry.group.dev.dependencies]
pytest = ">= 7.2.1"
pytest-cov = ">= 2.8.1"
tox = ">= 3.9.0"
flake8 = ">= 4.0.0"
types-python-dateutil = ">= 2.8.19.14"
mypy = ">= 1.5"



[tool.pylint.'MESSAGES CONTROL']
extension-pkg-whitelist = "pydantic"

[tool.mypy]
files = [
  "code_size_analyzer_client",
  #"test",  # auto-generated tests
  "tests", # hand-written tests
]
# TODO: enable "strict" once all these individual checks are passing
# strict = true

# List from: https://mypy.readthedocs.io/en/stable/existing_code.html#introduce-stricter-options
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true

## Getting these passing should be easy
strict_equality = true
extra_checks = true

## Strongly recommend enabling this one as soon as you can
check_untyped_defs = true

## These shouldn't be too much additional work, but may be tricky to
## get passing if you use a lot of untyped libraries
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_any_generics = true

### These next few are various gradations of forcing use of type annotations
#disallow_untyped_calls = true
#disallow_incomplete_defs = true
#disallow_untyped_defs = true
#
### This one isn't too hard to get passing, but return on investment is lower
#no_implicit_reexport = true
#
### This one can be tricky to get passing if you use a lot of untyped libraries
#warn_return_any = true

[[tool.mypy.overrides]]
module = [
  "code_size_analyzer_client.configuration",
]
warn_unused_ignores = true
strict_equality = true
extra_checks = true
check_untyped_defs = true
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_reexport = true
warn_return_any = true
