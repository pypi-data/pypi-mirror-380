[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "databroom"
version = "0.4"
description = "A cross-language DataFrame cleaning assistant with interactive GUI and one-click code export"
readme = "README_PYPI.md"
license = {text = "MIT"}
authors = [
    {name = "Oliver Lozano", email = "onlozanoo@gmail.com"}
]
maintainers = [
    {name = "Oliver Lozano", email = "onlozanoo@gmail.com"}
]
keywords = [
    "data-cleaning", 
    "pandas", 
    "streamlit", 
    "data-preprocessing", 
    "code-generation",
    "gui",
    "dataframe"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
requires-python = ">=3.8"
dependencies = [
    "pandas>=1.3.0",
    "numpy>=1.20.0",
    "streamlit>=1.28.0",
    "unidecode>=1.3.0",
    "jinja2>=3.0.0",
    "pathlib2>=2.3.0",
    "typer>=0.7.0",
    "rich>=12.0.0",
    "openpyxl>=3.0.0",
    "xlrd>=2.0.0"
]

[project.optional-dependencies]
cli = [
    "pandas>=1.3.0",
    "numpy>=1.20.0", 
    "unidecode>=1.3.0",
    "jinja2>=3.0.0",
    "pathlib2>=2.3.0",
    "typer>=0.7.0",
    "rich>=12.0.0",
    "openpyxl>=3.0.0",
    "xlrd>=2.0.0"
]
gui = [
    "pandas>=1.3.0",
    "numpy>=1.20.0",
    "streamlit>=1.28.0", 
    "unidecode>=1.3.0",
    "jinja2>=3.0.0",
    "pathlib2>=2.3.0",
    "openpyxl>=3.0.0",
    "xlrd>=2.0.0"
]

[project.urls]
Homepage = "https://github.com/onlozanoo/databroom"
Documentation = "https://github.com/onlozanoo/databroom/blob/main/README.md"
Repository = "https://github.com/onlozanoo/databroom"
Issues = "https://github.com/onlozanoo/databroom/issues"
Changelog = "https://github.com/onlozanoo/databroom/releases"

[project.scripts]
databroom = "databroom.cli.main:cli_main"

[project.gui-scripts]
databroom_gui = "databroom.gui.app:main"

[tool.setuptools]
packages = ["databroom", "databroom.cli", "databroom.core", "databroom.gui", "databroom.generators"]

[tool.setuptools.package-data]
databroom = [
    "generators/templates/*.j2",
    "generators/templates/*.html",
    "gui/static/*",
    "tests/data/*"
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    # directories
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["databroom"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "streamlit",
    "plotly.*",
    "unidecode"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gui: marks tests that require GUI components"
]

[tool.coverage.run]
source = ["databroom"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs"
]