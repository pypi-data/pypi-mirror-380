Metadata-Version: 2.4
Name: hatyan
Version: 2.12.0
Summary: Tidal analysis and prediction tool of Rijkswaterstaat
Maintainer-email: Jelmer Veenstra <jelmer.veenstra@deltares.nl>
License-Expression: LGPL-3.0
Project-URL: Home, https://github.com/deltares/hatyan
Project-URL: Code, https://github.com/deltares/hatyan
Project-URL: Issues, https://github.com/deltares/hatyan/issues
Keywords: hatyan,tidal analysis,tidal prediction
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: Operating System :: OS Independent
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: LICENSE.LESSER
Requires-Dist: scipy>=1.5.4
Requires-Dist: numpy>=1.24.0
Requires-Dist: matplotlib>=3.7.0
Requires-Dist: pandas>=2.1.0
Requires-Dist: netcdf4>=1.5.6
Requires-Dist: pyproj>=3.1.0
Requires-Dist: requests>=2.28.0
Requires-Dist: xarray>=2023.4.0
Requires-Dist: rws-ddlpy>=0.5.0
Requires-Dist: click>=7.1
Provides-Extra: dev
Requires-Dist: bump2version>=0.5.11; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: twine; extra == "dev"
Requires-Dist: build; extra == "dev"
Provides-Extra: docs
Requires-Dist: sphinx>=1.8.1; extra == "docs"
Requires-Dist: sphinx_mdinclude; extra == "docs"
Requires-Dist: nbsphinx; extra == "docs"
Requires-Dist: pydata-sphinx-theme; extra == "docs"
Provides-Extra: examples
Requires-Dist: jupyter; extra == "examples"
Requires-Dist: notebook; extra == "examples"
Dynamic: license-file

[![pytest](https://github.com/Deltares/hatyan/actions/workflows/pytest.yml/badge.svg?branch=main)](https://github.com/Deltares/hatyan/actions/workflows/pytest.yml)
[![codecov](https://img.shields.io/codecov/c/github/deltares/hatyan.svg?style=flat-square)](https://app.codecov.io/gh/deltares/hatyan?displayType=list)
[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=Deltares_hatyan&metric=alert_status)](https://sonarcloud.io/dashboard?id=Deltares_hatyan)
[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/Deltares/hatyan/HEAD?urlpath=/tree/docs/notebooks)
[![Available on pypi](https://img.shields.io/pypi/v/hatyan.svg)](https://pypi.python.org/pypi/hatyan)
[![Supported versions](https://img.shields.io/pypi/pyversions/hatyan.svg)](https://pypi.org/project/hatyan)
[![Downloads](https://img.shields.io/pypi/dm/hatyan.svg)](https://pypistats.org/packages/hatyan)
[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.6885342.svg)](https://doi.org/10.5281/zenodo.6885342)

# hatyan

A Python package for harmonic tidal analysis and prediction, based on the FORTRAN version and developed for Rijkswaterstaat. Hatyan also contains methods to derive water level extremes (high and low waters) and it is a dependency to derive the [Kenmerkende Waarden](https://github.com/Deltares-research/kenmerkendewaarden).

## Information

- install with ``pip install hatyan -U``
- [online documentation](https://deltares.github.io/hatyan) with contributing guide, tutorials/examples and an API reference.
- [docs folder](https://github.com/Deltares/hatyan/tree/main/docs) with background information
- Bug or feature request? Create a [GitHub issue](https://github.com/Deltares/hatyan/issues)
