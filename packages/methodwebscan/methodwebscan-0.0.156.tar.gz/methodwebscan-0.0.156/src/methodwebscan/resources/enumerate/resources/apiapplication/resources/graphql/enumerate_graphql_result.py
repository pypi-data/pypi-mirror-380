# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from .......core.pydantic_utilities import UniversalBaseModel
from ..common.request_schema import RequestSchema
from ..common.schema_property import SchemaProperty
from ..common.api_type import ApiType
import pydantic
import typing
from ..common.api_application_route_details import ApiApplicationRouteDetails
from ..common.security_scheme import SecurityScheme
from ..common.security_requirement import SecurityRequirement
from .graph_ql_query import GraphQlQuery
from .......core.pydantic_utilities import IS_PYDANTIC_V2
from .......core.pydantic_utilities import update_forward_refs


class EnumerateGraphqlResult(UniversalBaseModel):
    api_type: ApiType = pydantic.Field(alias="apiType")
    base_endpoint_url: str = pydantic.Field(alias="baseEndpointUrl")
    version: typing.Optional[str] = None
    schema_url: typing.Optional[str] = pydantic.Field(alias="schemaUrl", default=None)
    routes: typing.Optional[typing.List[ApiApplicationRouteDetails]] = None
    security_schemes: typing.Optional[typing.Dict[str, SecurityScheme]] = pydantic.Field(
        alias="securitySchemes", default=None
    )
    security: typing.Optional[typing.List[SecurityRequirement]] = None
    queries: typing.Optional[typing.List[GraphQlQuery]] = None
    raw: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow


update_forward_refs(RequestSchema, EnumerateGraphqlResult=EnumerateGraphqlResult)
update_forward_refs(SchemaProperty, EnumerateGraphqlResult=EnumerateGraphqlResult)
