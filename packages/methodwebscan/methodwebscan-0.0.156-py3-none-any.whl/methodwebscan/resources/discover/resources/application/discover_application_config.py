# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
import typing
from .application_resource_config_type import ApplicationResourceConfigType
import pydantic
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class DiscoverApplicationConfig(UniversalBaseModel):
    targets: typing.List[str]
    resource_type: ApplicationResourceConfigType = pydantic.Field(alias="resourceType")
    modules: typing.Optional[typing.List[str]] = None
    max_redirects: int = pydantic.Field(alias="maxRedirects")
    verify_tls: bool = pydantic.Field(alias="verifyTls")
    timeout: int
    threads: int

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
