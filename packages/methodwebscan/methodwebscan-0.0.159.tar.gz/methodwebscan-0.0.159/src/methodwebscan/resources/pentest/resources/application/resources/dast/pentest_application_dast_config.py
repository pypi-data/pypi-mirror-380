# This file was auto-generated by Fern from our API Definition.

from .......core.pydantic_utilities import UniversalBaseModel
import typing
from .pentest_application_dast_category import PentestApplicationDastCategory
import pydantic
from ......common.resources.nuclei.resources.parameter.request_parameter import RequestParameter
from ......common.resources.http.http_method import HttpMethod
from .......core.pydantic_utilities import IS_PYDANTIC_V2


class PentestApplicationDastConfig(UniversalBaseModel):
    targets: typing.List[str]
    dast_categories: typing.Optional[typing.List[PentestApplicationDastCategory]] = pydantic.Field(
        alias="dastCategories", default=None
    )
    dast_request_params: typing.Optional[typing.List[RequestParameter]] = pydantic.Field(
        alias="dastRequestParams", default=None
    )
    http_methods: typing.Optional[typing.List[HttpMethod]] = pydantic.Field(alias="httpMethods", default=None)
    timeout: int
    threads: int
    proxy: typing.Optional[str] = None
    verbose_logs: bool = pydantic.Field(alias="verboseLogs")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
