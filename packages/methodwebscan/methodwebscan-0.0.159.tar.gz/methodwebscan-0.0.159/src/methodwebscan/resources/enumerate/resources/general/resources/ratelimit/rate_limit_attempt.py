# This file was auto-generated by Fern from our API Definition.

from .......core.pydantic_utilities import UniversalBaseModel
import pydantic
from ......common.resources.http.http_request_response import HttpRequestResponse
from ......pentest.resources.waf.resources.detect.waf_provider_enum import WafProviderEnum
import typing
from ......pentest.resources.waf.resources.detect.waf_fingerprint import WafFingerprint
from .......core.pydantic_utilities import IS_PYDANTIC_V2


class RateLimitAttempt(UniversalBaseModel):
    request_number: int = pydantic.Field(alias="requestNumber")
    request: HttpRequestResponse
    provider: WafProviderEnum
    fingerprint: typing.Optional[WafFingerprint] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
