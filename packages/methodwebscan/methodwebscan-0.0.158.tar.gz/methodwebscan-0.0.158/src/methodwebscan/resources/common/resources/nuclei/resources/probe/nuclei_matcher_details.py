# This file was auto-generated by Fern from our API Definition.

from .......core.pydantic_utilities import UniversalBaseModel
from .nuclei_matcher_condition_enum import NucleiMatcherConditionEnum
import pydantic
import typing
from .nuclei_expected_matcher import NucleiExpectedMatcher
from .......core.pydantic_utilities import IS_PYDANTIC_V2


class NucleiMatcherDetails(UniversalBaseModel):
    matcher_condition: NucleiMatcherConditionEnum = pydantic.Field(alias="matcherCondition")
    matchers: typing.List[NucleiExpectedMatcher]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
