# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from .......core.pydantic_utilities import UniversalBaseModel
from .request_schema import RequestSchema
from .schema_property import SchemaProperty
import typing
import pydantic
from .security_requirement import SecurityRequirement
from .api_type import ApiType
from .......core.pydantic_utilities import IS_PYDANTIC_V2
from .......core.pydantic_utilities import update_forward_refs


class ApiApplicationRouteDetails(UniversalBaseModel):
    path: str
    query_params: typing.Optional[typing.List[str]] = pydantic.Field(alias="queryParams", default=None)
    security: typing.Optional[SecurityRequirement] = None
    method: str
    type: ApiType
    description: str
    response_properties: typing.Optional[typing.Dict[str, typing.List[str]]] = pydantic.Field(
        alias="responseProperties", default=None
    )
    request_schema: typing.Optional[RequestSchema] = pydantic.Field(alias="requestSchema", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow


update_forward_refs(RequestSchema, ApiApplicationRouteDetails=ApiApplicationRouteDetails)
update_forward_refs(SchemaProperty, ApiApplicationRouteDetails=ApiApplicationRouteDetails)
