# This file was auto-generated by Fern from our API Definition.

from .........core.pydantic_utilities import UniversalBaseModel
import typing
from .misconfiguration_category import MisconfigurationCategory
import pydantic
from .........core.pydantic_utilities import IS_PYDANTIC_V2


class PentestApplicationMisconfigurationConfig(UniversalBaseModel):
    targets: typing.List[str]
    misconfiguration_categories: typing.Optional[typing.List[MisconfigurationCategory]] = pydantic.Field(
        alias="misconfigurationCategories", default=None
    )
    timeout: int
    threads: int
    proxy: typing.Optional[str] = None
    verbose_logs: bool = pydantic.Field(alias="verboseLogs")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
