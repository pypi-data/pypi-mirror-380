# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from .......core.pydantic_utilities import UniversalBaseModel
from ..common.request_schema import RequestSchema
from ..common.schema_property import SchemaProperty
from .enumerate_graphql_config import EnumerateGraphqlConfig
from .enumerate_graphql_result import EnumerateGraphqlResult
import typing
from .......core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic
from .......core.pydantic_utilities import update_forward_refs


class EnumerateGraphqlReport(UniversalBaseModel):
    config: EnumerateGraphqlConfig
    result: EnumerateGraphqlResult
    errors: typing.Optional[typing.List[str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow


update_forward_refs(RequestSchema, EnumerateGraphqlReport=EnumerateGraphqlReport)
update_forward_refs(SchemaProperty, EnumerateGraphqlReport=EnumerateGraphqlReport)
