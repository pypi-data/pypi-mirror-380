# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from .......core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .......core.pydantic_utilities import IS_PYDANTIC_V2
from .......core.pydantic_utilities import update_forward_refs


class SchemaProperty(UniversalBaseModel):
    name: str
    type: typing.List[str]
    format: typing.Optional[str] = None
    description: typing.Optional[str] = None
    required: typing.Optional[bool] = None
    items: typing.Optional["RequestSchema"] = None
    properties: typing.Optional[typing.List["SchemaProperty"]] = None
    additional_properties: typing.Optional["RequestSchema"] = pydantic.Field(alias="additionalProperties", default=None)
    enum: typing.Optional[typing.List[str]] = None
    example: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow


from .request_schema import RequestSchema  # noqa: E402

update_forward_refs(RequestSchema, SchemaProperty=SchemaProperty)
update_forward_refs(SchemaProperty)
