[tool.poetry]
name = "chain_harvester"
version = "v2.8.0"
description = "A Python library designed to interface with various blockchain networks, enabling the retrieval of data."
authors = ["0xCommanderKeen <f91289621+0xCommanderKeen@users.noreply.github.com>"]
repository = "https://github.com/blockanalitica/chain-harvester"
documentation = "https://blockanalitica.github.io/chain-harvester/"
readme = "README.md"
packages = [
  {include = "chain_harvester"}
]

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
web3 = "^7.7.0"
requests = "^2.31.0"
eth-abi = "^5.1.0"
multiproof = "^0.1.10"
boto3 = "^1.40.33"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pre-commit = "^4.0.1"
tox = "^4.6.4"
python-dotenv = "^1.0.0"
ruff = "^0.8.3"
ipython = "^8.30.0"
moto = "^5.1.12"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 100
indent-width = 4

[tool.ruff.lint]
fixable = ["ALL"]
unfixable = []
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
    "T201",
]
ignore = [
    # DoNotAssignLambda
    "E731",
    "TRY300",
    "TRY003",
    "RUF012",
    "S108",
    "TRY002",
    "C901",
    "UP038",
    "SIM108",
    "I001",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
"integration_tests/*" = ["S101"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["chain_harvester"]
