name: Release Management

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      publish_to_pypi:
        description: "Publish current release to PyPI"
        required: true
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write
  id-token: write
  security-events: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: googleapis/release-please-action@v4
        with:
          release-type: python
          package-name: pr-generator-agent
          path: .
          config-file: .release-please-config.json
          token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.publish_to_pypi == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      - name: Build package
        run: python -m build
      - name: Check PyPI token
        run: |
          if [ -z "${{ secrets.PYPI_API_TOKEN }}" ]; then
            echo "Error: PYPI_API_TOKEN secret is not set"
            exit 1
          fi
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
