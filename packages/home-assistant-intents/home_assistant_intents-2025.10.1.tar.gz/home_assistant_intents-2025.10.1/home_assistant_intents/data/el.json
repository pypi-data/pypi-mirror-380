{
  "language": "el",
  "intents": {
    "HassMediaSearchAndPlay": {
      "data": [
        {
          "sentences": [
            "παίξε {search_query}",
            "βάλε {search_query}"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "παίξε [το] {search_query} στ(ο|η|ην) <area>",
            "βάλε {search_query} στ(ο|η|ην) <area>"
          ]
        },
        {
          "sentences": [
            "παίξε {search_query} στ(ο|η|ην) <name>",
            "βάλε {search_query} στ(ο|η|ην) <name>",
            "παίξε {search_query} στ(ο|η|ην) <name> στ(ο|η|ην) <area>",
            "βάλε {search_query} στ(ο|η|ην) <name> στ(ο|η|ην) <area>"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "παίξε [το] κομμάτι {search_query}",
            "παίξε [το] {search_query} κομμάτι",
            "βάλε [το] κομμάτι {search_query}",
            "βάλε [το] {search_query} κομμάτι"
          ],
          "slots": {
            "media_class": "track"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "παίξε [το] άλμπουμ {search_query}",
            "παίξε [το] {search_query} άλμπουμ",
            "βάλε [το] άλμπουμ {search_query}",
            "βάλε [το] {search_query} άλμπουμ"
          ],
          "slots": {
            "media_class": "album"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "παίξε <articles> καλλιτέχνη {search_query}",
            "παίξε καλλιτέχνη {search_query}",
            "παίξε <articles> {search_query}",
            "παίξε κάτι από [<articles>] {search_query}",
            "βάλε κάτι από [<articles>] {search_query}",
            "βάλε [<articles>] {search_query}",
            "βάλε καλλιτέχνη {search_query}"
          ],
          "slots": {
            "media_class": "artist"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "παίξε <articles> λίστα αναπαραγωγής {search_query}",
            "παίξε <articles> {search_query} λίστα αναπαραγωγής",
            "βάλε <articles> λίστα αναπαραγωγής {search_query}",
            "βάλε <articles> {search_query} λίστα αναπαραγωγής"
          ],
          "slots": {
            "media_class": "playlist"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "παίξε [το] podcast {search_query}",
            "παίξε [το] {search_query} podcast",
            "βάλε [το] podcast {search_query}",
            "βάλε [το] {search_query} podcast"
          ],
          "slots": {
            "media_class": "podcast"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "παίξε <articles> ταινία {search_query}",
            "παίξε <articles> {search_query} ταινία",
            "βάλε <articles> ταινία {search_query}",
            "βάλε <articles> {search_query} ταινία"
          ],
          "slots": {
            "media_class": "movie"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "παίξε <articles> σειρά {search_query}",
            "παίξε <articles> τηλεοπτική σειρά {search_query}",
            "παίξε <articles> {search_query} σειρά",
            "βάλε <articles> σειρά {search_query}",
            "βάλε <articles> τηλεοπτική σειρά {search_query}",
            "βάλε <articles> {search_query} σειρά"
          ],
          "slots": {
            "media_class": "tv_show"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        }
      ]
    },
    "HassTurnOff": {
      "data": [
        {
          "sentences": [
            "<turn_off> <articles> <name>",
            "<articles> <name> να <turn_off>",
            "να <turn_off> <articles> <name>",
            "να <turn_off> <articles> <name>"
          ]
        },
        {
          "sentences": [
            "<turn_off> [<all>] <articles> <lights> <area>",
            "<turn_off> <area> [<all>] <articles> <lights>"
          ],
          "slots": {
            "domain": "light",
            "name": "all"
          },
          "response": "lights_area"
        },
        {
          "sentences": [
            "[<turn_off>] (όλα τα <lights> | <lights> παντού)",
            "Κλείσε (όλα τα <lights>|<lights> παντού)"
          ],
          "response": "light_all",
          "slots": {
            "domain": "light",
            "name": "all"
          }
        },
        {
          "sentences": [
            "<turn_off> [ <articles> ] ( <lights> )<in_here>",
            "<turn_off>[ αυτό | αυτά|  εδώ ] ( <lights> )( <in_here> )"
          ],
          "response": "lights_area",
          "expansion_rules": {
            "in_here": "[ στο δωμάτιο | στον χώρο | εδώ ]"
          },
          "slots": {
            "domain": "light"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "<turn_off> [<all>] [<articles>] (<garage_doors> | <doors> | <covers>) [κάτω]"
          ],
          "response": "cover_device_class",
          "slots": {
            "domain": "cover",
            "device_class": [
              "window",
              "blind",
              "curtain",
              "shutter"
            ]
          }
        },
        {
          "sentences": [
            "<turn_off> [<all>] [<articles>] (<garage_doors> | <doors> | <covers>) στην περιοχή <area>",
            "<turn_off> [<all>] [<articles>] (<garage_doors> | <doors> | <covers>) <articles> <area>",
            "<turn_off> <articles> <area> [<all>] <articles> (<garage_doors> | <doors> | <covers>)"
          ],
          "response": "cover_area",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "<turn_off> [<all>] [<articles>] <fans> [<articles>] [<area>]",
            "<turn_off> [<articles>] [<area>] [<all>] [<articles>] <fans>"
          ],
          "slots": {
            "domain": "fan",
            "name": "all"
          }
        },
        {
          "sentences": [
            "<lock_turn_off> όλες τις <lockable>",
            "<lock_turn_off> όλα τα <lockable>",
            "<lock_turn_off> όλα τα <lockable> στο <area>",
            "<lock_turn_off> όλα στο <area>",
            "<lock_turn_off> όλες στο <area>",
            "<lock_turn_off> όλα",
            "<lock_turn_off> όλες"
          ],
          "slots": {
            "domain": "lock"
          },
          "response": "lock"
        },
        {
          "sentences": [
            "<close> {name}",
            "<turn_off> {name}"
          ],
          "requires_context": {
            "domain": "valve"
          },
          "slots": {
            "domain": "valve"
          },
          "response": "valve"
        }
      ]
    },
    "HassGetState": {
      "data": [
        {
          "sentences": [
            "που είναι <articles> <name>",
            "που βρίσκεται <articles> <name>",
            "<where_is> <name>",
            "πού είναι <articles> <name>",
            "πού βρίσκεται <articles> <name>",
            "σε ποια τοποθεσία είναι <articles> <name>",
            "σε ποιο μέρος είναι <articles> <name>"
          ],
          "response": "where",
          "requires_context": {
            "domain": "person"
          },
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "είναι <articles> <name> [στο|στη|στον|στην] {zone:state}",
            "βρίσκεται <articles> <name> [στο|στη|στον|στην] {zone:state}",
            "είναι <articles> <name> [στο|στη|στον|στην] {zone:state} [τώρα|αυτή τη στιγμή]",
            "βρίσκεται <articles> <name> [στο|στη|στον|στην] {zone:state} [τώρα|αυτή τη στιγμή]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "person"
          },
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "είναι κανείς [στο|στη|στον|στην] {zone:state}",
            "υπάρχει κανείς [στο|στη|στον|στην] {zone:state}",
            "βρίσκεται κανείς [στο|στη|στον|στην] {zone:state}",
            "έχει κανέναν [στο|στη|στον|στην] {zone:state}",
            "υπάρχει κάποιος [στο|στη|στον|στην] {zone:state}",
            "είναι κάποιος [στο|στη|στον|στην] {zone:state}"
          ],
          "response": "any",
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "είναι όλοι [στο|στη|στον|στην] {zone:state}",
            "βρίσκονται όλοι [στο|στη|στον|στην] {zone:state}",
            "είναι όλος ο κόσμος [στο|στη|στον|στην] {zone:state}",
            "είναι όλοι εδώ",
            "είναι όλοι μαζί [στο|στη|στον|στην] {zone:state}"
          ],
          "response": "all",
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "ποιος είναι [στο|στη|στον|στην] {zone:state}",
            "ποιος βρίσκεται [στο|στη|στον|στην] {zone:state}",
            "ποιοι είναι [στο|στη|στον|στην] {zone:state}",
            "ποιοι βρίσκονται [στο|στη|στον|στην] {zone:state}",
            "ποιος είναι εκεί",
            "ποιοι είναι εκεί"
          ],
          "response": "which",
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "πόσα άτομα είναι [στο|στη|στον|στην] {zone:state}",
            "πόσοι άνθρωποι είναι [στο|στη|στον|στην] {zone:state}",
            "πόσοι είναι [στο|στη|στον|στην] {zone:state}",
            "πόσα άτομα βρίσκονται [στο|στη|στον|στην] {zone:state}",
            "πόσοι άνθρωποι βρίσκονται [στο|στη|στον|στην] {zone:state}",
            "πόσοι βρίσκονται [στο|στη|στον|στην] {zone:state}",
            "πόσος κόσμος είναι [στο|στη|στον|στην] {zone:state}",
            "πόσος κόσμος βρίσκεται [στο|στη|στον|στην] {zone:state}"
          ],
          "response": "how_many",
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>",
            "πόσους βαθμούς έχει <name>",
            "πόση θερμοκρασία έχει <name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "temperature"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "temperature"
          },
          "expansion_rules": {
            "class": "θερμοκρασία"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>",
            "πόση υγρασία έχει <name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "humidity"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "humidity"
          },
          "expansion_rules": {
            "class": "(υγρασία|σχετική υγρασία)"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>",
            "πόση μπαταρία έχει <name>",
            "πόσο φορτίζει <name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "battery"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "battery"
          },
          "expansion_rules": {
            "class": "(μπαταρία|φόρτιση)"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>",
            "πόση ενέργεια καταναλώνει <name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "energy"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "energy"
          },
          "expansion_rules": {
            "class": "ενέργεια"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>",
            "πόση ισχύς έχει <name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "power"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "power"
          },
          "expansion_rules": {
            "class": "ισχύς"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>",
            "πόσο φως έχει <name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "illuminance"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "illuminance"
          },
          "expansion_rules": {
            "class": "(φωτεινότητα|φως)"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>",
            "πόση πίεση έχει <name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "atmospheric_pressure"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "atmospheric_pressure"
          },
          "expansion_rules": {
            "class": "(ατμοσφαιρική πίεση|πίεση αέρα)"
          }
        },
        {
          "sentences": [
            "είναι <name> {lock_states:state} [στ(ο|η|ην) <area>]",
            "<name> είναι {lock_states:state} [στ(ο|η|ην) <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "lock"
          },
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "<exist> <lockable> {lock_states:state} [στ(ο|η|ην) <area>]",
            "<exist> {lock_states:state} <lockable> [στ(ο|η|ην) <area>]",
            "υπάρχουν {lock_states:state} <lockable> [στ(ο|η|ην) <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "είναι όλα τα <lockable> {lock_states:state} [στ(ο|η|ην) <area>]",
            "όλα τα <lockable> είναι {lock_states:state} [στ(ο|η|ην) <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "(ποια|ποιο|ποιος|ποιες|ποιους) <lockable> είναι {lock_states:state} [στ(ο|η|ην) <area>]",
            "(ποια|ποιο|ποιος|ποιες|ποιους) από τα <lockable> είναι {lock_states:state} [στ(ο|η|ην) <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "πόσα <lockable> είναι {lock_states:state} [στ(ο|η|ην) <area>]",
            "πόσες <lockable> είναι {lock_states:state} [στ(ο|η|ην) <area>]",
            "πόσους <lockable> είναι {lock_states:state} [στ(ο|η|ην) <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "πες μου την κατάσταση (του|της) <name> [στ(ο|η|ην) <area>]",
            "δείξε μου την κατάσταση (του|της) <name> [στ(ο|η|ην) <area>]",
            "<what_is> η κατάσταση (του|της) <name> [στ(ο|η|ην) <area>]"
          ],
          "response": "one",
          "requires_context": {
            "domain": "lock"
          },
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "(ποι(ος|α|ο|οι|ες) είναι) [κατάσταση] <name> [<area>]",
            "τι κατάσταση έχει <name> [<area>]",
            "σε (τι|ποια) κατάσταση (είναι|βρίσκεται) <name> [<area>]"
          ],
          "response": "one",
          "excludes_context": {
            "domain": [
              "scene",
              "script"
            ]
          }
        },
        {
          "sentences": [
            "είναι <name> {on_off_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "excludes_context": {
            "domain": [
              "cover"
            ]
          }
        },
        {
          "sentences": [
            "<exist> {on_off_domains:domain} {on_off_states:state} [<area>]",
            "<exist> {on_off_states:state} {on_off_domains:domain} [<area>]"
          ],
          "response": "any"
        },
        {
          "sentences": [
            "είναι [όλ(οι|ες|α)] (οι|τα) {on_off_domains:domain} {on_off_states:state} [<area>]",
            "είναι [όλ(οι|ες|α)] (οι|τα) {on_off_domains:domain} <area> {on_off_states:state}"
          ],
          "response": "all"
        },
        {
          "sentences": [
            "ποι(ος|α|ο|οι|ες) {on_off_domains:domain} [είναι] {on_off_states:state} [<area>]"
          ],
          "response": "which"
        },
        {
          "sentences": [
            "πόσ(οι|ες|α) {on_off_domains:domain} [είναι] {on_off_states:state} [<area>]"
          ],
          "response": "how_many"
        },
        {
          "sentences": [
            "είναι η μπαταρί(α|ες) <name> {bs_battery_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "battery"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery"
          }
        },
        {
          "sentences": [
            "<exist> μπαταρί(α|ες) {bs_battery_states:state} [<area>]",
            "<exist> {bs_battery_states:state} μπαταρί(α|ες) [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery"
          }
        },
        {
          "sentences": [
            "είναι όλες οι μπαταρίες {bs_battery_states:state} [<area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery"
          }
        },
        {
          "sentences": [
            "ποι(α|ες) μπαταρί(α|ες) είναι {bs_battery_states:state} [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery"
          }
        },
        {
          "sentences": [
            "πόσες μπαταρίες είναι {bs_battery_states:state} [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery"
          }
        },
        {
          "sentences": [
            "[η μπαταρία] <name> {bs_battery_charging_states:state} [<area>]",
            "{bs_battery_charging_states:state} [η μπαταρία] <name> [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "battery_charging"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery_charging"
          }
        },
        {
          "sentences": [
            "<exist> μπαταρίες που {bs_battery_charging_states:state} [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery_charging"
          }
        },
        {
          "sentences": [
            "{bs_battery_charging_states:state} όλες οι μπαταρίες [<area>]",
            "όλες οι μπαταρίες {bs_battery_charging_states:state} [<area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery_charging"
          }
        },
        {
          "sentences": [
            "ποι(α|ες) μπαταρί(α|ες) {bs_battery_charging_states:state} [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery_charging"
          }
        },
        {
          "sentences": [
            "πόσες μπαταρίες {bs_battery_charging_states:state} [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery_charging"
          }
        },
        {
          "sentences": [
            "<name> {bs_carbon_monoxide_states:state} [<area>]",
            "{bs_carbon_monoxide_states:state} <name> [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide"
          }
        },
        {
          "sentences": [
            "<exist> αισθητήρ(ας|ες) μονοξειδίου του άνθρακα που {bs_carbon_monoxide_states:state} [<area>]",
            "{bs_carbon_monoxide_states:state} [κάποι(ος|οι)] αισθητήρ(ας|ες) μονοξειδίου του άνθρακα [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide"
          }
        },
        {
          "sentences": [
            "(υπάρχει|εντοπίστηκε|ανιχνεύτηκε) μονοξείδιο του άνθρακα <area>"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide",
            "state": "on"
          }
        },
        {
          "sentences": [
            "{bs_carbon_monoxide_states:state} μονοξείδιο του άνθρακα σε όλους τους αισθητήρες [<area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide"
          }
        },
        {
          "sentences": [
            "σε ποιους αισθητήρες {bs_carbon_monoxide_states:state} μονοξείδιο του άνθρακα [<area>]",
            "ποιοι αισθητήρες μονοξειδίου του άνθρακα {bs_carbon_monoxide_states:state} [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide"
          }
        },
        {
          "sentences": [
            "σε πόσους αισθητήρες {bs_carbon_monoxide_states:state} μονοξείδιο του άνθρακα [<area>]",
            "πόσοι αισθητήρες μονοξειδίου του άνθρακα {bs_carbon_monoxide_states:state} [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide"
          }
        },
        {
          "sentences": [
            "είναι <name> {bs_cold_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "cold"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "cold"
          }
        },
        {
          "sentences": [
            "<exist> κάτι κρύο [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "cold",
            "state": "on"
          }
        },
        {
          "sentences": [
            "τι είναι κρύο [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "cold",
            "state": "on"
          }
        },
        {
          "sentences": [
            "πόσα πράγματα είναι κρύα [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "cold",
            "state": "on"
          }
        },
        {
          "sentences": [
            "<name> {bs_connectivity_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "connectivity"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "connectivity"
          }
        },
        {
          "sentences": [
            "<exist> συσκευές που {bs_connectivity_states:state} [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "connectivity"
          }
        },
        {
          "sentences": [
            "όλες οι συσκευές {bs_connectivity_states:state} [<area>]",
            "{bs_connectivity_states:state} όλες οι συσκευές [<area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "connectivity"
          }
        },
        {
          "sentences": [
            "ποι(α|ες) συσκευ(ή|ές) {bs_connectivity_states:state} [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "connectivity"
          }
        },
        {
          "sentences": [
            "πόσες συσκευές {bs_connectivity_states:state} [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "connectivity"
          }
        },
        {
          "sentences": [
            "είναι <name> {bs_door_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "door"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "door"
          }
        },
        {
          "sentences": [
            "είναι <name> {bs_garage_door_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "garage_door"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "garage_door"
          }
        },
        {
          "sentences": [
            "<name> {bs_gas_states:state} [<area>]",
            "{bs_gas_states:state} <name> [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "gas"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "gas"
          }
        },
        {
          "sentences": [
            "<exist> αισθητήρ(ας|ες) αερίου που {bs_gas_states:state} [<area>]",
            "{bs_gas_states:state} [κάποι(ος|οι)] αισθητήρ(ας|ες) αερίου [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "gas"
          }
        },
        {
          "sentences": [
            "(υπάρχει|εντοπίστηκε|ανιχνεύτηκε) αέριο <area>"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "gas",
            "state": "on"
          }
        },
        {
          "sentences": [
            "{bs_gas_states:state} αέριο σε όλους τους αισθητήρες [<area>]",
            "{bs_gas_states:state} όλοι οι αισθητήρες αερίου [<area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "gas"
          }
        },
        {
          "sentences": [
            "σε ποιους αισθητήρες {bs_gas_states:state} αέριο [<area>]",
            "ποιοι αισθητήρες αερίου {bs_gas_states:state} [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "gas"
          }
        },
        {
          "sentences": [
            "σε πόσους αισθητήρες {bs_gas_states:state} αέριο [<area>]",
            "πόσοι αισθητήρες αερίου {bs_gas_states:state} [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "gas"
          }
        },
        {
          "sentences": [
            "είναι <name> {bs_heat_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "heat"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "heat"
          }
        },
        {
          "sentences": [
            "<exist> κάτι (ζεστό|θερμό) [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "heat",
            "state": "on"
          }
        },
        {
          "sentences": [
            "τι είναι (ζεστό|θερμό) [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "heat",
            "state": "on"
          }
        },
        {
          "sentences": [
            "πόσα πράγματα είναι (ζεστά|θερμά) [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "heat",
            "state": "on"
          }
        },
        {
          "sentences": [
            "{bs_light_states:state} <name> [<area>]",
            "<name> {bs_light_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "light"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "light"
          }
        },
        {
          "sentences": [
            "<exist> αισθητήρ(ας|ες) φωτός που {bs_light_states:state} [<area>]",
            "{bs_light_states:state} [κάποι(ος|οι)] αισθητήρ(ας|ες) φωτός [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "light"
          }
        },
        {
          "sentences": [
            "{bs_light_states:state} σε όλους τους αισθητήρες [<area>]",
            "{bs_light_states:state} όλοι οι αισθητήρες φωτός [<area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "light"
          }
        },
        {
          "sentences": [
            "σε ποιους αισθητήρες {bs_light_states:state} [<area>]",
            "ποιοι αισθητήρες φωτός {bs_light_states:state} [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "light"
          }
        },
        {
          "sentences": [
            "σε πόσους αισθητήρες {bs_light_states:state} [<area>]",
            "πόσοι αισθητήρες φωτός {bs_light_states:state} [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "light"
          }
        },
        {
          "sentences": [
            "είναι <name> {bs_lock_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "lock"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "lock"
          }
        },
        {
          "sentences": [
            "είναι <name> {bs_moisture_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "moisture"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "moisture"
          }
        },
        {
          "sentences": [
            "<exist> αισθητήρ(ας|ες) (νερού|διαρροής) {bs_moisture_states:state} [<area>]",
            "<exist> {bs_moisture_states:state} αισθητήρ(ας|ες) (νερού|διαρροής) [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "moisture"
          }
        },
        {
          "sentences": [
            "<exist> διαρροή (νερού) [<area>]",
            "έχει πλυμηρρήσει <area>"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "moisture",
            "state": "on"
          }
        },
        {
          "sentences": [
            "είναι όλοι οι αισθητήρες (νερού|διαρροής) {bs_moisture_states:state} [<area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "moisture"
          }
        },
        {
          "sentences": [
            "ποι(ος|οι) αισθητήρ(ας|ες) (διαρροής|νερού) είναι {bs_moisture_states:state} [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "moisture"
          }
        },
        {
          "sentences": [
            "πόσοι αισθητήρες (διαρροής|νερού) είναι {bs_moisture_states:state} [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "moisture"
          }
        },
        {
          "sentences": [
            "είναι <name> {bs_motion_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "motion"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "motion"
          }
        },
        {
          "sentences": [
            "<exist> αισθητήρ(ας|ες) κίνησης {bs_motion_states:state} [<area>]",
            "<exist> {bs_motion_states:state} αισθητήρ(ας|ες) κίνησης [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "motion"
          }
        },
        {
          "sentences": [
            "(<exist>|έχει (εντοπιστεί|ανιχνευτεί)) κίνηση [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "motion",
            "state": "on"
          }
        },
        {
          "sentences": [
            "είναι όλοι οι αισθητήρες κίνησης {bs_motion_states:state} [<area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "motion"
          }
        },
        {
          "sentences": [
            "ποι(ος|οι) αισθητήρ(ας|ες) κίνησης είναι {bs_motion_states:state} [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "motion"
          }
        },
        {
          "sentences": [
            "πόσοι αισθητήρες κίνησης είναι {bs_motion_states:state} [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "motion"
          }
        },
        {
          "sentences": [
            "είναι <name> {bs_occupancy_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "occupancy"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "occupancy"
          }
        },
        {
          "sentences": [
            "<exist> αισθητήρ(ας|ες) παρουσίας {bs_occupancy_states:state} [<area>]",
            "<exist> {bs_occupancy_states:state} αισθητήρ(ας|ες) παρουσίας [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "occupancy"
          }
        },
        {
          "sentences": [
            "(<exist>|έχει (εντοπιστεί|ανιχνευτεί)) παρουσία [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "occupancy",
            "state": "on"
          }
        },
        {
          "sentences": [
            "είναι όλοι οι αισθητήρες παρουσίας {bs_occupancy_states:state} [<area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "occupancy"
          }
        },
        {
          "sentences": [
            "ποι(ος|οι) αισθητήρ(ας|ες) παρουσίας είναι {bs_occupancy_states:state} [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "occupancy"
          }
        },
        {
          "sentences": [
            "πόσοι αισθητήρες παρουσίας είναι {bs_occupancy_states:state} [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "occupancy"
          }
        },
        {
          "sentences": [
            "είναι <name> {bs_opening_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "opening"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "opening"
          }
        },
        {
          "sentences": [
            "<exist> άνοιγμα {bs_opening_states:state} [<area>]",
            "<exist> {bs_opening_states:state} άνοιγμα [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "opening"
          }
        },
        {
          "sentences": [
            "είναι όλα τα ανοίγματα {bs_opening_states:state} [<area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "opening"
          }
        },
        {
          "sentences": [
            "ποι(ο|α) (άνοιγμα|ανοίγματα) είναι {bs_opening_states:state} [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "opening"
          }
        },
        {
          "sentences": [
            "πόσα ανοίγματα είναι {bs_opening_states:state} [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "opening"
          }
        },
        {
          "sentences": [
            "είναι <name> {bs_plug_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "plug"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "plug"
          }
        },
        {
          "sentences": [
            "<exist> συσκευ(ή|ές) {bs_plug_states:state} [<area>]",
            "<exist> {bs_plug_states:state} συσκευ(ή|ές) [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "plug"
          }
        },
        {
          "sentences": [
            "είναι όλες οι συσκευές {bs_plug_states:state} [<area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "plug"
          }
        },
        {
          "sentences": [
            "ποι(α|ες) συσκευ(ή|ές) είναι {bs_plug_states:state} [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "plug"
          }
        },
        {
          "sentences": [
            "πόσες συσκευές είναι {bs_plug_states:state} [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "plug"
          }
        },
        {
          "sentences": [
            "είναι <name> {bs_power_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "power"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "power"
          }
        },
        {
          "sentences": [
            "<exist> συσκευ(ή|ές) {bs_power_states:state} [<area>]",
            "<exist> {bs_power_states:state} συσκευ(ή|ές) [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "power"
          }
        },
        {
          "sentences": [
            "είναι όλες οι συσκευές {bs_power_states:state} [<area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "power"
          }
        },
        {
          "sentences": [
            "ποι(α|ες) συσκευ(ή|ές) είναι {bs_power_states:state} [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "power"
          }
        },
        {
          "sentences": [
            "πόσες συσκευές είναι {bs_power_states:state} [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "power"
          }
        },
        {
          "sentences": [
            "είναι <name> {bs_presence_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "presence"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "presence"
          }
        },
        {
          "sentences": [
            "<exist> συσκευ(ή|ές) {bs_presence_states:state} [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "presence"
          }
        },
        {
          "sentences": [
            "είναι όλες οι συσκευές {bs_presence_states:state} [<area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "presence"
          }
        },
        {
          "sentences": [
            "ποι(α|ες) συσκευ(ή|ές) είναι {bs_presence_states:state} [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "presence"
          }
        },
        {
          "sentences": [
            "πόσες συσκευές είναι {bs_presence_states:state} [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "presence"
          }
        },
        {
          "sentences": [
            "υπάρχει πρόβλημα [με] <name> [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "problem"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "problem",
            "state": "on"
          }
        },
        {
          "sentences": [
            "<name> {bs_running_states:state} [<area>]",
            "{bs_running_states:state} <name> [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "running"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "<exist> συσκευ(ή|ές) που {bs_running_states:state} [<area>]",
            "{bs_running_states:state} κάποι(α|ες) συσκευ(ή|ές) [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "όλες οι συσκευές {bs_running_states:state} [<area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "ποι(α|ες) συσκευ(ή|ές) {bs_running_states:state} [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "πόσες συσκευές {bs_running_states:state} [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "είναι <name> {bs_safety_states:state} [<area>]",
            "είναι {bs_safety_states:state} <name> [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "safety"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "safety"
          }
        },
        {
          "sentences": [
            "<name> {bs_smoke_states:state} [<area>]",
            "{bs_smoke_states:state} <name> [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "<exist> αισθητήρ(ας|ες) καπνού που {bs_smoke_states:state} [<area>]",
            "{bs_smoke_states:state} [κάποι(ος|οι)] αισθητήρ(ας|ες) καπνού [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "(υπάρχει|εντοπίστηκε|ανιχνεύτηκε) καπνός <area>"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke",
            "state": "on"
          }
        },
        {
          "sentences": [
            "{bs_smoke_states:state} καπνός σε όλους τους αισθητήρες [<area>]",
            "{bs_smoke_states:state} όλοι οι αισθητήρες καπνού [<area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "σε ποιους αισθητήρες {bs_smoke_states:state} καπνός [<area>]",
            "ποιοι αισθητήρες καπνού {bs_smoke_states:state} [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "σε πόσους αισθητήρες {bs_smoke_states:state} καπνός [<area>]",
            "πόσοι αισθητήρες καπνού {bs_smoke_states:state} [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "<name> {bs_sound_states:state} [<area>]",
            "{bs_sound_states:state} <name> [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "sound"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "<exist> αισθητήρ(ας|ες) (ήχου|θορύβου) που {bs_sound_states:state} [<area>]",
            "{bs_sound_states:state} [κάποι(ος|οι)] αισθητήρ(ας|ες) (ήχου|θορύβου) [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "(υπάρχει|εντοπίστηκε|ανιχνεύτηκε) (ήχος|θόρυβος) <area>"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound",
            "state": "on"
          }
        },
        {
          "sentences": [
            "{bs_sound_states:state} (ήχος|θόρυβος) σε όλους τους αισθητήρες [<area>]",
            "{bs_sound_states:state} όλοι οι αισθητήρες (ήχου|θορύβου) [<area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "σε ποιους αισθητήρες {bs_sound_states:state} (ήχος|θόρυβος) [<area>]",
            "ποιοι αισθητήρες (ήχου|θορύβου) {bs_sound_states:state} [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "σε πόσους αισθητήρες {bs_sound_states:state} (ήχους|θόρυβος) [<area>]",
            "πόσοι αισθητήρες (ήχου|θορύβου) {bs_sound_states:state} [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "{bs_tamper_states:state} παραβίαση <name> [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "tamper"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "tamper"
          }
        },
        {
          "sentences": [
            "είναι <name> {bs_update_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "update"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update"
          }
        },
        {
          "sentences": [
            "<exist> [διαθέσιμ(η|ες)] ενημ(έρωση|ερώσεις) [λογισμικού] [<area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update",
            "state": "on"
          }
        },
        {
          "sentences": [
            "ποι(α|ες) ενημ(έρωση|ερώσεις) [λογισμικού] [υπάρχ(ει|ουν) | είναι διαθέσιμ(η|ες)] [<area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update",
            "state": "on"
          }
        },
        {
          "sentences": [
            "πόσες ενημερώσεις [λογισμικού] [υπάρχουν | είναι διαθέσιμες] [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update",
            "state": "on"
          }
        },
        {
          "sentences": [
            "<name> {bs_vibration_states:state} [<area>]",
            "{bs_vibration_states:state} <name> [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          }
        },
        {
          "sentences": [
            "<exist> συσκευ(ή|ές) (σε δόνηση | που δον(είται|ούνται)) [<area>]",
            "δον(είται|ούνται) [κάποι(α|ες)] συσκευ(ή|ές) [<area>]"
          ],
          "response": "any",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "vibration",
            "state": "on"
          }
        },
        {
          "sentences": [
            "είναι <name> {bs_window_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "window"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "window"
          }
        }
      ]
    },
    "HassCancelTimer": {
      "data": [
        {
          "sentences": [
            "<timer_cancel> [το] χρονόμετρο[[ ]μου]",
            "<timer_cancel> [το] <timer_start> χρονόμετρο[[ ]μου]",
            "<timer_cancel> [το] χρονόμετρο[[ ]μου] <timer_start>",
            "<timer_cancel> [το] χρονόμετρο[[ ]μου] για <timer_start>",
            "<timer_cancel> [το] {area} χρονόμετρο[[ ]μου]",
            "<timer_cancel> [το] χρονόμετρο[[ ]μου] στ(ο|η|ην) <area>",
            "<timer_cancel> [το] {timer_name:name} χρονόμετρο[[ ]μου]",
            "<timer_cancel> [το] χρονόμετρο[[ ]μου] {timer_name:name}",
            "<timer_cancel> [το] χρονόμετρο[[ ]μου] για {timer_name:name}"
          ]
        }
      ]
    },
    "HassTimerStatus": {
      "data": [
        {
          "sentences": [
            "κατάσταση χρονόμετρου <timer_start>",
            "κατάσταση χρονόμετρων",
            "κατάσταση των χρονόμετρων μου",
            "κατάσταση χρονόμετρου {area}"
          ],
          "required_keywords": [
            "χρονόμετρου",
            "χρονόμετρων",
            "κατάσταση"
          ]
        },
        {
          "sentences": [
            "[πόσος] χρόνος [μένει|απομένει] στο [το] χρονόμετρο[[ ]μου]",
            "[πόσος] χρόνος [που] [μένει|απομένει] στο [το] χρονόμετρο[[ ]μου]",
            "[πόσος] χρόνος [μένει|απομένει] στα χρονόμετρα μου",
            "[πόσος] χρόνος [μένει|απομένει] στο [το] <timer_start> χρονόμετρο[[ ]μου]",
            "[πόσος] χρόνος [που] [μένει|απομένει] στο [το] <timer_start> χρονόμετρο[[ ]μου]",
            "[πόσος] χρόνος [μένει|απομένει] στο [το] {area} χρονόμετρο[[ ]μου]",
            "[πόσος] χρόνος [μένει|απομένει] στο [το] χρονόμετρο[[ ]μου] στο <area>",
            "[πόσος] χρόνος [μένει|απομένει] στο [το] χρονόμετρο[[ ]μου] στην <area>",
            "[πόσος] χρόνος [που] [μένει|απομένει] στο [το] χρονόμετρο[[ ]μου] στην <area>"
          ],
          "required_keywords": [
            "χρονόμετρο",
            "χρόνος",
            "μένει",
            "απομένει"
          ]
        },
        {
          "sentences": [
            "κατάσταση [του] χρονόμετρου[[ ]μου]",
            "κατάσταση [του] <timer_start> χρονόμετρου[[ ]μου]",
            "κατάσταση [του] {area} χρονόμετρου[[ ]μου]",
            "κατάσταση [του] χρονόμετρου[[ ]μου] στο <area>",
            "κατάσταση [του] χρονόμετρου[[ ]μου] στην <area>"
          ],
          "required_keywords": [
            "χρονόμετρου",
            "κατάσταση"
          ]
        },
        {
          "sentences": [
            "κατάσταση χρονόμετρου {timer_name:name}",
            "[πόσος] χρόνος [μένει|απομένει] στο [το] {timer_name:name} χρονόμετρο[[ ]μου]",
            "κατάσταση [του] {timer_name:name} χρονόμετρου[[ ]μου]"
          ],
          "required_keywords": [
            "χρονόμετρου",
            "χρονόμετρο"
          ]
        }
      ]
    },
    "HassGetWeather": {
      "data": [
        {
          "sentences": [
            "Πώς [θα] είναι ο καιρός",
            "Ποιος [θα] είναι ο καιρός",
            "Τι καιρό [θα] κάνει"
          ]
        },
        {
          "sentences": [
            "Πώς [θα] είναι ο καιρός (στον|στη[ν]|στο|του|της) <name>",
            "Ποιος [θα] είναι ο καιρός (στον|στη[ν]|στο|του|της) <name>",
            "Τι καιρό [θα] κάνει (στον|στη[ν]|στο) <name>"
          ],
          "requires_context": {
            "domain": "weather"
          }
        }
      ]
    },
    "HassGetCurrentTime": {
      "data": [
        {
          "sentences": [
            "<what_is> η [τρέχουσα] ώρα",
            "<what_is> η ώρα [τώρα]",
            "τι ώρα είναι",
            "τι ώρα έχουμε",
            "πες μου την ώρα",
            "ποια ώρα είναι",
            "ποια είναι η ώρα",
            "πες μου τι ώρα είναι",
            "δες μου την ώρα",
            "πες μου (την|τη) [τρέχουσα] ώρα",
            "τι ώρα είναι [τώρα]",
            "ποια ώρα είναι [αυτή τη στιγμή]",
            "τι ώρα έχουμε [τώρα]",
            "μπορείς να μου πεις την ώρα",
            "θέλω να μάθω την ώρα"
          ]
        }
      ]
    },
    "HassTurnOn": {
      "data": [
        {
          "sentences": [
            "<turn_on> [<all>] <articles> <lights> <area>",
            "<turn_on> <area> [<all>] <articles> <lights>"
          ],
          "slots": {
            "domain": "light",
            "name": "all"
          },
          "response": "lights_area"
        },
        {
          "sentences": [
            "<turn_on> ( άνοιξε | άναψε ) [ τα ] φώτα <in_here>",
            "<turn_on>[ τα ] φώτα(<in_here>)"
          ],
          "response": "lights_area",
          "expansion_rules": {
            "in_here": "[ στο δωμάτιο | στον χώρο | εδώ ]"
          },
          "slots": {
            "domain": "light"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "<turn_on> [<all>] [<articles>] <fans> [<articles>] [<area>]",
            "<turn_on> [<articles>] [<area>] [<all>] [<articles>] <fans>"
          ],
          "slots": {
            "domain": "fan",
            "name": "all"
          }
        },
        {
          "sentences": [
            "(ενεργοποίησε|εκτέλεσε|ξεκίνα|τρέξε|<turn_on>) {name} [σενάριο]",
            "(ενεργοποίησε|εκτέλεσε|ξεκίνα|τρέξε|<turn_on>) [σενάριο] {name}",
            "[σενάριο] {name} (ενεργοποίηση|εκτέλεση|εκκίνηση)",
            "τρέξε [το] σενάριο {name}",
            "εκτέλεσε [το] σενάριο {name}"
          ],
          "requires_context": {
            "domain": "script"
          },
          "slots": {
            "domain": "script"
          },
          "response": "script"
        },
        {
          "sentences": [
            "<turn_on> <name> [σκηνή]",
            "<name> ενεργό",
            "<turn_on> <articles> <name>",
            "(άλλαξε|μετάβαση) (στη|σε) ([τη] <name> [σκηνή]|σκηνή <name>)"
          ],
          "requires_context": {
            "domain": "scene"
          },
          "slots": {
            "domain": "scene"
          },
          "response": "scene"
        },
        {
          "sentences": [
            "<turn_on> [<articles>] <area> <name> [σκηνή]",
            "<area> <name> ενεργό",
            "<turn_on> <area> <name>",
            "[ενεργοποίησε] <name> [σκηνή] στ(ο|η|ην) <area>",
            "<turn_on> <name> στ(ο|η|ην) <area>",
            "(άλλαξε|μετάβαση) ([στη] <area> <name>|<area> [σε] <name>) [σκηνή]",
            "(άλλαξε|μετάβαση) (στη|σε) <name> [σκηνή] στ(ο|η|ην) <area>"
          ],
          "requires_context": {
            "domain": "scene"
          },
          "slots": {
            "domain": "scene"
          },
          "response": "scene"
        },
        {
          "sentences": [
            "<open> {name}",
            "<turn_on> {name}"
          ],
          "requires_context": {
            "domain": "valve"
          },
          "slots": {
            "domain": "valve"
          },
          "response": "valve"
        },
        {
          "sentences": [
            "<lock_turn_on> όλες τις <lockable>",
            "<lock_turn_on> όλα τα <lockable>",
            "<lock_turn_on> όλα τα <lockable> στο <area>",
            "<lock_turn_on> όλα στο <area>",
            "<lock_turn_on> όλες στο <area>",
            "<lock_turn_on> όλα",
            "<lock_turn_on> όλες"
          ],
          "slots": {
            "domain": "lock"
          },
          "response": "lock"
        },
        {
          "sentences": [
            "<turn_on> <articles> <name>",
            "<articles> <name> να <turn_on>",
            "<articles> <name> <turn_on>",
            "να <turn_on> <articles> <name>"
          ],
          "excludes_context": {
            "domain": [
              "binary_sensor",
              "cover",
              "lock",
              "scene",
              "script",
              "sensor",
              "valve"
            ]
          }
        },
        {
          "sentences": [
            "<turn_on> [(πάνω | ψηλά)] [<all>] [<articles>] (<garage_doors> | <doors> | <covers>) [(πάνω | ψηλά)]"
          ],
          "response": "cover_device_class",
          "slots": {
            "domain": "cover",
            "device_class": [
              "window",
              "blind",
              "curtain",
              "shutter"
            ]
          }
        },
        {
          "sentences": [
            "<turn_on> [(πάνω | ψηλά)] [<all>] [<articles>] (<garage_doors> | <doors> | <covers>) <articles> <area> [(πάνω | ψηλά)]",
            "<turn_on> [(πάνω | ψηλά)] <articles> <area> [<all>] [<articles>] (<garage_doors> | <doors> | <covers>) [(πάνω | ψηλά)]"
          ],
          "slots": {
            "domain": "cover"
          },
          "response": "cover_area"
        }
      ]
    },
    "HassMediaUnpause": {
      "data": [
        {
          "sentences": [
            "((συνέχισε|ξαναρχίσα|αναπαραγωγή);<name>)",
            "(<name>;(συνέχισε|ξαναρχίσα|αναπαραγωγή))"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "(συνέχισε|ξαναρχίσα|αναπαραγωγή)"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "(συνέχισε|ξαναρχίσα|αναπαραγωγή) [[την] (μουσική|[τηλεοπτική] εκπομπή[ές]|ταινία)] [στο|στη|στην] <area>",
            "(συνέχισε|ξαναρχίσα|αναπαραγωγή) <area> (μουσική|[τηλεοπτική] εκπομπή[ές]|ταινία)"
          ]
        }
      ]
    },
    "HassShoppingListAddItem": {
      "data": [
        {
          "sentences": [
            "πρόσθεσε <item> (στο | στη | στην) <my_list> [μου]",
            "βάλε <item> (στο | στη | στην) <my_list> [μου]"
          ],
          "response": "item_added",
          "expansion_rules": {
            "my_list": "[η] [shopping] λίστα",
            "item": "{shopping_list_item:item}"
          }
        }
      ]
    },
    "HassCancelAllTimers": {
      "data": [
        {
          "sentences": [
            "<timer_cancel> όλα [τα] χρονόμετρα[ μου]"
          ]
        },
        {
          "sentences": [
            "<timer_cancel> όλα [[τα|μου]] {area} χρονόμετρα",
            "<timer_cancel> όλα [τα] χρονόμετρα {area}",
            "<timer_cancel> όλα [[τα|μου]] χρονόμετρα στο <area>",
            "<timer_cancel> όλα [[τα|μου]] χρονόμετρα στην <area>"
          ],
          "response": "area"
        }
      ]
    },
    "HassNevermind": {
      "data": [
        {
          "sentences": [
            "άστο",
            "ξέχνα το",
            "άκυρο",
            "ξέχνατο"
          ]
        }
      ]
    },
    "HassSetPosition": {
      "data": [
        {
          "sentences": [
            "(<numeric_value_set>|<open>|<close>) {name} [θέση] στ(ο|η[ν]) <position>",
            "(<numeric_value_set>|<open>|<close>) [τη[ν] θέση] {name} στ(ο|η[ν]) <position>"
          ],
          "requires_context": {
            "domain": "valve"
          },
          "slots": {
            "domain": "valve"
          }
        },
        {
          "sentences": [
            "(<numeric_value_set>|<open>|<close>) <name> [θέση] σε <position>"
          ],
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "(<numeric_value_set>|<open>|<close>) [<articles>] {cover_classes:device_class} [θέση] σε <position>",
            "(<numeric_value_set>|<open>|<close>) [<articles>] {cover_classes:device_class} στ(ο|η|ην) <area> σε <position>",
            "(<numeric_value_set>|<open>|<close>) [<articles>] {cover_classes:device_class} σε <position> στ(ο|η|ην) <area>",
            "(<numeric_value_set>|<open>|<close>) {cover_classes:device_class} στ(ο|η|ην) <area> σε <position>"
          ],
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "(<numeric_value_set>) [<articles>] {cover_classes:device_class} [θέση] [εδώ] σε <position>",
            "(<open>|<close>) [<articles>] {cover_classes:device_class} [εδώ] σε <position>"
          ],
          "slots": {
            "domain": "cover"
          },
          "response": "cover_device_class",
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        }
      ]
    },
    "HassGetCurrentDate": {
      "data": [
        {
          "sentences": [
            "<what_is> η [σημερινή] ημερομηνία",
            "<what_is> η ημερομηνία [σήμερα]",
            "πες μου την ημερομηνία",
            "ποια ημερομηνία είναι σήμερα",
            "ποια ημερομηνία έχουμε σήμερα",
            "τι ημερομηνία είναι",
            "τι ημερομηνία έχουμε",
            "πες μου τι ημερομηνία είναι",
            "δες μου την ημερομηνία",
            "πες μου (την|τη) [σημερινή] ημερομηνία",
            "ποια είναι η ημερομηνία σήμερα",
            "μπορείς να μου πεις την ημερομηνία",
            "θέλω να μάθω την ημερομηνία"
          ]
        }
      ]
    },
    "HassIncreaseTimer": {
      "data": [
        {
          "sentences": [
            "πρόσθεσε <timer_duration> στο [το] χρονόμετρο[[ ]μου]",
            "πρόσθεσε <timer_duration> στο [το] <timer_start> χρονόμετρο[[ ]μου]",
            "πρόσθεσε <timer_duration> στο [το] χρονόμετρο[[ ]μου] για <timer_start>",
            "πρόσθεσε <timer_duration> στο [το] {area} χρονόμετρο[[ ]μου]",
            "πρόσθεσε <timer_duration> στο [το] χρονόμετρο[[ ]μου] στ(ο|η|ην) <area>",
            "πρόσθεσε <timer_duration> στο [το] {timer_name:name} χρονόμετρο[[ ]μου]",
            "πρόσθεσε <timer_duration> στο [το] χρονόμετρο[[ ]μου] για {timer_name:name}"
          ]
        },
        {
          "sentences": [
            "αύξησε [το] χρονόμετρο[[ ]μου] κατά <timer_duration>",
            "αύξησε [το] <timer_start> χρονόμετρο[[ ]μου] κατά <timer_duration>",
            "αύξησε [το] χρονόμετρο[[ ]μου] για <timer_start> κατά <timer_duration>",
            "αύξησε [το] {area} χρονόμετρο[[ ]μου] κατά <timer_duration>",
            "αύξησε [το] χρονόμετρο[[ ]μου] στ(ο|η|ην) <area> κατά <timer_duration>",
            "αύξησε [το] {timer_name:name} χρονόμετρο[[ ]μου] κατά <timer_duration>",
            "αύξησε [το] χρονόμετρο[[ ]μου] για {timer_name:name} κατά <timer_duration>"
          ]
        }
      ]
    },
    "HassLawnMowerDock": {
      "data": [
        {
          "sentences": [
            "(σταμάτα| σταμάτησε |ακύρωσε) [το] κούρεμα [[το | του ] γκαζόν]",
            "(σταμάτα| σταμάτησε |ακύρωσε) [το | την] (μηχάνημα | μηχανή)  [[ του ] γκαζόν]",
            "[σταμάτα | σταμάτησε] [το] χλοοκοπτικό"
          ]
        }
      ]
    },
    "HassLightSet": {
      "data": [
        {
          "sentences": [
            "<set> [τη] φωτεινότητα <name> [(<articles> | σε)] <brightness>",
            "<set> <name> [(τη | σε | με)] φωτεινότητα [(<articles> | σε)] <brightness>"
          ],
          "response": "brightness"
        },
        {
          "sentences": [
            "<set> [τη] φωτεινότητα <area> [(<articles> | σε)] <brightness>",
            "<set> <area> [(τη | σε | με)] φωτεινότητα [(<articles> | σε)] <brightness>"
          ],
          "slots": {
            "name": "all"
          },
          "response": "brightness"
        },
        {
          "sentences": [
            "<set> <name> [(σε | με)] {color} [χρώμα]",
            "<set> [(σε | με)] {color} [χρώμα] <name>"
          ],
          "response": "color"
        }
      ]
    },
    "HassMediaNext": {
      "data": [
        {
          "sentences": [
            "επόμενο [κομμάτι|τραγούδι] [στο|στη|στην] <name>",
            "((πάμε στο επόμενο|παράλειψε [αυτό το κομμάτι|το τραγούδι]|μετά);[στο|στη|στην] <name>)"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "επόμενο [κομμάτι|τραγούδι]",
            "(πάμε στο επόμενο|παράλειψε [αυτό το κομμάτι|το τραγούδι]|μετά)"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "επόμενο [κομμάτι|τραγούδι] [στο|στη|στην] <area>",
            "((πάμε στο επόμενο|παράλειψε [αυτό το κομμάτι|το τραγούδι]|μετά);[στο|στη|στην] <area>)"
          ]
        }
      ]
    },
    "HassPauseTimer": {
      "data": [
        {
          "sentences": [
            "παύσε [το] χρονόμετρο[[ ]μου]",
            "παύσε [το] <timer_start> χρονόμετρο[[ ]μου]",
            "παύσε [το] χρονόμετρο[[ ]μου] για <timer_start>",
            "παύσε [το] {area} χρονόμετρο[[ ]μου]",
            "παύσε [το] χρονόμετρο[[ ]μου] στ(ο|η|ην) <area>",
            "παύσε [το] {timer_name:name} χρονόμετρο[[ ]μου]",
            "παύσε [το] χρονόμετρο[[ ]μου] για {timer_name:name}"
          ]
        }
      ]
    },
    "HassLawnMowerStartMowing": {
      "data": [
        {
          "sentences": [
            "(ξεκίνα [το] κούρεμα|κόψε) [[το |του] γκαζόν]",
            "ξεκίνα [το] χλοοκοπτικό"
          ]
        }
      ]
    },
    "HassDecreaseTimer": {
      "data": [
        {
          "sentences": [
            "αφαίρεσε <timer_duration> από [το] χρονόμετρο[[ ]μου]",
            "αφαίρεσε <timer_duration> από [το] <timer_start> χρονόμετρο[[ ]μου]",
            "αφαίρεσε <timer_duration> από [το] χρονόμετρο[[ ]μου] για <timer_start>",
            "αφαίρεσε <timer_duration> από [το] {area} χρονόμετρο[[ ]μου]",
            "αφαίρεσε <timer_duration> από [το] χρονόμετρο[[ ]μου] στ(ο|η|ην) <area>",
            "αφαίρεσε <timer_duration> από [το] {timer_name:name} χρονόμετρο[[ ]μου]",
            "αφαίρεσε <timer_duration> από [το] χρονόμετρο[[ ]μου] για {timer_name:name}"
          ]
        },
        {
          "sentences": [
            "μείωσε [το] χρονόμετρο[[ ]μου] κατά <timer_duration>",
            "μείωσε [το] <timer_start> χρονόμετρο[[ ]μου] κατά <timer_duration>",
            "μείωσε [το] χρονόμετρο[[ ]μου] για <timer_start> κατά <timer_duration>",
            "μείωσε [το] {area} χρονόμετρο[[ ]μου] κατά <timer_duration>",
            "μείωσε [το] χρονόμετρο[[ ]μου] στ(ο|η|ην) <area> κατά <timer_duration>",
            "μείωσε [το] {timer_name:name} χρονόμετρο[[ ]μου] κατά <timer_duration>",
            "μείωσε [το] χρονόμετρο[[ ]μου] για {timer_name:name} κατά <timer_duration>"
          ]
        }
      ]
    },
    "HassMediaPause": {
      "data": [
        {
          "sentences": [
            "((παύση|σταμάτα|διακοπή);<name>)",
            "(<name>;(παύση|σταμάτα|διακοπή))"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "(παύση|σταμάτα|διακοπή)"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "(παύση|σταμάτα|διακοπή) [[την] (μουσική|[τηλεοπτική] εκπομπή[ές]|ταινία)] [στο|στη|στην] <area>",
            "(παύση|σταμάτα|διακοπή) <area> (μουσική|[τηλεοπτική] εκπομπή[ές]|ταινία)"
          ]
        }
      ]
    },
    "HassUnpauseTimer": {
      "data": [
        {
          "sentences": [
            "(συνέχισε|επανάλαβε) [το] χρονόμετρο[[ ]μου]",
            "(συνέχισε|επανάλαβε) [το] <timer_start> χρονόμετρο[[ ]μου]",
            "(συνέχισε|επανάλαβε) [το] χρονόμετρο[[ ]μου] για <timer_start>",
            "(συνέχισε|επανάλαβε) [το] {area} χρονόμετρο[[ ]μου]",
            "(συνέχισε|επανάλαβε) [το] χρονόμετρο[[ ]μου] στ(ο|η|ην) <area>",
            "(συνέχισε|επανάλαβε) [το] {timer_name:name} χρονόμετρο[[ ]μου]",
            "(συνέχισε|επανάλαβε) [το] χρονόμετρο[[ ]μου] για {timer_name:name}"
          ]
        }
      ]
    },
    "HassStartTimer": {
      "data": [
        {
          "sentences": [
            "χρονόμετρο για <timer_duration>",
            "χρονόμετρο <timer_duration>",
            "χρονόμετρο για <timer_duration> (με όνομα|που λέγεται) {timer_name:name}",
            "<timer_duration> χρονόμετρο",
            "<timer_duration> χρονόμετρο για {timer_name:name}",
            "<timer_set> [ένα|το|μου] χρονόμετρο για <timer_duration>",
            "<timer_set> [ένα|το|μου] χρονόμετρο <timer_duration>",
            "<timer_set> [ένα|το|μου] <timer_duration> χρονόμετρο (με όνομα|που λέγεται|για) {timer_name:name}",
            "<timer_set> [ένα|το|μου] <timer_duration> χρονόμετρο",
            "<timer_set> [ένα|το|μου] χρονόμετρο (με όνομα|που λέγεται) {timer_name:name} για <timer_duration>",
            "<timer_set> [ένα|το|μου] χρονόμετρο για <timer_duration> (με όνομα|που λέγεται) {timer_name:name}"
          ]
        },
        {
          "sentences": [
            "{timer_command:conversation_command} σε <timer_duration>",
            "σε <timer_duration> {timer_command:conversation_command}"
          ],
          "response": "command"
        }
      ]
    },
    "HassClimateGetTemperature": {
      "data": [
        {
          "sentences": [
            "Πόσο υψηλή είναι η θερμοκρασία <articles> [<area>]",
            "Πόσο υψηλή είναι η θερμοκρασία",
            "Πόσο χαμηλή είναι η θερμοκρασία",
            "Ποια είναι η θερμοκρασία <articles> [<area>]",
            "Ποια είναι η θερμοκρασία <articles> [<name>]",
            "Ποια είναι [<articles>] [<area>] η θερμοκρασία",
            "Τι θερμοκρασία έχει <articles> [<area>]",
            "Πόσο κρύ(ος|α|ο) είναι <articles> [<area>]",
            "Πόσο ζεστ(ός|ά|ό) είναι <articles> [<area>]",
            "<articles> <area> πόσο υψηλή είναι η θερμοκρασία",
            "<articles> <area> πόσο χαμηλή είναι η θερμοκρασία",
            "<articles> <area> ποια είναι η θερμοκρασία"
          ]
        }
      ]
    },
    "HassVacuumReturnToBase": {
      "data": [
        {
          "sentences": [
            "επίστρεψε <name> [στη βάση]",
            "γύρισε <name> [στη βάση]",
            "στείλε <name> [στη βάση]"
          ],
          "requires_context": {
            "domain": "vacuum"
          }
        }
      ]
    },
    "HassVacuumStart": {
      "data": [
        {
          "sentences": [
            "ξεκίνα <name>",
            "άρχισε <name>",
            "ξεκίνησε <name>"
          ]
        },
        {
          "sentences": [
            "<clean> <floor>"
          ]
        }
      ]
    },
    "HassRespond": {
      "data": [
        {
          "sentences": [
            "πες {response}"
          ]
        },
        {
          "sentences": [
            "(γεια[σου]|χαίρετε) [home assistant]",
            "γεια σου [home assistant]"
          ],
          "response": "hello"
        },
        {
          "sentences": [
            "ακούς (πάντα|συνεχώς) [όσα λέω|τι λέω]",
            "καταγράφεις (πάντα|συνεχώς) ότι λέω"
          ],
          "response": "listening"
        },
        {
          "sentences": [
            "πού (πηγαίνουν | πάνε) (τα δεδομένα μου|τα δεδομένα) [μου]",
            "πού καταλήγουν (τα δεδομένα μου|τα δεδομένα) [μου]"
          ],
          "response": "data"
        },
        {
          "sentences": [
            "τι μπορώ να (πω|ρωτήσω)",
            "ποια είναι τα διαθέσιμα commands",
            "Ποιες είναι οι διαθέσιμες εντολές"
          ],
          "response": "commands"
        },
        {
          "sentences": [
            "ποιος σε (έφτιαξε|δημιούργησε)",
            "ποιος σε κατασκεύασε"
          ],
          "response": "creator"
        }
      ]
    },
    "HassBroadcast": {
      "data": [
        {
          "sentences": [
            "<broadcast> [<everywhere>] [ότι] {message}",
            "<broadcast> [<everywhere>] [το εξής] μήνυμα {message}",
            "διάδωσε [<everywhere>] [ότι] {message}",
            "διάδωσε [<everywhere>] [το] μήνυμα {message}",
            "κάνε ανακοίνωση [<everywhere>] [ότι] {message}",
            "ανάκοινωσε [<everywhere>] [ότι] {message}"
          ]
        }
      ]
    },
    "HassMediaPrevious": {
      "data": [
        {
          "sentences": [
            "προηγούμενο [κομμάτι|τραγούδι] [στο|στη|στην] <name>",
            "((πάμε στο προηγούμενο|γύρνα πίσω [ένα κομμάτι]|πίσω);[στο|στη|στην] <name>)"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "προηγούμενο [κομμάτι|τραγούδι]",
            "(πάμε στο προηγούμενο|γύρνα πίσω [ένα κομμάτι]|πίσω)"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "προηγούμενο [κομμάτι|τραγούδι] [στο|στη|στην] <area>",
            "((πάμε στο προηγούμενο|γύρνα πίσω [ένα κομμάτι]|πίσω);[στο|στη|στην] <area>)"
          ]
        }
      ]
    },
    "HassListAddItem": {
      "data": [
        {
          "sentences": [
            "(Πρόσθεσε|Βάλε) [<articles>] <item> στη[ν] <my_list>"
          ],
          "response": "item_added",
          "requires_context": {
            "domain": "todo"
          },
          "expansion_rules": {
            "my_list": "[{name}] [ λίστα] [{name}] [μου]",
            "item": "{shopping_list_item:item}"
          }
        }
      ]
    },
    "HassSetVolume": {
      "data": [
        {
          "sentences": [
            "<numeric_value_set> [την] ένταση [του|της] <name> σε <volume>",
            "(ανέβασε|κατέβασε) [την] ένταση [του|της] <name> σε <volume>",
            "(<numeric_value_set> την ένταση σε <volume>;[στο|στη|στην] <name>)",
            "((ανέβασε|κατέβασε) [την] ένταση σε <volume>;[στο|στη|στην] <name>)"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "<numeric_value_set> [την] ένταση σε <volume>",
            "(ανέβασε|κατέβασε) [την] ένταση σε <volume>"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "<numeric_value_set> [την] ένταση [στο|στη|στην] <area> σε <volume>",
            "(ανέβασε|κατέβασε) [την] ένταση [στο|στη|στην] <area> σε <volume>",
            "(ανέβασε|κατέβασε) [την] ένταση σε <volume> [στο|στη|στην] <area>",
            "(<numeric_value_set> την ένταση σε <volume>;[στο|στη|στην] <area>)",
            "<numeric_value_set> την ένταση [στο|στη|στην] <area> σε <volume>",
            "((ανέβασε|κατέβασε) [την] ένταση σε <volume>;[στο|στη|στην] <area>)"
          ]
        }
      ]
    },
    "HassListCompleteItem": {
      "data": [
        {
          "sentences": [
            "(σημείωσε|ολοκλήρωσε|τέλειωσε|διέγραψε|αφαίρεσε) <item> από <my_list>",
            "(σημείωσε|ολοκλήρωσε|τέλειωσε|διέγραψε|αφαίρεσε) <item> στ(η[ν]|ις|ους) <my_list>",
            "(σημείωσε|μάρκαρε|επισήμανε) <item> στ(η[ν]|ις|ους) <my_list> ως (ολοκληρωμέν[ο|η|α]|έτοιμ[ο|η|α]|τελειωμέν[ο|η|α])"
          ],
          "response": "item_completed",
          "requires_context": {
            "domain": "todo"
          },
          "expansion_rules": {
            "my_list": "[τη[ν]|τις|τους] [(λίστα [μου] )] {name} [[ λίστα] [μου]]",
            "item": "{todo_list_item:item}"
          }
        }
      ]
    },
    "HassClimateSetTemperature": {
      "data": [
        {
          "sentences": [
            "<set> τη θερμοκρασία <articles> <temperature>",
            "<set> <articles> <area> τη θερμοκρασία <articles> <temperature>",
            "<set> τη θερμοκρασία <articles> <name> <articles> <temperature>",
            "<set> τη θερμοκρασία <articles> <area> <articles> <temperature>"
          ]
        }
      ]
    },
    "HassSetVolumeRelative": {
      "data": [
        {
          "sentences": [
            "ένταση πάνω",
            "άνοιξε [την] ένταση",
            "αύξησε [την] ένταση",
            "ανεβάστε [την] ένταση"
          ],
          "slots": {
            "volume_step": "up"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "ένταση κάτω",
            "κλείσε [την] ένταση",
            "μείωσε [την] ένταση",
            "κατεβάστε [την] ένταση"
          ],
          "slots": {
            "volume_step": "down"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        }
      ]
    }
  },
  "responses": {
    "errors": {
      "no_intent": "Συγγνώμη, δεν μπόρεσα να το καταλάβω αυτό",
      "no_area": "Δεν υπάρχει περιοχή με όνομα {{ area }}",
      "no_domain_in_area": "Η περιοχή {{ area }} δεν περιέχει ένα {{ domain }}",
      "no_device_class_in_area": "Η περιοχή {{ area }} δεν περιέχει {{ device_class }}",
      "no_entity": "Δεν υπάρχει συσκευή ή οντότητα με όνομα {{ entity }}",
      "handle_error": "Προέκυψε ένα απροσδόκητο σφάλμα κατά το χειρισμό της πρόθεσης",
      "no_floor": "Δεν υπάρχει όροφος με όνομα {{ floor }}",
      "no_domain": "Δεν υπάρχει {{ domain }}",
      "no_domain_in_floor": "Ο όροφος {{ floor }} δεν περιέχει ένα {{ domain }}",
      "no_device_class": "Δεν υπάρχει {{ device_class }}",
      "no_device_class_in_floor": "Ο όροφος {{ floor }} δεν περιέχει {{ device_class }}",
      "no_entity_in_area": "Δεν υπάρχει συσκευή ή οντότητα με όνομα {{ entity }} στην περιοχή {{ area }}",
      "no_entity_in_floor": "Δεν υπάρχει συσκευή ή οντότητα με όνομα {{ entity }} στον όροφο {{ floor }}",
      "entity_wrong_state": "Συγγνώμη, καμία συσκευή δεν είναι σε κατάσταση \"{{ state | lower }}\"",
      "feature_not_supported": "Συγγνώμη, καμία συσκευή δεν υποστηρίζει τις απαραίτητες λειτουργίες",
      "no_entity_exposed": "Συγγνώμη, το {{ entity }} δεν είναι εκτεθειμένο",
      "no_entity_in_area_exposed": "Συγγνώμη, το {{ entity }} στην περιοχή {{ area }} δεν είναι εκτεθειμένο",
      "no_entity_in_floor_exposed": "Συγγνώμη, το {{ entity }} στον όροφο {{ floor }} δεν είναι εκτεθειμένο",
      "no_domain_exposed": "Συγγνώμη, κανένα {{ domain }} δεν είναι εκτεθειμένο",
      "no_domain_in_area_exposed": "Συγγνώμη, κανένα {{ domain }} στην περιοχή {{ area }} δεν είναι εκτεθειμένο",
      "no_domain_in_floor_exposed": "Συγγνώμη, κανένα {{ domain }} στον όροφο {{ floor }} δεν είναι εκτεθειμένο",
      "no_device_class_exposed": "Συγγνώμη, κανένα {{ device_class }} δεν είναι εκτεθειμένο",
      "no_device_class_in_area_exposed": "Συγγνώμη, κανένα {{ device_class }} στην περιοχή {{ area }} δεν είναι εκτεθειμένο",
      "no_device_class_in_floor_exposed": "Συγγνώμη, κανένα {{ device_class }} στον όροφο {{ floor }} δεν είναι εκτεθειμένο",
      "duplicate_entities": "Συγγνώμη, υπάρχουν πολλές συσκευές με όνομα {{ entity }}",
      "duplicate_entities_in_area": "Συγγνώμη, υπάρχουν πολλές συσκευές με όνομα {{ entity }} στην περιοχή {{ area }}",
      "duplicate_entities_in_floor": "Συγγνώμη, υπάρχουν πολλές συσκευές με όνομα {{ entity }} στον όροφο {{ floor }}",
      "timer_not_found": "Συγγνώμη, δεν βρήκα αυτό το χρονόμετρο",
      "multiple_timers_matched": "Συγγνώμη, δεν μπορώ να στοχεύσω σε πολλαπλά χρονόμετρα",
      "no_timer_support": "Συγγνώμη, οι χρονομετρητές δεν υποστηρίζονται σε αυτή τη συσκευή"
    },
    "intents": {
      "HassGetState": {
        "one": "{{ slots.name | capitalize }} έχει κατάσταση {{ state.state_with_unit }}\n",
        "one_yesno": "{% if query.matched %}\n  Ναι\n{% else %}\n  Όχι, {{ state.state_with_unit }}\n{% endif %}\n",
        "any": "{% if query.matched %}\n  {% set match = query.matched | map(attribute=\"name\") | sort | list %}\n  {% if match | length > 4 %}\n    Ναι, {{ match[:3] | join(\", \") }} και {{ (match | length - 3) }} ακόμα\n  {%- else -%}\n    Ναι,\n    {% for name in match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} και {% endif -%}\n      {{ name }}\n    {%- endfor -%}\n  {% endif %}\n{% else %}\n  Όχι\n{% endif %}\n",
        "all": "{% if not query.unmatched: %}\n  Ναι\n{% else %}\n  {% set no_match = query.unmatched | map(attribute=\"name\") | sort | list %}\n  {% if no_match | length > 4 %}\n    Όχι, δεν ισχύει για {{ no_match[:3] | join(\", \") }} και {{ (no_match | length - 3) }} ακόμα\n  {%- else -%}\n    Όχι, δεν ισχύει για\n    {% for name in no_match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} και {% endif -%}\n      {{ name }}\n    {%- endfor %}\n  {% endif %}\n{% endif %}\n",
        "which": "{% if not query.matched %}\n  Κανένα αποτέλεσμα\n{% else: %}\n  {% set match = query.matched | map(attribute=\"name\") | sort | list %}\n  {% if match | length > 4 %}\n    {{ match[:3] | join(\", \") }} και {{ (match | length - 3) }} ακόμα\n  {% else %}\n    {%- for name in match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} και {% endif -%}\n      {{ name }}\n    {%- endfor -%}\n  {% endif %}\n{% endif %}\n",
        "how_many": "{{ query.matched | length }}\n",
        "where": "{% if state == \"not_home\" %}\n  {{ slots.name | capitalize }} είναι εκτός σπιτιού\n{% else %}\n  {{ slots.name | capitalize }} είναι στο {{ state.state }}\n{% endif %}\n"
      },
      "HassTurnOff": {
        "default": "Έκλεισε",
        "light_all": "Έκλεισαν όλα τα φώτα",
        "lights_area": "Έκλεισαν τα φώτα",
        "cover_area": "{{ slots.area }} έκλεισε",
        "cover_device_class": "{{ slots.device_class }} έκλεισε",
        "lock": "Ξεκλειδώθηκε",
        "valve": "Έκλεισε"
      },
      "HassClimateSetTemperature": {
        "default": "Η θερμοκρασία ορίστηκε σε {{ slots.temperature }} βαθμούς"
      },
      "HassStartTimer": {
        "default": "{% set h = slots.hours if slots.hours is defined else none %} {% set m = slots.minutes if slots.minutes is defined else none %} {% set s = slots.seconds if slots.seconds is defined else none %} {% set h_text = h ~ (' ώρα'  if h in [ \"1\", 'one'] else ' ώρες') if h else '' %} {% set m_text = (30 if m in ['half', '1/2'] else m) ~ (' λεπτό' if m in [ \"1\", 'one'] else ' λεπτά') if m else '' %} {% set s_text = (30 if s in ['half', '1/2'] else s) ~ (' δευτερόλεπτο' if s in [ \"1\", 'one'] else ' δευτερόλεπτα') if s else '' %} {% set text_list = [ h_text, m_text, s_text] | select() | list %} {% set text = text_list[:-1] | join(', ') ~ ' και ' ~ text_list[-1] if text_list | count > 2 else text_list | join(' και ') %} {% set name = (' με όνομα ' ~ slots.name | trim) if slots.name is defined else '' %} Χρονόμετρο ορίστηκε για {{ text }}{{ name }}\n",
        "command": "{% set h = slots.hours if slots.hours is defined else none %} {% set m = slots.minutes if slots.minutes is defined else none %} {% set s = slots.seconds if slots.seconds is defined else none %} {% set h_text = h ~ (' ώρα'  if h in [ \"1\", 'one'] else ' ώρες') if h else '' %} {% set m_text = (30 if m in ['half', '1/2'] else m) ~ (' λεπτό' if m in [ \"1\", 'one'] else ' λεπτά') if m else '' %} {% set s_text = (30 if s in ['half', '1/2'] else s) ~ (' δευτερόλεπτο' if s in [ \"1\", 'one'] else ' δευτερόλεπτα') if s else '' %} {% set text_list = [ h_text, m_text, s_text] | select() | list %} {% set text = text_list[:-1] | join(', ') ~ ' και ' ~ text_list[-1] if text_list | count > 2 else text_list | join(' και ') %} Η εντολή θα εκτελεστεί σε {{ text }}\n"
      },
      "HassShoppingListAddItem": {
        "item_added": "Προστέθηκε {{ slots.item }}"
      },
      "HassTurnOn": {
        "default": "Άνοιξε",
        "lights_area": "Άνοιξαν τα φώτα",
        "cover_area": "{{ slots.area }} άνοιξε",
        "cover_device_class": "{{ slots.device_class }} άνοιξε",
        "scene": "Ενεργοποιήθηκε",
        "script": "Ξεκίνησε",
        "lock": "Κλειδωμένο",
        "valve": "Άνοιξε"
      },
      "HassMediaPause": {
        "default": "Σε παύση"
      },
      "HassGetCurrentTime": {
        "default": "{% set minute_str = '{0:02d}'.format(slots.time.minute) %}{% set hour_str = '{0:02d}'.format(slots.time.hour) %}{{ hour_str }}:{{ minute_str }}"
      },
      "HassPauseTimer": {
        "default": "Το χρονόμετρο τέθηκε σε παύση"
      },
      "HassNevermind": {
        "default": "ok"
      },
      "HassTimerStatus": {
        "default": "{% set num_timers = slots.timers | length %}\n{% set active_timers = slots.timers | selectattr('is_active') | list %}\n{% set num_active_timers = active_timers | length %}\n{% set paused_timers = slots.timers | rejectattr('is_active') | list %}\n{% set num_paused_timers = paused_timers | length %}\n{% set next_timer = None %}\n\n{% if num_timers == 0: %}\n  Δεν υπάρχουν χρονόμετρα.\n{% elif num_active_timers == 0: %}\n  {# No active timers #}\n  {% if num_paused_timers == 1: %}\n    {% set next_timer = paused_timers[0] %}\n    Το χρονόμετρο είναι σε παύση.\n  {% else: %}\n    {{ num_paused_timers }} χρονόμετρα σε παύση.\n  {% endif %}\n{% else: %}\n  {# At least one active timer #}\n  {% if num_active_timers == 1: %}\n    {% set next_timer = active_timers[0] %}\n  {% else: %}\n    {# Get active timer that will finish soonest #}\n    {% set sorted_timers = active_timers | sort(attribute='total_seconds_left') %}\n    {% set next_timer = sorted_timers[0] %}\n    {{ num_active_timers }} χρονόμετρα σε λειτουργία.\n  {% endif %}\n\n  {% if num_paused_timers == 1: %}\n    1 χρονόμετρο σε παύση.\n  {% elif num_paused_timers > 0: %}\n    {{ num_paused_timers }} χρονόμετρα σε παύση.\n  {% endif %}\n{% endif %}\n\n{% if next_timer: %}\n  {# At least one active timer #}\n  {% if (next_timer.rounded_hours_left == 1) and (next_timer.rounded_minutes_left > 0): %}\n    1 ώρα και {{ next_timer.rounded_minutes_left }} λεπτά\n  {% elif (next_timer.rounded_hours_left == 1): %}\n    1 ώρα\n  {% elif (next_timer.rounded_hours_left > 1) and (next_timer.rounded_minutes_left > 0): %}\n    {{ next_timer.rounded_hours_left }} ώρες και {{ next_timer.rounded_minutes_left }} λεπτά\n  {% elif (next_timer.rounded_hours_left > 1): %}\n    {{ next_timer.rounded_hours_left }} ώρες\n  {% elif (next_timer.rounded_minutes_left == 1) and (next_timer.rounded_seconds_left > 0): %}\n    1 λεπτό και {{ next_timer.rounded_seconds_left }} δευτερόλεπτα\n  {% elif (next_timer.rounded_minutes_left == 1): %}\n    1 λεπτό\n  {% elif (next_timer.rounded_minutes_left > 1) and (next_timer.rounded_seconds_left > 0): %}\n    {{ next_timer.rounded_minutes_left }} λεπτά και {{ next_timer.rounded_seconds_left }} δευτερόλεπτα\n  {% elif (next_timer.rounded_minutes_left > 1): %}\n    {{ next_timer.rounded_minutes_left }} λεπτά\n  {% elif (next_timer.rounded_seconds_left == 1): %}\n    1 δευτερόλεπτο\n  {% elif (next_timer.rounded_seconds_left > 1): %}\n    {{ next_timer.rounded_seconds_left }} δευτερόλεπτα\n  {% endif %}\n\n  {% if num_timers > 1: %}\n    {# Give some extra information to disambiguate #}\n    απομένουν στο\n    {% if (next_timer.start_hours > 0) and (next_timer.start_minutes > 0): %}\n      {{ next_timer.start_hours }} ώρας και {{ next_timer.start_minutes }} λεπτών\n    {% elif (next_timer.start_hours > 0): %}\n      {{ next_timer.start_hours }} ώρας\n    {% elif (next_timer.start_minutes > 0) and (next_timer.start_seconds > 0): %}\n      {{ next_timer.start_minutes }} λεπτών και {{ next_timer.start_seconds }} δευτερολέπτων\n    {% elif (next_timer.start_minutes > 0): %}\n      {{ next_timer.start_minutes }} λεπτών\n    {% elif (next_timer.start_seconds > 0): %}\n      {{ next_timer.start_seconds }} δευτερολέπτων\n    {% endif %}\n\n    {% if next_timer.name: %}\n      {{ next_timer.name }}\n    {% elif next_timer.area: %}\n      {{ next_timer.area }}\n    {% endif %}\n\n    χρονόμετρο.\n  {% else: %}\n    απομένουν.\n  {% endif %}\n{% endif %}\n"
      },
      "HassListAddItem": {
        "item_added": "Προστέθηκε το προϊόν {{ slots.item }}"
      },
      "HassGetCurrentDate": {
        "default": "{% set months = {\n   1: 'Ιανουαρίου',\n   2: 'Φεβρουαρίου',\n   3: 'Μαρτίου',\n   4: 'Απριλίου',\n   5: 'Μαΐου',\n   6: 'Ιουνίου',\n   7: 'Ιουλίου',\n   8: 'Αυγούστου',\n   9: 'Σεπτεμβρίου',\n   10: 'Οκτωβρίου',\n   11: 'Νοεμβρίου',\n   12: 'Δεκεμβρίου',\n} %} {{ slots.date.day }} {{ months[slots.date.month] }} {{ slots.date.year }}\n"
      },
      "HassUnpauseTimer": {
        "default": "Το χρονόμετρο συνεχίστηκε"
      },
      "HassMediaPrevious": {
        "default": "Προηγούμενο κομμάτι"
      },
      "HassLawnMowerStartMowing": {
        "default": "Ξεκίνησε το κούρεμα του γκαζόν."
      },
      "HassGetWeather": {
        "default": "{% set weather_condition = {\n  'clear': 'και καθαρός',\n  'clear-night': 'και με ξαστεριά',\n  'cloudy': 'και νεφελώδης',\n  'exceptional': 'και εξαιρετικός',\n  'fog': 'με ομίχλη',\n  'hail': 'με χαλάζι',\n  'lightning': 'με καταιγίδα',\n  'lightning-rainy': 'με καταιγίδες και βροχή',\n  'partlycloudy': 'και μερικώς νεφελώδης',\n  'pouring': 'και καταρρακτώδης βροχή',\n  'rainy': 'και βροχερός',\n  'snowy': 'και χιονισμένος',\n  'snowy-rainy': 'με χιόνι και βροχή',\n  'sunny': 'και ηλιόλουστος',\n  'windy': 'και θυελλώδης',\n  'windy-variant': 'με άνεμο και σύννεφα'\n} %} {{ state.attributes.get('temperature') }} {{ state.attributes.get('temperature_unit') }} {{ weather_condition.get((state.attributes.get('untranslated_state') | string).lower(), \"\") }}\n"
      },
      "HassLightSet": {
        "brightness": "Η φωτεινότητα ορίστηκε σε {{ slots.brightness }}",
        "color": "Το χρώμα ορίστηκε σε {{ slots.color }}"
      },
      "HassCancelAllTimers": {
        "default": "{% if slots.canceled < 1: %} Δεν ακυρώθηκε κανένα χρονόμετρο. {% elif slots.canceled == 1: %} Ακυρώθηκε 1 χρονόμετρο. {% else: %} Ακυρώθηκαν {{ slots.canceled }} χρονόμετρα. {% endif %}\n",
        "area": "{% if slots.canceled < 1: %} Δεν ακυρώθηκε κανένα χρονόμετρο στο {{ slots.area }}. {% elif slots.canceled == 1: %} Ακυρώθηκε 1 χρονόμετρο στο {{ slots.area }}. {% else: %} Ακυρώθηκαν {{ slots.canceled }} χρονόμετρα στο {{ slots.area }}. {% endif %}\n"
      },
      "HassLawnMowerDock": {
        "default": "Σταμάτησε, Επιστροφή στη βάση"
      },
      "HassBroadcast": {
        "default": "Το μήνυμα στάλθηκε"
      },
      "HassVacuumStart": {
        "default": "Ξεκίνησε"
      },
      "HassMediaUnpause": {
        "default": "Συνεχίζεται"
      },
      "HassSetPosition": {
        "default": "Θέση ορίστηκε",
        "cover_device_class": "{% if slots.device_class == \"blind\" or slots.device_class == \"ρολά\" or slots.device_class == \"ρολό\" %}\nΘέση ρολά ορίστηκε\n{% elif slots.device_class == \"curtain\" or slots.device_class in [\"κουρτίνα\", \"κουρτίνες\"] %}\nΘέση κουρτίνας ορίστηκε\n{% elif slots.device_class == \"shade\" or slots.device_class in [\"σκίαστρο\", \"σκίαστρα\"] %}\nΘέση σκιάς ορίστηκε\n{% else %}\nΘέση ορίστηκε\n{% endif %}\n"
      },
      "HassMediaNext": {
        "default": "Επόμενο κομμάτι"
      },
      "HassSetVolumeRelative": {
        "default": "Η ένταση ρυθμίστηκε σε <volume_level>%"
      },
      "HassCancelTimer": {
        "default": "Το χρονόμετρο ακυρώθηκε"
      },
      "HassMediaSearchAndPlay": {
        "default": "{% if slots.media: %}\nΠαίζει πολυμέσα\n{% else: %}\nΔεν βρέθηκαν πολυμέσα με το όνομα {{ slots.search_query }}.\n{% endif %}\n"
      },
      "HassClimateGetTemperature": {
        "default": "{% set current_temperature = state_attr(state.entity_id, 'current_temperature') %} {% set temperature = state.state if current_temperature is none else current_temperature %} {% if temperature == 1: %} {{ temperature }} βαθμός {% else: %} {{ temperature }} βαθμοί {% endif %}\n"
      },
      "HassSetVolume": {
        "default": "Η ένταση ρυθμίστηκε"
      },
      "HassListCompleteItem": {
        "item_completed": "Ολοκληρώθηκε {{ slots.item }}"
      },
      "HassDecreaseTimer": {
        "default": "{% set h = slots.hours if slots.hours is defined else none %} {% set m = slots.minutes if slots.minutes is defined else none %} {% set s = slots.seconds if slots.seconds is defined else none %} {% set h_text = h ~ (' ώρα'  if h in [ \"1\", 'one'] else ' ώρες') if h else '' %} {% set m_text = (30 if m in ['half', '1/2'] else m) ~ (' λεπτό' if m in [ \"1\", 'one'] else ' λεπτά') if m else '' %} {% set s_text = (30 if s in ['half', '1/2'] else s) ~ (' δευτερόλεπτο' if s in [ \"1\", 'one'] else ' δευτερόλεπτα') if s else '' %} {% set text_list = [ h_text, m_text, s_text] | select() | list %} {% set text = text_list[:-1] | join(', ') ~ ' και ' ~ text_list[-1] if text_list | count > 2 else text_list | join(' και ') %} {% set name = (' με όνομα ' ~ slots.name | trim) if slots.name is defined else '' %} Αφαιρέθηκαν {{ text }} από το χρονόμετρο{{ name }}\n"
      },
      "HassIncreaseTimer": {
        "default": "{% set h = slots.hours if slots.hours is defined else none %} {% set m = slots.minutes if slots.minutes is defined else none %} {% set s = slots.seconds if slots.seconds is defined else none %} {% set h_text = h ~ (' ώρα'  if h in [ \"1\", 'one'] else ' ώρες') if h else '' %} {% set m_text = (30 if m in ['half', '1/2'] else m) ~ (' λεπτό' if m in [ \"1\", 'one'] else ' λεπτά') if m else '' %} {% set s_text = (30 if s in ['half', '1/2'] else s) ~ (' δευτερόλεπτο' if s in [ \"1\", 'one'] else ' δευτερόλεπτα') if s else '' %} {% set text_list = [ h_text, m_text, s_text] | select() | list %} {% set text = text_list[:-1] | join(', ') ~ ' και ' ~ text_list[-1] if text_list | count > 2 else text_list | join(' και ') %} {% set name = (' με όνομα ' ~ slots.name | trim) if slots.name is defined else '' %} Προστέθηκαν {{ text }} στο χρονόμετρο{{ name }}\n"
      },
      "HassVacuumReturnToBase": {
        "default": "Επιστρέφει"
      },
      "HassRespond": {
        "default": "",
        "hello": "Γεια σου από το Home Assistant.",
        "listening": "Όχι, καταγράφω μόνο όταν λες τη λέξη αφύπνισης.",
        "data": "Τα δεδομένα σου αποστέλλονται στον διακομιστή (server) του Home Assistant.",
        "commands": "Για να δεις τι μπορείς να ρωτήσεις, επισκέψου το home dash assistant τελεία I.O κάθετος voice.",
        "creator": "Δημιουργήθηκα από την υπέροχη κοινότητα του Home Assistant, η οποία αποτελείται από λάτρεις της τεχνολογίας παγκοσμίως."
      }
    }
  },
  "lists": {
    "color": {
      "values": [
        {
          "in": "λευκό",
          "out": "white"
        },
        {
          "in": "άσπρο",
          "out": "white"
        },
        {
          "in": "μαύρο",
          "out": "black"
        },
        {
          "in": "μάυρο",
          "out": "black"
        },
        {
          "in": "κόκκινο",
          "out": "red"
        },
        {
          "in": "πράσινο",
          "out": "green"
        },
        {
          "in": "μπλε",
          "out": "blue"
        },
        {
          "in": "κίτρινο",
          "out": "yellow"
        },
        {
          "in": "ροζ",
          "out": "pink"
        },
        {
          "in": "πορτοκαλί",
          "out": "orange"
        },
        {
          "in": "μοβ",
          "out": "purple"
        },
        {
          "in": "καφέ",
          "out": "brown"
        },
        {
          "in": "τιρκουάζ",
          "out": "turquoise"
        },
        {
          "in": "γκρι",
          "out": "gray"
        },
        {
          "in": "ασημί",
          "out": "silver"
        },
        {
          "in": "χρυσό",
          "out": "gold"
        },
        {
          "in": "χρυσαφί",
          "out": "gold"
        },
        {
          "in": "βιολετί",
          "out": "violet"
        },
        {
          "in": "κυανό",
          "out": "cyan"
        },
        {
          "in": "λάιμ",
          "out": "lime"
        },
        {
          "in": "ματζέντα",
          "out": "magenta"
        },
        {
          "in": "καστανό",
          "out": "maroon"
        },
        {
          "in": "ναυτικό μπλε",
          "out": "navy"
        },
        {
          "in": "λαδί",
          "out": "olive"
        },
        {
          "in": "μπεζ",
          "out": "beige"
        },
        {
          "in": "κοραλί",
          "out": "coral"
        },
        {
          "in": "σομόν",
          "out": "salmon"
        },
        {
          "in": "λεβάντα",
          "out": "lavender"
        },
        {
          "in": "βαθύ κόκκινο",
          "out": "crimson"
        },
        {
          "in": "ινδιγκό",
          "out": "indigo"
        },
        {
          "in": "ακουαμαρίνα",
          "out": "aquamarine"
        },
        {
          "in": "φούξια",
          "out": "fuchsia"
        },
        {
          "in": "κυπαρισσί",
          "out": "teal"
        }
      ]
    },
    "brightness": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "temperature": {
      "range": {
        "type": "temperature",
        "from": 0,
        "to": 100
      }
    },
    "volume": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "volume_level": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "fan_speed": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "brightness_level": {
      "values": [
        {
          "in": "(μέγιστο|ανώτερο|υψηλότερο)",
          "out": 100
        },
        {
          "in": "(ελάχιστο|κατώτερο)",
          "out": 1
        }
      ]
    },
    "on_off_states": {
      "values": [
        {
          "in": "(ανοι(κ|χ)τ(ός|ή|ό|οί|ές|ά)|αναμμέν(ος|η|ο|οι|ες|α))",
          "out": "on"
        },
        {
          "in": "(κλειστ|σβηστ)(ός|ή|ό|οί|ές|ά)",
          "out": "off"
        }
      ]
    },
    "on_off_domains": {
      "values": [
        {
          "in": "(φώτα|φως|λάμπ[α|ες]|φωτισμό[ς])",
          "out": "light"
        },
        {
          "in": "(ανεμιστήρα[ς])",
          "out": "fan"
        },
        {
          "in": "διακόπτ(ης|η|ες)",
          "out": "switch"
        }
      ]
    },
    "cover_states": {
      "values": [
        {
          "in": "(άνοιξε|άνοιγμα|σήκωσε|σήκωμα|ανέβασε|ανέβασμα)",
          "out": "open"
        },
        {
          "in": "(κλείσε|κλείσιμο|κατέβασε|κατέβασμα)",
          "out": "closed"
        },
        {
          "in": "(άνοιγμα|ανέβασμα)",
          "out": "opening"
        },
        {
          "in": "(κλείσιμο|κατάβασμα)",
          "out": "closing"
        }
      ]
    },
    "cover_classes": {
      "values": [
        {
          "in": "(σκέπαστρ[ο|α]|τέντ[α|ες])",
          "out": "awning"
        },
        {
          "in": "(ρολά|ρολό)",
          "out": "blind"
        },
        {
          "in": "(κουρτίν[α|ες])",
          "out": "curtain"
        },
        {
          "in": "(πόρτ[α|ες]|θύρ[α|ες])",
          "out": "door"
        },
        {
          "in": "(γκαραζόπορτα|γκαραζόπορτες|γκαράζ)",
          "out": "garage"
        },
        {
          "in": "(πύλ[η|ες])",
          "out": "gate"
        },
        {
          "in": "(σκίαστρ[ο|α])",
          "out": "shade"
        },
        {
          "in": "(παντζούρι[α]|παραθυρόφυλλ[α|ο])",
          "out": "shutter"
        },
        {
          "in": "(παράθυρ[ο|α])",
          "out": "window"
        }
      ]
    },
    "lock_states": {
      "values": [
        {
          "in": "κλειδωμέν[o|η|ος|οι|ες|α]",
          "out": "locked"
        },
        {
          "in": "ξεκλειδωμέν[o|η|ος|οι|ες|α]|ξεκλείδωτ(ο|η|ος|οι|ες|α)",
          "out": "unlocked"
        }
      ]
    },
    "bs_battery_states": {
      "values": [
        {
          "in": "χαμηλ(ή|ές)",
          "out": "on"
        },
        {
          "in": "κανονικ(ή|ές)",
          "out": "off"
        }
      ]
    },
    "bs_battery_charging_states": {
      "values": [
        {
          "in": "φορτίζ(ει|ουν)",
          "out": "on"
        },
        {
          "in": "δε φορτίζ(ει|ουν)",
          "out": "off"
        }
      ]
    },
    "bs_carbon_monoxide_states": {
      "values": [
        {
          "in": "(εντοπίστηκε|ανιχνεύτηκε|ενεργοποιήθηκ(ε|αν))",
          "out": "on"
        },
        {
          "in": "(δεν εντοπίστηκε|δεν ανιχνεύτηκε|απενεργοποιήθηκ(ε|αν))",
          "out": "off"
        }
      ]
    },
    "bs_cold_states": {
      "values": [
        {
          "in": "κρύ(ος|α|ο|οι|ες)",
          "out": "on"
        },
        {
          "in": "κανονικ(ός|ή|ό|οί|ές|ά)",
          "out": "off"
        }
      ]
    },
    "bs_connectivity_states": {
      "values": [
        {
          "in": "συνδέθηκ(ε|αν)",
          "out": "on"
        },
        {
          "in": "αποσυνδέθηκ(ε|αν)",
          "out": "off"
        }
      ]
    },
    "bs_door_states": {
      "values": [
        {
          "in": "ανοικτ(ή|ές)",
          "out": "on"
        },
        {
          "in": "κλειστ(ή|ές)",
          "out": "off"
        }
      ]
    },
    "bs_garage_door_states": {
      "values": [
        {
          "in": "ανοικτ(ή|ές)",
          "out": "on"
        },
        {
          "in": "κλειστ(ή|ές)",
          "out": "off"
        }
      ]
    },
    "bs_gas_states": {
      "values": [
        {
          "in": "(εντοπίστηκε|ανιχνεύτηκε|ενεργοποιήθηκ(ε|αν))",
          "out": "on"
        },
        {
          "in": "(δεν εντοπίστηκε|δεν ανιχνεύτηκε|απενεργοποιήθηκ(ε|αν))",
          "out": "off"
        }
      ]
    },
    "bs_heat_states": {
      "values": [
        {
          "in": "(ζεστ|θερμ)(ός|ή|ό|οί|ές|ά)",
          "out": "on"
        },
        {
          "in": "κανονικ(ός|ή|ό|οί|ές|ά)",
          "out": "off"
        }
      ]
    },
    "bs_light_states": {
      "values": [
        {
          "in": "(ανιχνεύτηκε φως|ενεργοποιήθηκ(ε|αν))",
          "out": "on"
        },
        {
          "in": "(δεν ανιχνεύτηκε φως|ανενεργοποιήθηκ(ε|αν))",
          "out": "off"
        }
      ]
    },
    "bs_lock_states": {
      "values": [
        {
          "in": "ξεκλείδωτ(ος|η|ο|οι|ες|α)",
          "out": "on"
        },
        {
          "in": "κλειδωμέν(ος|η|ο|οι|ες|α)",
          "out": "off"
        }
      ]
    },
    "bs_moisture_states": {
      "values": [
        {
          "in": "(υγρ(ός|η|ο|οι|ες|α)|ενεργοποιημέν(ος|οι))",
          "out": "on"
        },
        {
          "in": "(ξηρ(ός|η|ο|οι|ες|α)|απενεργοποιημέν(ος|οι))",
          "out": "off"
        }
      ]
    },
    "bs_motion_states": {
      "values": [
        {
          "in": "(εντοπίστηκε|ανιχνεύτηκε|ενεργοποιημέν(ος|οι))",
          "out": "on"
        },
        {
          "in": "(δεν εντοπίστηκε|δεν ανιχνεύτηκε|απενεργοποιημέν(ος|οι))",
          "out": "off"
        }
      ]
    },
    "bs_occupancy_states": {
      "values": [
        {
          "in": "(εντοπίστηκε|ανιχνεύτηκε|ενεργοποιημέν(ος|οι))",
          "out": "on"
        },
        {
          "in": "(δεν εντοπίστηκε|δεν ανιχνεύτηκε|απενεργοποιημέν(ος|οι))",
          "out": "off"
        }
      ]
    },
    "bs_opening_states": {
      "values": [
        {
          "in": "ανοικτ(ός|ή|ό|οί|ές|ά)",
          "out": "on"
        },
        {
          "in": "κλειστ(ός|ή|ό|οί|ές|ά)",
          "out": "off"
        }
      ]
    },
    "bs_plug_states": {
      "values": [
        {
          "in": "(συνδεδεμέν(ος|η|ο|οι|ες|α) | στην πρίζα)",
          "out": "on"
        },
        {
          "in": "(αποσυνδεδεμέν(ος|η|ο|οι|ες|α) | εκτός πρίζας)",
          "out": "off"
        }
      ]
    },
    "bs_power_states": {
      "values": [
        {
          "in": "(ενεργ(ός|ή|ό|οί|ές|ά) | ενεργοποιημέν(ος|η|ο|οι|ες|α))",
          "out": "on"
        },
        {
          "in": "(ανενεργ(ός|ή|ό|οί|ές|ά) | απενεργοποιημέν(ος|η|ο|οι|ες|α))",
          "out": "off"
        }
      ]
    },
    "bs_presence_states": {
      "values": [
        {
          "in": "(παρών|[στο] σπίτι)",
          "out": "on"
        },
        {
          "in": "(απών|εκτός σπιτιού)",
          "out": "off"
        }
      ]
    },
    "bs_problem_states": {
      "values": [
        {
          "in": "πρόβλημα",
          "out": "on"
        },
        {
          "in": "εντάξει",
          "out": "off"
        }
      ]
    },
    "bs_running_states": {
      "values": [
        {
          "in": "(εκτελ(είται|ούνται) | λειτουργ(εί|ούν) | δουλεύ(ει|ουν))",
          "out": "on"
        },
        {
          "in": "δεν (εκτελ(είται|ούνται) | λειτουργ(εί|ούν) | δουλεύ(ει|ουν))",
          "out": "off"
        }
      ]
    },
    "bs_safety_states": {
      "values": [
        {
          "in": "μη ασφαλ(ής|η|ες|είες|ές|ή)",
          "out": "on"
        },
        {
          "in": "ασφαλ(ής|η|ες|είες|ές|ή)",
          "out": "off"
        }
      ]
    },
    "bs_smoke_states": {
      "values": [
        {
          "in": "(εντοπίστηκε|ανιχνεύτηκε|ενεργοποιήθηκ(ε|αν))",
          "out": "on"
        },
        {
          "in": "(δεν εντοπίστηκε|δεν ανιχνεύτηκε|απενεργοποιήθηκ(ε|αν))",
          "out": "off"
        }
      ]
    },
    "bs_sound_states": {
      "values": [
        {
          "in": "(εντοπίστηκε|ανιχνεύτηκε|ενεργοποιήθηκ(ε|αν))",
          "out": "on"
        },
        {
          "in": "(δεν εντοπίστηκε|δεν ανιχνεύτηκε|απενεργοποιήθηκ(ε|αν))",
          "out": "off"
        }
      ]
    },
    "bs_tamper_states": {
      "values": [
        {
          "in": "(εντοπίστηκε|ανιχνεύτηκε|ενεργοποιήθηκ(ε|αν))",
          "out": "on"
        },
        {
          "in": "(δεν εντοπίστηκε|δεν ανιχνεύτηκε|απενεργοποιήθηκ(ε|αν))",
          "out": "off"
        }
      ]
    },
    "bs_update_states": {
      "values": [
        {
          "in": "διαθέσιμη ενημέρωση",
          "out": "on"
        },
        {
          "in": "ενημερωμέν(ος|η|ο|οι|ες|α|)",
          "out": "off"
        }
      ]
    },
    "bs_vibration_states": {
      "values": [
        {
          "in": "(δονείται|εντοπίστηκε|ανιχνεύτηκε|ενεργοποιήθηκ(ε|αν))",
          "out": "on"
        },
        {
          "in": "(δεν δονείται|δεν εντοπίστηκε|δεν ανιχνεύτηκε|απενεργοποιήθηκ(ε|αν))",
          "out": "off"
        }
      ]
    },
    "bs_window_states": {
      "values": [
        {
          "in": "ανοικτ(ό|ά)",
          "out": "on"
        },
        {
          "in": "κλειστ(ό|ά)",
          "out": "closed"
        }
      ]
    },
    "shopping_list_item": {
      "wildcard": true
    },
    "todo_list_item": {
      "wildcard": true
    },
    "zone": {
      "wildcard": true
    },
    "search_query": {
      "wildcard": true
    },
    "message": {
      "wildcard": true
    },
    "response": {
      "wildcard": true
    },
    "position": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "timer_seconds": {
      "range": {
        "from": 1,
        "to": 100
      }
    },
    "timer_minutes": {
      "range": {
        "from": 1,
        "to": 100
      }
    },
    "timer_hours": {
      "range": {
        "from": 1,
        "to": 100
      }
    },
    "timer_half": {
      "values": [
        {
          "in": "μισή",
          "out": 30
        },
        {
          "in": "μισό",
          "out": 30
        }
      ]
    },
    "timer_name": {
      "wildcard": true
    },
    "timer_command": {
      "wildcard": true
    }
  },
  "expansion_rules": {
    "name": "[(ο | οι | τον | η | την | το | τα | τις | τους | στον | στη | στην | στο | στους | στις | στα)] {name}",
    "area": "[(ο | οι | τον | η | την | το | τα | τις | τους | στον | στη | στην | στο | στους | στις | στα)] {area}",
    "floor": "[(ο | οι | τον | η | την | το | τα | τις | τους | στον | στη | στην | στο | στους | στις | στα)] {floor} [όροφος]",
    "articles": "(ο | οι | τον | η | την | τη | το | τα | τις | τους | του | της | στον | στη | στην | στο | στους | στις | στα)",
    "all": "(όλους | όλες | όλα)",
    "set": "(όρισε | ρύθμισε | άλλαξε)",
    "turn_on": "(άνοιξε | άρχισε | ξεκίνα | τρέξε | ενεργοποίησε | άναψε | σήκωσε | άνοιξε | ενεργοποίησε | άρχισε | ξεκίνα | ανοίξει[ς] | ενεργοποιήσεις | ενεργοποιηθεί | αρχίσει[ς] | ξεκινήσει[ς])",
    "turn_off": "(κλείσε | απενεργοποίησε | σταμάτα | σταμάτησε | σβήσε | κατέβασε | κλείσει[ς] | σταματήσει[ς] | απενεργοποιήσεις | απενεργοποιηθεί)",
    "garage_doors": "(γκαραζόπορτα | γκαραζόπορτες)",
    "covers": "(περσίδα | περσίδες | παντζούρι | παντζούρια | ρολό | ρολά | κάλυμμα | καλύμματα)",
    "doors": "(πόρτα | πόρτες)",
    "fans": "(ανεμιστήρ(α[ς]|ες) | εξαερισμ(ό[ς]|οί|ούς))",
    "lights": "(φως | φώτα | λάμπ(α[ς]|ες) | φωτιστικ(ό|ά))",
    "brightness": "{brightness}[%| τοις εκατό]",
    "temperature": "{temperature} [βαθμ(οί|ούς)]",
    "volume": "{volume:volume_level}[%| τοις εκατό]",
    "volume_level": "{volume_level}[%| τοις εκατό]",
    "fan_speed": "{fan_speed:percentage}[%| τοις εκατό]",
    "position": "{position}[%| τοις εκατό]",
    "exist": "(υπάρχει | υπάρχουν | είναι) [κάποι(ος|α|ο|οι|ες|α)]",
    "numeric_value_set": "(όρισε|άλλαξε|αύξησε|μείωσε)",
    "broadcast": "(ανάκοινωσε | μετάδωσε | διάδωσε | κάνε ανακοίνωση | κάνε μετάδοση)",
    "everywhere": "(παντού | σε όλο το σπίτι | σε όλες τις συσκευές | σε όλους | σε όλα | παντού στο σπίτι)",
    "open": "(άνοιξε|σήκωσε|ανέβασε) [πάνω]",
    "close": "(κλείσε|κατέβασε) [(πάνω|κάτω)]",
    "clean": "(καθάρισε|σκούπισε|ηλεκτρική σκούπα)",
    "what_is": "(ποια είναι | ποιο είναι | τι | πώς)",
    "where_is": "(πού είναι | πού βρίσκεται)",
    "what_is_the_class_of_name": "(<what_is> η <class> (του|στο|από) <name> [στην τοποθεσία <area>]|<what_is> <name> <class> [στην περιοχή <area>]|<what_is> <area> <name> <class>)",
    "lockable": "(κλειδαριά | κλειδαριές | πόρτα | πόρτες | παράθυρο | παράθυρα | πύλη | πύλες | γκαραζόπορτα | γκαραζόπορτες)",
    "lock_turn_on": "(κλείδωσε | ασφάλισε | βάλε κλειδί)",
    "lock_turn_off": "(ξεκλείδωσε | βγάλε το κλειδί)",
    "timer_seconds": "[{seconds:seconds}]",
    "timer_minutes": "[{minutes:minutes}]",
    "timer_hours": "[{hours:hours}]",
    "timer_half": "[(μισή|μισό)]",
    "timer_name": "[{name:name}]",
    "timer_command": "[{conversation_command:conversation_command}]",
    "timer_set": "(ξεκίνα | βάλε | όρισε | δημιούργησε | κάνε)",
    "timer_cancel": "(ακύρωσε | σταμάτα | σταμάτησε | διέκοψε)",
    "timer_duration_seconds": "{timer_seconds:seconds} δευτερόλεπτ(ο|α|ων)",
    "timer_duration_minutes": "({timer_minutes:minutes} λεπτ(ό|ά|ών) [[και] {timer_seconds:seconds} δευτερόλεπτ(ο|α|ων)])|({timer_minutes:minutes} και [ένα] {timer_half:seconds} λεπτ(ό|ά|ών))|({timer_half:seconds} ένα λεπτ(ό|ά|ών))",
    "timer_duration_hours": "({timer_hours:hours} ώρ(α|ες|ας|ών) [[και] {timer_minutes:minutes} λεπτ(ό|ά|ών)] [[και] {timer_seconds:seconds} δευτερόλεπτ(ο|α|ων)])|({timer_hours:hours} και [μία] {timer_half:minutes} ώρ(α|ες|ας|ών))|({timer_half:minutes} μία ώρ(α|ες|ας|ών))",
    "timer_duration": "<timer_duration_seconds>|<timer_duration_minutes>|<timer_duration_hours>",
    "timer_start_seconds": "{timer_seconds:start_seconds} δευτερόλεπτ(ο|α|ων)",
    "timer_start_minutes": "{timer_minutes:start_minutes} λεπτ(ό|ά|ών) [[και] {timer_seconds:start_seconds} δευτερόλεπτ(ο|α|ων)]",
    "timer_start_hours": "{timer_hours:start_hours} ώρ(α|ες|ας|ών) [[και] {timer_minutes:start_minutes} λεπτ(ό|ά|ών)] [[και] {timer_seconds:start_seconds} δευτερόλεπτ(ο|α|ων)]",
    "timer_start": "<timer_start_seconds>|<timer_start_minutes>|<timer_start_hours>"
  },
  "skip_words": [
    "παρακαλώ",
    "σε παρακαλώ",
    "μπορείς",
    "θα μπορούσες"
  ]
}