{
  "language": "pt-BR",
  "intents": {
    "HassMediaSearchAndPlay": {
      "data": [
        {
          "sentences": [
            "tocar [o|a] {media_class} {search_query}",
            "tocar [o|a] {search_query} {media_class}",
            "tocar {search_query}"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "tocar {search_query} <na_zona>",
            "tocar [o|a] {media_class} {search_query} <na_zona>",
            "tocar [o|a] {search_query} {media_class} <na_zona>"
          ]
        },
        {
          "sentences": [
            "tocar {search_query} [na|no] {name}",
            "tocar [o|a] {media_class} {search_query} [na|no] {name}",
            "tocar [o|a] {search_query} {media_class} [na|no] {name}",
            "tocar {search_query} [na|no] {name} <na_zona>",
            "tocar [o|a] {media_class} {search_query} [na|no] {name} <na_zona>",
            "tocar [o|a] {search_query} {media_class} [na|no] {name} <na_zona>"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        }
      ]
    },
    "HassTurnOff": {
      "data": [
        {
          "sentences": [
            "<desligar> <nome> [<na_zona>]"
          ],
          "excludes_context": {
            "domain": [
              "binary_sensor",
              "cover",
              "lock",
              "scene",
              "script",
              "sensor",
              "valve",
              "vacuum"
            ]
          }
        },
        {
          "sentences": [
            "<desligar> [tod(as|os)] [(o[s]|a[s])] (luz[es]|lâmpada[s]) <na_zona_piso>"
          ],
          "slots": {
            "domain": "light"
          },
          "response": "lights"
        },
        {
          "sentences": [
            "<desligar> [tod(as|os)] [(o[s]|a[s])] (luz[es]|lâmpada[s]) (da|de|do) <casa>"
          ],
          "slots": {
            "domain": "light"
          },
          "response": "light_all"
        },
        {
          "sentences": [
            "<desligar> [tod(as|os)] [(o[s]|a[s])] (luz[es]|lâmpada[s]) [aqui] [onde estou]"
          ],
          "slots": {
            "domain": "light"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "<fechar> <artigos> [(porta | portão) da] garagem"
          ],
          "slots": {
            "device_class": "garage",
            "domain": "cover"
          },
          "response": "cover"
        },
        {
          "sentences": [
            "<fechar> <artigos> <cortina> <na_zona_piso>"
          ],
          "slots": {
            "device_class": [
              "awning",
              "blind",
              "curtain",
              "shade",
              "shutter"
            ],
            "domain": "cover"
          },
          "response": "cover"
        },
        {
          "sentences": [
            "<fechar> [tod(as|os)] [(o[s]|a[s])] <cortina> (na|da|de|do) <casa>",
            "<fechar> tod(as|os) [(o[s]|a[s])] <cortina> [(na|da|de|do) <casa>]"
          ],
          "slots": {
            "device_class": [
              "awning",
              "blind",
              "curtain",
              "shade",
              "shutter"
            ],
            "domain": "cover"
          },
          "response": "cover_all"
        },
        {
          "sentences": [
            "<fechar> <artigos> <cortina> [aqui] [onde estou]"
          ],
          "slots": {
            "device_class": [
              "awning",
              "blind",
              "curtain",
              "shade",
              "shutter"
            ],
            "domain": "cover"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          },
          "response": "cover"
        },
        {
          "sentences": [
            "<desligar> [todos] <artigos> <ventilador> <na_zona>"
          ],
          "slots": {
            "domain": "fan"
          },
          "response": "fans"
        },
        {
          "sentences": [
            "<desligar> <artigos> <ventilador> [aqui] [onde estou]"
          ],
          "slots": {
            "domain": "fan"
          },
          "response": "fans",
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "<fechar> {name}"
          ],
          "requires_context": {
            "domain": "valve"
          },
          "slots": {
            "domain": "valve"
          },
          "response": "valve"
        }
      ]
    },
    "HassGetState": {
      "data": [
        {
          "sentences": [
            "<cade> <nome>"
          ],
          "response": "where",
          "requires_context": {
            "domain": "person"
          },
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "[(a|o)] <nome> está (em|na|no) {zone:state}"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "person"
          },
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "tem alguém (na|no|em) {zone:state}"
          ],
          "response": "any",
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "todos estão (na|no|em) {zone:state}"
          ],
          "response": "all",
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "quem está (em|na|no) {zone:state}"
          ],
          "response": "which",
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "quantas pessoas estão (em|na|no) {zone:state}"
          ],
          "response": "how_many",
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "([[você] (sabe|saberia) [me] [dizer]|me diga]) <qual> [o estado] [do|da] <nome> [<na_zona_piso>]"
          ],
          "response": "one",
          "excludes_context": {
            "domain": [
              "scene",
              "script"
            ]
          }
        },
        {
          "sentences": [
            "<nome> está {on_off_states:state} [<na_zona_piso>]",
            "([você] (sabe|saberia) [me] [dizer]|me diga) se <nome> está {on_off_states:state} [<na_zona_piso>]"
          ],
          "response": "one_yesno",
          "excludes_context": {
            "domain": [
              "cover"
            ]
          }
        },
        {
          "sentences": [
            "(tem|<esta>) <algum> {on_off_domains:domain} {on_off_states:state} [<na_zona_piso>]",
            "([você] (sabe|saberia) [me] [dizer]|me diga) se (tem|<esta>) <algum> {on_off_domains:domain} {on_off_states:state} [<na_zona_piso>]"
          ],
          "response": "any"
        },
        {
          "sentences": [
            "<todas> [os|as] {on_off_domains:domain} estão {on_off_states:state} [<na_zona>]",
            "([você] (sabe|saberia) [me] [dizer]|me diga) se <todas> [os|as] {on_off_domains:domain} estão {on_off_states:state} [<na_zona>]",
            "<todas> [os|as] {on_off_domains:domain} [<na_zona>] estão {on_off_states:state}",
            "([você] (sabe|saberia) [me] [dizer]|me diga) se <todas> [os|as] {on_off_domains:domain} [<na_zona>] estão {on_off_states:state}"
          ],
          "response": "all"
        },
        {
          "sentences": [
            "<qual> {on_off_domains:domain} <esta> {on_off_states:state} [<na_zona_piso>]",
            "([você] (pode|poderia|sabe|saberia) [me] [dizer]|me diga) <qual> {on_off_domains:domain} <esta> {on_off_states:state} [<na_zona_piso>]"
          ],
          "response": "which"
        },
        {
          "sentences": [
            "(quantos|quantas) {on_off_domains:domain} <esta> {on_off_states:state} [<na_zona_piso>]",
            "([você] (pode|poderia|sabe|saberia) [me] [dizer]|me diga) (quantos|quantas) {on_off_domains:domain} <esta> {on_off_states:state} [<na_zona_piso>]"
          ],
          "response": "how_many"
        },
        {
          "sentences": [
            "<nome> está {cover_states:state} [<na_zona_piso>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "cover"
          },
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "<algum> {cover_classes:device_class} <esta> {cover_states:state} [<na_zona_piso>]",
            "(tem|há) <algum> {cover_classes:device_class} {cover_states:state} [na] [<na_zona_piso>]"
          ],
          "response": "any",
          "slots": {
            "device_class": [
              "awning",
              "blind",
              "curtain",
              "shade",
              "shutter"
            ],
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "todas [as] {cover_classes:device_class} <esta> {cover_states:state} [<na_zona_piso>]"
          ],
          "response": "all",
          "slots": {
            "device_class": [
              "awning",
              "blind",
              "curtain",
              "shade",
              "shutter"
            ],
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "<qual> {cover_classes:device_class} <esta> {cover_states:state} [<na_zona_piso>]"
          ],
          "response": "which",
          "slots": {
            "device_class": [
              "awning",
              "blind",
              "curtain",
              "shade",
              "shutter"
            ],
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "(quantas|quantos) {cover_classes:device_class} estão {cover_states:state} [<na_zona_piso>]"
          ],
          "response": "how_many",
          "slots": {
            "device_class": [
              "awning",
              "blind",
              "curtain",
              "shade",
              "shutter"
            ],
            "domain": "cover"
          }
        }
      ]
    },
    "HassCancelTimer": {
      "data": [
        {
          "sentences": [
            "<timer_cancel> <temporizador>",
            "<timer_cancel> <temporizador> [de ]<timer_start>",
            "<timer_cancel> <temporizador> <na_zona>",
            "<timer_cancel> <temporizador> [chamado ]{timer_name:name}"
          ]
        }
      ]
    },
    "HassTimerStatus": {
      "data": [
        {
          "sentences": [
            "[<qual> ][o ](status|estado dos|tempo restante) <temporizadores>",
            "quanto tempo <falta> <temporizadores>",
            "[<qual> ][o ](status|estado do|tempo restante) <temporizador>[ [de ]<timer_start>]",
            "quanto tempo <falta> <temporizador>[ [de ]<timer_start>]",
            "[<qual> ][o ](status|estado do|tempo restante) <temporizador> <na_zona>",
            "quanto tempo <falta> <temporizador> <na_zona>",
            "[<qual> ][o ](status|estado do|tempo restante) <temporizador> [chamado ]{timer_name:name}",
            "quanto tempo <falta> no <temporizador> [chamado ]{timer_name:name}"
          ]
        }
      ]
    },
    "HassGetWeather": {
      "data": [
        {
          "sentences": [
            "como (está|ta) o tempo [hoje|agora]"
          ]
        },
        {
          "sentences": [
            "como está o tempo (em|no) <nome> [hoje|agora]"
          ],
          "requires_context": {
            "domain": "weather"
          }
        }
      ]
    },
    "HassGetCurrentTime": {
      "data": [
        {
          "sentences": [
            "que horas são [agora]",
            "(horário|hora[s]) [atual]"
          ]
        }
      ]
    },
    "HassTurnOn": {
      "data": [
        {
          "sentences": [
            "<ligar> [tod(as|os)] [(o[s]|a[s])] (luz[es]| lâmpada[s]) <na_zona_piso>"
          ],
          "slots": {
            "domain": "light"
          },
          "response": "lights"
        },
        {
          "sentences": [
            "<ligar> [tod(as|os)] [(o[s]|a[s])] (luz[es]|lâmpada[s]) (da|do|de) <casa>"
          ],
          "slots": {
            "domain": "light"
          },
          "response": "light_all"
        },
        {
          "sentences": [
            "<ligar> [tod(as|os)] [(o[s]|a[s])] (luz[es]|lâmpada[s]) [aqui] [onde estou]"
          ],
          "slots": {
            "domain": "light"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "<ligar> [todos] <artigos> <ventilador> <na_zona>"
          ],
          "slots": {
            "domain": "fan"
          },
          "response": "fans"
        },
        {
          "sentences": [
            "<ligar> <artigos> <ventilador> [aqui] [onde estou]"
          ],
          "slots": {
            "domain": "fan"
          },
          "response": "fans",
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "<abrir> {name}"
          ],
          "requires_context": {
            "domain": "valve"
          },
          "slots": {
            "domain": "valve"
          },
          "response": "valve"
        },
        {
          "sentences": [
            "<ligar> <nome> [<na_zona>]"
          ],
          "excludes_context": {
            "domain": [
              "binary_sensor",
              "cover",
              "lock",
              "scene",
              "script",
              "sensor",
              "valve",
              "vacuum"
            ]
          }
        },
        {
          "sentences": [
            "<abrir> <artigos> [(porta|portão) da] garagem"
          ],
          "slots": {
            "device_class": "garage",
            "domain": "cover"
          },
          "response": "cover"
        },
        {
          "sentences": [
            "<abrir> <artigos> <cortina> <na_zona_piso>"
          ],
          "slots": {
            "device_class": [
              "awning",
              "blind",
              "curtain",
              "shade",
              "shutter"
            ],
            "domain": "cover"
          },
          "response": "cover"
        },
        {
          "sentences": [
            "<abrir> [tod(as|os)] [(o[s]|a[s])] <cortina> (na|da|de|do) <casa>",
            "<abrir> tod(as|os) [(o[s]|a[s])] <cortina> [(na|da|de|do) <casa>]"
          ],
          "slots": {
            "device_class": [
              "awning",
              "blind",
              "curtain",
              "shade",
              "shutter"
            ],
            "domain": "cover"
          },
          "response": "cover_all"
        },
        {
          "sentences": [
            "<abrir> <artigos> <cortina> [aqui] [onde estou]"
          ],
          "slots": {
            "device_class": [
              "awning",
              "blind",
              "curtain",
              "shade",
              "shutter"
            ],
            "domain": "cover"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          },
          "response": "cover"
        }
      ]
    },
    "HassMediaUnpause": {
      "data": [
        {
          "sentences": [
            "(toca[r]|roda[r]) {name}"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "(toca[r]|roda[r]|continua[r])"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "(toca[r]|roda[r]|continua[r]) [(música|tv|programa|video)] <na_zona>"
          ]
        }
      ]
    },
    "HassShoppingListAddItem": {
      "data": [
        {
          "sentences": [
            "<adicionar> <item> (à|na) <lista>",
            "<colocar> <item> na <lista>"
          ],
          "response": "item_added",
          "expansion_rules": {
            "lista": "[minha ]lista [de compras|de supermercado]",
            "item": "{shopping_list_item:item}"
          }
        }
      ]
    },
    "HassCancelAllTimers": {
      "data": [
        {
          "sentences": [
            "<timer_cancel> todos <temporizadores>"
          ]
        },
        {
          "sentences": [
            "<timer_cancel> todos <temporizadores> <na_zona>"
          ],
          "response": "area"
        }
      ]
    },
    "HassNevermind": {
      "data": [
        {
          "sentences": [
            "esquece",
            "deixa [(para|pra)] lá",
            "cancela[r]",
            "nada"
          ]
        }
      ]
    },
    "HassSetPosition": {
      "data": [
        {
          "sentences": [
            "(<colocar> | <mudar>) {name} (para|pra) [posição] <position>"
          ],
          "requires_context": {
            "domain": "valve"
          },
          "slots": {
            "domain": "valve"
          }
        },
        {
          "sentences": [
            "(<mudar> | <abrir> | <fechar>) {name} (para|pra) [posição] <position>",
            "(<colocar> | <tornar>) [[a] posição] {name} [em] <position> [abert[a|o]|fechad[a|o]]"
          ],
          "requires_context": {
            "domain": "cover"
          },
          "slots": {
            "device_class": [
              "awning",
              "blind",
              "curtain",
              "shade",
              "shutter"
            ],
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "(<mudar> | <abrir> | <fechar>) <artigos> <cortina> <na_zona_piso> (para|pra) [posição] <position>",
            "(<mudar> | <abrir> | <fechar>) <artigos> <cortina> (para|pra) [posição] <position> <na_zona_piso>",
            "(<colocar> | <tornar>) [[a] posição] <artigos> <cortina> <na_zona_piso> [em] <position> [abert[a|o]|fechad[a|o]]",
            "(<colocar> | <tornar>) [[a] posição] <artigos> <cortina> [em] <position> [abert[a|o]|fechad[a|o]] <na_zona_piso>"
          ],
          "slots": {
            "device_class": [
              "awning",
              "blind",
              "curtain",
              "shade",
              "shutter"
            ],
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "(<mudar> | <abrir> | <fechar>) <artigos> <cortina> (para|pra) [posição] <position> [aqui] [onde estou]",
            "(<mudar> | <abrir> | <fechar>) <artigos> <cortina> [aqui] [onde estou] (para|pra) [posição] <position>",
            "(<mudar> | <abrir> | <fechar>) [[a] posição] <artigos> <cortina> [aqui] [onde estou] (para|pra) <position>",
            "(<colocar> | <tornar>) [[a] posição] <artigos> <cortina> [em] <position>  [abert[a|o]|fechad[a|o]] [aqui] [onde estou]",
            "(<colocar> | <tornar>) [[a] posição] <artigos> <cortina> [aqui] [onde estou] [em] <position> [abert[a|o]|fechad[a|o]]",
            "(<colocar> | <tornar>) [[a] posição] <artigos> <cortina> [aqui] [onde estou] [em] <position> [abert[a|o]|fechad[a|o]]"
          ],
          "slots": {
            "device_class": [
              "awning",
              "blind",
              "curtain",
              "shade",
              "shutter"
            ],
            "domain": "cover"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "(<mudar> | <abrir> | <fechar>) [tod(as|os)] <artigos> <cortina> (para|pra) [[a] posição] <position> (na|da|de|do) <casa>",
            "(<mudar> | <abrir> | <fechar>) [tod(as|os)] <artigos> <cortina> (na|da|de|do) <casa> (para|pra) [posição] <position>",
            "(<mudar> | <abrir> | <fechar>) [[a] posição] [de] [tod(as|os)] <artigos> <cortina> (na|da|de|do) <casa> (para|pra) <position>",
            "(<mudar> | <abrir> | <fechar>) [[a] posição] [de] [tod(as|os)] <artigos> <cortina> (para|pra) <position> (na|da|de|do) <casa>",
            "(<colocar> | <tornar>) [[a] posição] [de] [tod(as|os)] <artigos> <cortina> [em] <position> [abert[a|o]|fechad[a|o]] (na|da|de|do) <casa>",
            "(<colocar> | <tornar>) [[a] posição] [de] [tod(as|os)] <artigos> <cortina> (na|da|de|do) <casa> [em] <position> [abert[a|o]|fechad[a|o]]",
            "(<colocar> | <tornar>) [[a] posição] [de] [tod(as|os)] <artigos> <cortina> (na|da|de|do) <casa> [em] <position> [abert[a|o]|fechad[a|o]]",
            "(<mudar> | <abrir> | <fechar>) tod(as|os) <artigos> <cortina> (para|pra) [[a] posição] <position> [(na|da|de|do) <casa>]",
            "(<mudar> | <abrir> | <fechar>) tod(as|os) <artigos> <cortina> [(na|da|de|do) <casa>] (para|pra) [posição] <position>",
            "(<mudar> | <abrir> | <fechar>) [[a] posição] [de] tod(as|os) <artigos> <cortina> [(na|da|de|do) <casa>] (para|pra) <position>",
            "(<mudar> | <abrir> | <fechar>) [[a] posição] [de] tod(as|os) <artigos> <cortina> (para|pra) <position> [(na|da|de|do) <casa>]",
            "(<colocar> | <tornar>) [[a] posição] [de] tod(as|os) <artigos> <cortina> [em] <position> [abert[a|o]|fechad[a|o]] [(na|da|de|do) <casa>]",
            "(<colocar> | <tornar>) [[a] posição] [de] tod(as|os) <artigos> <cortina> [(na|da|de|do) <casa>] [em] <position> [abert[a|o]|fechad[a|o]]",
            "(<colocar> | <tornar>) [[a] posição] [de] tod(as|os) <artigos> <cortina> [(na|da|de|do) <casa>] [em] <position> [abert[a|o]|fechad[a|o]]"
          ],
          "slots": {
            "device_class": [
              "awning",
              "blind",
              "curtain",
              "shade",
              "shutter"
            ],
            "domain": "cover"
          },
          "response": "cover_all"
        }
      ]
    },
    "HassGetCurrentDate": {
      "data": [
        {
          "sentences": [
            "que (dia|data) é hoje",
            "data de hoje"
          ]
        }
      ]
    },
    "HassIncreaseTimer": {
      "data": [
        {
          "sentences": [
            "<aumentar> <timer_duration> [ao |no ]<temporizador>",
            "<aumentar> <timer_duration> [ao |no ]<temporizador> [de ]<timer_start>",
            "<aumentar> <timer_duration> [ao |no ]<temporizador> <na_zona>",
            "<aumentar> <timer_duration> [ao |no ]<temporizador> [chamado ]{timer_name:name}"
          ],
          "expansion_rules": {
            "aumentar": "(aumenta[r]|adiciona[r]|acrescenta[r])[ em]"
          }
        },
        {
          "sentences": [
            "<aumentar> <temporizador> [em ]<timer_duration>",
            "<aumentar> <temporizador> [de ]<timer_start> [em ]<timer_duration>",
            "<aumentar> <temporizador> <na_zona> [em ]<timer_duration>",
            "<aumentar> <temporizador> [chamado ]{timer_name:name} [em ]<timer_duration>"
          ],
          "expansion_rules": {
            "aumentar": "(aumenta[r]|adiciona[r]|acrescenta[r])"
          }
        }
      ]
    },
    "HassLawnMowerDock": {
      "data": [
        {
          "sentences": [
            "<cancelar> (de cortar [a]|o corte da) grama",
            "<cancelar> [o] cortador de grama"
          ]
        },
        {
          "sentences": [
            "<cancelar> {name}",
            "<retornar> [o] [cortador] [de grama] {name} [para [a] (base|doca)]"
          ],
          "requires_context": {
            "domain": "lawn_mower"
          }
        }
      ]
    },
    "HassLightSet": {
      "data": [
        {
          "sentences": [
            "<mudar> o brilho (do | da) <nome> (a | (para|pra) | em) <brilho>",
            "<mudar> <nome> (a | (para|pra) | em) <brilho>",
            "<mudar> o brilho (do | da) <nome> <na_zona> (a|(para|pra)| em) <brilho>",
            "<mudar> <nome> <na_zona> (a | (para|pra) | em) <brilho>"
          ],
          "response": "brightness"
        },
        {
          "sentences": [
            "<mudar> o brilho <na_zona> (a | (para|pra) | em) <brilho>",
            "<mudar> <zona> (a | (para|pra) | em) <brilho>",
            "<mudar> [todas] as luzes (a | (para|pra) | em) <brilho>",
            "<mudar> [todas] as luzes <na_zona> (a | (para|pra) | em) <brilho>",
            "<mudar> [o brilho (de todas as | das) | as] luzes (a | para | pra | em) <brilho>",
            "<mudar> [o brilho (de todas as | das) | as] luzes <na_zona> (a | para | pra | em) <brilho>"
          ],
          "response": "brightness"
        },
        {
          "sentences": [
            "<mudar> [a cor [(do | da)]] <nome> (a | para | pra | em) {color}",
            "<mudar> <nome> {color}",
            "<mudar> [a cor [(do | da)]] <nome> <na_zona> (a | para | pra | em) {color}",
            "(põe | ponha | muda | altera) <nome> <na_zona> {color}"
          ],
          "response": "color"
        },
        {
          "sentences": [
            "<mudar> a cor <na_zona> (a | para | pra | em) {color}",
            "<mudar> <zona> [a | para | pra | em] {color}",
            "<mudar> [a cor (de todas as | das) | as] luzes (a | para | pra | em) {color}",
            "<mudar> [a cor (de todas as | das) | as] luzes <na_zona> (a | para | pra | em) {color}"
          ],
          "response": "color"
        }
      ]
    },
    "HassMediaNext": {
      "data": [
        {
          "sentences": [
            "(próxim[a|o]|avançar|avance) [(faixa|música|video)] [(na|no)] {name}"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "(próxim[a|o]|avançar|avance) [(faixa|música|video)]"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "(próxim[a|o]|avançar|avance [(a|o)]) [(faixa|música|video)] <na_zona>"
          ]
        }
      ]
    },
    "HassPauseTimer": {
      "data": [
        {
          "sentences": [
            "<pausar> <temporizador>",
            "<pausar> <temporizador> [de ]<timer_start>",
            "<pausar> <temporizador> <na_zona>",
            "<pausar> <temporizador> [chamado ]{timer_name:name}"
          ]
        }
      ]
    },
    "HassLawnMowerStartMowing": {
      "data": [
        {
          "sentences": [
            "<iniciar> [a] (o corte|cortar) (da|a) grama",
            "<ligar> cortador (de|da) grama"
          ]
        },
        {
          "sentences": [
            "<iniciar> [a|o] {name}"
          ],
          "requires_context": {
            "domain": "lawn_mower"
          }
        }
      ]
    },
    "HassDecreaseTimer": {
      "data": [
        {
          "sentences": [
            "<reduzir> <timer_duration> [do ]<temporizador>",
            "<reduzir> <timer_duration> [do ]<temporizador> [de ]<timer_start>",
            "<reduzir> <timer_duration> [do ]<temporizador> <na_zona>",
            "<reduzir> <timer_duration> [do ]<temporizador> [chamado ]{timer_name:name}"
          ],
          "expansion_rules": {
            "reduzir": "(reduz[ir]|remove[r]|retira[r])[ em]"
          }
        },
        {
          "sentences": [
            "<reduzir> [do ]<temporizador> [em ]<timer_duration>",
            "<reduzir> [do ]<temporizador> [de ]<timer_start> [em ]<timer_duration>",
            "<reduzir> [do ]<temporizador> <na_zona> [em ]<timer_duration>",
            "<reduzir> [do ]<temporizador> [chamado ]{timer_name:name} [em ]<timer_duration>"
          ],
          "expansion_rules": {
            "reduzir": "(reduz[ir]|remove[r]|retira[r])"
          }
        }
      ]
    },
    "HassMediaPause": {
      "data": [
        {
          "sentences": [
            "(pausa[r]|para[r]) {name}"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "(pausa[r]|para[r])"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "(pausa[r]|para[r]) (música|tv|programa|video) <na_zona>"
          ]
        }
      ]
    },
    "HassUnpauseTimer": {
      "data": [
        {
          "sentences": [
            "<continuar> <temporizador>",
            "<continuar> <temporizador> [de ]<timer_start>",
            "<continuar> <temporizador> <na_zona>",
            "<continuar> <temporizador>[ chamado] {timer_name:name}"
          ],
          "expansion_rules": {
            "continuar": "(continua[r]|retoma[r])"
          }
        }
      ]
    },
    "HassStartTimer": {
      "data": [
        {
          "sentences": [
            "[<timer_set> ][um ]<temporizador>[ <duration_prefix>] <timer_duration>",
            "[<timer_set> ][um ]<temporizador>[ chamado] {timer_name:name}[ <duration_prefix>] <timer_duration>",
            "[<timer_set> ][um ]<temporizador>[ <duration_prefix>] <timer_duration>[ chamado] {timer_name:name}",
            "<timer_set> <duration_prefix> <timer_duration>"
          ],
          "expansion_rules": {
            "timer_set": "(define|definir|começa[r]|inicia[r]|cria[r])",
            "duration_prefix": "(de|com|para|em)"
          }
        },
        {
          "sentences": [
            "{timer_command:conversation_command} <daqui_a> <timer_duration>",
            "<daqui_a> <timer_duration> {timer_command:conversation_command}"
          ],
          "expansion_rules": {
            "daqui_a": "(em|dentro de|daqui a)"
          },
          "response": "command"
        }
      ]
    },
    "HassClimateGetTemperature": {
      "data": [
        {
          "sentences": [
            "<qual> [a] temperatura [(do|da) {name}]",
            "<qual> [a] temperatura <na_zona>",
            "a que temperatura está <zona>"
          ]
        }
      ]
    },
    "HassVacuumReturnToBase": {
      "data": [
        {
          "sentences": [
            "(retornar|voltar) {name} [(para|pra) base]"
          ],
          "requires_context": {
            "domain": "vacuum"
          }
        }
      ]
    },
    "HassVacuumStart": {
      "data": [
        {
          "sentences": [
            "(iniciar|ligar) {name}"
          ],
          "requires_context": {
            "domain": "vacuum"
          }
        }
      ]
    },
    "HassRespond": {
      "data": [
        {
          "sentences": [
            "(olá|oi) [home assistant]"
          ],
          "response": "hello"
        },
        {
          "sentences": [
            "você está sempre (ouvindo|gravando)"
          ],
          "response": "listening"
        },
        {
          "sentences": [
            "(para|pra) onde vão [os] [meus] dados"
          ],
          "response": "data"
        },
        {
          "sentences": [
            "o que eu posso (dizer|perguntar)",
            "quais são os comandos que você aceita"
          ],
          "response": "commands"
        },
        {
          "sentences": [
            "quem (fez|criou|é) você"
          ],
          "response": "creator"
        }
      ]
    },
    "HassBroadcast": {
      "data": [
        {
          "sentences": [
            "(anuncie|avis[(e|ar)]) [(a|para)] [todos] [(que|para)] {message}"
          ]
        }
      ]
    },
    "HassMediaPrevious": {
      "data": [
        {
          "sentences": [
            "(volt(e|a[r])) [(faixa|música|video)] [(na|no)] {name}"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "(volt(e|a[r])) [(faixa|música|video)]"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "(volt(e|a[r])) [a] [(faixa|música|video)] <na_zona>"
          ]
        }
      ]
    },
    "HassListAddItem": {
      "data": [
        {
          "sentences": [
            "<adicionar> <item> à <lista>",
            "<colocar> <item> na <lista>"
          ],
          "response": "item_added",
          "requires_context": {
            "domain": "todo"
          },
          "expansion_rules": {
            "lista": "[minha ]lista [de ]{name}",
            "item": "{todo_list_item:item}"
          }
        }
      ]
    },
    "HassSetVolume": {
      "data": [
        {
          "sentences": [
            "<mudar> [volume] [da|do] {name} (para|pra) <volume>"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "<mudar> [volume] [da|do] (para|pra) <volume>",
            "<mudar> [volume] <na_zona> (para|pra) <volume>"
          ]
        }
      ]
    },
    "HassListCompleteItem": {
      "data": [
        {
          "sentences": [
            "(<terminar>|<completar>|<deletar>|<remover>|<retirar>) <item> (da|na) <lista>"
          ],
          "response": "item_completed",
          "requires_context": {
            "domain": "todo"
          },
          "expansion_rules": {
            "lista": "[minha ]lista [de ]{name}",
            "item": "{todo_list_item:item}"
          }
        }
      ]
    },
    "HassClimateSetTemperature": {
      "data": [
        {
          "sentences": [
            "<mudar> [a] temperatura para <temperatura>"
          ]
        },
        {
          "sentences": [
            "<mudar> [a] temperatura <na_zona_piso> para <temperatura>",
            "<mudar> para <temperatura> a temperatura <na_zona_piso>"
          ]
        },
        {
          "sentences": [
            "<mudar> [a] temperatura <nome> para <temperatura>"
          ],
          "requires_context": {
            "domain": "climate"
          }
        }
      ]
    },
    "HassSetVolumeRelative": {
      "data": [
        {
          "sentences": [
            "(aumentar|subir) [o] volume"
          ],
          "slots": {
            "volume_step": "up"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "(aumentar|subir) [o] volume [em] <volume_step>"
          ],
          "expansion_rules": {
            "volume_step": "{volume_step_up:volume_step}[%| por cento]"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "(diminuir|baixar) [o] volume"
          ],
          "slots": {
            "volume_step": "down"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "(diminuir|baixar) [o] volume [em] <volume_step>"
          ],
          "expansion_rules": {
            "volume_step": "{volume_step_down:volume_step}[%| por cento]"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "(aumentar|subir) [o] volume [d(a|o)] <nome>"
          ],
          "slots": {
            "volume_step": "up"
          },
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "(<nome>;volume up) [em] <volume_step>",
            "(aumentar|subir) [o] volume ([d(a|o)] <nome> [em] <volume_step>)",
            "(aumentar|subir) <nome> volume [em] <volume_step>"
          ],
          "expansion_rules": {
            "volume_step": "{volume_step_up:volume_step}[%| por cento]"
          },
          "slots": {
            "volume_step": "up"
          },
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "(<nome>;volume down)",
            "(diminuir|baixar) [o] volume [no|na|em] <nome>",
            "(diminuir|baixar) <nome> volume",
            "<desligar> <nome> volume"
          ],
          "slots": {
            "volume_step": "down"
          },
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "(<nome>;volume down) [em] <volume_step>",
            "(diminuir|baixar) [o] volume ([d(a|o)] <nome> [em] <volume_step>)",
            "(diminuir|baixar) <nome> volume [em] <volume_step>",
            "<desligar> <nome> volume [em] <volume_step>"
          ],
          "expansion_rules": {
            "volume_step": "{volume_step_down:volume_step}[%| por cento]"
          },
          "slots": {
            "volume_step": "down"
          },
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "(aumentar|subir) [o] volume <na_zona_piso>"
          ],
          "slots": {
            "volume_step": "up"
          }
        },
        {
          "sentences": [
            "(aumentar|subir) [o] volume <na_zona_piso> [em] <volume_step>"
          ],
          "expansion_rules": {
            "volume_step": "{volume_step_up:volume_step}[%| por cento]"
          }
        },
        {
          "sentences": [
            "(diminuir|baixar) [o] volume <na_zona_piso>"
          ],
          "slots": {
            "volume_step": "down"
          }
        },
        {
          "sentences": [
            "(diminuir|baixar) [o] volume <na_zona_piso> [em] <volume_step>"
          ],
          "expansion_rules": {
            "volume_step": "{volume_step_down:volume_step}[%| por cento]"
          }
        }
      ]
    }
  },
  "responses": {
    "errors": {
      "no_intent": "Desculpe, não consegui entender seu pedido",
      "handle_error": "Um erro inesperado ocorreu ao processar o pedido",
      "no_area": "Não existe nenhuma área chamada {{ area }}",
      "no_floor": "Desculpe, não existe nenhum piso chamado {{ floor }}",
      "no_domain": "{% set translations = {\n  \"button\": \"nenhum botão\",\n  \"camera\": \"nenhuma câmera\",\n  \"input_button\": \"nenhum botão de entrada\",\n  \"alarm_control_panel\": \"nenhum alarme\",\n  \"automation\": \"nenhuma automação\",\n  \"fan\": \"nenhum ventilador\",\n  \"climate\": \"nenhum termostato\",\n  \"humidifier\": \"nenhum umidificador\",\n  \"input_boolean\": \"nenhum interruptor\",\n  \"siren\": \"nenhuma sirene\",\n  \"water_heater\": \"nenhum aquecedor de água\",\n  \"light\": \"nenhuma luz\",\n  \"switch\": \"nenhum interruptor\",\n  \"script\": \"nenhum script\",\n  \"remote\": \"nenhum controle remoto\",\n  \"lock\": \"nenhuma fechadura\",\n  \"vacuum\": \"nenhum aspirador\",\n  \"scene\": \"nenhuma cena\",\n  \"media_player\": \"nenhum reprodutor de mídia\",\n  \"lawn_mower\": \"nenhum cortador de grama\",\n  \"valve\": \"nenhuma válvula\"\n  } %}\n{% if domain in translations -%}\n  Desculpe, eu não conheço {{ translations[domain] }}\n{%- else -%}\n  Desculpe, eu não conheço nenhum domínio com este nome\n{%- endif %}\n",
      "no_domain_in_area": "{% set translations = {\n  \"button\": \"nenhum botão\",\n  \"camera\": \"nenhuma câmera\",\n  \"input_button\": \"nenhum botão de entrada\",\n  \"alarm_control_panel\": \"nenhum alarme\",\n  \"automation\": \"nenhuma automação\",\n  \"fan\": \"nenhum ventilador\",\n  \"climate\": \"nenhum termostato\",\n  \"humidifier\": \"nenhum umidificador\",\n  \"input_boolean\": \"nenhum interruptor\",\n  \"siren\": \"nenhuma sirene\",\n  \"water_heater\": \"nenhum aquecedor de água\",\n  \"light\": \"nenhuma luz\",\n  \"switch\": \"nenhum interruptor\",\n  \"script\": \"nenhum script\",\n  \"remote\": \"nenhum controle remoto\",\n  \"lock\": \"nenhuma fechadura\",\n  \"vacuum\": \"nenhum aspirador\",\n  \"scene\": \"nenhuma cena\",\n  \"media_player\": \"nenhum reprodutor de mídia\",\n  \"lawn_mower\": \"nenhum cortador de grama\",\n  \"valve\": \"nenhuma válvula\"\n  } %}\n{% if domain in translations -%}\n  Desculpe, não conheço {{ translations[domain] }} na área {{ area }}\n{%- else -%}\n  Desculpe, não conheço nenhum elemento do tipo {{ domain }} na área {{ area }}\n{%- endif %}\n",
      "no_domain_in_floor": "{% set translations = {\n  \"button\": \"nenhum botão\",\n  \"camera\": \"nenhuma câmera\",\n  \"input_button\": \"nenhum botão de entrada\",\n  \"alarm_control_panel\": \"nenhum alarme\",\n  \"automation\": \"nenhuma automação\",\n  \"fan\": \"nenhum ventilador\",\n  \"climate\": \"nenhum termostato\",\n  \"humidifier\": \"nenhum umidificador\",\n  \"input_boolean\": \"nenhum interruptor\",\n  \"siren\": \"nenhuma sirene\",\n  \"water_heater\": \"nenhum aquecedor de água\",\n  \"light\": \"nenhuma luz\",\n  \"switch\": \"nenhum interruptor\",\n  \"script\": \"nenhum script\",\n  \"remote\": \"nenhum controle remoto\",\n  \"lock\": \"nenhuma fechadura\",\n  \"vacuum\": \"nenhum aspirador\",\n  \"scene\": \"nenhuma cena\",\n  \"media_player\": \"nenhum reprodutor de mídia\",\n  \"lawn_mower\": \"nenhum cortador de grama\",\n  \"valve\": \"nenhuma válvula\"\n  } %}\n{% if domain in translations -%}\n  Desculpe, não conheço {{ translations[domain] }} no andar {{ floor }}\n{%- else -%}\n  Desculpe, não conheço nenhum elemento do tipo {{ domain }} no andar {{ floor }}\n{%- endif %}\n",
      "no_device_class": "{% set translations = {\n  \"awning\": \"nenhum toldo\",\n  \"blind\": \"nenhuma persiana\",\n  \"curtain\": \"nenhuma cortina\",\n  \"door\": \"nenhuma porta\",\n  \"garage\": \"nenhuma porta de garagem\",\n  \"gate\": \"nenhuma porta\",\n  \"shade\": \"nenhum estore\",\n  \"shutter\": \"nenhuma veneziana\",\n  \"window\": \"nenhuma janela\"\n  } %}\n{% if device_class in translations -%}\n  Desculpe, não conheço {{ translations[device_class] }}\n{%- else -%}\n  Desculpe, não conheço nenhum elemento da classe {{ device_class }}\n{%- endif %}\n",
      "no_device_class_in_area": "{% set translations = {\n  \"awning\": \"nenhum toldo\",\n  \"blind\": \"nenhuma persiana\",\n  \"curtain\": \"nenhuma cortina\",\n  \"door\": \"nenhuma porta\",\n  \"garage\": \"nenhuma porta de garagem\",\n  \"gate\": \"nenhuma porta\",\n  \"shade\": \"nenhum estore\",\n  \"shutter\": \"nenhuma veneziana\",\n  \"window\": \"nenhuma janela\"\n  } %}\n{% if device_class in translations -%}\n  Desculpe, não conheço {{ translations[device_class] }} na área {{ area }}\n{%- else -%}\n  Desculpe, não conheço nenhum elemento da classe {{ device_class }} na área {{ area }}\n{%- endif %}\n",
      "no_device_class_in_floor": "{% set translations = {\n  \"awning\": \"nenhum toldo\",\n  \"blind\": \"nenhuma persiana\",\n  \"curtain\": \"nenhuma cortina\",\n  \"door\": \"nenhuma porta\",\n  \"garage\": \"nenhuma porta de garagem\",\n  \"gate\": \"nenhuma porta\",\n  \"shade\": \"nenhum estore\",\n  \"shutter\": \"nenhuma veneziana\",\n  \"window\": \"nenhuma janela\"\n  } %}\n{% if device_class in translations -%}\n  Desculpe, não conheço {{ translations[device_class] }} no andar {{ floor }}\n{%- else -%}\n  Desculpe, não conheço nenhum elemento da classe {{ device_class }} no andar {{ floor }}\n{%- endif %}\n",
      "no_entity": "Não existe nenhum dispositivo ou entidade com o nome {{ entity }}",
      "no_entity_in_area": "Desculpe, eu não conheço nenhum dispositivo chamado {{ entity }} na área {{ area }}",
      "no_entity_in_floor": "Desculpe, não existe nenhum dispositivo chamado {{ entity }} no piso {{ floor }}.",
      "entity_wrong_state": "Desculpe, nenhum dispositivo está em {{ state  | lower }}",
      "feature_not_supported": "Desculpe, nenhum dispositivo suporta as características requeridas",
      "no_entity_exposed": "Desculpe, {{ entity }} não está exposto",
      "no_entity_in_area_exposed": "Desculpe, {{ entity }} na área {{ area }} não está exposto",
      "no_entity_in_floor_exposed": "Desculpe, {{ entity }} no piso {{ floor }} não está exposto.",
      "no_domain_exposed": "Desculpe, nenhum {{ domain }} está exposto",
      "no_domain_in_area_exposed": "Desculpe, nenhum {{ domain }} na área {{ area }} está exposto",
      "no_domain_in_floor_exposed": "Desculpe, nenhum(a) {{ domain }} no piso {{ floor }} está exposto.",
      "no_device_class_exposed": "Desculpe, nenhuma {{ device_class }} está exposta",
      "no_device_class_in_area_exposed": "Desculpe, nenhuma {{ device_class }} na área {{ area }} está exposta",
      "no_device_class_in_floor_exposed": "Desculpe, nenhum(a) {{ device_class }} no piso {{ floor }} está exposto.",
      "duplicate_entities": "Desculpe, há vários dispositivos chamados {{ entity }}",
      "duplicate_entities_in_area": "Desculpe, há vários dispositivos chamados {{ entity }} na área {{ area }}",
      "duplicate_entities_in_floor": "Desculpe, existem vários dispositivos chamados {{ entity }} no piso {{ floor }}.",
      "timer_not_found": "Desculpe, não consegui encontrar esse temporizador.",
      "multiple_timers_matched": "Desculpe, mas sou incapaz de alinhar múltiplos temporizadores.",
      "no_timer_support": "Desculpe, os temporizadores não são suportados nesse dispositivo."
    },
    "intents": {
      "HassGetState": {
        "one": "{{ state.state_with_unit }}\n",
        "one_yesno": "{% if query.matched %}\n  Sim\n{% else %}\n  Não, {{ state.state_with_unit }}\n{% endif %}\n",
        "any": "{% if query.matched %}\n  {% set match = query.matched | map(attribute=\"name\") | sort | list %}\n  {% if match | length > 4 %}\n    Sim, {{ match[:3] | join(\", \") }} e {{ (match | length - 3) }} mais\n  {%- else -%}\n    Sim,\n    {% for name in match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} e {% endif -%}\n      {{ name }}\n    {%- endfor -%}\n  {% endif %}\n{% else %}\n  Não\n{% endif %}\n",
        "all": "{% if not query.unmatched: %}\n  Sim\n{% else %}\n  {% set no_match = query.unmatched | map(attribute=\"name\") | sort | list %}\n  {% if no_match | length > 4 %}\n    Não, {{ no_match[:3] | join(\", \") }} e {{ (no_match | length - 3) }} mas não\n  {%- else -%}\n    Não,\n    {% for name in no_match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} e {% endif -%}\n      {{ name }}\n    {%- endfor %} não\n  {% endif %}\n{% endif %}\n",
        "which": "{% if not query.matched %}\n  Nenhuma\n{% else: %}\n  {% set match = query.matched | map(attribute=\"name\") | sort | list %}\n  {% if match | length > 4 %}\n    {{ match[:3] | join(\", \") }} e {{ (match | length - 3) }} mas\n  {% else %}\n    {%- for name in match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} e {% endif -%}\n      {{ name }}\n    {%- endfor -%}\n  {% endif %}\n{% endif %}\n",
        "how_many": "{{ query.matched | length }}\n",
        "where": "{{ slots.name | capitalize }} está\n{% if state.attributes.get(\"untranslated_state\") == \"not_home\" %}\n  {{ state.state }}\n{% else %}\n  em {{ state.state }}\n{% endif %}\n"
      },
      "HassTurnOff": {
        "default": "{% set translations = {\n  \"button\": \"botão\",\n  \"camera\": \"câmera\",\n  \"input_button\": \"botão\",\n  \"alarm_control_panel\": \"alarme\",\n  \"automation\": \"automação\",\n  \"fan\": \"ventilador\",\n  \"climate\": \"termostato\",\n  \"humidifier\": \"umidificador\",\n  \"input_boolean\": \"interruptor\",\n  \"siren\": \"sirene\",\n  \"water_heater\": \"aquecedor de água\",\n  \"light\": \"luz\",\n  \"switch\": \"interruptor\",\n  \"remote\": \"controle remoto\",\n  \"vacuum\": \"aspirador de pó\",\n  \"media_player\": \"reprodutor de mídia\",\n  \"lawn_mower\": \"cortador de grama\"\n} %} {{ translations.get(state.domain) }} desligado",
        "cover": "Fechamento completo",
        "cover_all": "Todas as cortinas fechadas",
        "lights": "Luzes apagadas",
        "fans": "Ventiladores desligados",
        "light_all": "Todas as luzes apagadas",
        "valve": "Fechada"
      },
      "HassClimateSetTemperature": {
        "default": "Temperatura definida para {{ slots.temperature }} graus"
      },
      "HassStartTimer": {
        "default": "Temporizador iniciado",
        "command": "Comando recebido"
      },
      "HassShoppingListAddItem": {
        "item_added": "Item {{ slots.item }} adicionado à lista de compras"
      },
      "HassTurnOn": {
        "default": "{% set translations = {\n  \"button\": \"botão\",\n  \"camera\": \"câmera\",\n  \"input_button\": \"botão\",\n  \"alarm_control_panel\": \"alarme\",\n  \"automation\": \"automação\",\n  \"fan\": \"ventilador\",\n  \"climate\": \"termostato\",\n  \"humidifier\": \"umidificador\",\n  \"input_boolean\": \"interruptor\",\n  \"siren\": \"sirene\",\n  \"water_heater\": \"aquecedor de água\",\n  \"light\": \"luz\",\n  \"switch\": \"interruptor\",\n  \"remote\": \"controle remoto\",\n  \"vacuum\": \"aspirador de pó\",\n  \"media_player\": \"reprodutor de mídia\",\n  \"lawn_mower\": \"cortador de grama\"\n} %} {{ translations.get(state.domain) }} ligado",
        "cover": "Abertura completa",
        "cover_all": "Todas as cortinas abertas",
        "lights": "Acendendo luzes",
        "light_all": "Acendendo todas as luzes",
        "fans": "Ligando ventiladores",
        "valve": "Aberta"
      },
      "HassMediaPause": {
        "default": "Pausado"
      },
      "HassGetCurrentTime": {
        "default": "{% set minute_str = '{0:02d}'.format(slots.time.minute) %}\n{% if slots.time.hour < 6 %}\n    {{ slots.time.hour }}:{{ minute_str }} da madrugada\n{% elif slots.time.hour < 12 %}\n    {{ slots.time.hour }}:{{ minute_str }} da manhã\n{% elif slots.time.hour < 18 %}\n    {{ slots.time.hour }}:{{ minute_str }} da tarde\n{% else %}\n    {{ slots.time.hour }}:{{ minute_str }} da noite\n{% endif %}\n"
      },
      "HassPauseTimer": {
        "default": "Temporizador pausado"
      },
      "HassTimerStatus": {
        "default": "{% set num_timers = slots.timers | length %}\n{% set active_timers = slots.timers | selectattr('is_active') | list %}\n{% set num_active_timers = active_timers | length %}\n{% set paused_timers = slots.timers | rejectattr('is_active') | list %}\n{% set num_paused_timers = paused_timers | length %}\n{% set next_timer = None %}\n\n{% if num_timers == 0: %}\n  Não existem temporizadores.\n{% elif num_active_timers == 0: %}\n  {# No active timers #}\n  {% if num_paused_timers == 1: %}\n    {% set next_timer = paused_timers[0] %}\n    O temporizador está pausado.\n  {% else: %}\n    {{ num_paused_timers }} temporizadores pausados.\n  {% endif %}\n{% else: %}\n  {# At least one active timer #}\n  {% if num_active_timers == 1: %}\n    {% set next_timer = active_timers[0] %}\n  {% else: %}\n    {# Get active timer that will finish soonest #}\n    {% set sorted_timers = active_timers | sort(attribute='total_seconds_left') %}\n    {% set next_timer = sorted_timers[0] %}\n    {{ num_active_timers }} temporizadores ativos.\n  {% endif %}\n\n  {% if num_paused_timers == 1: %}\n    1 temporizador pausado.\n  {% elif num_paused_timers > 0: %}\n    {{ num_paused_timers }} temporizadores pausados.\n  {% endif %}\n{% endif %}\n\n{% if next_timer: %}\n\n  {% if num_timers > 1: %}\n\n    No temporizador\n        \n    {% if next_timer.name: %}\n      {{ next_timer.name }}\n    {% elif next_timer.area: %}\n      da área {{ next_timer.area }}\n    {% endif %}\n\n    de\n\n    {# Give some extra information to disambiguate #}\n    {% if (next_timer.start_hours > 0) and (next_timer.start_minutes > 0): %}\n      {{ next_timer.start_hours }} hora{{ \"s\" if next_timer.start_hours != 1 }} e {{ next_timer.start_minutes }} minuto{{ \"s\" if next_timer.start_minutes != 1 }}\n    {% elif (next_timer.start_hours > 0): %}\n      {{ next_timer.start_hours }} hora{{ \"s\" if next_timer.start_hours != 1 }}\n    {% elif (next_timer.start_minutes > 0) and (next_timer.start_seconds > 0): %}\n      {{ next_timer.start_minutes }} minuto{{ \"s\" if next_timer.start_minutes != 1 }} e {{ next_timer.start_seconds }} segundo{{ \"s\" if next_timer.start_seconds != 1 }}\n    {% elif (next_timer.start_minutes > 0): %}\n      {{ next_timer.start_minutes }} minuto{{ \"s\" if next_timer.start_minutes != 1 }}\n    {% elif (next_timer.start_seconds > 0): %}\n      {{ next_timer.start_seconds }} segundo{{ \"s\" if next_timer.start_seconds != 1 }}\n    {% endif %}\n\n    restam\n  {% else %}\n    Restam\n  {% endif %}\n\n  {# At least one active timer #}\n  {% if (next_timer.rounded_hours_left == 1) and (next_timer.rounded_minutes_left > 0): %}\n    1 hora e {{ next_timer.rounded_minutes_left }} minutos.\n  {% elif (next_timer.rounded_hours_left == 1): %}\n    1 hora.\n  {% elif (next_timer.rounded_hours_left > 1) and (next_timer.rounded_minutes_left > 0): %}\n    {{ next_timer.rounded_hours_left }} horas e {{ next_timer.rounded_minutes_left }} minutos.\n  {% elif (next_timer.rounded_hours_left > 1): %}\n    {{ next_timer.rounded_hours_left }} horas.\n  {% elif (next_timer.rounded_minutes_left == 1) and (next_timer.rounded_seconds_left > 0): %}\n    1 minuto e {{ next_timer.rounded_seconds_left }} segundos.\n  {% elif (next_timer.rounded_minutes_left == 1): %}\n    1 minuto.\n  {% elif (next_timer.rounded_minutes_left > 1) and (next_timer.rounded_seconds_left > 0): %}\n    {{ next_timer.rounded_minutes_left }} minutos e {{ next_timer.rounded_seconds_left }} segundos.\n  {% elif (next_timer.rounded_minutes_left > 1): %}\n    {{ next_timer.rounded_minutes_left }} minutos.\n  {% elif (next_timer.rounded_seconds_left == 1): %}\n    1 segundo.\n  {% elif (next_timer.rounded_seconds_left > 1): %}\n    {{ next_timer.rounded_seconds_left }} segundos.\n  {% endif %}\n\n{% endif %}\n"
      },
      "HassListAddItem": {
        "item_added": "Item {{ slots.item }} adicionado à lista de tarefas"
      },
      "HassGetCurrentDate": {
        "default": "{% set months = {\n   1: 'janeiro',\n   2: 'fevereiro',\n   3: 'março',\n   4: 'abril',\n   5: 'maio',\n   6: 'junho',\n   7: 'julho',\n   8: 'agosto',\n   9: 'setembro',\n   10: 'outubro',\n   11: 'novembro',\n   12: 'dezembro',\n} %} {% set weekday = [ 'segunda-feira', 'terça-feira', 'quarta-feira', 'quinta-feira', 'sexta-feira', 'sábado', 'domingo' ] %} {{ weekday[slots.date.weekday()] }}, {{slots.date.day}} de {{ months[slots.date.month] }} de {{ slots.date.year }}\n"
      },
      "HassUnpauseTimer": {
        "default": "Temporizador retomado"
      },
      "HassMediaPrevious": {
        "default": "Voltando"
      },
      "HassLawnMowerStartMowing": {
        "default": "Iniciado"
      },
      "HassGetWeather": {
        "default": "{% set weather_condition = {\n  'clear': 'Céu limpo',\n  'clear-night': 'Céu limpo',\n  'cloudy': 'Céu nublado',\n  'exceptional': 'Condições excepcionalmente adversas',\n  'fog': 'Nevoeiro',\n  'hail': 'Granizo',\n  'lightning': 'Trovoada',\n  'lightning-rainy': 'Chuva e trovoada',\n  'partlycloudy': 'Céu parcialmente nublado',\n  'pouring': 'Chuva forte',\n  'rainy': 'Chuva',\n  'snowy': 'Neve',\n  'snowy-rainy': 'Chuva e neve',\n  'sunny': 'Sol',\n  'windy': 'Vento',\n  'windy-variant': 'Vento e céu nublado'\n} %}\n {{ weather_condition.get((state.state | string).lower(), \"\") }}, com temperatura de {{ state.attributes.get('temperature') }} {{ state.attributes.get('temperature_unit') }}\n"
      },
      "HassLightSet": {
        "brightness": "Brilho definido",
        "color": "Cor definida"
      },
      "HassCancelAllTimers": {
        "default": "{% if slots.canceled < 1: %} Nenhum temporizador foi cancelado. {% elif slots.canceled == 1: %} 1 temporizador foi cancelado. {% else: %} {{ slots.canceled }} temporizadores foram cancelados. {% endif %}\n",
        "area": "{% if slots.canceled < 1: %} Nenhum temporizador foi cancelado em {{ slots.area }}. {% elif slots.canceled == 1: %} 1 temporizador foi cancelado em {{ slots.area }}. {% else: %} {{ slots.canceled }} temporizadores foram cancelados em {{ slots.area }}. {% endif %}\n"
      },
      "HassLawnMowerDock": {
        "default": "Retornando para a base"
      },
      "HassBroadcast": {
        "default": "Feito"
      },
      "HassVacuumStart": {
        "default": "Iniciando limpeza"
      },
      "HassMediaUnpause": {
        "default": "Tocando"
      },
      "HassSetPosition": {
        "default": "Posição alterada",
        "cover_all": "Posição de todas as cortinas alterada"
      },
      "HassMediaNext": {
        "default": "Avançando"
      },
      "HassSetVolumeRelative": {
        "default": "Volume alterado"
      },
      "HassCancelTimer": {
        "default": "Cancelado"
      },
      "HassMediaSearchAndPlay": {
        "default": "{% if slots.media %}\nReproduzindo mídia\n{% else %}\nMídia não encontrada\n{% endif %}\n"
      },
      "HassClimateGetTemperature": {
        "default": "{% set current_temperature = state_attr(state.entity_id, 'current_temperature') %} {% set temperature = state.state if current_temperature is none else current_temperature %} {% if (temperature | float) >= -1 and (temperature | float) <= 1  %} {{ temperature }} grau {% else: %} {{ temperature }} graus {% endif %}\n"
      },
      "HassSetVolume": {
        "default": "Volume alterado"
      },
      "HassListCompleteItem": {
        "item_completed": "Item {{ slots.item }} removido da lista de tarefas"
      },
      "HassDecreaseTimer": {
        "default": "Tempo reduzido"
      },
      "HassIncreaseTimer": {
        "default": "Tempo adicionado"
      },
      "HassVacuumReturnToBase": {
        "default": "Retornando"
      },
      "HassRespond": {
        "hello": "Olá do Home Assistant.",
        "listening": "Não, eu só gravo quando você diz a palavra de ativação.",
        "data": "Seus dados são enviados para o seu servidor Home Assistant.",
        "commands": "Para saber o que você pode perguntar, visite H.A. ponto I.O. barra voice.",
        "creator": "Fui criado pela maravilhosa comunidade do Home Assistant, formada por entusiastas de todo o mundo."
      }
    }
  },
  "lists": {
    "color": {
      "values": [
        {
          "in": "branco",
          "out": "white"
        },
        {
          "in": "branca",
          "out": "white"
        },
        {
          "in": "preto",
          "out": "black"
        },
        {
          "in": "preta",
          "out": "black"
        },
        {
          "in": "vermelho",
          "out": "red"
        },
        {
          "in": "vermelha",
          "out": "red"
        },
        {
          "in": "laranja",
          "out": "orange"
        },
        {
          "in": "amarelo",
          "out": "yellow"
        },
        {
          "in": "amarela",
          "out": "yellow"
        },
        {
          "in": "verde",
          "out": "green"
        },
        {
          "in": "azul",
          "out": "blue"
        },
        {
          "in": "roxo",
          "out": "purple"
        },
        {
          "in": "roxa",
          "out": "purple"
        },
        {
          "in": "castanho",
          "out": "brown"
        },
        {
          "in": "castanha",
          "out": "brown"
        },
        {
          "in": "marrom",
          "out": "brown"
        }
      ]
    },
    "brightness": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "temperature": {
      "range": {
        "type": "temperature",
        "from": 0,
        "to": 100,
        "fractions": "halves"
      }
    },
    "brightness_level": {
      "values": [
        {
          "in": "(máxim(o|a) | forte | alt(o|a))",
          "out": 100
        },
        {
          "in": "(mínim(o|a) | frac(o|a) | baix(o|a))",
          "out": 1
        }
      ]
    },
    "on_off_states": {
      "values": [
        {
          "in": "(ligado[s]|ligada[s]|acesa[s]|aceso[s])",
          "out": "on"
        },
        {
          "in": "(desligado[s]|desligada[s]|apagada[s])",
          "out": "off"
        }
      ]
    },
    "on_off_domains": {
      "values": [
        {
          "in": "(luz[es]|lâmpada[s])",
          "out": "light"
        },
        {
          "in": "ventilador[es]",
          "out": "fan"
        },
        {
          "in": "interruptor[es]",
          "out": "switch"
        }
      ]
    },
    "cover_states": {
      "values": [
        {
          "in": "(aberto[s]|aberta[s])",
          "out": "open"
        },
        {
          "in": "(fechado[s]|fechada[s])",
          "out": "closed"
        },
        {
          "in": "abrindo",
          "out": "opening"
        },
        {
          "in": "fechando",
          "out": "closing"
        }
      ]
    },
    "cover_classes": {
      "values": [
        {
          "in": "toldo[s]",
          "out": "awning"
        },
        {
          "in": "persiana[s]",
          "out": "blind"
        },
        {
          "in": "<cortina>",
          "out": "curtain"
        },
        {
          "in": "porta[s]",
          "out": "door"
        },
        {
          "in": "(porta[s]|portão|portões) da garagem",
          "out": "garage"
        },
        {
          "in": "(portão|portões|porteira[s])",
          "out": "gate"
        },
        {
          "in": "shade[s]",
          "out": "shade"
        },
        {
          "in": "shutter[s]",
          "out": "shutter"
        },
        {
          "in": "janela[s]",
          "out": "window"
        }
      ]
    },
    "fan_speed": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "lock_states": {
      "values": [
        {
          "in": "trancad(a|o)",
          "out": "locked"
        },
        {
          "in": "destrancad(a|o)",
          "out": "unlocked"
        }
      ]
    },
    "media_class": {
      "values": [
        {
          "in": "artista",
          "out": "artist"
        },
        {
          "in": "álbum",
          "out": "album"
        },
        {
          "in": "(música|faixa|canção)",
          "out": "track"
        },
        {
          "in": "(playlist|lista de reprodução)",
          "out": "playlist"
        },
        {
          "in": "podcast",
          "out": "podcast"
        },
        {
          "in": "filme",
          "out": "movie"
        },
        {
          "in": "(show|série|programa)",
          "out": "tv_show"
        }
      ]
    },
    "search_query": {
      "wildcard": true
    },
    "shopping_list_item": {
      "wildcard": true
    },
    "todo_list_item": {
      "wildcard": true
    },
    "position": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "volume": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "volume_step_up": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "volume_step_down": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100,
        "multiplier": -1
      }
    },
    "presence_states": {
      "values": [
        {
          "in": "casa",
          "out": "home"
        },
        {
          "in": "fora_de_casa",
          "out": "not_home"
        }
      ]
    },
    "timer_seconds": {
      "range": {
        "from": 1,
        "to": 100
      }
    },
    "timer_words_seconds": {
      "values": [
        {
          "in": "um|uma",
          "out": 1
        }
      ]
    },
    "timer_minutes": {
      "range": {
        "from": 1,
        "to": 100
      }
    },
    "timer_words_minutes": {
      "values": [
        {
          "in": "um|uma",
          "out": 1
        }
      ]
    },
    "timer_hours": {
      "range": {
        "from": 1,
        "to": 100
      }
    },
    "timer_words_hours": {
      "values": [
        {
          "in": "um|uma",
          "out": 1
        }
      ]
    },
    "timer_half": {
      "values": [
        {
          "in": "meia",
          "out": 30
        }
      ]
    },
    "timer_name": {
      "wildcard": true
    },
    "timer_command": {
      "wildcard": true
    },
    "zone": {
      "wildcard": true
    },
    "message": {
      "wildcard": true
    }
  },
  "expansion_rules": {
    "abrir": "(abra|abre|abrir)",
    "adicionar": "(adicione|adiciona[r])",
    "alarme": "(alarme[s]|cronômetro[s]|timer[s]|temporizador[es])",
    "algum": "(algum|alguma|alguns|algumas)",
    "artigos": "[(o[s]|a[s]|da[s]|do[s]|de)]",
    "brilho": "{brightness}[%| porcento]",
    "cade": "(onde está [a|o]|cadê [a|o])",
    "cancelar": "(cancele|cancela[r]|para[r]|pare)",
    "casa": "(casa|apartamento) [tod(a|o)]",
    "colocar": "(coloque|coloca[r]|pôr|põe)",
    "completar": "(complete|completa[r])",
    "cortina": "(cortina[s]|curtinha[s]|persiana[s])",
    "deletar": "(delete|deleta[r])",
    "desligar": "(desliga|desligue|apaga|apague|desligar|apagar|desativa[r]|desative)",
    "esta": "(está|estão|existe|existem)",
    "falta": "(falta|resta)",
    "fechar": "(fecha|feche|fechar)",
    "iniciar": "(comece|começa[r]|inicia[r])",
    "juntar": "(junte|junta[r])",
    "ligar": "(liga[r]|ligue|acende[r]|acenda|ativa[r]|ative)",
    "mudar": "(põe|ponha|muda|mude|altera|altere|coloca|deixa|pôr|mudar|alterar|colocar|deixar|definir|defina|setar|ajusta[r]|ajuste)",
    "nome": "[<artigos>] {name}",
    "pausar": "(pausa[r]|pause)",
    "por": "(pôr|põe|ponha|definir|defina|setar|ajusta[r]|ajuste)",
    "position": "{position} [%|por cento]",
    "qual": "(que|qual|qual é|quais)",
    "remover": "(remova|remove[r])",
    "retirar": "(retire|retira[r])",
    "retornar": "(retorne|retorna[r]|volte|volta[r]|traga|traga[r]|trazer|voltar)",
    "temperatura": "{temperature}[([ ]°| graus)]",
    "terminar": "(termine|termina[r])",
    "todas": "(todos|todas)",
    "tornar": "(tornar|torna[m]|torne[m])",
    "ventilador": "(ventilador[es]|vento)",
    "volume": "{volume:volume_level}[%|por cento]",
    "fan_speed": "{fan_speed:percentage}[%| porcento]",
    "piso": "[(piso|andar)] [de] {floor}",
    "na_zona": "([no|na|da|do]) {area}",
    "no_piso": "([no|na|da|do]) <piso>",
    "zona": "[(o|os|a|as)] {area}",
    "zona_piso": "(<zona>|<piso>)",
    "na_zona_piso": "[em|d(a|o|os)|n(o|a)] <zona_piso>",
    "temporizador": "[(no|do|o)] [meu ]<alarme>",
    "temporizadores": "[(nos|dos|os) ][meus ]<alarme>",
    "nb_seconds": "({timer_seconds:seconds}|{timer_words_seconds:seconds})",
    "nb_minutes": "({timer_minutes:minutes}|{timer_words_minutes:minutes})",
    "nb_hours": "({timer_hours:hours}|{timer_words_hours:hours})",
    "nb_start_seconds": "({timer_seconds:start_seconds}|{timer_words_seconds:start_seconds})",
    "nb_start_minutes": "({timer_minutes:start_minutes}|{timer_words_minutes:start_minutes})",
    "nb_start_hours": "({timer_hours:start_hours}|{timer_words_hours:start_hours})",
    "timer_set": "<alarme>",
    "timer_cancel": "(<desligar>|<cancelar>)",
    "timer_duration_seconds": "<nb_seconds> segundo[s]",
    "timer_duration_minutes": "<nb_minutes> minuto[s][ [e ]<timer_duration_seconds>]",
    "timer_duration_hours": "<nb_hours> hora[s][ [e ]<timer_duration_minutes>]",
    "timer_duration": "(<timer_duration_seconds>|<timer_duration_minutes>|<timer_duration_hours>)",
    "timer_start_seconds": "<nb_start_seconds> segundo[s]",
    "timer_start_minutes": "<nb_start_minutes> minuto[s][ [e ]<timer_start_seconds>]",
    "timer_start_hours": "<nb_start_hours> hora[s][ [e ]<timer_start_minutes>]",
    "timer_start": "(<timer_start_seconds>|<timer_start_minutes>|<timer_start_hours>)"
  },
  "skip_words": [
    "porfavor",
    "por favor",
    "por obsequio",
    "por obséquio",
    "por gentileza",
    "pode"
  ]
}