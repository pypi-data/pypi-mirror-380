{
  "language": "nl",
  "intents": {
    "HassMediaSearchAndPlay": {
      "data": [
        {
          "sentences": [
            "speel [de|het] ({media_class};{search_query}) [af]",
            "(luister|kijk) naar [de|het] ({media_class};{search_query})",
            "speel {search_query} [af]",
            "(luister|kijk) naar {search_query}"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "speel [de|het] ({media_class};{search_query}) <in> <area> [af]",
            "speel [de|het] ({media_class};{search_query}) af <in> <area>",
            "(luister|kijk) (naar [de|het] ({media_class};{search_query});<in> <area>)",
            "speel {search_query} <in> <area> [af]",
            "speel {search_query} af <in> <area>",
            "(luister|kijk) (naar {search_query};<in> <area>)"
          ]
        },
        {
          "sentences": [
            "speel [de|het] ({media_class};{search_query}) op <name_area> [af]",
            "(luister|kijk) (naar [de|het] ({media_class};{search_query});op <name_area>)",
            "speel [de|het] ({media_class};{search_query}) op <name_area> [af]",
            "speel [de|het] ({media_class};{search_query}) af op <name_area>",
            "(luister|kijk) (naar [de|het] ({media_class};{search_query});op <name_area>)",
            "speel {search_query} op <name_area> [af]",
            "(luister|kijk) (naar {search_query};op <name_area>)",
            "speel {search_query} op <name_area> [af]",
            "speel {search_query} af op <name_area>",
            "(luister|kijk) (naar {search_query};op <name_area>)"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        }
      ]
    },
    "HassTurnOff": {
      "data": [
        {
          "sentences": [
            "[<change>] <name_type> [<to>] uit [<in> <area>]",
            "[<change>] <name_area> [<to>] uit",
            "[<would>] <name_type> (uit[ ](zetten|doen)|uit[ ]schakelen|doen) [<in> <area>]",
            "[<would>] <name_area> (uit[ ](zetten|doen)|uit[ ]schakelen|doen)"
          ],
          "expansion_rules": {
            "name_type": "<name>"
          },
          "excludes_context": {
            "domain": [
              "binary_sensor",
              "cover",
              "lock",
              "scene",
              "script",
              "sensor",
              "valve",
              "vacuum"
            ]
          }
        },
        {
          "sentences": [
            "[<change>] <name_type> [<to>] uit [<in> <area>]",
            "[<change>] <name_area> [<to>] uit",
            "[<would>] <name_type> (uit[ ](zetten|doen)|uit[ ]schakelen|doen) [<in> <area>]",
            "[<would>] <name_area> (uit[ ](zetten|doen)|uit[ ]schakelen|doen)"
          ],
          "expansion_rules": {
            "name_type": "<name>[ ]<light>",
            "name_area": "(\n  <name_type> <in> <area>\n  |<in> <area> <name_type>\n  |<area>[ ]<name_type>\n)\n"
          },
          "requires_context": {
            "domain": [
              "light"
            ]
          }
        },
        {
          "sentences": [
            "[<change>] <name_type> [<to>] uit [<in> <area>]",
            "[<change>] <name_area> [<to>] uit",
            "[<would>] <name_type> (uit[ ](zetten|doen)|uit[ ]schakelen|doen) [<in> <area>]",
            "[<would>] <name_area> (uit[ ](zetten|doen)|uit[ ]schakelen|doen)"
          ],
          "expansion_rules": {
            "name_type": "<name>[ ]<switch>",
            "name_area": "(\n  <name_type> <in> <area>\n  |<in> <area> <name_type>\n  |<area>[ ]<name_type>\n)\n"
          },
          "requires_context": {
            "domain": [
              "switch"
            ]
          }
        },
        {
          "sentences": [
            "[<change>] <name_type> [<to>] uit [<in> <area>]",
            "[<change>] <name_area> [<to>] uit",
            "[<would>] <name_type> (uit[ ](zetten|doen)|uit[ ]schakelen|doen) [<in> <area>]",
            "[<would>] <name_area> (uit[ ](zetten|doen)|uit[ ]schakelen|doen)"
          ],
          "expansion_rules": {
            "name_type": "<name>[ ]<fan>",
            "name_area": "(\n  <name_type> <in> <area>\n  |<in> <area> <name_type>\n  |<area>[ ]<name_type>\n)\n"
          },
          "requires_context": {
            "domain": [
              "fan"
            ]
          }
        },
        {
          "sentences": [
            "[<change>] [<all>] <light> ([<to>] uit;<in> (<area>|<floor>))",
            "[<change>] [<all>] (<area>|<floor>)[ ]<light> [<to>] uit",
            "[<change>] <in> (<area>|<floor>) [<all>] <light> [<to>] uit",
            "Schakel [<all>] <light> ([<to>] uit;<in> (<area>|<floor>))",
            "Schakel [<all>] (<area>|<floor>)[ ]<light> [<to>] uit",
            "Schakel <in> (<area>|<floor>) [<all>] <light> [<to>] uit",
            "[<would>] [<all>] <light> (<in> (<area>|<floor>);uit[ ](zetten|doen|schakelen))",
            "[<would>] [<all>] (<area>|<floor>)[ ]<light> [<to>] uit[ ](zetten|doen|schakelen)",
            "[<would>] [<all>] <light> [<to>] [<to>] uit[ ](zetten|doen|schakelen) <in> (<area>|<floor>)"
          ],
          "response": "lights_area",
          "slots": {
            "domain": "light"
          }
        },
        {
          "sentences": [
            "[<change>] [<here>] <light> [<to>] uit",
            "[<change>] (<here>;[<all>] <light>) [<to>] uit",
            "[<change>] [<all>] <light> [<to>] uit in deze (ruimte|kamer)",
            "(<here>;[<all>] <light>) [<to>] uit[ ](zetten|doen|schakelen)",
            "schakel [<here>] <light> [<to>] uit",
            "schakel (<here>;[<all>] <light>) [<to>] uit",
            "schakel [<all>] <light> [<to>] uit in deze (ruimte|kamer)",
            "[<would>] [<all>] <light> [<to>] (uit[ ](zetten|doen|schakelen);in deze (ruimte|kamer))",
            "[<would>] (<here>;[<all>] <light>) uit[ ](zetten|doen|schakelen)",
            "[<would>] [<all>] <light> uit[ ](zetten|doen|schakelen) in deze (ruimte|kamer)"
          ],
          "response": "lights_area",
          "slots": {
            "domain": "light"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "[<change>] ((overal|<all>) <light>|<light> overal) uit",
            "[<would>] ((overal|<all>) <light>|<light> overal) uit[ ](zetten|doen|schakelen)"
          ],
          "response": "light_all",
          "slots": {
            "domain": "light",
            "name": "all"
          }
        },
        {
          "sentences": [
            "sluit <name>[[ ]<cover>]",
            "[<would>] <name>[[ ]<cover>] (sluiten|dicht doen)",
            "[<change>] <name>[[ ]<cover>] <closed>"
          ],
          "response": "cover",
          "requires_context": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "sluit [de] garage[ ][deur]",
            "[<would>] [de] garage[ ][deur] (sluiten|dicht doen)",
            "[<change>] [de] garage[ ][deur] <closed>"
          ],
          "response": "cover",
          "slots": {
            "device_class": "garage",
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "sluit (<name>[[ ]<cover>];[<in>] (<area>|<floor>))",
            "[<would>] (<name>[[ ]<cover>];[<in>] (<area>|<floor>)) (sluiten|dicht doen)",
            "[<change>] [<in>] (<area>|<floor>) <name>[[ ]<cover>] <closed>",
            "[<change>] <name>[[ ]<cover>] (<closed>;[<in>] (<area>|<floor>))"
          ],
          "response": "cover",
          "requires_context": {
            "device_class": [
              "blind",
              "curtain",
              "shutter",
              "shade"
            ],
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "sluit ([de|het] <curtain>;[<in>] (<area>|<floor>))",
            "[<would>] ([de|het] <curtain>;[<in>] (<area>|<floor>)) (sluiten|dicht doen)",
            "[<would>] (<area>|<floor>)[ ]<curtain> (sluiten|dicht doen)",
            "[<change>] [<in>] (<area>|<floor>) [de|het] <curtain> <closed>",
            "[<change>] [de|het] <curtain> (<closed>;[<in>] (<area>|<floor>))"
          ],
          "response": "cover",
          "slots": {
            "device_class": "curtain",
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "<close_command> [de|het] (<blind>|<shutter>|<shade>) [<in>] (<area>|<floor>) [<close_command_suffix>]",
            "[<would>] ([de|het] (<blind>|<shutter>|<shade>);[<in>] (<area>|<floor>)) <close_action>",
            "[<would>] (<area>|<floor>)[ ](<blind>|<shutter>|<shade>) <close_action>",
            "[<close_command>] [<in>] (<area>|<floor>) [de|het] (<blind>|<shutter>|<shade>) [<close_command_suffix>]",
            "[<close_command>] [de|het] (<blind>|<shutter>|<shade>) (<close_command_suffix>;[<in>] (<area>|<floor>))",
            "[<change>] [<in>] (<area>|<floor>) [de|het] (<blind>|<shutter>|<shade>) <closed>",
            "[<change>] [de|het] (<blind>|<shutter>|<shade>) (<closed>;[<in>] (<area>|<floor>))"
          ],
          "response": "cover",
          "slots": {
            "device_class": [
              "blind",
              "shutter",
              "shade"
            ],
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "sluit [de|het] <curtain>",
            "sluit ([de|het] <curtain>;<here>)",
            "[<would>] [de|het] <curtain> (sluiten|dicht doen)",
            "[<would>] ([de|het] <curtain>;<here>) (sluiten|dicht doen)",
            "[<change>] [de|het] <curtain> [<here>] <closed>",
            "[<change>] ([de|het] <curtain> <closed>;<here>)"
          ],
          "response": "cover",
          "slots": {
            "device_class": "curtain",
            "domain": "cover"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "<close_command> [de|het] (<blind>|<shutter>|<shade>) [<close_command_suffix>]",
            "<close_command> ([de|het] (<blind>|<shutter>|<shade>);<here>) [<close_command_suffix>]",
            "[<would>] [de|het] (<blind>|<shutter>|<shade>) <close_action>",
            "[<would>] ([de|het] (<blind>|<shutter>|<shade>);<here>) <close_action>",
            "[<close_command>] [de|het] (<blind>|<shutter>|<shade>) [<here>] [<close_command_suffix>]",
            "[<close_command>] ([de|het] (<blind>|<shutter>|<shade>) [<close_command_suffix>];<here>)",
            "[<change>] [de|het] (<blind>|<shutter>|<shade>) [<here>] <closed>",
            "[<change>] ([de|het] (<blind>|<shutter>|<shade>) <closed>;<here>)"
          ],
          "response": "cover",
          "slots": {
            "device_class": [
              "blind",
              "shutter",
              "shade"
            ],
            "domain": "cover"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "[<change>] [<all>] <fan> ([<to>] uit;[<in>] (<area>|<floor>))",
            "[<change>] [<all>] <fan> ([<in>] (<area>|<floor>);[<to>] uit)",
            "[<change>] [(<all>|<in>)] (<area>|<floor>)[ ]<fan> [<to>] uit",
            "[<would>] [<all>] (<area>|<floor>)[ ]<fan> (uit[ ](zetten|doen)|uitschakelen)",
            "[<would>] ([<in>] (<area>|<floor>);[<all>] <fan>) (uit[ ](zetten|doen)|uitschakelen)",
            "[<would>] [<all>] <fan> [<in>] (<area>|<floor>) (uit[ ](zetten|doen)|uitschakelen)"
          ],
          "response": "fans_area",
          "slots": {
            "domain": "fan"
          }
        },
        {
          "sentences": [
            "[<change>] ((overal|<all>) <fan>|<fan> overal) uit",
            "[<would>] ((overal|<all>) <fan>|<fan> overal) (uit[ ](zetten|doen)|uitschakelen)"
          ],
          "response": "fan_all",
          "slots": {
            "domain": "fan"
          }
        },
        {
          "sentences": [
            "[<change>] <fan> [<to>] uit",
            "[<change>] (<here>;[alle] <fan>) [<to>] uit",
            "[<change>] [alle] <fan> [<to>] uit <here>",
            "[<would>] [alle] <fan> (<here>;(uit[ ](zetten|doen)|uitschakelen))",
            "[<would>] <here> [alle] <fan> (uit[ ](zetten|doen)|uitschakelen)",
            "[<would>] <fan> (uit[ ](zetten|doen)|uitschakelen)"
          ],
          "response": "fans_area",
          "slots": {
            "domain": "fan"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "ontgrendel (<name_area>|<lock_name_area>)",
            "open <lock_name_area>",
            "[<change>] <lock_name> open <in> <area>",
            "[<change>] <lock_name_area> open",
            "[<change>] (<name>|<lock_name>) <unlocked> <in> <area>",
            "[<change>] (<name_area>|<lock_name_area>) <unlocked>",
            "[<would>] (<name_area>|<lock_name_area>) <unlocked> (doen|zetten|draaien)",
            "[<would>] (<name>|<lock_name>) <unlocked> (doen|zetten|draaien) <in> <area>",
            "[<would>] (<name>|<lock_name>) ontgrendelen <in> <area>",
            "[<would>] (<name_area>|<lock_name_area>) ontgrendelen",
            "[<would>] <lock_name> (open[ ](doen|zetten|draaien)|openen) <in> <area>",
            "[<would>] <lock_name_area> (open[ ](doen|zetten|draaien)|openen)"
          ],
          "requires_context": {
            "domain": "lock"
          },
          "response": "lock"
        },
        {
          "sentences": [
            "[<change>] <all_area_door_lock> <unlocked>",
            "[<change>] [<all>] (<lock>|deur[en]) <unlocked> <in> <area>",
            "[<change>] <all_area_lock> open",
            "[<change>] [<all>] <lock> open <in> <area>",
            "open <all_area_lock>",
            "open [<all>] <lock> <in> <area>",
            "ontgrendel <all_area_door_lock>",
            "ontgrendel [<all>] (<lock>|deur[en]) <in> <area>",
            "[<would>] <all_area_door_lock> ontgrendelen",
            "[<would>] [<all>] (<lock>|deur[en]) ontgrendelen <in> <area>",
            "[<would>] <all_area_lock> (open[ ](doen|zetten|draaien)|openen)",
            "[<would>] [<all>] <lock> (open[ ](doen|zetten|draaien)|openen) <in> <area>",
            "[<would>] <all_area_door_lock> <unlocked> (doen|zetten|draaien)",
            "[<would>] [<all>] (<lock>|deur[en]) <unlocked> (doen|zetten|draaien) <in> <area>"
          ],
          "expansion_rules": {
            "all_area_lock": "(\n  <in> <area> <lock>\n |(<all>;<in> <area>) <lock>\n |[<all>] <lock> <in> <area>\n |[<all>] <area>[ ]<lock>\n)\n",
            "all_area_door_lock": "(\n  <in> <area> (<lock>|deur[en])\n |(<all>;<in> <area>) (<lock>|deur[en])\n |[<all>] (<lock>|deur[en]) <in> <area>\n |[<all>] <area>[ ](<lock>|deur[en])\n)\n"
          },
          "response": "lock_area",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "[draai|doe|zet] <name> dicht",
            "sluit <name>",
            "[<would>] <name> (sluiten|dicht (draaien|doen|zetten))"
          ],
          "requires_context": {
            "domain": "valve"
          },
          "slots": {
            "domain": "valve"
          },
          "response": "valve"
        }
      ]
    },
    "HassGetState": {
      "data": [
        {
          "sentences": [
            "waar [is|zijn] <name>",
            "waar bevind[t|en] <name> zich"
          ],
          "response": "where",
          "requires_context": {
            "domain": "person"
          },
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "[is|zijn] <name> thuis"
          ],
          "response": "one_zone",
          "requires_context": {
            "domain": "person"
          },
          "slots": {
            "domain": "person",
            "state": "home"
          }
        },
        {
          "sentences": [
            "[is|zijn] <name> (niet thuis|weg)"
          ],
          "response": "one_zone",
          "requires_context": {
            "domain": "person"
          },
          "slots": {
            "domain": "person",
            "state": "not_home"
          }
        },
        {
          "sentences": [
            "[is|zijn] <name> [<in>] [de|het] [zone] {zone:state}"
          ],
          "response": "one_zone",
          "requires_context": {
            "domain": "person"
          },
          "excludes_context": {
            "state": "home"
          },
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "is [er] iemand thuis"
          ],
          "response": "any",
          "slots": {
            "domain": "person",
            "state": "home"
          }
        },
        {
          "sentences": [
            "is [er] iemand (niet thuis|weg)"
          ],
          "response": "any",
          "slots": {
            "domain": "person",
            "state": "not_home"
          }
        },
        {
          "sentences": [
            "is [er] iemand [<in>] [de|het] {zone:state}"
          ],
          "response": "any",
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "is iedereen thuis"
          ],
          "response": "all",
          "slots": {
            "domain": "person",
            "state": "home"
          }
        },
        {
          "sentences": [
            "is iedereen (niet thuis|weg)"
          ],
          "response": "all",
          "slots": {
            "domain": "person",
            "state": "not_home"
          }
        },
        {
          "sentences": [
            "is iedereen [<in>] [de|het] {zone:state}"
          ],
          "response": "all",
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "wie (is|zijn) [er] [allemaal] thuis"
          ],
          "response": "which",
          "slots": {
            "domain": "person",
            "state": "home"
          }
        },
        {
          "sentences": [
            "wie (is|zijn) [er] [allemaal] (niet thuis|weg)"
          ],
          "response": "which",
          "slots": {
            "domain": "person",
            "state": "not_home"
          }
        },
        {
          "sentences": [
            "wie (is|zijn) [er] [allemaal] [<in>] [de|het] {zone:state}"
          ],
          "response": "which",
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "hoe[ ]veel mensen zijn [er] thuis"
          ],
          "response": "how_many",
          "slots": {
            "domain": "person",
            "state": "home"
          }
        },
        {
          "sentences": [
            "hoe[ ]veel mensen zijn [er] (niet thuis|weg)"
          ],
          "response": "how_many",
          "slots": {
            "domain": "person",
            "state": "not_home"
          }
        },
        {
          "sentences": [
            "hoe[ ]veel mensen zijn [er] [<in>] [de|het] {zone:state}"
          ],
          "response": "how_many",
          "slots": {
            "domain": "person"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "apparent_power"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "apparent_power"
          },
          "expansion_rules": {
            "class": "schijnbaar vermogen"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "aqi"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "aqi"
          },
          "expansion_rules": {
            "class": "(AQI|lucht[ ]kwaliteit [index])"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "atmospheric_pressure"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "atmospheric_pressure"
          },
          "expansion_rules": {
            "class": "(atmosferische|lucht)[ ]druk"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>",
            "hoe[ ]veel batterij (heeft <name> [nog] [over]|is [er] [nog] [over] in <name>)"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "battery"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "battery"
          },
          "expansion_rules": {
            "class": "[resterend[e]] batterij[[ ]niveau]"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "carbon_dioxide"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "carbon_dioxide"
          },
          "expansion_rules": {
            "class": "[concentratie] (koolstofdioxide|CO2)|(koolstofdioxide|CO2) (niveau|concentratie)"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "carbon_monoxide"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "carbon_monoxide"
          },
          "expansion_rules": {
            "class": "[concentratie] (koolstofmonoxide|CO)|(koolstofmonoxide|CO) (niveau|concentratie)"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "current"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "current"
          },
          "expansion_rules": {
            "class": "[hoeveelheid] [electrische] spanning"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "data_rate"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "data_rate"
          },
          "expansion_rules": {
            "class": "[(download|upload|data)] snelheid"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "data_size"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "data_size"
          },
          "expansion_rules": {
            "class": "([bestand[s]|data] grootte|hoeveelheid [van de] data)"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>",
            "wanneer ((is|was) [de|het] <name>|zal [de|het] <name> zijn|is het [de|het] <name> geweest)"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "date"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "date"
          },
          "expansion_rules": {
            "class": "[kalender] datum"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>",
            "hoe ver is <name> [weg]"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "distance"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "distance"
          },
          "expansion_rules": {
            "class": "afstand"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>",
            "hoe lang duurt <name> nog"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "duration"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "duration"
          },
          "expansion_rules": {
            "class": "duur"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "energy"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "energy"
          },
          "expansion_rules": {
            "class": "[hoeveelheid] energie"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "energy_storage"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "energy_storage"
          },
          "expansion_rules": {
            "class": "[[totale] hoeveelheid [van]] [opgeslagen] energie"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "frequency"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "frequency"
          },
          "expansion_rules": {
            "class": "frequentie"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "gas"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "gas"
          },
          "expansion_rules": {
            "class": "[hoeveelheid] gas[ ][volume]"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "humidity"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "humidity"
          },
          "expansion_rules": {
            "class": "[(lucht|atmospherische|relatieve)][ ]vochtigheid"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "illuminance"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "illuminance"
          },
          "expansion_rules": {
            "class": "([hoeveelheid] (verlichting|licht)|(licht|helderheid[s])[ ][niveau|sterkte])"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "irradiance"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "irradiance"
          },
          "expansion_rules": {
            "class": "([hoeveelheid] (irradiantie|bestraling[ssterkte])|irradiantie niveau)"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "moisture"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "moisture"
          },
          "expansion_rules": {
            "class": "([relatieve] vocht[[ ]percentage]|(percentage|hoeveelheid) water)"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "monetary"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "monetary"
          },
          "expansion_rules": {
            "class": "[hoeveelheid] (geld|cash|kosten|opbrengst|doekoe)"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "nitrogen_dioxide"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "nitrogen_dioxide"
          },
          "expansion_rules": {
            "class": "[hoeveelheid] (stikstof[ ]dioxide|NO2)[ ](niveau|concentratie)"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "nitrogen_monoxide"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "nitrogen_monoxide"
          },
          "expansion_rules": {
            "class": "[hoeveelheid] (stikstof[ ]monoxide|NO)[ ](niveau|concentratie)"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "nitrous_oxide"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "nitrous_oxide"
          },
          "expansion_rules": {
            "class": "[hoeveelheid] (distikstofmonoxide|N2O)[ ](niveau|concentratie)"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "ozone"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "ozone"
          },
          "expansion_rules": {
            "class": "hoeveelheid (ozon|O3)|(ozon|O3) niveau"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "pm1"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "pm1"
          },
          "expansion_rules": {
            "class_type": "PM1 [deeltjes]|[PM1] fijnstof",
            "class": "((hoeveelheid|concentratie) [van] <class_type>|<class_type> [niveau|concentratie])"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "pm25"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "pm25"
          },
          "expansion_rules": {
            "class_type": "PM2.5 [deeltjes]|[PM2.5] fijnstof",
            "class": "((hoeveelheid|concentratie) [van] <class_type>|<class_type> [niveau|concentratie])"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "pm10"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "pm10"
          },
          "expansion_rules": {
            "class_type": "PM10 [deeltjes]|[PM10] fijnstof",
            "class": "((hoeveelheid|concentratie) [van] <class_type>|<class_type> [niveau|concentratie])"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "power_factor"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "power_factor"
          },
          "expansion_rules": {
            "class": "arbeidsfactor|vermogensfactor"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "power"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "power"
          },
          "expansion_rules": {
            "class": "vermogen"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "precipitation"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "precipitation"
          },
          "expansion_rules": {
            "class": "[hoeveelheid] (neerslag|regen|sneeuw[val]) [niveau|hoeveelheid]"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "precipitation_intensity"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "precipitation_intensity"
          },
          "expansion_rules": {
            "class": "(neerslag|regen|sneeuw[val])[ ]intensiteit"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "pressure"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "pressure"
          },
          "expansion_rules": {
            "class": "druk"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "reactive_power"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "reactive_power"
          },
          "expansion_rules": {
            "class": "reactief vermogen|blindvermogen|blindstroom"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "signal_strength"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "signal_strength"
          },
          "expansion_rules": {
            "class": "signaal[ ]sterkte"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "sound_pressure"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "sound_pressure"
          },
          "expansion_rules": {
            "class": "(geluid[s]|akoestische)[ ]druk"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "speed"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "speed"
          },
          "expansion_rules": {
            "class": "snelheid"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "sulphur_dioxide"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "sulphur_dioxide"
          },
          "expansion_rules": {
            "class": "(zwavel[ ]dioxide|SO2) (niveau|concentratie)"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "temperature"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "temperature"
          },
          "expansion_rules": {
            "class": "temperatuur"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "volatile_organic_compounds"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "volatile_organic_compounds"
          },
          "expansion_rules": {
            "class": "[concentratie [van]] (VOC[s]|[vluchtige] organische stof[fen])"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "volatile_organic_compounds_parts"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "volatile_organic_compounds_parts"
          },
          "expansion_rules": {
            "class": "[concentratie [van]] (VOC[s]|[vluchtige] organische [stof[ ]]deeltjes)"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "voltage"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "voltage"
          },
          "expansion_rules": {
            "class": "voltage"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "volume"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "volume"
          },
          "expansion_rules": {
            "class": "volume|inhoud"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "volume_storage"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "volume_storage"
          },
          "expansion_rules": {
            "class": "[totale|totaal] [hoeveelheid] [opgeslagen] volume"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "water"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "water"
          },
          "expansion_rules": {
            "class": "[totale] ([hoeveelheid [van]] [geconsumeerd] water|water[ ]consumptie)"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "weight"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "weight"
          },
          "expansion_rules": {
            "class": "(gewicht|massa)"
          }
        },
        {
          "sentences": [
            "<what_is_the_class_of_name>"
          ],
          "response": "one",
          "requires_context": {
            "domain": "sensor",
            "device_class": "wind_speed"
          },
          "slots": {
            "domain": "sensor",
            "device_class": "wind_speed"
          },
          "expansion_rules": {
            "class": "[wind[ ]]snelheid"
          }
        },
        {
          "sentences": [
            "<is> [[<in>] <area>] [de [huidige] [(status|staat|stand) van]] <name> [[<in>] <area>] {lock_states:state} [[<in>] <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "lock"
          },
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "<is> er [[<in>] <area>] <lock> [[<in>] <area>] {lock_states:state} [[<in>] <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "<is> [[<in>] <area>] [<all>] <lock> [[<in>] <area>] {lock_states:state} [[<in>] <area>]",
            "<is> [[<in>] <area>] [<all>] [de] deur[en] [[<in>] <area>] {door_lock_states:state} [[<in>] <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "Welk[e] <lock> [[<in>] <area>] <is> [[<in>] <area>] {lock_states:state} [[<in>] <area>]",
            "Welk[e] deur[en] [[<in>] <area>] <is> [[<in>] <area>] {door_lock_states:state} [[<in>] <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "Hoe[ ]veel <lock> <is> [er] [[<in>] <area>] {lock_states:state} [[<in>] <area>]",
            "Hoe[ ]veel deur[en] <is> [er] [[<in>] <area>] {door_lock_states:state} [[<in>] <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "Wat is [[de] [huidige] <state> [van]] [<area>[ ]]<name_type>[ ][<state>]",
            "Wat is ([<in>] <area>;[[de] [huidige] <state> [van]] <name_type>[ ][<state>])",
            "[de] [huidige] <state> [van] [<area>][ ]<name_type>",
            "([<in>] <area>;[de] [huidige] <state> [van] <name_type>)",
            "[<area>[ ]]<name_type>[ ]<state>",
            "([<in>] <area>;<name_type>[ ]<state>)"
          ],
          "expansion_rules": {
            "name_type": "<name>"
          },
          "response": "one"
        },
        {
          "sentences": [
            "<is> [[de] huidige] <name_type>[[ ]<state>] [op] {on_off_states:state} [[<in>] <area>]",
            "<is> [[de] huidige] <state> [van] <name_type> [op] {on_off_states:state} [[<in>] <area>]",
            "<is> ([<in>] <area>;[[de] huidige] <name_type>[[ ]<state>]) [op] {on_off_states:state}",
            "<is> ([<in>] <area>;[[de] huidige] <state> [van] <name_type>) [op] {on_off_states:state}"
          ],
          "expansion_rules": {
            "name_type": "<name>"
          },
          "response": "one_yesno",
          "excludes_context": {
            "domain": [
              "cover"
            ]
          }
        },
        {
          "sentences": [
            "Wat is [[de] [huidige] <state> [van]] [<area>[ ]]<name_type>[ ][<state>]",
            "Wat is ([<in>] <area>;[[de] [huidige] <state> [van]] <name_type>[ ][<state>])",
            "[de] [huidige] <state> [van] [<area>][ ]<name_type>",
            "([<in>] <area>;[de] [huidige] <state> [van] <name_type>)",
            "[<area>[ ]]<name_type>[ ]<state>",
            "([<in>] <area>;<name_type>[ ]<state>)"
          ],
          "expansion_rules": {
            "name_type": "<name>[ ]<light>"
          },
          "response": "one",
          "requires_context": {
            "domain": [
              "light"
            ]
          }
        },
        {
          "sentences": [
            "<is> [[de] huidige] <name_type>[[ ]<state>] [op] {on_off_states:state} [[<in>] <area>]",
            "<is> [[de] huidige] <state> [van] <name_type> [op] {on_off_states:state} [[<in>] <area>]",
            "<is> ([<in>] <area>;[[de] huidige] <name_type>[[ ]<state>]) [op] {on_off_states:state}",
            "<is> ([<in>] <area>;[[de] huidige] <state> [van] <name_type>) [op] {on_off_states:state}"
          ],
          "expansion_rules": {
            "name_type": "<name>[ ]<light>"
          },
          "response": "one_yesno",
          "requires_context": {
            "domain": [
              "light"
            ]
          }
        },
        {
          "sentences": [
            "Wat is [[de] [huidige] <state> [van]] [<area>[ ]]<name_type>[ ][<state>]",
            "Wat is ([<in>] <area>;[[de] [huidige] <state> [van]] <name_type>[ ][<state>])",
            "[de] [huidige] <state> [van] [<area>][ ]<name_type>",
            "([<in>] <area>;[de] [huidige] <state> [van] <name_type>)",
            "[<area>[ ]]<name_type>[ ]<state>",
            "([<in>] <area>;<name_type>[ ]<state>)"
          ],
          "expansion_rules": {
            "name_type": "<name>[ ]<switch>"
          },
          "response": "one",
          "requires_context": {
            "domain": [
              "switch"
            ]
          }
        },
        {
          "sentences": [
            "<is> [[de] huidige] <name_type>[[ ]<state>] [op] {on_off_states:state} [[<in>] <area>]",
            "<is> [[de] huidige] <state> [van] <name_type> [op] {on_off_states:state} [[<in>] <area>]",
            "<is> ([<in>] <area>;[[de] huidige] <name_type>[[ ]<state>]) [op] {on_off_states:state}",
            "<is> ([<in>] <area>;[[de] huidige] <state> [van] <name_type>) [op] {on_off_states:state}"
          ],
          "expansion_rules": {
            "name_type": "<name>[ ]<switch>"
          },
          "response": "one_yesno",
          "requires_context": {
            "domain": [
              "switch"
            ]
          }
        },
        {
          "sentences": [
            "Wat is [[de] [huidige] <state> [van]] [<area>[ ]]<name_type>[ ][<state>]",
            "Wat is ([<in>] <area>;[[de] [huidige] <state> [van]] <name_type>[ ][<state>])",
            "[de] [huidige] <state> [van] [<area>][ ]<name_type>",
            "([<in>] <area>;[de] [huidige] <state> [van] <name_type>)",
            "[<area>[ ]]<name_type>[ ]<state>",
            "([<in>] <area>;<name_type>[ ]<state>)"
          ],
          "expansion_rules": {
            "name_type": "<name>[ ]<fan>"
          },
          "response": "one",
          "requires_context": {
            "domain": [
              "fan"
            ]
          }
        },
        {
          "sentences": [
            "<is> [[de] huidige] <name_type>[[ ]<state>] [op] {on_off_states:state} [[<in>] <area>]",
            "<is> [[de] huidige] <state> [van] <name_type> [op] {on_off_states:state} [[<in>] <area>]",
            "<is> ([<in>] <area>;[[de] huidige] <name_type>[[ ]<state>]) [op] {on_off_states:state}",
            "<is> ([<in>] <area>;[[de] huidige] <state> [van] <name_type>) [op] {on_off_states:state}"
          ],
          "expansion_rules": {
            "name_type": "<name>[ ]<fan>"
          },
          "response": "one_yesno",
          "requires_context": {
            "domain": [
              "fan"
            ]
          }
        },
        {
          "sentences": [
            "<is> er {on_off_domains:domain} {on_off_states:state} [[<in>] <area>]",
            "<is> er ({on_off_domains:domain};[<in>] <area>) {on_off_states:state}"
          ],
          "response": "any"
        },
        {
          "sentences": [
            "<is> [<all>] [de] {on_off_domains:domain} {on_off_states:state}",
            "<is> [<all>] [de] {on_off_domains:domain} ([<in>] <area>;{on_off_states:state})",
            "<is> ([<in>] <area>;[<all>] [de] {on_off_domains:domain}) {on_off_states:state}"
          ],
          "response": "all"
        },
        {
          "sentences": [
            "Welk[e] {on_off_domains:domain} <is> [[<in>] <area>] {on_off_states:state}",
            "Welk[e] {on_off_domains:domain} ([<in>] <area>;<is> {on_off_states:state})"
          ],
          "response": "which"
        },
        {
          "sentences": [
            "Hoe[ ]veel {on_off_domains:domain} <is> [er] {on_off_states:state}",
            "Hoe[ ]veel {on_off_domains:domain} <is> [er] ([<in>] <area>;{on_off_states:state})"
          ],
          "response": "how_many"
        },
        {
          "sentences": [
            "<is> [er] <name>[[ ]<cover>] {cover_states:state} [[<in>] (<area>|<floor>)]",
            "<is> [er] ([<in>] (<area>|<floor>)[ ];<name>[[ ]<cover>]) {cover_states:state}",
            "<is> <name>[[ ]<cover>] {cover_states:state} [[<in>] (<area>|<floor>)] "
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "cover"
          },
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "<is> [er] [[<in>] <area>|<floor>|ergens|nog] [een] {cover_classes:device_class} {cover_states:state}",
            "<is> [er] [ergens|nog] [een] {cover_classes:device_class} ([<in>] <area>;{cover_states:state})",
            "<is> [er] {cover_classes:device_class} ({cover_states:state};[<in>] (<area>|<floor>))"
          ],
          "response": "any",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "<is> [[<in>] (<area>|<floor>)] [<all>|de] {cover_classes:device_class} {cover_states:state}",
            "<is> [<all>|de] {cover_classes:device_class} ([<in>] (<area>|<floor>);{cover_states:state})"
          ],
          "response": "all",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "Welk[e] {cover_classes:device_class} <is> {cover_states:state}",
            "Welk[e] {cover_classes:device_class} ([[<in>] (<area>|<floor>)];<is> {cover_states:state})"
          ],
          "response": "which",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "Hoe[ ]veel {cover_classes:device_class} [[<in>] (<area>|<floor>)] <is> [er]  {cover_states:state}",
            "Hoe[ ]veel {cover_classes:device_class} <is> [er] ([<in>] (<area>|<floor>);{cover_states:state})"
          ],
          "response": "how_many",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "<is> [de] [batterij[status]] [van] [[<in>] <area>][ ]<name>[ ][batterij] [[<in>] <area>] {bs_battery_states:state} [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "battery"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery"
          }
        },
        {
          "sentences": [
            "<is> [[de] batterij [van]] [[<in>] <area>][ ]<name>[ ][batterij] [[<in>] <area>] {bs_battery_charging_states:state} [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "battery_charging"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery_charging"
          }
        },
        {
          "sentences": [
            "<detect> [<by>] <sensor_name_area> {bs_carbon_monoxide_states:state} [[<in>] <area>]",
            "neemt <sensor_name_area> {bs_carbon_monoxide_states:state} (waar [[<in>] <area>]|[[<in>] <area>] waar)",
            "<is> [er] [[<in>] <area>] {bs_carbon_monoxide_states:state} <detect> <sensor_name_area>",
            "<is> [er] [[<in>] <area>] {bs_carbon_monoxide_states:state} <by> [<area>][ ]<name> <detect> [[<in>] <area>]",
            "<is> [er] <sensor_name_area> {bs_carbon_monoxide_states:state} <detect> [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide"
          }
        },
        {
          "sentences": [
            "(is|<detect>) [er] [[<in>]|<by>] [<area>][ ]<name> [[<in>] <area>] {bs_cold_states:state} [[<in>] <area>]",
            "neemt <sensor_name_area> {bs_cold_states:state} (waar [[<in>] <area>]|[[<in>] <area>] waar)",
            "<is> [er] [[<in>] <area>] {bs_cold_states:state} <detect> <sensor_name_area>",
            "<is> [er] [[<in>] <area>] {bs_cold_states:state} <by> [<area>][ ]<name> <detect> [[<in>] <area>]",
            "<is> [er] <sensor_name_area>  {bs_cold_states:state} <detect> [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "cold"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "cold"
          }
        },
        {
          "sentences": [
            "<is> <sensor_name_area> {bs_connectivity_states:state} [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "connectivity"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "connectivity"
          }
        },
        {
          "sentences": [
            "<is> <sensor_name_area> {bs_door_states:state} [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "door"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "door"
          }
        },
        {
          "sentences": [
            "<is> <sensor_name_area> {bs_garage_door_states:state} [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "garage_door"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "garage_door"
          }
        },
        {
          "sentences": [
            "<detect> [[<in>]|<by>] [<area>][ ]<name> [[<in>] <area>] {bs_gas_states:state} [[<in>] <area>]",
            "neemt <sensor_name_area> {bs_gas_states:state} (waar [[<in>] <area>]|[[<in>] <area>] waar)",
            "<is> [er] [[<in>] <area>] {bs_gas_states:state} <detect> <sensor_name_area>",
            "<is> [er] [[<in>] <area>] {bs_gas_states:state} <by> [<area>][ ]<name> <detect> [[<in>] <area>]",
            "<is> [er] <sensor_name_area> {bs_gas_states:state} <detect> [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "gas"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "gas"
          }
        },
        {
          "sentences": [
            "(<is>|<detect>) [er] [[<in>]|<by>] [<area>][ ]<name> [[<in>] <area>] {bs_heat_states:state} [[<in>] <area>]",
            "neemt <sensor_name_area> {bs_heat_states:state} (waar [[<in>] <area>]|[[<in>] <area>] waar)",
            "<is> [er] [[<in>] <area>] {bs_heat_states:state} <detect> <sensor_name_area>",
            "<is> [er] [[<in>] <area>] {bs_heat_states:state} <by> [<area>][ ]<name> <detect> [[<in>] <area>]",
            "<is> [er] <sensor_name_area> {bs_heat_states:state} <detect> [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "heat"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "heat"
          }
        },
        {
          "sentences": [
            "(<is>|<detect>) [er] [[<in>]|<by>] [<area>][ ]<name> [[<in>] <area>] {bs_light_states:state} [[<in>] <area>]",
            "neemt <sensor_name_area> {bs_light_states:state} (waar [[<in>] <area>]|[[<in>] <area>] waar)",
            "<is> [er] [[<in>] <area>] {bs_light_states:state} <detect> <sensor_name_area>",
            "<is> [er] [[<in>] <area>] {bs_light_states:state} <by> [<area>][ ]<name> <detect> [[<in>] <area>]",
            "<is> [er] <sensor_name_area> {bs_light_states:state} <detect> [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "light"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "light"
          }
        },
        {
          "sentences": [
            "<is> <sensor_name_area> {bs_lock_states:state} [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "lock"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "lock"
          }
        },
        {
          "sentences": [
            "(<is>|<detect>) [[<in>]|<by>] [<area>][ ]<name> [[<in>] <area>] {bs_moisture_states:state} [[<in>] <area>]",
            "neemt <sensor_name_area> {bs_moisture_states:state} (waar [[<in>] <area>]|[[<in>] <area>] waar)",
            "<is> [er] [[<in>] <area>] {bs_moisture_states:state} <detect> <sensor_name_area>",
            "<is> [er] [[<in>] <area>] {bs_moisture_states:state} <by> [<area>][ ]<name> <detect> [[<in>] <area>]",
            "<is> [er] <sensor_name_area> {bs_moisture_states:state} <detect> [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "moisture"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "moisture"
          }
        },
        {
          "sentences": [
            "<detect> [er] [[<in>]|<by>] [<area>][ ]<name> [[<in>] <area>] {bs_motion_states:state} [[<in>] <area>]",
            "neemt <sensor_name_area> {bs_motion_states:state} (waar [[<in>] <area>]|[[<in>] <area>] waar)",
            "<is> [er] [[<in>] <area>] {bs_motion_states:state} <detect> <sensor_name_area>",
            "<is> [er] [[<in>] <area>] {bs_motion_states:state} <by> [<area>][ ]<name> <detect> [[<in>] <area>]",
            "<is> [er] <sensor_name_area> {bs_motion_states:state} <detect> [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "motion"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "motion"
          }
        },
        {
          "sentences": [
            "<detect> [er] [[<in>]|<by>] [<area>][ ]<name> [[<in>] <area>] {bs_occupancy_states:state} [[<in>] <area>]",
            "neemt <sensor_name_area> {bs_occupancy_states:state} (waar [[<in>] <area>]|[[<in>] <area>] waar)",
            "(is|zijn|word[t|en]) [er] [[<in>] <area>] {bs_occupancy_states:state} <detect> <sensor_name_area>",
            "(is|zijn|wordt[t|en]) [er] [[<in>] <area>] {bs_occupancy_states:state} <by> [<area>][ ]<name> <detect> [[<in>] <area>]",
            "<is> [er] <sensor_name_area> {bs_occupancy_states:state} <detect> [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "occupancy"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "occupancy"
          }
        },
        {
          "sentences": [
            "<is> <sensor_name_area> {bs_opening_states:state} [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "opening"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "opening"
          }
        },
        {
          "sentences": [
            "<is> [[de] (kabel[s]|lader[s]) van] [<area>][ ]<name> [[<in>] <area>] {bs_plug_states:state} [[<in>] <area>]",
            "<is> [[<in>] <area>] [[de] (kabel[s]|lader[s]) van] <name>[[ ](lader[s]|kabel[s])]  [[<in>] <area>] {bs_plug_states:state} [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "plug"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "plug"
          }
        },
        {
          "sentences": [
            "(<is>|<detect>) [er] [[<in>]|<by>] [<area>][ ]<name> [[<in>] <area>] {bs_power_states:state} [[<in>] <area>]",
            "neemt <sensor_name_area> {bs_power_states:state} (waar [[<in>] <area>]|[[<in>] <area>] waar)",
            "<is> [er] [[<in>] <area>] {bs_power_states:state} <detect> <sensor_name_area>",
            "<is> [er] [[<in>] <area>] {bs_power_states:state} <by> [<area>][ ]<name> <detect> [[<in>] <area>]",
            "<is> [er] <sensor_name_area> {bs_power_states:state} <detect> [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "power"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "power"
          }
        },
        {
          "sentences": [
            "<is> <sensor_name_area> {bs_presence_states:state} [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "presence"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "presence"
          }
        },
        {
          "sentences": [
            "<is> er [[<in>] <area>] {bs_problem_states:state} <sensor_name_area>",
            "(heeft|<detect>) <sensor_name_area> {bs_problem_states:state} [[<in>] <area>]",
            "neemt <sensor_name_area> {bs_problem_states:state} (waar [[<in>] <area>]|[[<in>] <area>] waar)",
            "<is> [er] [[<in>] <area>] {bs_problem_states:state} <detect> <sensor_name_area>",
            "<is> [er] [[<in>] <area>] {bs_problem_states:state} <by> [<area>][ ]<name> <detect> [[<in>] <area>]",
            "<is> [er] <sensor_name_area> {bs_problem_states:state} <detect> [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "problem"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "problem"
          }
        },
        {
          "sentences": [
            "(<detect>|<is>) [er] [ergens] [[<by>] <sensor_area>] {bs_problem_states:state} [[<in>] <area>]",
            "<is> [er] [[<in>] <area>] [ergens] [[<in>] <area>] {bs_problem_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "problem"
          }
        },
        {
          "sentences": [
            "(is|zijn) er [[<in>] <area>] <all> [[<in>] <area>] {bs_problem_states:state} [[<in>] <area>]",
            "<detect> <all> <sensor_area> {bs_problem_states:state} [[<in>] <area>]",
            "<is> [<by>] <all> [[<in>] <area>][ ]<sensor> {bs_problem_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "problem"
          }
        },
        {
          "sentences": [
            "Welk[e] <sensor_area> (nemen|neemt) {bs_problem_states:state} waar [[<in>] <area>]",
            "Welk[e] <sensor_area> <detect> {bs_problem_states:state} [[<in>] <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "problem"
          }
        },
        {
          "sentences": [
            "hoe[ ]veel <sensor_area> <detect> [er] [[<in>] <area>] {bs_problem_states:state} [[<in>] <area>]",
            "hoe[ ]veel <sensor_area> nemen [er] [[<in>] <area>] {bs_problem_states:state} [[<in>] <area>] waar [[<in>] <area>]",
            "<by> hoe[ ]veel <sensor_area> word(t|en) [er] [[<in>] <area>] {bs_problem_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "problem"
          }
        },
        {
          "sentences": [
            "{bs_running_states:state} <sensor_name_area>",
            "(<is>|<detect>) [er] [[<in>]|<by>] [<area>][ ]<name> [[<in>] <area>] {bs_running_states:state} [[<in>] <area>]",
            "neemt <sensor_name_area> {bs_running_states:state} (waar [[<in>] <area>]|[[<in>] <area>] waar)",
            "<is> [er] [[<in>] <area>] {bs_running_states:state} <detect> <sensor_name_area>",
            "<is> [er] [[<in>] <area>] {bs_running_states:state} <by> [<area>][ ]<name> <detect> [[<in>] <area>]",
            "<is> [er] <sensor_name_area> {bs_running_states:state} <detect> [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "running"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "{bs_running_states:state} [er] [ergens] <sensor_area>",
            "(<detect>|<is>) [er] [ergens] [[<by>] <sensor_area>] {bs_running_states:state} [[<in>] <area>]",
            "<is> [er] [[<in>] <area>] [ergens] [[<in>] <area>] {bs_running_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "{bs_running_states:state} <all> <sensor_area>",
            "is er [[<in>] <area>] <all> [[<in>] <area>] {bs_running_states:state} [[<in>] <area>]",
            "(<detect>|<is>) <all> <sensor_area> {bs_running_states:state} [[<in>] <area>]",
            "<is> [<by>] <all> [[<in>] <area>][ ]<sensor> {bs_running_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "Welk[e] <sensor_area> (nemen|neemt) {bs_running_states:state} waar [[<in>] <area>]",
            "Welk[e] <sensor_area> [<detect>|<is>] {bs_running_states:state} [[<in>] <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "hoe[ ]veel <sensor_area> [<detect>|<is>] [er] [[<in>] <area>] {bs_running_states:state} [[<in>] <area>]",
            "hoe[ ]veel <sensor_area> nemen [er] [[<in>] <area>] {bs_running_states:state} [[<in>] <area>] waar [[<in>] <area>]",
            "<by> hoe[ ]veel <sensor_area> word(t|en) [er] [[<in>] <area>] {bs_running_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "(<is>|<detect>) [er] [[<in>]|<by>] [<area>][ ]<name> [[<in>] <area>] {bs_safety_states:state} [[<in>] <area>]",
            "neemt <sensor_name_area> {bs_safety_states:state} (waar [[<in>] <area>]|[[<in>] <area>] waar)",
            "<is> [er] [[<in>] <area>] {bs_safety_states:state} <detect> <sensor_name_area>",
            "<is> [er] [[<in>] <area>] {bs_safety_states:state} <by> [<area>][ ]<name> <detect> [[<in>] <area>]",
            "<is> [er] <sensor_name_area> {bs_safety_states:state} <detect> [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "safety"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "safety"
          }
        },
        {
          "sentences": [
            "(<detect>|<is>) [er] [ergens] [[<by>] <sensor_area>] {bs_safety_states:state} [[<in>] <area>]",
            "<is> [er] [[<in>] <area>] [ergens] [[<in>] <area>] {bs_safety_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "safety"
          }
        },
        {
          "sentences": [
            "is het [[<in>] <area>] <all> [[<in>] <area>] {bs_safety_states:state} [[<in>] <area>]",
            "(<detect>|<is>) <all> <sensor_area> {bs_safety_states:state} [[<in>] <area>]",
            "<is> [<by>] <all> [[<in>] <area>][ ]<sensor> {bs_safety_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "safety"
          }
        },
        {
          "sentences": [
            "Welk[e] <sensor_area> (nemen|neemt) {bs_safety_states:state} waar [[<in>] <area>]",
            "Welk[e] <sensor_area> <detect> {bs_safety_states:state} [[<in>] <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "safety"
          }
        },
        {
          "sentences": [
            "hoe[ ]veel <sensor_area> <detect> [er] [[<in>] <area>] {bs_safety_states:state} [[<in>] <area>]",
            "hoe[ ]veel <sensor_area> nemen [er] [[<in>] <area>] {bs_safety_states:state} [[<in>] <area>] waar [[<in>] <area>]",
            "<by> hoe[ ]veel <sensor_area> word(t|en) [er] [[<in>] <area>] {bs_safety_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "safety"
          }
        },
        {
          "sentences": [
            "(<is>|<detect>) [er] [[<in>]|<by>] [<area>][ ]<name> [[<in>] <area>] {bs_smoke_states:state} [[<in>] <area>]",
            "neemt <sensor_name_area> {bs_smoke_states:state} (waar [[<in>] <area>]|[[<in>] <area>] waar)",
            "<is> [er] [[<in>] <area>] {bs_smoke_states:state} <detect> <sensor_name_area>",
            "<is> [er] [[<in>] <area>] {bs_smoke_states:state} <by> [<area>][ ]<name> <detect> [[<in>] <area>]",
            "<is> [er] <sensor_name_area> {bs_smoke_states:state} <detect> [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "(<detect>|<is>) [er] [ergens] [[<by>] <sensor_area>] {bs_smoke_states:state} [[<in>] <area>]",
            "<is> [er] [[<in>] <area>] [ergens] [[<in>] <area>] {bs_smoke_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "<detect> <all> <sensor_area> {bs_smoke_states:state} [[<in>] <area>]",
            "<is> [<by>] <all> [[<in>] <area>][ ]<sensor> {bs_smoke_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "Welk[e] <sensor_area> (nemen|neemt) {bs_smoke_states:state} waar [[<in>] <area>]",
            "Welk[e] <sensor_area> <detect> {bs_smoke_states:state} [[<in>] <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "hoe[ ]veel <sensor_area> <detect> [er] [[<in>] <area>] {bs_smoke_states:state} [[<in>] <area>]",
            "hoe[ ]veel <sensor_area> nemen [er] [[<in>] <area>] {bs_smoke_states:state} [[<in>] <area>] waar [[<in>] <area>]",
            "<by> hoe[ ]veel <sensor_area> word(t|en) [er] [[<in>] <area>] {bs_smoke_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "maakt <sensor_name_area> {bs_sound_states:state}",
            "(<is>|<detect>) [er] [[<in>]|<by>] [<area>][ ]<name> [[<in>] <area>] {bs_sound_states:state} [[<in>] <area>]",
            "neemt <sensor_name_area> {bs_sound_states:state} (waar [[<in>] <area>]|[[<in>] <area>] waar)",
            "<is> [er] [[<in>] <area>] {bs_sound_states:state} <detect> <sensor_name_area>",
            "<is> [er] [[<in>] <area>] {bs_sound_states:state} <by> [<area>][ ]<name> <detect> [[<in>] <area>]",
            "<is> [er] <sensor_name_area> {bs_sound_states:state} <detect> [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "sound"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "maakt [er] [ergens] <sensor_area> {bs_sound_states:state}",
            "<is> [er] [ergens] [[<by>] <sensor_area>] {bs_sound_states:state} [[aan het maken] [[<in>] <area>]|[[<in>] <area>] [aan het maken]]",
            "<detect> [er] [ergens]  <sensor_area> {bs_sound_states:state} [[<in>] <area>]",
            "<is> [er] [[<in>] <area>] [ergens] [[<in>] <area>] {bs_sound_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "(maakt|maken) <all> <sensor_area> {bs_sound_states:state}",
            "<is> <all> <sensor_area> {bs_sound_states:state} [[aan het maken] [[<in>] <area>]|[[<in>] <area>] [aan het maken]]",
            "<detect> <all>  <sensor_area> {bs_sound_states:state} [[<in>] <area>]",
            "<is> [<by>] <all> [[<in>] <area>][ ]<sensor> {bs_sound_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "Welk[e] <sensor_area> [is|zijn] {bs_sound_states:state} [[aan het maken] [[<in>] <area>]|[[<in>] <area>] [aan het maken]]",
            "Welk[e] <sensor_area> (nemen|neemt) {bs_sound_states:state} waar [[<in>] <area>]",
            "Welk[e] <sensor_area> <detect> {bs_sound_states:state} [[<in>] <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "hoe[ ]veel <sensor_area> [is|zijn] [er] [[<in>] <area>] {bs_sound_states:state} [[aan het maken] [[<in>] <area>]|[[<in>] <area>] [aan het maken]]",
            "hoe[ ]veel <sensor_area> <detect> [er] [[<in>] <area>] {bs_sound_states:state} [[<in>] <area>]",
            "hoe[ ]veel <sensor_area> nemen [er] [[<in>] <area>] {bs_sound_states:state} [[<in>] <area>] waar [[<in>] <area>]",
            "<by> hoe[ ]veel <sensor_area> word(t|en) [er] [[<in>] <area>] {bs_sound_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "(<is>|<detect>) [er] [in|op|van|bij] [<area>] [door|met|bij] <name> [[<in>] <area>] {bs_tamper_states:state} [[<in>] <area>]",
            "neemt <sensor_name_area> {bs_tamper_states:state} (waar [[<in>] <area>]|[[<in>] <area>] waar)",
            "<is> [er] [[<in>] <area>] {bs_tamper_states:state} <detect> <sensor_name_area>",
            "<is> [er] [[<in>] <area>] {bs_tamper_states:state} <by> [<area>][ ]<name> <detect> [[<in>] <area>]",
            "<is> [er] <sensor_name_area> {bs_tamper_states:state} <detect> [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "tamper"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "tamper"
          }
        },
        {
          "sentences": [
            "<is> [er] [ergens] [[<by>] <sensor_area>] {bs_tamper_states:state} [[<in>] <area>]",
            "<detect> [er] [ergens] [<by>] <sensor_area> {bs_tamper_states:state} [[<in>] <area>]",
            "<is> [er] [[<in>] <area>] [ergens] [[<by>] <sensor_area>]  {bs_tamper_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "tamper"
          }
        },
        {
          "sentences": [
            "<is> ([<by>] <all>|<all> [<by>]) <sensor_area> {bs_tamper_states:state} [[<in>] <area>]",
            "<detect> <all>  <sensor_area> {bs_tamper_states:state} [[<in>] <area>]",
            "<is> [<by>] <all> [[<in>] <area>][ ]<sensor> {bs_tamper_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "tamper"
          }
        },
        {
          "sentences": [
            "Welk[e] <sensor_area> [is|zijn|wordt|worden] {bs_tamper_states:state}",
            "Welk[e] <sensor_area> (nemen|neemt) {bs_tamper_states:state} waar [[<in>] <area>]",
            "Welk[e] <sensor_area> <detect> {bs_tamper_states:state} [[<in>] <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "tamper"
          }
        },
        {
          "sentences": [
            "[<by>] hoe[ ]veel <sensor_area> [is|zijn|word(t|en)] [er] [[<in>] <area>] {bs_tamper_states:state} [[<in>] <area>]",
            "hoe[ ]veel <sensor_area> <detect> [er] [[<in>] <area>] {bs_tamper_states:state} [[<in>] <area>]",
            "hoe[ ]veel <sensor_area> nemen [er] [[<in>] <area>] {bs_tamper_states:state} [[<in>] <area>] waar [[<in>] <area>]",
            "<by> hoe[ ]veel <sensor_area> word(t|en) [er] [[<in>] <area>] {bs_tamper_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "tamper"
          }
        },
        {
          "sentences": [
            "<is> [[<in>] <area>][ ]<name> [[in|op|van] [<area>]] {bs_update_states:state} [[<in>] <area>]",
            "<is> [er] [[<in>] <area>] [een] {bs_update_states:state} [klaar|beschikbaar] voor <sensor_name_area>",
            "<is> [er] voor <sensor_name_area> [een] {bs_update_states:state} [klaar|beschikbaar] [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "update"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update"
          }
        },
        {
          "sentences": [
            "<is> [er] [ergens] <sensor_area> {bs_update_states:state} [[<in>] <area>]",
            "<is> [er] [ergens]  {bs_update_states:state} [[<in>] <area>]",
            "<is> [er] [[<in>] <area>] [ergens] [[<in>] <area>] {bs_update_states:state} [voor] (klaar|beschikbaar) [[<in>] <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update"
          }
        },
        {
          "sentences": [
            "<is> <all> <sensor_area> {bs_update_states:state} [[<in>] <area>]",
            "<is> [er] voor <all> <sensor_area> {bs_update_states:state} (klaar|beschikbaar) [[<in>] <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update"
          }
        },
        {
          "sentences": [
            "Welk[e] <sensor_area> [is|zijn] {bs_update_states:state}",
            "Voor welk[e] <sensor_area> <is> {bs_update_states:state} (klaar|beschikbaar) [[<in>] <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update"
          }
        },
        {
          "sentences": [
            "hoe[ ]veel <sensor_area> [is|zijn] [er] [[<in>] <area>] {bs_update_states:state} [[<in>] <area>]",
            "voor hoe[ ]veel <sensor_area> (staat|staan) [er] [[<in>] <area>] {bs_update_states:state} [[<in>] <area>] (klaar|beschikbaar) [[<in>] <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update"
          }
        },
        {
          "sentences": [
            "{bs_vibration_states:state} <sensor_name_area>",
            "(is|<detect>) [er] <sensor_name_area> {bs_vibration_states:state} [[<in>] <area>]",
            "neemt [<area>][ ]<name> [[<in>] <area>] {bs_vibration_states:state} (waar [[<in>] <area>]|[[<in>] <area>] waar)",
            "<is> [er] [[<in>] <area>] {bs_vibration_states:state} <detect> <sensor_name_area>",
            "<is> [er] [[<in>] <area>] {bs_vibration_states:state} <by> [<area>][ ]<name> <detect> [[<in>] <area>]",
            "<is> [er] <sensor_name_area> {bs_vibration_states:state} <detect> [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          }
        },
        {
          "sentences": [
            "{bs_vibration_states:state} [er] [ergens] <sensor_area>",
            "<is> [er] [ergens] <sensor_area> {bs_vibration_states:state} [[<in>] <area>]",
            "<detect> [er] [ergens]  <sensor_area> {bs_vibration_states:state} [[<in>] <area>]",
            "<is> [er] [[<in>] <area>] [ergens] [[<in>] <area>] {bs_vibration_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          }
        },
        {
          "sentences": [
            "{bs_vibration_states:state} <all> <sensor_area>",
            "<is> <all> <sensor_area> {bs_vibration_states:state} [[<in>] <area>]",
            "<detect> <all>  <sensor_area> {bs_vibration_states:state} [[<in>] <area>]",
            "<is> [<by>] <all> [[<in>] <area>][ ]<sensor> {bs_vibration_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          }
        },
        {
          "sentences": [
            "Welk[e] <sensor_area> [is|zijn] {bs_vibration_states:state}",
            "Welk[e] <sensor_area> (nemen|neemt) {bs_vibration_states:state} waar [[<in>] <area>]",
            "Welk[e] <sensor_area> <detect> {bs_vibration_states:state} [[<in>] <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          }
        },
        {
          "sentences": [
            "hoe[ ]veel <sensor_area> [is|zijn] [er] [[<in>] <area>] {bs_vibration_states:state} [[<in>] <area>]",
            "hoe[ ]veel <sensor_area> <detect> [er] [[<in>] <area>] {bs_vibration_states:state} [[<in>] <area>]",
            "hoe[ ]veel <sensor_area> nemen [er] [[<in>] <area>] {bs_vibration_states:state} [[<in>] <area>] waar [[<in>] <area>]",
            "<by> hoe[ ]veel <sensor_area> word(t|en) [er] [[<in>] <area>] {bs_vibration_states:state} [[<in>] <area>] <detect> [[<in>] <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          }
        },
        {
          "sentences": [
            "<is> <sensor_name_area> {bs_window_states:state} [[<in>] <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "window"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "window"
          }
        }
      ]
    },
    "HassCancelTimer": {
      "data": [
        {
          "sentences": [
            "(annuleer|stop) (<my_timer>|<area_timer>)",
            "[<would>] (<my_timer>|<area_timer>) (stoppen|annuleren|[op] stop zetten)"
          ]
        }
      ]
    },
    "HassTimerStatus": {
      "data": [
        {
          "sentences": [
            "[wat is de] (<my_status_timer>|<my_status_timers>)  status",
            "[wat is de] status van (<my_status_timer>|<my_status_timers>) ",
            "[hoe veel] tijd [is] [er] [nog] over (op|van|voor) (<my_status_timer>|<my_status_timers>) ",
            "hoe lang (is|moet) (<my_status_timer>|<my_status_timers>) nog",
            "hoe lang (zijn|moeten) <my_status_timers> nog"
          ],
          "expansion_rules": {
            "my_status_timer": "[<my>] ([<timer_prefix>](timer|kookwekker)|(timer|kookwekker) <timer_suffix>)",
            "my_status_timers": "[<my>] ([<timer_prefix>](timers|kookwekkers)|(timers|kookwekkers) <timer_suffix>)"
          }
        }
      ]
    },
    "HassGetWeather": {
      "data": [
        {
          "sentences": [
            "wat voor weer is het [nu] [buiten]",
            "(wat|hoe) is (het [huidige] weer|de [huidige] weersvoorspelling) [buiten]"
          ]
        },
        {
          "sentences": [
            "(wat|hoe) is (het weer|de weersvoorspelling) (voor|in|volgens) <name>",
            "wat voor weer is het [nu] (voor|in|volgens) <name>"
          ],
          "requires_context": {
            "domain": "weather"
          }
        }
      ]
    },
    "HassGetCurrentTime": {
      "data": [
        {
          "sentences": [
            "hoe laat is het [nu]",
            "hoe laat leven we [nu]",
            "wat is de [huidige] tijd",
            "wat is (de tijd;nu)",
            "(vertel me|geef me) de [huidige] tijd"
          ]
        }
      ]
    },
    "HassTurnOn": {
      "data": [
        {
          "sentences": [
            "[<change>] [<all>] <light> ([<to>] aan;<in> (<area>|<floor>))",
            "[<change>] [<all>] (<area>|<floor>)[ ]<light> [<to>] aan",
            "[<change>] <in> (<area>|<floor>) [<all>] <light> [<to>] aan",
            "Schakel [<all>] <light> ([<to>] in;<in> (<area>|<floor>))",
            "Schakel [<all>] (<area>|<floor>)[ ]<light> [<to>] in",
            "Schakel <in> (<area>|<floor>) [<all>] <light> [<to>] in",
            "[<would>] [<all>] <light> (<in> (<area>|<floor>);(aan[ ](zetten|doen)|in[ ]schakelen))",
            "[<would>] [<all>] (<area>|<floor>)[ ]<light> [<to>] (aan[ ](zetten|doen)|in[ ]schakelen)",
            "[<would>] [<all>] <light> [<to>] [<to>] (aan[ ](zetten|doen)|in[ ]schakelen) <in> (<area>|<floor>)"
          ],
          "response": "lights_area",
          "slots": {
            "domain": "light"
          }
        },
        {
          "sentences": [
            "[<change>] [<here>] <light> [<to>] aan",
            "[<change>] (<here>;[<all>] <light>) [<to>] aan",
            "[<change>] [<all>] <light> [<to>] aan in deze (ruimte|kamer)",
            "(<here>;[<all>] <light>) [<to>] (aan[ ](zetten|doen)|in[ ]schakelen)",
            "schakel [<here>] <light> [<to>] in",
            "schakel (<here>;[<all>] <light>) [<to>] in",
            "schakel [<all>] <light> [<to>] in in deze (ruimte|kamer)",
            "[<would>] [<all>] <light> [<to>] ((aan[ ](zetten|doen)|in[ ]schakelen);in deze (ruimte|kamer))",
            "[<would>] (<here>;[<all>] <light>) (aan[ ](zetten|doen)|in[ ]schakelen)",
            "[<would>] [<all>] <light> (aan[ ](zetten|doen)|in[ ]schakelen) in deze (ruimte|kamer)"
          ],
          "response": "lights_area",
          "slots": {
            "domain": "light"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "[<change>] [<all>] <fan> ([<to>] aan;[<in>] (<area>|<floor>))",
            "Schakel [<all>] <fan> ([<to>] in;[<in>] (<area>|<floor>))",
            "[<change>] [<all>] <fan> ([<in>] (<area>|<floor>);[<to>] aan)",
            "Schakel [<all>] <fan> ([<in>] (<area>|<floor>);[<to>] in)",
            "[<change>] [(<all>|[<in>])] (<area>|<floor>)[ ]<fan> [<to>] aan",
            "Schakel [(<all>|[<in>])] (<area>|<floor>)[ ]<fan> [<to>] in",
            "[<would>] [<all>] (<area>|<floor>)[ ]<fan> (aan[ ](zetten|doen)|inschakelen)",
            "[<would>] ([<in>] (<area>|<floor>);[<all>] <fan>) (aan[ ](zetten|doen)|inschakelen)",
            "[<would>] [<all>] <fan> [<in>] (<area>|<floor>) (aan[ ](zetten|doen)|inschakelen)"
          ],
          "response": "fans_area",
          "slots": {
            "domain": "fan"
          }
        },
        {
          "sentences": [
            "[<change>] <fan> [<to>] aan",
            "schakel <fan> [<to>] in",
            "[<change>] (<here>;[alle] <fan>) [<to>] aan",
            "schakel (<here>;[alle] <fan>) [<to>] in",
            "[<change>] [alle] <fan> [<to>] aan <here>",
            "schakel [alle] <fan> [<to>] in <here>",
            "[<would>] [alle] <fan> (<here>;(aan[ ](zetten|doen)|inschakelen))",
            "[<would>] <here> [alle] <fan> (aan[ ](zetten|doen)|inschakelen)",
            "[<would>] <fan> (aan[ ](zetten|doen)|inschakelen)"
          ],
          "response": "fans_area",
          "slots": {
            "domain": "fan"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "(activeer|start|schakel) ([script] <name>|<name>[ ][script]) [<to>] [in]",
            "[<change>] ([script] <name>|<name>[ ][script]) [<to>] (aan|in)",
            "[<would>] ([script] <name>|<name>[ ][script]) [<to>] (aan[ ](zetten|doen)|inschakelen|starten|activeren)"
          ],
          "requires_context": {
            "domain": "script"
          },
          "slots": {
            "domain": "script"
          },
          "response": "script"
        },
        {
          "sentences": [
            "(activeer|start|schakel) [scene|scène] <name>[ ][scene|scène] [<to>] [in]",
            "[<change>] [scene|scène] <name>[ ][scene|scène] [<to>] (aan|in)",
            "[<would>] (<name>[ ][scene|scène]|[scene|scène] <name>) [<to>] (aan[ ](zetten|doen)|inschakelen|starten|activeren)"
          ],
          "requires_context": {
            "domain": "scene"
          },
          "slots": {
            "domain": "scene"
          },
          "response": "scene"
        },
        {
          "sentences": [
            "[draai|doe|zet] <name> open",
            "open <name>",
            "[<would>] <name> (openen|open (draaien|doen|zetten))"
          ],
          "requires_context": {
            "domain": "valve"
          },
          "slots": {
            "domain": "valve"
          },
          "response": "valve"
        },
        {
          "sentences": [
            "vergrendel (<name_area>|<lock_name_area>)",
            "sluit <lock_name_area>",
            "[<change>] <lock_name> dicht <in> <area>",
            "[<change>] <lock_name_area> dicht",
            "[<change>] (<name>|<lock_name>) <locked> <in> <area>",
            "[<change>] (<name_area>|<lock_name_area>) <locked>",
            "[<would>] (<name_area>|<lock_name_area>) <locked> (doen|zetten|draaien)",
            "[<would>] (<name>|<lock_name>) <locked> (doen|zetten|draaien) <in> <area>",
            "[<would>] (<name>|<lock_name>) vergrendelen <in> <area>",
            "[<would>] (<name_area>|<lock_name_area>) vergrendelen",
            "[<would>] <lock_name> (dicht[ ](doen|zetten|draaien)|sluiten) <in> <area>",
            "[<would>] <lock_name_area> (dicht[ ](doen|zetten|draaien)|sluiten)"
          ],
          "requires_context": {
            "domain": "lock"
          },
          "response": "lock"
        },
        {
          "sentences": [
            "[<change>] <all_area_door_lock> <locked>",
            "[<change>] [<all>] (<lock>|deur[en]) <locked> <in> <area>",
            "[<change>] <all_area_lock> dicht",
            "[<change>] [<all>] <lock> dicht <in> <area>",
            "sluit <all_area_lock>",
            "sluit [<all>] <lock> <in> <area>",
            "vergrendel <all_area_door_lock>",
            "vergrendel [<all>] (<lock>|deur[en]) <in> <area>",
            "[<would>] <all_area_door_lock> vergrendelen",
            "[<would>] [<all>] (<lock>|deur[en]) vergrendelen <in> <area>",
            "[<would>] <all_area_lock> (dicht[ ](doen|zetten|draaien)|sluiten)",
            "[<would>] [<all>] <lock> (dicht[ ](doen|zetten|draaien)|sluiten) <in> <area>",
            "[<would>] <all_area_door_lock> <locked> (doen|zetten|draaien)",
            "[<would>] [<all>] (<lock>|deur[en]) <locked> (doen|zetten|draaien) <in> <area>"
          ],
          "expansion_rules": {
            "all_area_lock": "(\n  <in> <area> <lock>\n |(<all>;<in> <area>) <lock>\n |[<all>] <lock> <in> <area>\n |[<all>] <area>[ ]<lock>\n)\n",
            "all_area_door_lock": "(\n  <in> <area> (<lock>|deur[en])\n |(<all>;<in> <area>) (<lock>|deur[en])\n |[<all>] (<lock>|deur[en]) <in> <area>\n |[<all>] <area>[ ](<lock>|deur[en])\n)\n"
          },
          "response": "lock_area",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "[<change>] <name_type> [<to>] aan [<in> <area>]",
            "[<change>] <name_area> [<to>] aan",
            "schakel <name_type> [<to>] in [<in> <area>]",
            "schakel <name_area> [<to>] in",
            "[<would>] <name_type> [<to>] (aan[ ](zetten|doen)|inschakelen) [<in> <area>]",
            "[<would>] <name_area> (aan[ ](zetten|doen)|inschakelen)"
          ],
          "expansion_rules": {
            "name_type": "<name>"
          },
          "excludes_context": {
            "domain": [
              "binary_sensor",
              "cover",
              "lock",
              "scene",
              "script",
              "sensor",
              "valve",
              "vacuum"
            ]
          }
        },
        {
          "sentences": [
            "[<change>] <name_type> [<to>] aan [<in> <area>]",
            "[<change>] <name_area> [<to>] aan",
            "schakel <name_type> [<to>] in [<in> <area>]",
            "schakel <name_area> [<to>] in",
            "[<would>] <name_type> [<to>] (aan[ ](zetten|doen)|inschakelen) [<in> <area>]",
            "[<would>] <name_area> (aan[ ](zetten|doen)|inschakelen)"
          ],
          "expansion_rules": {
            "name_type": "<name>[ ]<light>",
            "name_area": "(\n  <name_type> <in> <area>\n  |<in> <area> <name_type>\n  |<area>[ ]<name_type>\n)\n"
          },
          "requires_context": {
            "domain": [
              "light"
            ]
          }
        },
        {
          "sentences": [
            "[<change>] <name_type> [<to>] aan [<in> <area>]",
            "[<change>] <name_area> [<to>] aan",
            "schakel <name_type> [<to>] in [<in> <area>]",
            "schakel <name_area> [<to>] in",
            "[<would>] <name_type> [<to>] (aan[ ](zetten|doen)|inschakelen) [<in> <area>]",
            "[<would>] <name_area> (aan[ ](zetten|doen)|inschakelen)"
          ],
          "expansion_rules": {
            "name_type": "<name>[ ]<switch>",
            "name_area": "(\n  <name_type> <in> <area>\n  |<in> <area> <name_type>\n  |<area>[ ]<name_type>\n)\n"
          },
          "requires_context": {
            "domain": [
              "switch"
            ]
          }
        },
        {
          "sentences": [
            "[<change>] <name_type> [<to>] aan [<in> <area>]",
            "[<change>] <name_area> [<to>] aan",
            "schakel <name_type> [<to>] in [<in> <area>]",
            "schakel <name_area> [<to>] in",
            "[<would>] <name_type> [<to>] (aan[ ](zetten|doen)|inschakelen) [<in> <area>]",
            "[<would>] <name_area> (aan[ ](zetten|doen)|inschakelen)"
          ],
          "expansion_rules": {
            "name_type": "<name>[ ]<fan>",
            "name_area": "(\n  <name_type> <in> <area>\n  |<in> <area> <name_type>\n  |<area>[ ]<name_type>\n)\n"
          },
          "requires_context": {
            "domain": [
              "fan"
            ]
          }
        },
        {
          "sentences": [
            "open <name>[[ ]<cover>]",
            "[<would>] <name>[[ ]<cover>] (openen|open doen)",
            "[<change>] <name>[[ ]<cover>] <open>"
          ],
          "response": "cover",
          "requires_context": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "open [de] garage[ ][deur]",
            "[<would>] [de] garage[ ][deur] (openen|open doen)",
            "[<change>] [de] garage[ ][deur] <open>"
          ],
          "response": "cover",
          "slots": {
            "device_class": "garage",
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "open (<name>[[ ]<cover>];[<in>] (<area>|<floor>))",
            "[<would>] (<name>[[ ]<cover>];[<in>] (<area>|<floor>)) (openen|open doen)",
            "[<change>] [<in>] (<area>|<floor>) <name>[[ ]<cover>] <open>",
            "[<change>] <name>[[ ]<cover>] (<open>;[<in>] (<area>|<floor>))"
          ],
          "response": "cover",
          "requires_context": {
            "device_class": [
              "blind",
              "curtain",
              "shutter",
              "shade"
            ],
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "open ([de|het] <curtain>;[<in>] (<area>|<floor>))",
            "[<would>] ([de|het] <curtain>;[<in>] (<area>|<floor>)) (openen|open doen)",
            "[<change>] [<in>] (<area>|<floor>) [de|het] <curtain> <open>",
            "[<change>] [de|het] <curtain> (<open>;[<in>] (<area>|<floor>))"
          ],
          "response": "cover",
          "slots": {
            "device_class": "curtain",
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "[<open_command>] [de|het] (<blind>|<shutter>|<shade>) [op] [<in>] (<area>|<floor>)",
            "[<would>] ([de|het] (<blind>|<shutter>|<shade>);[<in>] (<area>|<floor>)) <open_action>",
            "[<open_command>] [<in>] (<area>|<floor>) [de|het] (<blind>|<shutter>|<shade>) op",
            "[<open_command>] [de|het] (<blind>|<shutter>|<shade>) ([op];[<in>] (<area>|<floor>))",
            "[<change>] [<in>] (<area>|<floor>) [de|het] (<blind>|<shutter>|<shade>) <open>",
            "[<change>] [de|het] (<blind>|<shutter>|<shade>) (<open>;[<in>] (<area>|<floor>))"
          ],
          "response": "cover",
          "slots": {
            "device_class": [
              "blind",
              "shutter",
              "shade"
            ],
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "open [de|het] <curtain>",
            "open ([de|het] <curtain>;<here>)",
            "[<would>] [de|het] <curtain> (openen|open doen)",
            "[<would>] ([de|het] <curtain>;<here>) (openen|open doen)",
            "[<change>] [de|het] <curtain> [<here>] <open>",
            "[<change>] ([de|het] <curtain> <open>;<here>)"
          ],
          "response": "cover",
          "slots": {
            "device_class": "curtain",
            "domain": "cover"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "[<open_command>] [de|het] (<blind>|<shutter>|<shade>) [op]",
            "[<open_command>] ([de|het] (<blind>|<shutter>|<shade>);<here>) [op]",
            "[<would>] [de|het] (<blind>|<shutter>|<shade>) <open_action>",
            "[<would>] ([de|het] (<blind>|<shutter>|<shade>);<here>) <open_action>",
            "[<open_command>] [de|het] (<blind>|<shutter>|<shade>) [<here>] [op]",
            "[<open_command>] ([de|het] (<blind>|<shutter>|<shade>) [op];<here>)",
            "[<change>] [de|het] (<blind>|<shutter>|<shade>) [<here>] <open>",
            "[<change>] ([de|het] (<blind>|<shutter>|<shade>) <open>;<here>)"
          ],
          "response": "cover",
          "slots": {
            "device_class": [
              "blind",
              "shutter",
              "shade"
            ],
            "domain": "cover"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        }
      ]
    },
    "HassMediaUnpause": {
      "data": [
        {
          "sentences": [
            "hervat [[de|het] <media_item> [op]] <name>",
            "[[de|het] <media_item> [op]] <name> hervatten",
            "[zet] <name> [weer] [op] ([af]spelen|play)",
            "ga verder met [de|het] <media_item> op <name>"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "hervat [[de|het] <media_item>] ",
            "[[de|het] <media_item>] hervat[ten]",
            "[zet] [[de|het] <media_item>] [weer] [op] ([af]spelen|play)",
            "ga verder met [de|het] <media_item>"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "hervat [[de|het] <media_item> [<in>]] <area>",
            "[[de|het] <media_item> [<in>]] <area> hervatten",
            "[zet] <area> [weer] [op] ([af]spelen|play)",
            "ga verder met [de|het] <media_item> [<in>] <area>"
          ]
        }
      ]
    },
    "HassShoppingListAddItem": {
      "data": [
        {
          "sentences": [
            "zet <item> op <my_list>",
            "voeg <item> toe (aan|op) <my_list>",
            "voeg <item> aan <my_list> toe"
          ],
          "response": "item_added",
          "expansion_rules": {
            "my_list": "[mijn|m'n|ons|onze|de|het] [boodschappen[ ]]lijst[je]",
            "item": "{shopping_list_item:item}"
          }
        }
      ]
    },
    "HassCancelAllTimers": {
      "data": [
        {
          "sentences": [
            "(annuleer|stop) <all_timers>",
            "[<would>] <all_timers> (stoppen|annuleren|[op] stop zetten)",
            "[<would>] <all> <timer>[s] (stoppen|annuleren|[op] stop zetten) <in> <area>"
          ],
          "expansion_rules": {
            "all_timers": "(\n  ((<all>|al) [<my>] <timer>[s];[<in> <area>])\n |(<all>|al) [<my>] {area}[ ]<timer>[s]\n)\n"
          }
        },
        {
          "sentences": [
            "annuleer alle timers in deze ruimte",
            "(annuleer|stop) (<here>;<timers>)",
            "[<would>] (<here>;<timers>) (stoppen|annuleren|[op] stop zetten)",
            "[<would>] <timers> (stoppen|annuleren|[op] stop zetten) <here>"
          ],
          "expansion_rules": {
            "timers": "( alle <timer>s |(iedere|elke) <timer> |al (mijn|m'n|de) <timer>s |[de] <timer>s )"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        }
      ]
    },
    "HassNevermind": {
      "data": [
        {
          "sentences": [
            "laat maar [zitten]",
            "annuleer"
          ]
        }
      ]
    },
    "HassSetPosition": {
      "data": [
        {
          "sentences": [
            "[<change>|open|sluit|draai] <name> [positie] [<to>] <position>",
            "[<would>] <name> [positie] [<to>]  <position> (draaien|zetten|veranderen|doen)"
          ],
          "requires_context": {
            "domain": "valve"
          },
          "slots": {
            "domain": "valve"
          }
        },
        {
          "sentences": [
            "[<numeric_value_set>|open|sluit] <name>[[ ]<cover>][[ ](positie|stand)] [<to>] <position>",
            "[<numeric_value_set>|open|sluit] [de] (positie|stand) [van] <name>[[ ]<cover>] [<to>] <position>",
            "[<change>] <name>[[ ]<cover>][[ ](positie|stand)] ([<to>] <position>;(omhoog|omlaag))",
            "[<change>] [de] (positie|stand) [van] <name>[[ ]<cover>] ([<to>] <position>;(omhoog|omlaag))",
            "[<would>] <name>[[ ](positie|stand)] [<to>] <position> (zetten|doen|verhogen|verlagen)",
            "[<would>] [de] (positie|stand) [van] <name> [<to>] <position> (zetten|doen|verhogen|verlagen)"
          ],
          "requires_context": {
            "domain": "cover"
          },
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "(<numeric_value_set>|open|sluit) [de|het] {cover_classes:device_class}[[ ](positie|stand)] (<to> <position>;[<in>] <area>)",
            "(<numeric_value_set>|open|sluit) [de] (positie|stand) [van] [de|het] {cover_classes:device_class} (<to> <position>;[<in>] <area>)",
            "(<numeric_value_set>|open|sluit) <area>[ ]{cover_classes:device_class}[[ ](positie|stand)] <to> <position>",
            "(<numeric_value_set>|open|sluit) [de] (positie|stand) [van] <area>[ ]{cover_classes:device_class} <to> <position>",
            "[<change>] <area>[ ]{cover_classes:device_class}[[ ](positie|stand)] ([<to>] <position>;(omhoog|omlaag))",
            "[<change>] [de] (positie|stand) [van] [de|het] <area>[ ]{cover_classes:device_class} ([<to>] <position>;(omhoog|omlaag))",
            "[<change>] ([<in>] <area>;[de|het] {cover_classes:device_class}[[ ](positie|stand)]) ([<to>] <position>;(omhoog|omlaag))",
            "[<change>] ([<in>] <area>;[de] (positie|stand) [van] [de|het] {cover_classes:device_class}) ([<to>] <position>;(omhoog|omlaag))",
            "[<would>] <area>[ ]{cover_classes:device_class}[[ ](positie|stand)] [<to>] <position> (zetten|doen|verhogen|verlagen)",
            "[<would>] [de] (positie|stand) [van] [de|het] <area>[ ]{cover_classes:device_class} [<to>] <position> (zetten|doen|verhogen|verlagen)",
            "[<would>] ([<in>] <area>;[de|het] {cover_classes:device_class}[[ ](positie|stand)]) [<to>] <position> (zetten|doen|verhogen|verlagen)",
            "[<would>] ([<in>] <area>;[de] (positie|stand) [van] [de|het] {cover_classes:device_class}) [<to>] <position> (zetten|doen|verhogen|verlagen)"
          ],
          "slots": {
            "domain": "cover"
          }
        }
      ]
    },
    "HassGetCurrentDate": {
      "data": [
        {
          "sentences": [
            "welke (dag|datum) is het [vandaag|nu]",
            "wat is de [huidige] (dag|datum)",
            "(vertel me|geef me) de [huidige] (datum|dag)"
          ]
        }
      ]
    },
    "HassIncreaseTimer": {
      "data": [
        {
          "sentences": [
            "voeg <timer_duration> (toe;aan <my_timer>)",
            "voeg [<in>] <area> <timer_duration> (toe;aan [<my>] <timer>)",
            "[<would>] <timer_duration> (toevoegen;aan <my_timer>)",
            "[<would>] [<in>] <area> <timer_duration> (toevoegen;aan [<my>] <timer>)",
            "verleng (<my_timer>|<area_timer>) met <timer_duration>",
            "[<would>] aan (<my_timer>|<area_timer>) <timer_duration> toevoegen",
            "[<would>] (<my_timer>|<area_timer>) met <timer_duration> verlengen"
          ]
        }
      ]
    },
    "HassLawnMowerDock": {
      "data": [
        {
          "sentences": [
            "(stop [met]|annuleer) [het] gras[ ]maaien",
            "(stop [met]|annuleer) [het] maaien van [het] gras",
            "stop de grasmaaier",
            "stuur de grasmaaier terug",
            "laat de grasmaaier stoppen"
          ]
        },
        {
          "sentences": [
            "(stop|dock) <name> [grasmaaier]",
            "stuur <name> [grasmaaier] terug",
            "[stuur] <name> [grasmaaier] [terug] naar [zijn|z'n|het] (huis|dock[ing [station]]|basis[[ ]station])",
            "laat <name> [grasmaaier] terug naar [zijn|z'n|het] (huis|dock[ing [station]]|basis[[ ]station]) gaan"
          ],
          "requires_context": {
            "domain": "lawn_mower"
          }
        }
      ]
    },
    "HassLightSet": {
      "data": [
        {
          "sentences": [
            "[<numeric_value_set>|dim] [<brightness>] [van] <name>[[ ]<light>] [<to>] <brightness_value>",
            "[<numeric_value_set>|dim] [van] <name>[[ ]<light>][[ ]<brightness>] [<to>] <brightness_value>",
            "[<would>] [<brightness>] [van] <name>[[ ]<light>] [<to>] <brightness_value> (zetten|doen|veranderen|dimmen)",
            "[<would>] <name>[[ ]<light>][[ ]<brightness>] [<to>] <brightness_value> (zetten|doen|veranderen|dimmen)"
          ],
          "response": "brightness",
          "requires_context": {
            "domain": "light"
          }
        },
        {
          "sentences": [
            "[<numeric_value_set>|dim] (<brightness>|<light>) <in> (<area>|<floor>) [<to>] <brightness_value>",
            "[<numeric_value_set>|dim] [<brightness>] <in> (<area>|<floor>)[ ]<light> [<to>] <brightness_value>",
            "[<numeric_value_set>|dim] (<area>|<floor>)[ ](<brightness>|<light>) [<to>] <brightness_value>",
            "[<would>] (<brightness>|<light>) <in> (<area>|<floor>) [<to>] <brightness_value> (zetten|doen|veranderen|dimmen)",
            "[<would>] [<brightness>] <in> (<area>|<floor>)[ ]<light> [<to>] <brightness_value> (zetten|doen|veranderen|dimmen)",
            "[<would>] (<area>|<floor>)[ ](<brightness>|<light>) [<to>] <brightness_value> (zetten|doen|veranderen)",
            "[<would>] (<area>|<floor>)[[ ](<brightness>|<light>)] [<to>] <brightness_value> dimmen"
          ],
          "response": "brightness"
        },
        {
          "sentences": [
            "[<numeric_value_set>|dim] <name>[[ ]<light>][[ ]<brightness>] [<to>] [het] {brightness_level:brightness}",
            "[<numeric_value_set>|dim] <brightness> [van] <name>[ ][<light>] [<to>] [het] {brightness_level:brightness}",
            "[<numeric_value_set>|dim] <name>[ ][lamp] [<to>] [de|het] {brightness_level:brightness} <brightness>",
            "[<would>] <name>[[ ]<light>][[ ]<brightness>] [<to>] [het] {brightness_level:brightness} (zetten|doen|veranderen|dimmen)",
            "[<would>] <brightness> [van] <name>[ ][<light>] [<to>] [het] {brightness_level:brightness} (zetten|doen|veranderen|dimmen)",
            "[<would>] <name>[ ][lamp] [<to>] [de|het] {brightness_level:brightness} <brightness> (zetten|doen|veranderen|dimmen)"
          ],
          "requires_context": {
            "domain": "light"
          },
          "response": "brightness"
        },
        {
          "sentences": [
            "[<numeric_value_set>|dim] (<brightness>|<light>) <in> (<area>|<floor>) [<to>] {brightness_level:brightness}",
            "[<numeric_value_set>|dim] [<brightness>] <in> (<area>|<floor>)[ ]<light> [<to>] {brightness_level:brightness}",
            "[<numeric_value_set>|dim] (<area>|<floor>)[[ ]<light>][ ]<brightness> [<to>] {brightness_level:brightness}",
            "[<numeric_value_set>|dim] <in> (<area>|<floor>)[[ ]<light>][ ]<brightness> [<to>] {brightness_level:brightness}",
            "[<numeric_value_set>|dim] (<area>|<floor>) [<to>] [de|het] {brightness_level:brightness} [<brightness>]",
            "[<would>] (<brightness>|<light>) <in> (<area>|<floor>) {brightness_level:brightness} (zetten|doen|veranderen|dimmen)",
            "[<would>] [<brightness>] <in> (<area>|<floor>)[ ]<light> [het] {brightness_level:brightness} (zetten|doen|veranderen|dimmen)",
            "[<would>] <in> (<area>|<floor>)[[ ]<light>][ ]<brightness> {brightness_level:brightness} (zetten|doen|veranderen|dimmen)",
            "[<would>] (<area>|<floor>) [<to>] [de|het] {brightness_level:brightness} <brightness> (zetten|doen|veranderen|dimmen)"
          ],
          "response": "brightness"
        },
        {
          "sentences": [
            "[<change>] <name>[ ][<light>][ ][kleur] [<to>] {color}",
            "[<change>] [[de] kleur van] <name>[ ][<light>] [<to>] {color}",
            "[<would>] <name>[ ][<light>][ ][kleur] [<to>] {color} (zetten|doen|veranderen|maken)",
            "[<would>] [[de] kleur van] <name>[ ][<light>] [<to>] {color} (zetten|doen|veranderen|maken)"
          ],
          "response": "color"
        },
        {
          "sentences": [
            "[<change>] [[de] kleur van] ([[<all>] <light>] [<in>] (<area>|<floor>)|(<area>|<floor>)[[ ]<light>]) [<to>] {color}",
            "[<would>] [[de] kleur van] ([[<all>] <light>] [<in>] (<area>|<floor>)|(<area>|<floor>)[[ ]<light>]) [<to>] {color} (zetten|doen|veranderen|maken)"
          ],
          "response": "color"
        }
      ]
    },
    "HassMediaNext": {
      "data": [
        {
          "sentences": [
            "volgende <media_item> [op|voor] <name>",
            "[ga|zet] [op] <name> [op|naar] [het|de] volgende <media_item>",
            "(ga naar|zet) [het|de] volgende <media_item> op <name> [op]",
            "sla [[het|de] huidige|dit] <media_item> op <name> over",
            "sla dit op <name> over",
            "([op|voor] <name>;[de|het] volgende <media_item>) (opzetten|afspelen)"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "[het|de] volgende [<media_item>]",
            "(ga naar|zet) [het|de] volgende <media_item> [op]",
            "sla [[het|de] huidige] <media_item> over",
            "sla dit [<media_item>] over",
            "[de|het] volgende <media_item> (opzetten|afspelen)"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "volgende <media_item> [<in>] <area>",
            "[ga|zet] [<in>] <area> [op|naar] [het|de] volgende <media_item>",
            "(ga naar|zet) [het|de] volgende <media_item> [<in>] <area> [op]",
            "sla [[het|de] huidige|dit] <media_item> [<in>] <area> over",
            "sla dit [<in>] <area> over",
            "([<in>] <area>;[de|het] volgende <media_item>) (opzetten|afspelen)"
          ]
        }
      ]
    },
    "HassPauseTimer": {
      "data": [
        {
          "sentences": [
            "pauzeer (<my_timer>|<area_timer>)",
            "[<would>] (<my_timer>|<area_timer>) (pauzeren|op pauze zetten)"
          ]
        }
      ]
    },
    "HassLawnMowerStartMowing": {
      "data": [
        {
          "sentences": [
            "maai het gras",
            "(begin|start) [met] [het] gras[ ]maaien",
            "(begin|start) [met] [het] maaien van [het] gras",
            "start de grasmaaier",
            "laat de grasmaaier (starten|beginnen|[het] [gras] maaien)"
          ]
        },
        {
          "sentences": [
            "start <name> [grasmaaier]",
            "laat <name> [grasmaaier] [het] gras[ ]maaien"
          ],
          "requires_context": {
            "domain": "lawn_mower"
          }
        }
      ]
    },
    "HassDecreaseTimer": {
      "data": [
        {
          "sentences": [
            "haal <timer_duration> (af;van <my_timer>)",
            "haal [<in>] <area> <timer_duration> (af;van [<my>] <timer>)",
            "[<would>] <timer_duration> (afhalen;van <my_timer>)",
            "[<would>] [<in>] <area> <timer_duration> (afhalen;van [<my>] <timer>)",
            "verkort (<my_timer>|<area_timer>) met <timer_duration>",
            "kort (<my_timer>|<area_timer>) in met <timer_duration>",
            "[<would>] (<my_timer>|<area_timer>) met <timer_duration> (verkorten|inkorten)"
          ]
        }
      ]
    },
    "HassMediaPause": {
      "data": [
        {
          "sentences": [
            "(pauzeer|stop) [[de|het] <media_item> [op]] <name>",
            "[zet] [[de|het] <media_item> [op]] <name> [op] (pauze|stop)",
            "[[de|het] <media_item> [op]] <name> (op (pauze|stop) zetten|pauzeren|stoppen)"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "(pauzeren|pauzeer|stoppen)",
            "(pauzeer|stop) [de|het] <media_item>",
            "[de|het] <media_item> (pauzeren|stoppen)",
            "[zet [[de|het] <media_item>] op] (pauze|stop)"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "(pauzeer|stop) [[de|het] <media_item> [<in>]] <area>",
            "(pauzeer|stop) [<in>] <area>[ ]<media_item>",
            "<area>[[ ]<media_item>] pauze",
            "[zet] [[de|het] <media_item> <in>] <area> [op] (pauze|stop)",
            "[[de|het] <media_item> <in>] <area> (op (pauze|stop) zetten|pauzeren|stoppen)"
          ]
        }
      ]
    },
    "HassUnpauseTimer": {
      "data": [
        {
          "sentences": [
            "<resume> (<my_timer>|<area_timer>)",
            "[<would>] (<my_timer>|<area_timer>) (hervatten|weer aan zetten)"
          ],
          "expansion_rules": {
            "resume": "(hervat|ga verder met)"
          }
        }
      ]
    },
    "HassStartTimer": {
      "data": [
        {
          "sentences": [
            "[<timer_set>] <start_timer>",
            "[<would>] <start_timer> (zetten|starten|instellen)"
          ],
          "expansion_rules": {
            "timer_set": "(start|zet|maak|creëer)",
            "new_timer": "([{timer_name:name}[ ]](timer|kookwekker)|(timer|kookwekker) <timer_named> {timer_name:name})",
            "start_timer": "[een] (\n  <timer_duration> <new_timer>\n |<new_timer> (van|voor|op) <timer_duration>\n |(timer|kookwekker) (van|voor|op) <timer_duration> <timer_named> {timer_name:name}\n )\n"
          }
        },
        {
          "sentences": [
            "{timer_command:conversation_command} over <timer_duration>",
            "[<would>] over <timer_duration> {timer_command:conversation_command}"
          ],
          "response": "command"
        }
      ]
    },
    "HassClimateGetTemperature": {
      "data": [
        {
          "sentences": [
            "Wat is [de] [huidige] temperatuur [<in>] <area>",
            "Hoe <warm> is het [<in>] <area>",
            "Wat is de <area>[ ]temperatuur"
          ]
        },
        {
          "sentences": [
            "Wat is [de] [huidige] <name>[ ]temperatuur",
            "Wat is [de] [huidige] temperatuur [van|in] [de] <name>",
            "(hoe [hoog|laag|<warm>]|op hoeveel graden) (is|staat)  [de] <name> [ingesteld]"
          ],
          "requires_context": {
            "domain": "climate"
          }
        },
        {
          "sentences": [
            "wat is de temperatuur [<here>]",
            "wat is <here> de temperatuur",
            "hoe (warm|koud|heet|koel) is het [<here>]"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        }
      ]
    },
    "HassVacuumReturnToBase": {
      "data": [
        {
          "sentences": [
            "[stuur] <name> ([terug];[naar] <base>)",
            "[stuur] <name> terug",
            "laat <name> [terug] naar <base> (gaan|komen|rijden)",
            "[<would>] <name> terug sturen",
            "[<would>] <name> [terug] naar <base> laten (gaan|komen|rijden)"
          ],
          "requires_context": {
            "domain": "vacuum"
          },
          "expansion_rules": {
            "base": "[de|het] (basisstation|basis|[t]huis)"
          }
        }
      ]
    },
    "HassVacuumStart": {
      "data": [
        {
          "sentences": [
            "start <name>",
            "<change> <name> aan",
            "[<would>] <name> (starten|aan[ ](zetten|doen)|laten (stofzuigen|schoonmaken))",
            "[laat] <name> (stofzuigen|schoonmaken)"
          ],
          "requires_context": {
            "domain": "vacuum"
          }
        }
      ]
    },
    "HassRespond": {
      "data": [
        {
          "sentences": [
            "(hallo|hoi) home assistant"
          ],
          "response": "hello"
        },
        {
          "sentences": [
            "ben je altijd aan het (luisteren|opnemen)",
            "luister je altijd",
            "neem je altijd op"
          ],
          "response": "listening"
        },
        {
          "sentences": [
            "wat gebeurt er met (mijn|de) data",
            "waar gaat (mijn|de) data heen"
          ],
          "response": "data"
        },
        {
          "sentences": [
            "wat kan ik [allemaal] (zeggen|vragen)",
            "wat kun je [allemaal] doen"
          ],
          "response": "commands"
        },
        {
          "sentences": [
            "wie heeft je (gemaakt|gecreëerd)"
          ],
          "response": "creator"
        }
      ]
    },
    "HassBroadcast": {
      "data": [
        {
          "sentences": [
            "broadcast [overal] [dat] {message}",
            "roep [overal] ([dat] {message};om)"
          ]
        }
      ]
    },
    "HassMediaPrevious": {
      "data": [
        {
          "sentences": [
            "vorige <media_item> [op|voor] <name>",
            "[ga|zet] [op] <name> [op|naar] [het|de] vorige <media_item>",
            "(ga naar|zet) [het|de] vorige <media_item> op <name> [op]",
            "ga ([een] <media_item>;op <name>) terug",
            "([op|voor] <name>;[de|het] vorige <media_item>) (opzetten|afspelen)"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "[het|de] vorige [<media_item>]",
            "(ga naar|zet) [het|de] vorige <media_item> [op]",
            "ga [een] <media_item> terug",
            "[de|het] vorige <media_item> (opzetten|afspelen)"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "vorige <media_item> [<in>] <area>",
            "[ga|zet] [<in>] <area> [op|naar] [het|de] vorige <media_item>",
            "(ga naar|zet) [het|de] vorige <media_item> [<in>] <area> [op]",
            "ga ([een] <media_item>;[<in>] <area>) terug",
            "([<in>] <area>;[de|het] vorige <media_item>) (opzetten|afspelen)"
          ]
        }
      ]
    },
    "HassListAddItem": {
      "data": [
        {
          "sentences": [
            "voeg <item> toe (aan|op|voor) <my_list>",
            "voeg <item> (aan|op|voor) <my_list> toe",
            "zet <item> op <my_list>"
          ],
          "response": "item_added",
          "requires_context": {
            "domain": "todo"
          },
          "expansion_rules": {
            "my_list": "[mijn|m'n|ons|onze|de|het] {name}[[ ][boodschappen[ ]]lijst[je]]",
            "item": "{shopping_list_item:item}"
          }
        }
      ]
    },
    "HassSetVolume": {
      "data": [
        {
          "sentences": [
            "<numeric_value_set> <name> volume (naar|op) <volume>",
            "zet <name> [volume] [omhoog|omlaag] (op|naar) <volume>",
            "<numeric_value_set> [het] volume ([omhoog|omlaag] (naar|op) <volume>;[van|op] <name>)",
            "zet [het] volume (omhoog|omlaag) ((naar|op) <volume>;[van|op] <name>)",
            "(<name>;volume) <volume>",
            "(<volume>;volume) [op] <name>"
          ],
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "<numeric_value_set> [het] volume (naar|op) <volume>",
            "<numeric_value_set> [het] volume [omhoog|omlaag] (naar|op) <volume>",
            "zet [het] volume (omhoog|omlaag) (naar|op) <volume>",
            "(<volume>;volume)"
          ],
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "<numeric_value_set> [<in>] <area> [het] volume (naar|op) <volume>",
            "zet [<in>] <area> [volume] [omhoog|omlaag] (op|naar) <volume>",
            "<numeric_value_set> [het] volume ([omhoog|omlaag] (naar|op) <volume>;[<in>] <area>)",
            "zet [het] volume (omhoog|omlaag) ((naar|op) <volume>;[<in>] <area>)",
            "([<in>] <area>;volume) <volume>",
            "(<volume>;volume) [<in>] <area>"
          ]
        }
      ]
    },
    "HassListCompleteItem": {
      "data": [
        {
          "sentences": [
            "(verwijder|delete) <item> van <my_list>",
            "(haal|vink|check) <item> van <my_list> af",
            "markeer <item> (op|van) <my_list> als (gekocht|compleet|uitgevoerd|afgewerkt|gedaan|klaar|voltooid)"
          ],
          "response": "item_completed",
          "requires_context": {
            "domain": "todo"
          },
          "expansion_rules": {
            "my_list": "[mijn|m'n|ons|onze|de|het] {name}[[ ][boodschappen[ ]]lijst[je]]",
            "item": "{shopping_list_item:item}"
          }
        }
      ]
    },
    "HassClimateSetTemperature": {
      "data": [
        {
          "sentences": [
            "[<numeric_value_set>] [de] <temp> <to> <temperature>",
            "<temp> [<to>] <temperature> [(zetten|draaien|doen)]",
            "[<would>] [de] <temp> [<to>] <temperature> (zetten|draaien|doen)",
            "<numeric_value_set> <to> {temperature}<degrees>"
          ]
        },
        {
          "sentences": [
            "<numeric_value_set> [de] <temp> [<in>] (<area>|<floor>) <to> <temperature>",
            "<numeric_value_set> [de] <temp> <to> <temperature> <in> (<area>|<floor>)",
            "<numeric_value_set> [de] (<area>|<floor>)[ ]<temp> <to> <temperature>",
            "[<would>] (<area>|<floor>)[ ]<temp> [<to>] <temperature> [(zetten|draaien|doen)]",
            "[<would>] [de] <temp> [<in>] (<area>|<floor>) [<to>] <temperature> [(zetten|draaien|doen)]",
            "<numeric_value_set> (<area>|<floor>) <to> {temperature}<degrees>",
            "[<would>] (<area>|<floor>) [<to>] {temperature}<degrees> [(zetten|draaien|doen)]"
          ]
        },
        {
          "sentences": [
            "<numeric_value_set> [de] temperatuur van <name> <to> <temperature>",
            "<numeric_value_set> [de] <name>[ ]temperatuur <to> <temperature>",
            "[<would>] <name>[ ]temperatuur [<to>] <temperature> [(zetten|draaien|doen)]",
            "[<would>] [de] temperatuur van <name> [<to>] <temperature> [(zetten|draaien|doen)]",
            "<numeric_value_set> <name> <to> {temperature}<degrees>",
            "[<would>] <name> [<to>] {temperature}<degrees> [(zetten|draaien|doen)]"
          ],
          "requires_context": {
            "domain": "climate"
          }
        }
      ]
    },
    "HassSetVolumeRelative": {
      "data": [
        {
          "sentences": [
            "[(draai|zet) [het]] volume (omhoog|hoger)",
            "verhoog [het] volume",
            "[het] volume (verhogen|(omhoog|hoger) (zetten|draaien))"
          ],
          "slots": {
            "volume_step": "up"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "[(draai|zet) [het]] volume ((omhoog|hoger);[met] <volume_step>)",
            "verhoog [het] volume [met] <volume_step>",
            "[het] volume [met] <volume_step> (verhogen|(omhoog|hoger) (zetten|draaien))"
          ],
          "expansion_rules": {
            "volume_step": "{volume_step_up:volume_step}[%| procent]"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "[(draai|zet) [het]] volume (omlaag|lager|naar beneden)",
            "verlaag [het] volume",
            "[het] volume (verlagen|(omlaag|lager|naar beneden) (zetten|draaien))"
          ],
          "slots": {
            "volume_step": "down"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "[(draai|zet) [het]] volume ((omlaag|lager|naar beneden);[met] <volume_step>)",
            "verlaag [het] volume [met] <volume_step>",
            "[het] volume  [met] <volume_step> (verlagen|(omlaag|lager|naar beneden) (zetten|draaien))"
          ],
          "expansion_rules": {
            "volume_step": "{volume_step_down:volume_step}[%| procent]"
          },
          "requires_context": {
            "area": {
              "slot": true
            }
          }
        },
        {
          "sentences": [
            "[het] volume [van] <name> (verhogen|(hoger|omhoog) [zetten|draaien])",
            "<name> volume (verhogen|(hoger|omhoog) [zetten|draaien])",
            "verhoog [het] volume [van|voor|op]  <name>",
            "verhoog <name> volume",
            "(zet|draai) <name> volume (omhoog|hoger)"
          ],
          "slots": {
            "volume_step": "up"
          },
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "[het] volume [van] <name> ((verhogen|(hoger|omhoog) [zetten|draaien]);[met] <volume_step>)",
            "<name> volume ((verhogen|(hoger|omhoog) [zetten|draaien]);[met] <volume_step>)",
            "verhoog [het] volume ([van|voor|op] <name>;[met] <volume_step>)",
            "verhoog <name> volume [met] <volume_step>",
            "(zet|draai) <name> volume ((omhoog|hoger);[met] <volume_step>)"
          ],
          "expansion_rules": {
            "volume_step": "{volume_step_up:volume_step}[%| procent]"
          },
          "slots": {
            "volume_step": "up"
          },
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "[het] volume [van] <name> (verlagen|(lager|omlaag) [zetten|draaien])",
            "<name> volume (verlagen|(lager|omlaag) [zetten|draaien])",
            "verlaag [het] volume [van|voor|op]  <name>",
            "verlaag <name> volume",
            "(zet|draai) <name> volume (omlaag|lager|naar beneden)"
          ],
          "slots": {
            "volume_step": "down"
          },
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "[het] volume [van] <name> ((verlagen|(lager|omlaag) [zetten|draaien]);[met] <volume_step>)",
            "<name> volume ((verlagen|(lager|omlaag) [zetten|draaien]);[met] <volume_step>)",
            "verlaag [het] volume ([van|voor|op] <name>;[met] <volume_step>)",
            "verlaag <name> volume [met] <volume_step>",
            "(zet|draai) <name> volume ((omlaag|lager|naar beneden);[met] <volume_step>)"
          ],
          "expansion_rules": {
            "volume_step": "{volume_step_down:volume_step}[%| procent]"
          },
          "slots": {
            "volume_step": "down"
          },
          "requires_context": {
            "domain": "media_player"
          }
        },
        {
          "sentences": [
            "[het] volume (<in_area_floor>;(verhogen|(hoger|omhoog) [zetten|draaien]))",
            "<area_floor> volume (verhogen|(hoger|omhoog) [zetten|draaien])",
            "verhoog ([het] volume;<in_area_floor>)",
            "(zet|draai) <in_area_floor> volume (omhoog|hoger)"
          ],
          "slots": {
            "volume_step": "up"
          }
        },
        {
          "sentences": [
            "[het] volume (<in_area_floor>;((verhogen|(hoger|omhoog) [zetten|draaien]);[met] <volume_step>))",
            "<area_floor> volume ((verhogen|(hoger|omhoog) [zetten|draaien]);[met] <volume_step>)",
            "verhoog ([het] volume;<in_area_floor>) [met] <volume_step>",
            "(zet|draai) <in_area_floor> volume ((omhoog|hoger);[met] <volume_step>)"
          ],
          "expansion_rules": {
            "volume_step": "{volume_step_up:volume_step}[%| procent]"
          }
        },
        {
          "sentences": [
            "[het] volume (<in_area_floor>;(verlagen|(lager|omlaag) [zetten|draaien]))",
            "<area_floor> volume (verlagen|(lager|omlaag) [zetten|draaien])",
            "verlaag ([het] volume;<in_area_floor>)",
            "(zet|draai) <in_area_floor> volume (omlaag|lager|naar beneden)"
          ],
          "slots": {
            "volume_step": "down"
          }
        },
        {
          "sentences": [
            "[het] volume (<in_area_floor>;((verlagen|(lager|omlaag) [zetten|draaien]);[met] <volume_step>))",
            "<area_floor> volume ((verlagen|(lager|omlaag) [zetten|draaien]);[met] <volume_step>)",
            "verlaag ([het] volume;<in_area_floor>) [met] <volume_step>",
            "(zet|draai) <in_area_floor> volume ((omlaag|lager|naar beneden);[met] <volume_step>)"
          ],
          "expansion_rules": {
            "volume_step": "{volume_step_down:volume_step}[%| procent]"
          }
        }
      ]
    }
  },
  "settings": {
    "filter_with_regex": false
  },
  "responses": {
    "errors": {
      "no_intent": "Sorry, ik snap het niet",
      "handle_error": "Sorry, er is onverwacht iets misgegaan",
      "no_area": "Sorry, ik kan {{ area }} niet vinden",
      "no_domain": "{% set translations = {\n  \"button\": \"knop\",\n  \"camera\": \"camera\",\n  \"input_button\": \"knop\",\n  \"alarm_control_panel\": \"alarm\",\n  \"automation\": \"automatisering\",\n  \"fan\": \"ventilator\",\n  \"climate\": \"thermostaat\",\n  \"humidifier\": \"ontvochtiger\",\n  \"input_boolean\": \"schakelaar\",\n  \"siren\": \"sirence\",\n  \"water_heater\": \"boiler\",\n  \"light\": \"lamp\",\n  \"switch\": \"schakelaar\",\n  \"script\": \"script\",\n  \"remote\": \"afstandsbediening\",\n  \"lock\": \"slot\",\n  \"vacuum\": \"stofzuiger\",\n  \"scene\": \"scène\",\n  \"media_player\": \"mediaspeler\",\n  \"lawn_mower\": \"grasmaaier\",\n  \"valve\": \"klep\"\n  } %}\n{% if domain in translations -%}\n  Sorry, ik kan geen enkele {{ translations[domain] }} vinden\n{%- else -%}\n  Sorry, ik kan geen apparaat van dat type vinden.\n{%- endif %}\n",
      "no_domain_in_area": "{% set translations = {\n  \"button\": \"knop\",\n  \"camera\": \"camera\",\n  \"input_button\": \"knop\",\n  \"alarm_control_panel\": \"alarm\",\n  \"automation\": \"automatisering\",\n  \"fan\": \"ventilator\",\n  \"climate\": \"thermostaat\",\n  \"humidifier\": \"ontvochtiger\",\n  \"input_boolean\": \"schakelaar\",\n  \"siren\": \"sirence\",\n  \"water_heater\": \"boiler\",\n  \"light\": \"lamp\",\n  \"switch\": \"schakelaar\",\n  \"script\": \"script\",\n  \"remote\": \"afstandsbediening\",\n  \"lock\": \"slot\",\n  \"vacuum\": \"stofzuiger\",\n  \"scene\": \"scène\",\n  \"media_player\": \"mediaspeler\",\n  \"lawn_mower\": \"grasmaaier\",\n  \"valve\": \"klep\"\n  } %}\n{% if domain in translations -%}\n  Sorry, ik kan geen {{ translations[domain] }} vinden in {{ area }}\"\n{%- else -%}\n  Sorry, ik kan in {{ area }} geen apparaat van dat type vinden.\n{%- endif %}\n",
      "no_device_class": "{% set translations = {\n  \"awning\": \"luifel\",\n  \"blind\": \"jaloezie\",\n  \"curtain\": \"gordijn\",\n  \"door\": \"deur\",\n  \"garage\": \"garagedeur\",\n  \"gate\": \"poort\",\n  \"shade\": \"rolgordijn\",\n  \"shutter\": \"rolluik\",\n  \"window\": \"raam\"\n  } %}\n{% if device_class in translations -%}\n  Sorry, ik kan geen enkele {{ translations[device_class] }} vinden\n{%- else -%}\n  Sorry, ik kan geen apparaat van dat type vinden.\n{%- endif %}\n",
      "no_device_class_in_area": "{% set translations = {\n  \"awning\": \"luifel\",\n  \"blind\": \"jaloezie\",\n  \"curtain\": \"gordijn\",\n  \"door\": \"deur\",\n  \"garage\": \"garagedeur\",\n  \"gate\": \"poort\",\n  \"shade\": \"rolgordijn\",\n  \"shutter\": \"rolluik\",\n  \"window\": \"raam\"\n  } %}\n{% if device_class in translations -%}\n  Sorry, ik kan geen {{ translations[device_class] }} vinden in {{ area }}\"\n{%- else -%}\n  Sorry, ik kan in {{ area }} geen apparaat van dat type vinden.\n{%- endif %}\n",
      "no_entity": "Sorry, ik kan geen apparaat vinden met de naam {{ entity }}",
      "no_entity_in_area": "Sorry, ik kan geen apparaat met de naam {{ entity }} in {{ area }} vinden",
      "no_floor": "Sorry, ik kan {{ floor }} niet vinden",
      "no_domain_in_floor": "{% set translations = {\n  \"button\": \"knop\",\n  \"camera\": \"camera\",\n  \"input_button\": \"knop\",\n  \"alarm_control_panel\": \"alarm\",\n  \"automation\": \"automatisering\",\n  \"fan\": \"ventilator\",\n  \"climate\": \"thermostaat\",\n  \"humidifier\": \"ontvochtiger\",\n  \"input_boolean\": \"schakelaar\",\n  \"siren\": \"sirence\",\n  \"water_heater\": \"boiler\",\n  \"light\": \"lamp\",\n  \"switch\": \"schakelaar\",\n  \"script\": \"script\",\n  \"remote\": \"afstandsbediening\",\n  \"lock\": \"slot\",\n  \"vacuum\": \"stofzuiger\",\n  \"scene\": \"scène\",\n  \"media_player\": \"mediaspeler\",\n  \"lawn_mower\": \"grasmaaier\",\n  \"valve\": \"klep\"\n  } %}\n{% if domain in translations -%}\n  Sorry, ik kan geen {{ translations[domain] }} vinden in {{ floor }}\"\n{%- else -%}\n  Sorry, ik kan in {{ floor }} geen apparaat van dat type vinden.\n{%- endif %}\n",
      "no_device_class_in_floor": "{% set translations = {\n  \"awning\": \"luifel\",\n  \"blind\": \"jaloezie\",\n  \"curtain\": \"gordijn\",\n  \"door\": \"deur\",\n  \"garage\": \"garagedeur\",\n  \"gate\": \"poort\",\n  \"shade\": \"rolgordijn\",\n  \"shutter\": \"rolluik\",\n  \"window\": \"raam\"\n  } %}\n{% if device_class in translations -%}\n  Sorry, ik kan geen {{ translations[device_class] }} vinden in {{ floor }}\"\n{%- else -%}\n  Sorry, ik kan in {{ floor }} geen apparaat van dat type vinden.\n{%- endif %}\n",
      "no_entity_in_floor": "Sorry, ik kan geen apparaat met de naam {{ entity }} in {{ floor }} vinden",
      "entity_wrong_state": "Sorry, geen enkel apparaat heeft de status {{ state | lower }}",
      "feature_not_supported": "Sorry, er is geen apparaat wat dit ondersteund.",
      "no_entity_exposed": "Sorry, {{ entity }} is niet ontsloten",
      "no_entity_in_area_exposed": "Sorry, {{ entity }} in {{ area }} is niet ontsloten",
      "no_domain_exposed": "{% set translations = {\n  \"button\": \"knop\",\n  \"camera\": \"camera\",\n  \"input_button\": \"knop\",\n  \"alarm_control_panel\": \"alarm\",\n  \"automation\": \"automatisering\",\n  \"fan\": \"ventilator\",\n  \"climate\": \"thermostaat\",\n  \"humidifier\": \"ontvochtiger\",\n  \"input_boolean\": \"schakelaar\",\n  \"siren\": \"sirence\",\n  \"water_heater\": \"boiler\",\n  \"light\": \"lamp\",\n  \"switch\": \"schakelaar\",\n  \"script\": \"script\",\n  \"remote\": \"afstandsbediening\",\n  \"lock\": \"slot\",\n  \"vacuum\": \"stofzuiger\",\n  \"scene\": \"scène\",\n  \"media_player\": \"mediaspeler\",\n  \"lawn_mower\": \"grasmaaier\",\n  \"valve\": \"klep\"\n  } %}\n{% if domain in translations -%}\n  Sorry, er is geen {{ translations[domain] }} ontsloten\"\n{%- else -%}\n  Sorry, er is geen apparaat van dat type ontsloten.\n{%- endif %}\n",
      "no_domain_in_area_exposed": "{% set translations = {\n  \"button\": \"knop\",\n  \"camera\": \"camera\",\n  \"input_button\": \"knop\",\n  \"alarm_control_panel\": \"alarm\",\n  \"automation\": \"automatisering\",\n  \"fan\": \"ventilator\",\n  \"climate\": \"thermostaat\",\n  \"humidifier\": \"ontvochtiger\",\n  \"input_boolean\": \"schakelaar\",\n  \"siren\": \"sirence\",\n  \"water_heater\": \"boiler\",\n  \"light\": \"lamp\",\n  \"switch\": \"schakelaar\",\n  \"script\": \"script\",\n  \"remote\": \"afstandsbediening\",\n  \"lock\": \"slot\",\n  \"vacuum\": \"stofzuiger\",\n  \"scene\": \"scène\",\n  \"media_player\": \"mediaspeler\",\n  \"lawn_mower\": \"grasmaaier\",\n  \"valve\": \"klep\"\n  } %}\n{% if domain in translations -%}\n  Sorry, er is geen {{ translations[domain] }} voor {{ area }} ontsloten\"\n{%- else -%}\n  Sorry, er is voor {{ area }} geen apparaat van dat type ontsloten.\n{%- endif %}\n",
      "no_device_class_exposed": "{% set translations = {\n  \"awning\": \"luifel\",\n  \"blind\": \"jaloezie\",\n  \"curtain\": \"gordijn\",\n  \"door\": \"deur\",\n  \"garage\": \"garagedeur\",\n  \"gate\": \"poort\",\n  \"shade\": \"rolgordijn\",\n  \"shutter\": \"rolluik\",\n  \"window\": \"raam\"\n  } %}\n{% if device_class in translations -%}\n  Sorry, er is geen {{ translations[device_class] }} ontsloten\"\n{%- else -%}\n  Sorry, er is geen apparaat van dat type ontsloten.\n{%- endif %}\n",
      "no_device_class_in_area_exposed": "{% set translations = {\n  \"awning\": \"luifel\",\n  \"blind\": \"jaloezie\",\n  \"curtain\": \"gordijn\",\n  \"door\": \"deur\",\n  \"garage\": \"garagedeur\",\n  \"gate\": \"poort\",\n  \"shade\": \"rolgordijn\",\n  \"shutter\": \"rolluik\",\n  \"window\": \"raam\"\n  } %}\n{% if device_class in translations -%}\n  Sorry, er is geen {{ translations[device_class] }} voor {{ area }} ontsloten\"\n{%- else -%}\n  Sorry, er is voor {{ area }} geen apparaat van dat type ontsloten.\n{%- endif %}\n",
      "no_entity_in_floor_exposed": "Sorry, {{ entity }} is voor {{ floor }} niet ontsloten",
      "no_domain_in_floor_exposed": "{% set translations = {\n  \"button\": \"knop\",\n  \"camera\": \"camera\",\n  \"input_button\": \"knop\",\n  \"alarm_control_panel\": \"alarm\",\n  \"automation\": \"automatisering\",\n  \"fan\": \"ventilator\",\n  \"climate\": \"thermostaat\",\n  \"humidifier\": \"ontvochtiger\",\n  \"input_boolean\": \"schakelaar\",\n  \"siren\": \"sirence\",\n  \"water_heater\": \"boiler\",\n  \"light\": \"lamp\",\n  \"switch\": \"schakelaar\",\n  \"script\": \"script\",\n  \"remote\": \"afstandsbediening\",\n  \"lock\": \"slot\",\n  \"vacuum\": \"stofzuiger\",\n  \"scene\": \"scène\",\n  \"media_player\": \"mediaspeler\",\n  \"lawn_mower\": \"grasmaaier\",\n  \"valve\": \"klep\"\n  } %}\n{% if domain in translations -%}\n  Sorry, er is geen {{ translations[domain] }} voor {{ floor }} ontsloten\"\n{%- else -%}\n  Sorry, er is voor {{ floor }} geen apparaat van dat type ontsloten.\n{%- endif %}\n",
      "no_device_class_in_floor_exposed": "{% set translations = {\n  \"awning\": \"luifel\",\n  \"blind\": \"jaloezie\",\n  \"curtain\": \"gordijn\",\n  \"door\": \"deur\",\n  \"garage\": \"garagedeur\",\n  \"gate\": \"poort\",\n  \"shade\": \"rolgordijn\",\n  \"shutter\": \"rolluik\",\n  \"window\": \"raam\"\n  } %}\n{% if device_class in translations -%}\n  Sorry, er is geen {{ translations[device_class] }} voor {{ floor }} ontsloten\"\n{%- else -%}\n  Sorry, er is voor {{ floor }} geen apparaat van dat type ontsloten.\n{%- endif %}\n",
      "duplicate_entities": "Sorry, er zijn meerdere apparaten met de naam {{ entity }}",
      "duplicate_entities_in_area": "Sorry, er zijn meerdere apparaten met de naam {{ entity }} in {{ area }}",
      "duplicate_entities_in_floor": "Sorry, er zijn meerdere apparaten met de naam {{ entity }} in {{ floor }}",
      "timer_not_found": "Sorry, ik kan die timer niet vinden",
      "multiple_timers_matched": "Sorry, dit werkt niet op meerdere timers tegelijk",
      "no_timer_support": "Sorry, timers zijn niet ondersteund op dit apparaat"
    },
    "intents": {
      "HassGetState": {
        "one": "{{ slots.name | capitalize }} is {{ state.state_with_unit }}\n",
        "one_yesno": "{% if query.matched %}\n  Ja\n{% else %}\n  Nee, die is {{ state.state_with_unit }}\n{% endif %}\n",
        "one_zone": "{% if query.matched %}\n  Ja\n{% elif state.state == 'not_home' %}\n  Nee, die is niet thuis\n{% else %}\n  Nee, die is in de zone {{ state.state_with_unit }}\n{% endif %}\n",
        "bs_yesno": "{% if query.matched %}\n  Ja\n{% else %}\n  Nee\n{% endif %}\n",
        "any": "{% if query.matched %}\n  {% set match = query.matched | map(attribute=\"name\") | sort | list %}\n  {% if match | length > 4 %}\n    Ja, {{ match[:3] | join(\", \") }} en nog {{ (match | length - 3) }}\n  {%- else -%}\n    Ja,\n    {% for name in match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} en {% endif -%}\n      {{ name }}\n    {%- endfor -%}\n  {% endif %}\n{% else %}\n  Nee\n{% endif %}\n",
        "all": "{% if not query.unmatched: %}\n  Ja\n{% else %}\n  {% set no_match = query.unmatched | map(attribute=\"name\") | sort | list %}\n  {% if no_match | length > 4 %}\n    Nee, {{ no_match[:3] | join(\", \") }} en nog {{ (no_match | length - 3) }} niet\n  {%- else -%}\n    Nee,\n    {% for name in no_match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} en {% endif -%}\n      {{ name }}\n    {%- endfor %} niet\n  {% endif %}\n{% endif %}\n",
        "which": "{% if not query.matched %}\n  Geen\n{% else %}\n  {% set match = query.matched | map(attribute=\"name\") | sort | list %}\n  {% if match | length > 4 %}\n    {{ match[:3] | join(\", \") }} en nog {{ (match | length - 3) }}\n  {% else %}\n    {%- for name in match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} en {% endif -%}\n      {{ name }}\n    {%- endfor -%}\n  {% endif %}\n{% endif %}\n",
        "how_many": "{{ query.matched | length }}\n",
        "where": "{% if state.state == \"not_home\" %}\n  {{ slots.name | capitalize }} is niet thuis\n{% elif state.state == \"home\" %}\n  {{ slots.name | capitalize }} is thuis\n{% else %}\n  {{ slots.name | capitalize }} is in zone {{ state.state }}\n{% endif %}\n"
      },
      "HassTurnOff": {
        "default": "Uitgezet",
        "lights_area": "Verlichting uitgezet",
        "fans_area": "Ventilatoren uitgezet",
        "cover": "Gesloten",
        "light_all": "Alle lampen uitgezet",
        "fan_all": "Alle ventilatoren uitgezet",
        "lock": "Ontgrendeld",
        "lock_area": "Sloten ontgrendeld",
        "valve": "Gesloten"
      },
      "HassClimateSetTemperature": {
        "default": "Temperatuur ingesteld op {{ slots.temperature }} {{ 'graad' if (slots.temperature | float) == 1 else 'graden' }}"
      },
      "HassStartTimer": {
        "default": "{% set h = slots.hours if slots.hours is defined else none %} {% set m = slots.minutes if slots.minutes is defined else none %} {% set s = slots.seconds if slots.seconds is defined else none %} {% set h_text = h ~ ' uur' if h else '' %} {% set m_text = (30 if m in ['half', 'halve', '1/2', '1/2e'] else 90 if m in ['anderhalf', 'anderhalve'] else m) ~ (' minuut' if m in [ '1', 'een', 'één'] else ' minuten') if m else '' %} {% set s_text = (30 if s in ['half', 'halve', '1/2', '1/2e'] else 90 if s in ['anderhalf', 'anderhalve'] else s) ~ (' seconde' if s in [ '1', 'een', 'één'] else ' seconden') if s else '' %} {% set text_list = [ h_text, m_text, s_text] | select() | list %} {% set text = text_list[:-1] | join(', ') ~ ' en ' ~ text_list[-1] if text_list | count > 2 else text_list | join(' en ') %} {% set name = (' met de naam ' ~ slots.name | trim) if slots.name is defined else '' %} Timer gezet voor {{ text }}{{ name }}\n",
        "command": "{% set h = slots.hours if slots.hours is defined else none %} {% set m = slots.minutes if slots.minutes is defined else none %} {% set s = slots.seconds if slots.seconds is defined else none %} {% set h_text = h ~ ' uur' if h else '' %} {% set m_text = (30 if m in ['half', 'halve', '1/2', '1/2e'] else 90 if m in ['anderhalf', 'anderhalve'] else m) ~ (' minuut' if m in [ '1', 'een', 'één'] else ' minuten') if m else '' %} {% set s_text = (30 if s in ['half', 'halve', '1/2', '1/2e'] else 90 if s in ['anderhalf', 'anderhalve'] else s) ~ (' seconde' if s in [ '1', 'een', 'één'] else ' seconden') if s else '' %} {% set text_list = [ h_text, m_text, s_text] | select() | list %} {% set text = text_list[:-1] | join(', ') ~ ' en ' ~ text_list[-1] if text_list | count > 2 else text_list | join(' en ') %} Opdracht wordt uitgevoerd over {{ text }}\n"
      },
      "HassShoppingListAddItem": {
        "item_added": "{{ slots.item }} toegevoegd"
      },
      "HassTurnOn": {
        "default": "Aangezet",
        "lights_area": "Verlichting aangezet",
        "fans_area": "Ventilatoren aangezet",
        "cover": "Geopend",
        "scene": "Geactiveerd",
        "script": "Gestart",
        "lock": "Vergrendeld",
        "lock_area": "Sloten vergrendeld",
        "valve": "Geopend"
      },
      "HassMediaPause": {
        "default": "Gepauzeerd"
      },
      "HassGetCurrentTime": {
        "default": "{% set minute_str = '{0:02d}'.format(slots.time.minute) %} Het is {{ slots.time.hour }}:{{ minute_str }}\n"
      },
      "HassPauseTimer": {
        "default": "Timer gepauzeerd"
      },
      "HassTimerStatus": {
        "default": "{% set num_timers = slots.timers | length %}\n{% set active_timers = slots.timers | selectattr('is_active') | list %}\n{% set num_active_timers = active_timers | length %}\n{% set paused_timers = slots.timers | rejectattr('is_active') | list %}\n{% set num_paused_timers = paused_timers | length %}\n{% set next_timer = None %}\n\n{% if num_timers == 0: %}\n  Geen timers.\n{% elif num_active_timers == 0: %}\n  {# No active timers #}\n  {{ num_paused_timers }} gepauzeerde timer{{ 's' if num_paused_timers > 1 }}.\n{% else: %}\n  {# At least one active timer #}\n  {% if num_active_timers == 1: %}\n    {% set next_timer = active_timers[0] %}\n  {% else: %}\n    {# Get active timer that will finish soonest #}\n    {% set sorted_timers = active_timers | sort(attribute='total_seconds_left') %}\n    {% set next_timer = sorted_timers[0] %}\n    {{ num_active_timers }} actieve timers.\n  {% endif %}\n\n  {% if num_paused_timers == 1: %}\n    1 gepauzeerde timer.\n  {% elif num_paused_timers > 0: %}\n    {{ num_paused_timers }} gepauzeerde timers.\n  {% endif %}\n{% endif %}\n\n{% if next_timer: %}\n  {# At least one active timer #}\n  {% if (next_timer.rounded_hours_left == 1) and (next_timer.rounded_minutes_left > 0): %}\n    1 uur en {{ next_timer.rounded_minutes_left }} minuten\n  {% elif (next_timer.rounded_hours_left == 1): %}\n    1 uur\n  {% elif (next_timer.rounded_hours_left > 1) and (next_timer.rounded_minutes_left > 0): %}\n    {{ next_timer.rounded_hours_left }} uur en {{ next_timer.rounded_minutes_left }} minuten\n  {% elif (next_timer.rounded_hours_left > 1): %}\n    {{ next_timer.rounded_hours_left }} uur\n  {% elif (next_timer.rounded_minutes_left == 1) and (next_timer.rounded_seconds_left > 0): %}\n    1 minuut en {{ next_timer.rounded_seconds_left }} seconden\n  {% elif (next_timer.rounded_minutes_left == 1): %}\n    1 minuut\n  {% elif (next_timer.rounded_minutes_left > 1) and (next_timer.rounded_seconds_left > 0): %}\n    {{ next_timer.rounded_minutes_left }} minuten en {{ next_timer.rounded_seconds_left }} seconden\n  {% elif (next_timer.rounded_minutes_left > 1): %}\n    {{ next_timer.rounded_minutes_left }} minuten\n  {% elif (next_timer.rounded_seconds_left == 1): %}\n    1 seconde\n  {% elif (next_timer.rounded_seconds_left > 1): %}\n    {{ next_timer.rounded_seconds_left }} seconden\n  {% endif %}\n\n  {% if num_timers > 1: %}\n    {# Give some extra information to disambiguate #}\n    over op\n    {% if (next_timer.start_hours > 0) and (next_timer.start_minutes > 0): %}\n      {{ next_timer.start_hours }} uur en {{ next_timer.start_minutes }} minuten\n    {% elif (next_timer.start_hours > 0): %}\n      {{ next_timer.start_hours }} uur\n    {% elif (next_timer.start_minutes > 0) and (next_timer.start_seconds > 0): %}\n      {{ next_timer.start_minutes }} minuten en {{ next_timer.start_seconds }} seconde\n    {% elif (next_timer.start_minutes > 0): %}\n      {{ next_timer.start_minutes }} minuten\n    {% elif (next_timer.start_seconds > 0): %}\n      {{ next_timer.start_seconds }} seconde\n    {% endif %}\n\n    {% if next_timer.name: %}\n      {{ next_timer.name }}\n    {% elif next_timer.area: %}\n      {{ next_timer.area }}\n    {% endif %}\n\n    timer.\n  {% else: %}\n    resterend.\n  {% endif %}\n{% endif %}\n"
      },
      "HassListAddItem": {
        "item_added": "{{ slots.item }} toegevoegd"
      },
      "HassGetCurrentDate": {
        "default": "{% set months = {\n   1: 'januari',\n   2: 'februari',\n   3: 'maart',\n   4: 'april',\n   5: 'mei',\n   6: 'juni',\n   7: 'juli',\n   8: 'augustus',\n   9: 'september',\n   10: 'oktober',\n   11: 'november',\n   12: 'december',\n} %} {% set weekday = [\n  'maandag',\n  'dinsdag',\n  'woensdag',\n  'donderdag',\n  'vrijdag',\n  'zaterdag',\n  'zondag'\n] %} Het is {{ weekday[slots.date.weekday()] }} {{ slots.date.day }} {{ months[slots.date.month] }} {{ slots.date.year }}\n"
      },
      "HassUnpauseTimer": {
        "default": "Timer hervat"
      },
      "HassMediaPrevious": {
        "default": "Vorige wordt afgespeeld"
      },
      "HassLawnMowerStartMowing": {
        "default": "Gestart"
      },
      "HassGetWeather": {
        "default": "{% set weather_condition = {\n  'clear': 'en helder',\n  'clear-night': 'en helder',\n  'cloudy': 'en bewolkt',\n  'exceptional': 'en extreem',\n  'fog': 'met mist',\n  'hail': 'met hagel',\n  'lightning': 'met onweer',\n  'lightning-rainy': 'met onweer en regen',\n  'partlycloudy': 'en gedeeltelijk bewolkt',\n  'pouring': 'met stortregen',\n  'rainy': 'met regen',\n  'snowy': 'met sneeuw',\n  'snowy-rainy': 'met sneeuw en regen',\n  'sunny': 'en zonnig',\n  'windy': 'met wind',\n  'windy-variant': 'met wind en bewolking'\n} %} {{ state.attributes.get('temperature') }} graden {{ weather_condition.get((state.state | string).lower(), \"\") }}\n"
      },
      "HassLightSet": {
        "brightness": "Helderheid aangepast",
        "color": "Kleur aangepast"
      },
      "HassCancelAllTimers": {
        "default": "{% if slots.canceled < 1: %} Geen timer geannuleerd. {% elif slots.canceled == 1: %} 1 timer geannuleerd. {% else: %} {{ slots.canceled }} timers geannuleerd. {% endif %}\n"
      },
      "HassLawnMowerDock": {
        "default": "Gaat terug"
      },
      "HassBroadcast": {
        "default": "Gedaan"
      },
      "HassVacuumStart": {
        "default": "Gestart"
      },
      "HassMediaUnpause": {
        "default": "Hervat"
      },
      "HassSetPosition": {
        "default": "Positie aangepast"
      },
      "HassMediaNext": {
        "default": "Volgende wordt afgespeeld"
      },
      "HassSetVolumeRelative": {
        "default": "Volume aangepast"
      },
      "HassCancelTimer": {
        "default": "Timer geannuleerd"
      },
      "HassMediaSearchAndPlay": {
        "default": "{% if slots.media: %}\nMedia wordt afgespeeld\n{% else: %}\nMedia niet gevonden\n{% endif %}\n"
      },
      "HassClimateGetTemperature": {
        "default": "{% set current_temperature = state_attr(state.entity_id, 'current_temperature') %} {% set temperature = state.state if current_temperature is none else current_temperature %} {% if temperature == 1: %}\n  {{ temperature }} graad\n{% else: %}\n  {{ temperature }} graden\n{% endif %}\n"
      },
      "HassSetVolume": {
        "default": "Volume aangepast"
      },
      "HassListCompleteItem": {
        "item_completed": "{{ slots.item | capitalize }} afgevinkt"
      },
      "HassDecreaseTimer": {
        "default": "{% set h = slots.hours if slots.hours is defined else none %} {% set m = slots.minutes if slots.minutes is defined else none %} {% set s = slots.seconds if slots.seconds is defined else none %} {% set h_text = h ~ ' uur' if h else '' %} {% set m_text = (30 if m in ['half', 'halve', '1/2', '1/2e'] else 90 if m in ['anderhalf', 'anderhalve'] else m) ~ (' minuut' if m in [ '1', 'een', 'één'] else ' minuten') if m else '' %} {% set s_text = (30 if s in ['half', 'halve', '1/2', '1/2e'] else 90 if s in ['anderhalf', 'anderhalve'] else s) ~ (' seconde' if s in [ '1', 'een', 'één'] else ' seconden') if s else '' %} {% set text_list = [ h_text, m_text, s_text] | select() | list %} {% set text = text_list[:-1] | join(', ') ~ ' en ' ~ text_list[-1] if text_list | count > 2 else text_list | join(' en ') %} {% set name = (' met de naam ' ~ slots.name | trim) if slots.name is defined else '' %} Timer{{ name }} ingekort met {{ text }}\n"
      },
      "HassIncreaseTimer": {
        "default": "{% set h = slots.hours if slots.hours is defined else none %} {% set m = slots.minutes if slots.minutes is defined else none %} {% set s = slots.seconds if slots.seconds is defined else none %} {% set h_text = h ~ ' uur' if h else '' %} {% set m_text = (30 if m in ['half', 'halve', '1/2', '1/2e'] else 90 if m in ['anderhalf', 'anderhalve'] else m) ~ (' minuut' if m in [ '1', 'een', 'één'] else ' minuten') if m else '' %} {% set s_text = (30 if s in ['half', 'halve', '1/2', '1/2e'] else 90 if s in ['anderhalf', 'anderhalve'] else s) ~ (' seconde' if s in [ '1', 'een', 'één'] else ' seconden') if s else '' %} {% set text_list = [ h_text, m_text, s_text] | select() | list %} {% set text = text_list[:-1] | join(', ') ~ ' en ' ~ text_list[-1] if text_list | count > 2 else text_list | join(' en ') %} {% set name = (' met de naam ' ~ slots.name | trim) if slots.name is defined else '' %} Timer{{ name }} verlengd met {{ text }}\n"
      },
      "HassVacuumReturnToBase": {
        "default": "Gaat terug"
      },
      "HassRespond": {
        "hello": "Hallo vanuit Home Assistant.",
        "listening": "Nee, ik neem alleen op na het wake-word.",
        "data": "Je data gaat naar je Home Assistant server.",
        "commands": "Voor meer informatie over wat ik kan, ga naar home streepje assistant punt I O slash voice.",
        "creator": "Ik ben gemaakt door de geweldige Home Assistant community, die bestaat uit mensen vanuit de hele wereld."
      }
    }
  },
  "lists": {
    "brightness": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "brightness_level": {
      "values": [
        {
          "in": "([het|de] max|[het] maximum|maximaal|[het] maximale|[z'n|zijn|het] hoogst[e])",
          "out": 100
        },
        {
          "in": "([het|de] min|[het] minimum|minimaal|[het] minimale|[z'n|zijn|het] laagst[e])",
          "out": 1
        }
      ]
    },
    "color": {
      "values": [
        {
          "in": "wit",
          "out": "white"
        },
        {
          "in": "zwart",
          "out": "black"
        },
        {
          "in": "rood",
          "out": "red"
        },
        {
          "in": "oranje",
          "out": "orange"
        },
        {
          "in": "geel",
          "out": "yellow"
        },
        {
          "in": "groen",
          "out": "green"
        },
        {
          "in": "blauw",
          "out": "blue"
        },
        {
          "in": "paars",
          "out": "purple"
        },
        {
          "in": "bruin",
          "out": "brown"
        },
        {
          "in": "roze",
          "out": "pink"
        }
      ]
    },
    "temperature": {
      "range": {
        "type": "temperature",
        "from": 0,
        "to": 100,
        "fractions": "halves"
      }
    },
    "on_off_states": {
      "values": [
        {
          "in": "aan",
          "out": "on"
        },
        {
          "in": "uit",
          "out": "off"
        }
      ]
    },
    "on_off_domains": {
      "values": [
        {
          "in": "<light>",
          "out": "light"
        },
        {
          "in": "<fan>",
          "out": "fan"
        },
        {
          "in": "<switch>",
          "out": "switch"
        }
      ]
    },
    "cover_states": {
      "values": [
        {
          "in": "(open|geopend)",
          "out": "open"
        },
        {
          "in": "(dicht|gesloten)",
          "out": "closed"
        },
        {
          "in": "(open aan het gaan|aan het (openen|open gaan))",
          "out": "opening"
        },
        {
          "in": "(dicht aan het gaan|aan het (dicht gaan|sluiten))",
          "out": "closing"
        }
      ]
    },
    "cover_classes": {
      "values": [
        {
          "in": "<awning>",
          "out": "awning"
        },
        {
          "in": "<blind>",
          "out": "blind"
        },
        {
          "in": "<curtain>",
          "out": "curtain"
        },
        {
          "in": "<door>",
          "out": "door"
        },
        {
          "in": "<garage>",
          "out": "garage"
        },
        {
          "in": "<gate>",
          "out": "gate"
        },
        {
          "in": "<shade>",
          "out": "shade"
        },
        {
          "in": "<shutter>",
          "out": "shutter"
        },
        {
          "in": "<window>",
          "out": "window"
        }
      ]
    },
    "lock_states": {
      "values": [
        {
          "in": "(dicht|[op] gesloten|op slot|vergrendeld)",
          "out": "locked"
        },
        {
          "in": "(open|geopend|niet (dicht|[op] gesloten|op slot|vergrendeld)|ontgrendeld)",
          "out": "unlocked"
        }
      ]
    },
    "door_lock_states": {
      "values": [
        {
          "in": "(op slot|vergrendeld)",
          "out": "locked"
        },
        {
          "in": "(niet (op slot|vergrendeld)|ontgrendeld)",
          "out": "unlocked"
        }
      ]
    },
    "bs_battery_states": {
      "values": [
        {
          "in": "(laag|[bijna] leeg)",
          "out": "on"
        },
        {
          "in": "(normaal|niet (laag|[bijna] leeg))",
          "out": "off"
        }
      ]
    },
    "bs_battery_charging_states": {
      "values": [
        {
          "in": "(aan (het laden|de lader)|opgeladen)",
          "out": "on"
        },
        {
          "in": "niet aan (het laden|de lader)",
          "out": "off"
        }
      ]
    },
    "bs_carbon_monoxide_states": {
      "values": [
        {
          "in": "(CO|koolstof[ ]monoxide)",
          "out": "on"
        },
        {
          "in": "geen (CO|koolstof[ ]monoxide)",
          "out": "off"
        }
      ]
    },
    "bs_cold_states": {
      "values": [
        {
          "in": "(koud[e]|koel[te])",
          "out": "on"
        },
        {
          "in": "(normaal|niet (koud|koel)|geen (koude|koelte))",
          "out": "off"
        }
      ]
    },
    "bs_connectivity_states": {
      "values": [
        {
          "in": "verbonden",
          "out": "on"
        },
        {
          "in": "niet verbonden",
          "out": "off"
        }
      ]
    },
    "bs_door_states": {
      "values": [
        {
          "in": "open",
          "out": "on"
        },
        {
          "in": "(dicht|gesloten)",
          "out": "off"
        }
      ]
    },
    "bs_garage_door_states": {
      "values": [
        {
          "in": "open",
          "out": "on"
        },
        {
          "in": "(dicht|gesloten)",
          "out": "off"
        }
      ]
    },
    "bs_gas_states": {
      "values": [
        {
          "in": "gas",
          "out": "on"
        },
        {
          "in": "geen gas",
          "out": "off"
        }
      ]
    },
    "bs_heat_states": {
      "values": [
        {
          "in": "(warm[te]|heet|hitte)",
          "out": "on"
        },
        {
          "in": "(normaal|niet(warm|heet)|geen (warmte|hitte))",
          "out": "off"
        }
      ]
    },
    "bs_light_states": {
      "values": [
        {
          "in": "[veel] licht",
          "out": "on"
        },
        {
          "in": "(geen|weinig) licht",
          "out": "off"
        }
      ]
    },
    "bs_lock_states": {
      "values": [
        {
          "in": "open",
          "out": "on"
        },
        {
          "in": "op slot",
          "out": "off"
        }
      ]
    },
    "bs_moisture_states": {
      "values": [
        {
          "in": "(nat[tigheid]|water|vocht[ig[heid]])",
          "out": "on"
        },
        {
          "in": "(droog|niet (nat|vochtig)|geen (nattigheid|water|vocht[igheid]))",
          "out": "off"
        }
      ]
    },
    "bs_motion_states": {
      "values": [
        {
          "in": "beweging",
          "out": "on"
        },
        {
          "in": "geen beweging",
          "out": "off"
        }
      ]
    },
    "bs_occupancy_states": {
      "values": [
        {
          "in": "(aanwezigheid|[een] (persoon|personen|mensen))",
          "out": "on"
        },
        {
          "in": "(geen (aanwezigheid|personen))",
          "out": "off"
        }
      ]
    },
    "bs_opening_states": {
      "values": [
        {
          "in": "open",
          "out": "on"
        },
        {
          "in": "gesloten",
          "out": "off"
        }
      ]
    },
    "bs_plug_states": {
      "values": [
        {
          "in": "(ingeplugd|ingestoken)",
          "out": "on"
        },
        {
          "in": "niet (ingeplugd|ingestoken)",
          "out": "off"
        }
      ]
    },
    "bs_power_states": {
      "values": [
        {
          "in": "(stroom|power|vermogen)",
          "out": "on"
        },
        {
          "in": "geen (stroom|power|vermogen)",
          "out": "off"
        }
      ]
    },
    "bs_presence_states": {
      "values": [
        {
          "in": "(thuis|aanwezig)",
          "out": "on"
        },
        {
          "in": "(weg|niet (thuis|aanwezig))",
          "out": "off"
        }
      ]
    },
    "bs_problem_states": {
      "values": [
        {
          "in": "[een] (proble[e]m[en]|issue[s]|complicatie[s])",
          "out": "on"
        },
        {
          "in": "geen (proble[e]m[en]|issue[s]|complicatie[s])",
          "out": "off"
        }
      ]
    },
    "bs_running_states": {
      "values": [
        {
          "in": "[op] (actief|bezig|draait|werkt|[aan [he|']t|te] (draaien|werk[en])|activiteit)",
          "out": "on"
        },
        {
          "in": "(niet [op] (actief|bezig|(aan [he|']t|te) (draaien|werk[en]))|(draaien|werk[en]) niet|[op] inactief|[geen |in]activiteit)",
          "out": "off"
        }
      ]
    },
    "bs_safety_states": {
      "values": [
        {
          "in": "[op] (onveilig|niet veilig|gevaar[lijk])",
          "out": "on"
        },
        {
          "in": "([op] veilig|(niet|on)gevaarlijk|geen gevaar)",
          "out": "off"
        }
      ]
    },
    "bs_smoke_states": {
      "values": [
        {
          "in": "rook",
          "out": "on"
        },
        {
          "in": "geen rook",
          "out": "off"
        }
      ]
    },
    "bs_sound_states": {
      "values": [
        {
          "in": "(geluid[en]|lawaai|herrie)",
          "out": "on"
        },
        {
          "in": "geen (geluid[en]|lawaai|herrie)",
          "out": "off"
        }
      ]
    },
    "bs_tamper_states": {
      "values": [
        {
          "in": "(geknoei[d]|gerommel[d]|sabotage|gesaboteerd)",
          "out": "on"
        },
        {
          "in": "(niet (geknoeid|gerommeld|gesaboteerd)|geen (geknoei|gerommel|sabotage))",
          "out": "off"
        }
      ]
    },
    "bs_update_states": {
      "values": [
        {
          "in": "(niet (actueel|up to date|up-to-date|ge(u|ü)pdate[t])|[een] update[s])",
          "out": "on"
        },
        {
          "in": "(actueel|up to date|up-to-date|ge(u|ü)pdate[t]|geen update[s])",
          "out": "off"
        }
      ]
    },
    "bs_vibration_states": {
      "values": [
        {
          "in": "(trilt|vibreert|[aan het|te] (trillen|vibreren)|trilling[en]|vibratie[s])",
          "out": "on"
        },
        {
          "in": "(niet aan het (trillen|vibreren)|(trilt|vibreert|trillen|vibreren) niet|geen (trilling[en]|vibratie[s]))",
          "out": "off"
        }
      ]
    },
    "bs_window_states": {
      "values": [
        {
          "in": "open",
          "out": "on"
        },
        {
          "in": "(gesloten|dicht)",
          "out": "closed"
        }
      ]
    },
    "shopping_list_item": {
      "wildcard": true
    },
    "zone": {
      "wildcard": true
    },
    "position": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "volume": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "timer_seconds": {
      "range": {
        "from": 1,
        "to": 100
      }
    },
    "timer_minutes": {
      "range": {
        "from": 1,
        "to": 100
      }
    },
    "timer_hours": {
      "range": {
        "from": 1,
        "to": 100
      }
    },
    "timer_half": {
      "values": [
        {
          "in": "half",
          "out": 30
        },
        {
          "in": "halve",
          "out": 30
        },
        {
          "in": "1/2",
          "out": 30
        },
        {
          "in": "1/2e",
          "out": 30
        }
      ]
    },
    "timer_one_and_a_half": {
      "values": [
        {
          "in": "anderhalf",
          "out": 90
        },
        {
          "in": "anderhalve",
          "out": 90
        }
      ]
    },
    "timer_name": {
      "wildcard": true
    },
    "timer_command": {
      "wildcard": true
    },
    "message": {
      "wildcard": true
    },
    "search_query": {
      "wildcard": true
    },
    "volume_step_up": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "volume_step_down": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100,
        "multiplier": -1
      }
    },
    "fan_speed": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "media_class": {
      "values": [
        {
          "in": "(artiest|zanger[es]|band)",
          "out": "artist"
        },
        {
          "in": "album",
          "out": "album"
        },
        {
          "in": "(track|nummer|lied[je])",
          "out": "track"
        },
        {
          "in": "(afspeellijst|playlist)",
          "out": "playlist"
        },
        {
          "in": "podcast",
          "out": "podcast"
        },
        {
          "in": "film",
          "out": "movie"
        },
        {
          "in": "[tv] (show|serie)",
          "out": "tv_show"
        }
      ]
    }
  },
  "expansion_rules": {
    "name": "[de|het] {name}",
    "area": "[de|het] {area}",
    "floor": "[de|het] {floor}",
    "area_floor": "(<area>|<floor>)",
    "in": "[in|op|van|bij]",
    "in_area_floor": "[<in>] <area_floor>",
    "by": "(door|met|bij)",
    "here": "(hier|in deze (kamer|ruimte))",
    "name_area": "(\n  <name> [<in> <area>]\n  |<in> <area> <name>\n  |<area>[ ]<name>\n)\n",
    "sensor_name_area": "(\n  [<in>] [<area>][ ]{name}\n  |[<in> [<area>]] [<by>] <name>\n  |[<by>] <name> [<in>] <area>\n)\n",
    "change": "(zet|mag|mogen|doe|verander|maak|schakel)",
    "would": "(kan|kun|wil) (je|jij)",
    "to": "(naar|op)",
    "is": "(zijn|is|staa(n|t)|zit[ten]|word[t|en]|lig(t|gen))",
    "all": "(alle|elke|iedere|overal)",
    "state": "(status|staat|stand)",
    "awning": "(luifel[s]|[zonne]scherm[en])",
    "blind": "(jaloezie[ën]|luxaflex)",
    "curtain": "(gordijn[en]|vitrage[s])",
    "door": "deur[en]",
    "garage": "garage[ ]deur[en]",
    "gate": "(hek[ken]|poort[en])",
    "shade": "(screen[s]|rolgordijn[en])",
    "shutter": "(rolluik[en]|shutter[s])",
    "window": "(raam|ramen)",
    "light": "[de|het|een] (lamp[en]|licht[en]|verlichting)",
    "fan": "[de|een] (ventilator[s|en]|fan[s])",
    "switch": "[de|een] (schakelaar[s]|switch[es]|plug[gen])",
    "cover": "[de|het] (<awning>|<blind>|<curtain>|<door>|<garage>|<gate>|<shade>|<shutter>|<window>)",
    "lock": "[de|het|een] ([deur]slot[en]|vergrendeling[en])",
    "locked": "(<to> slot|[<to>] vergrendeld)",
    "unlocked": "[<to>] (van [het] slot|ontgrendeld)",
    "lock_name": "(\n  <lock> [van] <name>\n |<name>[ ]([deur]slot[en]|vergrendeling[en])\n)\n",
    "lock_name_area": "(\n  <lock> [van] [{area}[ ]]<name>\n  |<lock_name> [<in> <area>]\n  |[<in> <area>] <lock_name>)\n  |<area>[ ]<name>[ ]([deur]slot[en]|vergrendeling[en]\n)\n",
    "brightness": "[de] (helderheid|felheid|intensiteit|lichtsterkte)",
    "brightness_value": "{brightness}[ ][%|procent]",
    "degrees": "([ ]°| graad| graden)",
    "temp": "(temperatuur|verwarming)",
    "temperature": "{temperature}[<degrees>]",
    "warm": "(warm|heet|koud|koel)",
    "open": "(open|omhoog|naar boven|opwaarts|op|optrekken|ophalen)",
    "closed": "(dicht|omlaag|naar beneden|neerwaarts)",
    "open_action": "(openen|open doen|optrekken|ophalen)",
    "open_command": "(open|haal|trek)",
    "close_action": "(sluiten|dicht doen|neer laten|laten zakken)",
    "close_command": "(sluit|laat)",
    "close_command_suffix": "(neer|zakken)",
    "detect": "(detecteert|registreert|detecteren|registreren|gedetecteerd|geregistreerd|waar[ ]genomen)",
    "sensor": "[een|de] (apparaat|apparaten|sensor[s|en]|iets)",
    "sensor_area": "(\n  [[de|een] {area}][ ](apparaat|apparaten|sensor[s|en])\n |[<in> [de|het] {area}] <sensor>\n |[een|de] (apparaat|apparaten|sensor[s|en]|iets) [[in|op|van|bij] <area>]\n)\n",
    "numeric_value_set": "(zet|doe|mag|verander|maak|draai|verhoog|verlaag)",
    "media_item": "(lied[je[s]]|nummer[s]|track[s]|item[s]|aflevering[en]|video[s]|film[pje][s]|muziek[je[s]]|playlist[s]|afspeellijst[en])",
    "volume": "{volume:volume_level}[[ ]%|procent]",
    "position": "{position}[[ ]%|procent]",
    "what_is": "(wat (is|zijn)|hoeveel (is|zijn)|hoe (hoog|laag) (is|zijn))",
    "what_is_the_class_of_name": "(\n  <what_is> (het|de) <class> (van|in|(aangegeven|gemeten) door) <name> [in <area>]\n |<what_is> <name>[[']s] [gemeten] <class> [in <area>]\n |<what_is> <area>[ ]<name>[s] [gemeten] <class>\n)\n",
    "timer_duration_seconds": "{timer_seconds:seconds} seconde[s|n]",
    "timer_duration_minutes": "(\n  {timer_minutes:minutes} (minuut[je[s]]|minuten) [[en] {timer_seconds:seconds} seconde[s|n]]\n |{timer_minutes:minutes} [en] [een] {timer_half:seconds} minuut[je]\n |{timer_half:seconds} minuut[je]\n |{timer_one_and_a_half:seconds} minuut[je]\n)\n",
    "timer_duration_hours": "(\n  {timer_hours:hours} (uur[tje]|uren|uurtjes) [[en] {timer_minutes:minutes} (minuut[je[s]]|minuten)] [[en] {timer_seconds:seconds} seconde[s|n]]\n |{timer_hours:hours} (uur[tje]|uren|uurtjes) en een {timer_half:seconds} minuut[je]\n |{timer_hours:hours} [en] [een] {timer_half:minutes} uur[tje]\n |{timer_half:minutes} uur[tje]\n |{timer_one_and_a_half:minutes} uur[tje]\n)\n",
    "timer_duration": "<timer_duration_seconds>|<timer_duration_minutes>|<timer_duration_hours>",
    "timer_start_seconds": "{timer_seconds:start_seconds} seconde[s|n]",
    "timer_start_minutes": "{timer_minutes:start_minutes} (minuut|minuten) [[en] {timer_seconds:start_seconds} seconde[n|s]]",
    "timer_start_hours": "{timer_hours:start_hours} (uur|uren) [[en] {timer_minutes:start_minutes} (minuut|minuten)] [[en] {timer_seconds:start_seconds} seconde[s|n]]",
    "timer_start": "<timer_start_seconds>|<timer_start_minutes>|<timer_start_hours>",
    "timer_named": "(genaamd|met [de] naam|voor [de|het|een])",
    "timer_prefix": "(<timer_start> |{area}[ ]|{timer_name:name}[ ]|)",
    "timer_suffix": "(\n  (van|voor) <timer_start>\n  |<in> <area>\n  |<timer_named> {timer_name:name}\n)\n",
    "my": "(de|mijn|m'n)",
    "timer": "(timer|kookwekker|eierwekker)",
    "my_timer": "[<my>] ([<timer_prefix>]<timer>|<timer> <timer_suffix>)",
    "area_timer": "<in> <area> [<my>] <timer>",
    "fan_speed": "{fan_speed:percentage}[%| procent]"
  },
  "skip_words": [
    "alstublieft",
    "alsjeblieft",
    "aub",
    "ajb",
    "graag",
    "ik wil",
    "voor mij",
    "voor me"
  ]
}