[build-system]
requires = ["setuptools>=75", "wheel", "build>=1.2.1"]
build-backend = "setuptools.build_meta"

[project]
name = "sygra"
version = "1.0.1"
description = "Graph-oriented Synthetic data generation Pipeline library"
readme = "README.md"
requires-python = ">=3.9"
authors = [{ name = "Bidyapati Pradhan, Surajit Dasgupta, Amit Kumar Saha, Sriram Puttagunta, Omkar Anustoop, Vipul Mittal, Gopal Sarda, Jishnu S Nair", email = "sygra_team@servicenow.com" }]
maintainers = [
  { name = "SyGra Team", email = "sygra_team@servicenow.com" }
]
license = {text = "Apache-2.0"}
classifiers = [
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Operating System :: OS Independent",
]
keywords = ["llm", "fine-tuning", "data generation", "synthetic data", "nlp", "sft", "dpo", "data quality", "metadata tagging", "graph",]
dependencies = [
  "aiohttp",
  "datasets",
  "httpx",
  "httpx-sse",
  "huggingface-hub",
  "langchain-community",
  "langchain-core",
  "langchain-mistralai",
  "langgraph",
  "mistralai",
  "openai",
  "PyYAML",
  "transformers",
  "grandalf",
  "sentencepiece",
  "protobuf",
  "Jinja2",
  "pathvalidate",
  "ujson",
  "fasttext",
  "lexicalrichness",
  "langchain-openai",
  "ollama",
  "torch",
  "mlxtend",
  "pandarallel",
  "sentence-transformers",
  "soundfile",
  "types-pyyaml"
]

[project.urls]
Homepage = "https://github.com/ServiceNow/SyGra"
Issues = "https://github.com/ServiceNow/SyGra/issues"

[tool.setuptools]
packages = { find = { include = ["sygra*"], exclude = ["tests*", "docs*", "sygra_lib_examples*", "apps*"] } }

[tool.setuptools.package-data]
sygra = ["**/*.yaml", "**/*.yml", "**/*.jinja2", "**/*.j2", "**/*.json"]

# --- Poetry section (explicit, must duplicate dependencies) ---
[tool.poetry]
name = "sygra"
version = "1.0.1"
description = "Graph-oriented Synthetic data generation Pipeline library"
authors = ["SyGra Team <sygra_team@servicenow.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/ServiceNow/SyGra"
repository = "https://github.com/ServiceNow/SyGra"

[tool.poetry.dependencies]
python = ">=3.9"
aiohttp = "*"
datasets = "*"
httpx = "*"
httpx-sse = "*"
huggingface-hub = "*"
langchain-community = "*"
langchain-core = "*"
langchain-mistralai = "*"
langgraph = "*"
mistralai = "*"
openai = "*"
PyYAML = "*"
transformers = "*"
grandalf = "*"
sentencepiece = "*"
protobuf = "*"
Jinja2 = "*"
pathvalidate = "*"
ujson = "*"
fasttext = "*"
lexicalrichness = "*"
langchain-openai = "*"
ollama = "*"
torch = "*"
mlxtend = "*"
pandarallel = "*"
sentence-transformers = "*"
soundfile = "*"
types-pyyaml = "*"

[tool.poetry.group.ui.dependencies]
streamlit = "*"
streamlit-agraph = "*"
streamlit-autorefresh = "*"
streamlit-flow-component = "*"
watchdog = "*"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-asyncio = "*"
build = "*"
twine = "*"
black = "*"
isort = "*"
ruff = "*"
mypy = "*"
mkdocs = "*"
mkdocs-material = "*"
mkdocs-include-markdown-plugin = "*"


# --- Tool configurations ---
[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
strict_optional = true
exclude = [
    "sygra/recipes/",
    "sygra/internal/",
    "tasks/",
]

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
check_untyped_defs = false

