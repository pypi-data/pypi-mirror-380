name: Test Docker Builds (No Push)

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test-build-all-images:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1  # Build one at a time to save disk space ~keep
      matrix:
        include:
          - name: base
            extras: "cli"
            image_name: "goldziher/kreuzberg"
          - name: core
            extras: "cli,chunking,crypto,document-classification,langdetect,additional-extensions"
            image_name: "goldziher/kreuzberg-core"

    steps:
      - name: Free up disk space
        run: |
          echo "Initial disk space:"
          df -h /

          # Remove unnecessary large directories (saves ~30GB)
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/lib/node_modules
          sudo rm -rf /opt/microsoft
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /opt/hostedtoolcache

          # Clean apt
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*

          # Remove swap to free up space
          sudo swapoff -a
          sudo rm -f /swapfile

          # Clean Docker completely
          docker system prune -af --volumes || true
          docker builder prune -af || true

          echo "Available disk space after cleanup:"
          df -h /

      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image - ${{ matrix.name }}
        run: |
          echo "===================="
          echo "Building ${{ matrix.name }} image"
          echo "===================="

          docker buildx build \
            --file ./.docker/Dockerfile \
            --build-arg EXTRAS="${{ matrix.extras }}" \
            --tag ${{ matrix.image_name }}:test \
            --platform linux/amd64 \
            --no-cache \
            --load \
            .

          echo "Image built successfully:"
          docker images | grep "${{ matrix.image_name }}:test" || true

          echo "Current disk usage:"
          df -h /

      - name: Clean up after build
        if: always()
        run: |
          echo "Cleaning up Docker resources..."

          # Remove all Docker images and containers
          docker stop $(docker ps -aq) || true
          docker rm $(docker ps -aq) || true
          docker rmi $(docker images -q) || true

          # Clean all Docker data
          docker system prune -af --volumes || true
          docker builder prune -af || true

          # Clear buildkit cache
          docker buildx prune -af || true

          echo "Disk space after cleanup:"
          df -h /
