[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "promptix"
version = "0.2.0"
description = "Professional prompt management with Git-native version control, dynamic templating, and visual Studio UI for production LLM applications"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Promptix Contributors", email = "contact@promptix.io"}
]
keywords = ["prompt", "management", "llm", "ai", "studio", "templates"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: General",
]
dependencies = [
    "streamlit>=1.29.0",
    "jinja2>=3.0.0",
    "python-dotenv>=0.19.0",
    "pyyaml>=6.0.0",
    "jsonschema>=4.0.0",
    "rich>=13.0.0",
    "click>=8.0.0",
]

[project.scripts]
promptix = "promptix.tools.cli:main"

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-watch>=4.2.0",
    
    # Build and release
    "build>=1.0.0",
    "twine>=4.0.0",
    
    # Code formatting and linting
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
    "flake8-docstrings>=1.7.0",
    "flake8-bugbear>=23.0.0",
    "flake8-comprehensions>=3.14.0",
    "flake8-implicit-str-concat>=0.4.0",
    "flake8-simplify>=0.20.0",
    
    # Type checking
    "mypy>=1.0.0",
    "types-PyYAML>=6.0.0",
    "types-requests>=2.0.0",
    
    # Documentation style
    "pydocstyle>=6.3.0",
    
    # Security scanning
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "pip-audit>=2.6.0",
    
    # Documentation generation
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "myst-parser>=2.0.0",
    
    # Code analysis and quality
    "radon>=6.0.0",
    "xenon>=0.9.0",
    "vulture>=2.9.0",
    "interrogate>=1.5.0",
    
    # Development tools
    "pre-commit>=3.0.0",
    "pip-tools>=7.0.0",
    "pipdeptree>=2.13.0",
    "memory-profiler>=0.61.0",
    
    # Additional utilities
    "ipython>=8.0.0",
    "rich>=13.0.0",
    "click>=8.0.0",
]

docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "myst-parser>=2.0.0",
]

security = [
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "pip-audit>=2.6.0",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"promptix.tools.studio" = ["*.webp", "*.ico"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
pythonpath = ["src"]
addopts = "--cov=promptix --cov-report=term-missing"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["promptix"]
known_third_party = ["pytest", "click", "yaml", "jinja2"]

[tool.pydocstyle]
convention = "google"
inherit = false
ignore = ["D100", "D104", "D107", "D213", "D203"]
match = "(?!test_).*\\.py"
match-dir = "(?!tests)[^\\.].*"

[tool.bandit]
exclude_dirs = ["tests", "venv", "build", "dist"]
skips = ["B101", "B601"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = false
ignore-nested-functions = false
ignore-nested-classes = true
fail-under = 80
exclude = ["setup.py", "docs", "build", "tests"]
verbose = 0
quiet = false
whitelist-regex = []
color = true
omit-covered-files = false

[tool.xenon]
max-average = "A"
max-modules = "B"
max-absolute = "B" 