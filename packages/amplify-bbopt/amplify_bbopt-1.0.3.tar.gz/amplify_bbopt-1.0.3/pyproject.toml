[project]
authors = [
  { name = "Fixstars Amplify Corporation", email = "y_matsuda@fixstars.com" },
]
classifiers = [
  "Environment :: Console",
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: MacOS :: MacOS X",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "amplify[extra]>=1.4.0",
  "typing_extensions; python_version < '3.11'",
  "torch>=2.5.1",
]
version = "1.0.3"
description = "Black box optimization library based on Amplify SDK"
maintainers = [
  { name = "Yuki Minamoto", email = "yuki.minamoto@fixstars.com" },
  { name = "Takuma Saito", email = "takuma.saito@fixstars.com" },
  { name = "Yoshiki Matsuda", email = "y_matsuda@fixstars.com" },
]
name = "amplify-bbopt"
readme = "README.md"
license-files = ["LICENSE"]
requires-python = ">=3.10"

[project.urls]
Changelog = "https://amplify.fixstars.com/docs/amplify-bbopt/v1/changelog.html"
Documentation = "https://amplify.fixstars.com/docs/amplify-bbopt/v1/"
Homepage = "https://amplify.fixstars.com/"
Tutorial = "https://amplify.fixstars.com/demo"

[dependency-groups]
dev = [
  "ipykernel",
  "pyright[nodejs]",
  "pytest",
  "pytest-cov",
  "pytest-xdist",
  "ruff",
  "gitlab-cq",
]
doc = [
  "furo",
  "myst-nb >= 1.0.0",
  "myst-parser >= 2.0.0",
  "sphinx",
  "sphinx-autobuild",
  "sphinx-design",
  "sphinx-copybutton",
]

[tool.pyright]
include = ["amplify_bbopt", "test"]
typeCheckingMode = "basic"


[tool.ruff]
exclude = ["externals"]
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
line-length = 120
preview = true

[tool.ruff.lint]
ignore = [
  # conflicts with ruff format
  "COM812",
  "COM819",
  "D206",
  "D300",
  "E111",
  "E114",
  "E117",
  "ISC001",
  "ISC002",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "W191",   # category
  "AIR",    # Airflow
  "ASYNC",  # flake8-async
  "C90",    # mccabe
  "COM",    # flake8-commas
  "CPY",    # flake8-copyright
  "DJ",     # flake8-django
  "ERA",    # eradicate
  "EXE",    # flake8-executable
  "FBT",    # flake8-boolean-trap
  "FLY",    # flynt
  "ICN",    # flake8-import-conventions
  "INP",    # flake8-no-pep420
  "INT",    # flake8-gettext
  "PD",     # pandas-vet
  "PGH",    # pygrep-hooks
  "Q",      # flake8-quotes
  "SLOT",   # flake8-slots
  "T10",    # flake8-debugger
  "T20",    # flake8-print
  "TID",    # flake8-tidy-imports
  "EM",     # flake8-errmsg
  # rule
  "D10",    # undocumented-XXX
  "PLR09",  # too-many-XXX
  "S101",   # assert
  "TD001",  # invalid-todo-tag
  "TD002",  # missing-todo-author
  "TD003",  # missing-todo-link
  "TRY003", # raise-vanilla-args
  "G004",   # logging-f-string
]
select = ["ALL"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-branches = 18

[tool.ruff.lint.per-file-ignores]
"{documents/*}.py" = [
  # category
  "D",   # pydocstyle
  "ANN", # flake8-annotations
  "T20", # flake8-print
  # rule
  "N806", # non-lowercase-variable-in-function
  "S107", # hardcoded-password-default
]

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple"
publish-url = "https://upload.pypi.org/legacy/"

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["test"]

[build-system]
requires = ["uv_build"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "amplify_bbopt"
module-root = ""
