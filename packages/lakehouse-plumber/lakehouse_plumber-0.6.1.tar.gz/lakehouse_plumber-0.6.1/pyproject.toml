[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lakehouse-plumber"
version = "0.6.1"
description = "A framework for building and managing enterprise Lakeflow Declaritive Pipelines"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Mehdi Modarressi", email = "modarressi.mehdi@gmail.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "click>=8.0.0",
    "pyyaml>=6.0.0",
    "ruamel.yaml>=0.17.0",
    "jinja2>=3.0.0",
    "rich>=12.0.0",
    "pydantic>=2.0.0",
    "jsonschema>=4.0.0",
    "packaging>=23.2",
    "black>=23.0.0",
    "networkx>=3.0.0",
    "importlib_resources>=1.3.0;python_version<'3.9'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "flake8>=6.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
]
notebook = [
    "ipython>=7.0.0",
    "jupyter>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/Mmodarre/Lakehouse_Plumber"
Documentation = "https://lakehouse-plumber.readthedocs.io/"
Repository = "https://github.com/Mmodarre/Lakehouse_Plumber.git"
"Bug Tracker" = "https://github.com/Mmodarre/Lakehouse_Plumber/issues"

[project.scripts]
lhp = "lhp.cli.main:cli"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"lhp.schemas" = ["*.json", "*.md"]
"lhp.templates" = ["*.j2"]
"lhp.templates.bundle" = ["*.j2"]
"lhp.templates.init" = ["**/*"]
"lhp.templates.load" = ["*.j2"]
"lhp.templates.transform" = ["*.j2"]
"lhp.templates.write" = ["*.j2"]



[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
]
testpaths = ["tests"]
pythonpath = ["src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["lhp"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false 