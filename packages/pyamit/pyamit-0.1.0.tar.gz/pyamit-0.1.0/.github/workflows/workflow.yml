name: CI/CD

on:
  push:
    branches: [main]
    tags: ["*"]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: uv sync --locked --all-extras --dev

      - name: Cache pre-commit hooks
        if: matrix.python-version == '3.13'
        id: pre-commit-cache
        uses: actions/cache@v4
        with:
          path: $HOME/.cache/pre-commit
          key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-hooks-${{ hashFiles('**/.pre-commit-config.yaml') }}

      - name: Run pre-commit
        if: matrix.python-version == '3.13'
        run: |
          uv run pre-commit run --all-files
        env:
          PRE_COMMIT_HOME: $HOME/.cache/pre-commit

      - name: Run tests
        run: uv run pytest

      - name: Minimize uv cache
        run: uv cache prune --ci

  publish:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release' && github.event.action == 'published'

    permissions:
      id-token: write # OIDC for PyPI publishing

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv python install 3.13

      - name: Install dependencies
        run: uv sync --locked --all-extras --dev

      - name: Build package
        run: uv build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
