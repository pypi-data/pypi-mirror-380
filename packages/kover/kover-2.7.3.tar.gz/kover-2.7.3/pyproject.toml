[project]
name = "kover"
version = "2.7.3"
description = "Fully async mongodb driver for mongod and replica sets."
readme = "README.md"
authors = [{ name = "megawattka", email = "gunter56741@gmail.com" }]
license = "MIT"
requires-python = ">= 3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Typing :: Typed",
]
keywords = [
    "kover",
    "mongodb",
    "mongod driver",
    "async driver",
    "mongo async",
    "kover mongodb",
]
dependencies = [
    "dnspython >= 2.7.0",
    "pydantic >= 2.10.6",
    "typing-extensions >= 4.12.2",
]

[project.urls]
Repository = "https://github.com/megawattka/kover"
Documentation = "https://github.com/megawattka/kover"

[project.optional-dependencies]
snappy = ["python-snappy"]
zstd = ["zstd"]

[tool.ruff]
line-length = 79
indent-width = 4
target-version = "py310"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
exclude = ["kover/bson", "benchmarks"]
ignore = [
    "INP001",  # __init__.py in public namespaces
    "TD003",  # issue links for todos
    "FIX002",  # TODOs
    "TID252",  # fvck absolute imports
    "N818",  # "Error" suffix in exception class
    "S101",  # assertions
    "S324",  # I want to use sha1 please
    "D105",  # undocumented-magic-method
    "D107",  # undocumented-public-init
    "CPY001",  # Copyright notice at the top
    "PLR0913",  # too many arguments in function def
    "PLR0917",  # too many positional arguments in function def
    "PLR0904",  # too many public methods
    "EM101", "EM102", "TRY003",  # string literal in exception
    "D104",  # undocumented public package
]
select = ["ALL"]
unfixable = [
    "RUF100", # unused noqa
    "T20",  # removes print statements
    "F841", # removes unused variables
]
preview = true

[tool.ruff.lint.flake8-builtins]
strict-checking = true

[tool.ruff.lint.per-file-ignores]
"kover/__init__.py" = ["E501"]  # line too long
"kover/metadata/definitions.py" = ["DOC402"]  # undocumented yield
"tests/*" = [
    "D101",  # undocumented public class/method
    "D102",  # undocumented public method
    "S106",  # hardcoded password
    "TC003",  # type checking blocks
    "PT027",  # unittest style
    "D100",  # module docstring
    "PLR2004",  # constant comparisons
]
"test.py" = [  # this file only for testing so...
    "ERA001",  # commented out code
    "S106",  # hardcoded password
    "T201",  # print statements
    "D100",  # public module docstring
    "F401",  # unused variables
]
"kover/network/compressors.py" = ["PLR6301"]  # Could be staticmethod no self
"kover/typings.py" = ["D102"]  # public method docstring

[tool.ruff.lint.flake8-type-checking]
exempt-modules = ["typing", "typing_extensions"]
quote-annotations = true
strict = true

[tool.ruff.lint.isort]
force-sort-within-sections = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.uv]
link-mode="copy"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "flake8 >= 7.3.0",
    "matplotlib>=3.10.5",
    "motor>=3.7.1",
    "pymongo >= 4.14.0",
    "pyright >= 1.1.403",
    "ruff >= 0.12.3",
    "setuptools >= 80.9.0",
    "tornado>=6.5.2",
]

[tool.hatch.build]
include = [
    "/README.md",
    "/requirements.txt",
    "/CODE_OF_CONDUCT.md",
    "/kover"
]
exclude = [
    "/benchmarks",
    "/examples",
    "/tests",
    "/setup.py"
]

[tool.pyright]
exclude = ["kover/bson", "benchmarks"]
typeCheckingMode = "strict"
