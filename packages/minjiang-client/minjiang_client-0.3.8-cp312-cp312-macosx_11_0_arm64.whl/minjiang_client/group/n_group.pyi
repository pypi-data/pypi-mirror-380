from _typeshed import Incomplete
from minjiang_client.com.minio import get_minio_client as get_minio_client
from minjiang_client.experiment.experiment import Experiment as Experiment
from minjiang_client.experiment.fitter import Fitter as Fitter
from minjiang_client.experiment.result import Result as Result
from minjiang_client.group.cloud_group import CloudGroup as CloudGroup
from minjiang_client.utils.json_database import Column as Column, JSONDatatable as JSONDatatable
from minjiang_client.utils.local import get_fit_cache_dir as get_fit_cache_dir
from minjiang_client.visualise.cloud_realtime_plotter import run_cloud_realtime_plotter as run_cloud_realtime_plotter
from typing import Any, Callable

def show_progress(result: Result, finished: bool, exp_detail: dict): ...
def run_plotter_in_process(group_name: str, exp_id: int): ...

class NGroup(CloudGroup):
    task_id: Incomplete
    def __init__(self, group_name: str, space_name: str, task_id: int, space_version: int = None, space_parameters: dict[str, Any] = None, temporary_parameters: dict[str, Any] = None) -> None: ...
    def submit_exp(self, exp: Experiment, task_id: int = None, space_timestamp: int = None, template_name: str = None, source: str = 'SDK'): ...
    def fit_png(self, exp_detail: dict): ...
    def fit_tbl(self, exp_detail: dict, data: dict = None): ...
    def open_plot(self, exp_id: int): ...
    def print_space_update(self) -> None: ...
    def submit_fit(self, exp_id: int, fit_png: str, fit_tbl: str, space_parameters: dict = None): ...
    def pull_result(self, exp_id: int, waiting_for_finished: bool = True, update_callback: Callable = None) -> Result: ...
