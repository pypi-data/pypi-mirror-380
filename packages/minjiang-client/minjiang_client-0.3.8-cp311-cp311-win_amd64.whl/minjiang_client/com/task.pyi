from minjiang_client.com.request import request as request
from minjiang_client.utils.retry_wrapper import retry_on_failure as retry_on_failure

def create_task(organization_id: int, device_group_name: str, space_name: str, title: str, description: str): ...
def create_sub_process(organization_id: int, device_group_name: str, task_id: int, title: str, description: str, resource_id: int, source: str, space_timestamp: int, template_name: str): ...
def upload_result(sub_process_id: int, resource_id: int, progress: str, piece_id: int, piece_start: int, piece_end: int, piece_status: str, final_piece: bool): ...
def list_tasks(device_group_name: str, space_name: str = None, status: str = None, task_id: int = None, show_hidden: bool = False, time_range: list[int] = None, page: int = 1, per_page: int = 10): ...
def list_sub_processes(task_id: int, page: int = 1, per_page: int = 10): ...
def get_task_detail(task_id: int): ...
def get_sub_process_detail(sub_process_id: int): ...
def get_task_progress(task_id: int): ...
def get_sub_process_progress(sub_process_id: int): ...
def get_sub_process_result(sub_process_id: int, last_piece_id: int, piece_num: int): ...
def terminate_task(sub_process_id: int = None): ...
def set_task_hidden(task_id: int, status: bool): ...
def pull_sub_process(device_group_name: str): ...
def upload_pull_status(sub_process_id: int): ...
def upload_sub_process_status(sub_process_id: int, status: str): ...
def add_sub_process_msg(sub_process_id: int, message_level: str, message: str): ...
def get_sub_process_msg(sub_process_id: int): ...
def add_fitting_result(task_id: int, sub_process_id_list: list, big_picture_id: int, small_picture_id: int, data_id: int): ...
def get_fitting_result(sub_process_id: int | list[int]): ...
def create_node(session_id: int, node_name: str, index: int): ...
def create_cali_session(task_id: int, resource_id: int): ...
def update_cali_session_status(session_id: int, status: str): ...
def save_cali_result(session_id: int, task_id: int, node_id: int, entity: str, result_data: str): ...
def session_heartbeat(session_id: int): ...
def get_cali_session_list(device_group_name: str, page: int = 1, per_page: int = 10): ...
def get_cali_session_resource_id(session_id: int): ...
def get_session_nodes(session_id: int): ...
def get_session_info(session_id: int): ...
def get_authorized_sub_processes_list(sub_process_id: int | list[int]) -> list[int]: ...
