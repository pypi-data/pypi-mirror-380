from _typeshed import Incomplete
from minjiang_client.compiler.gate_compiler import GateCompiler as GateCompiler
from minjiang_client.plugin.plugin_object import PluginObject as PluginObject
from minjiang_client.qc.qc_utils.quantum_gate import RotatingGate as RotatingGate
from minjiang_client.qc.unitary_matrix import unitary3 as unitary3

__MJ_PLUGIN_NAME__: str
__MJ_PLUGIN_HOOKS__: Incomplete

def VZ(lamda: float): ...

class BuiltinGateCompiler(GateCompiler):
    entities: Incomplete
    def __init__(self, group: Group) -> None: ...
    def gate_list(self): ...
    def compile(self, gate_on_entity: tuple[str, str | list[str]] | QuantumGate) -> WavePackage: ...
    def make_hadamard(self, entity): ...
    def make_cz(self, entity): ...

class Main(PluginObject):
    plugin_name: Incomplete
    hooks: Incomplete
    def __init__(self) -> None: ...
    def gate_compiler_register(self, *args, **kwargs): ...
    def gate_name_register(self, *args, **kwargs): ...
