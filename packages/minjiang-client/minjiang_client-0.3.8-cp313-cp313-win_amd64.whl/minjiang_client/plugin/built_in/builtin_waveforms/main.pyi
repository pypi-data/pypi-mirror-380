from _typeshed import Incomplete
from minjiang_client.plugin.plugin_object import PluginObject as PluginObject

__MJ_PLUGIN_NAME__: str
__MJ_PLUGIN_HOOKS__: Incomplete
MAX_TICKS: int

def wave_cos(t: list | float | int, amp: float | int, omega: float | int, phi: float | int): ...
def wave_sin(t: list | float | int, amp: float | int, omega: float | int, phi: float | int): ...
def wave_square(t: list | float | int, amp: float | int): ...
def wave_gaussian(t: list | float | int, amp: float | int, tau: float | int, sigma: float | int): ...
def wave_drag(t: list | float | int, amp: float | int, tau: float | int, sigma: float | int): ...

class Main(PluginObject):
    plugin_name: Incomplete
    hooks: Incomplete
    def __init__(self) -> None: ...
    def waveform_extension(self, *args, **kwargs): ...
    def plot_waveform(self, *args, **kwargs) -> None: ...
    def plot_wave_package(self, *args, **kwargs) -> None: ...
    def plot_wave_circuit(self, *args, **kwargs) -> None: ...
    def waveform_compiler_setup_extension(self, waveform_compiler_setup) -> None: ...
