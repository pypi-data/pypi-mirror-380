from _typeshed import Incomplete
from minjiang_client.utils.local import get_user_temp_token as get_user_temp_token

class DeviceLocal:
    dev_mgr: Incomplete
    token: Incomplete
    sock: Incomplete
    pending: Incomplete
    lock: Incomplete
    running: bool
    group_name: Incomplete
    def __init__(self) -> None: ...
    def connect(self) -> None: ...
    def send_command(self, cmd_type, payload, group_name=None) -> None: ...
    def listen(self) -> None: ...
    def handle_response(self, response) -> None: ...
    def get_status(self, cmd_id) -> None: ...
    def wait_result(self, cmd_id, timeout: int = 2) -> None: ...
    def reconnect(self) -> None: ...
    def socket_scan_devices(self, group_name: str): ...
    def socket_add_device(self, payload: dict): ...
    def socket_delete_device(self, sn, group_name): ...
    def socket_get_mapping_by_group(self, group_name): ...
    def socket_update_device(self, sn, update_data: dict, group_name: str): ...
    def socket_select_devices(self, group_name, sn_list): ...
    def socket_get_parameters(self, model, group_name: str): ...
    def socket_query_devices_by_group(self, group_name: str): ...
    def socket_query_devices_by_sn(self, sn, group_name: str): ...
    def socket_query_device_snapshot(self, sn, group_name: str): ...
    def socket_query_client_host_status(self, group_name: str): ...

device_client: Incomplete
