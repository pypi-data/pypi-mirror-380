[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pipevine"
version = "0.1.1"
description = "A high-performance async pipeline processing library for Python"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "Aaron Hough", email = "aaron@runmodular.com" }]
maintainers = [{ name = "Aaron Hough", email = "aaron@runmodular.com" }]
keywords = [
    "async",
    "pipeline",
    "concurrency",
    "data-processing",
    "streaming",
    "multiprocessing",
    "queue",
    "backpressure",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
    "Topic :: Utilities",
    "Framework :: AsyncIO",
]
dependencies = []

[project.urls]
Homepage = "https://github.com/arrno/pypline"
Documentation = "https://github.com/arrno/pypline#readme"
Repository = "https://github.com/arrno/pypline.git"
Issues = "https://github.com/arrno/pypline/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

[tool.setuptools]
package-dir = { "" = "pipevine/src" }

[tool.setuptools.packages.find]
where = ["pipevine/src"]
include = ["pipevine*"]

[tool.setuptools.package-data]
pipevine = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py310']

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = ["pipevine/src"]
