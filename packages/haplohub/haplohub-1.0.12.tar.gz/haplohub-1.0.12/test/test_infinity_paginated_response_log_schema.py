# coding: utf-8

"""
HaploHub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from haplohub.models.infinity_paginated_response_log_schema import InfinityPaginatedResponseLogSchema  # noqa: E501


class TestInfinityPaginatedResponseLogSchema(unittest.TestCase):
    """InfinityPaginatedResponseLogSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InfinityPaginatedResponseLogSchema:
        """Test InfinityPaginatedResponseLogSchema
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `InfinityPaginatedResponseLogSchema`
        """
        model = InfinityPaginatedResponseLogSchema()  # noqa: E501
        if include_optional:
            return InfinityPaginatedResponseLogSchema(
                status = 'success',
                items = [
                    haplohub.models.log_schema.LogSchema(
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        tenant = haplohub.models.tenant_schema.TenantSchema(
                            org_id = 56, 
                            org_external_id = '', ), 
                        auth = haplohub.models.auth_schema.AuthSchema(
                            ip = '', 
                            id = '', 
                            sub = '', ), 
                        request = haplohub.models.request_schema.RequestSchema(
                            method = '', 
                            path = '', 
                            env_id = 56, ), 
                        response = haplohub.models.response_schema.ResponseSchema(
                            status_code = 56, ), )
                    ],
                has_more = True,
                cursor = ''
            )
        else:
            return InfinityPaginatedResponseLogSchema(
                items = [
                    haplohub.models.log_schema.LogSchema(
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        tenant = haplohub.models.tenant_schema.TenantSchema(
                            org_id = 56, 
                            org_external_id = '', ), 
                        auth = haplohub.models.auth_schema.AuthSchema(
                            ip = '', 
                            id = '', 
                            sub = '', ), 
                        request = haplohub.models.request_schema.RequestSchema(
                            method = '', 
                            path = '', 
                            env_id = 56, ), 
                        response = haplohub.models.response_schema.ResponseSchema(
                            status_code = 56, ), )
                    ],
                has_more = True,
        )
        """

    def testInfinityPaginatedResponseLogSchema(self):
        """Test InfinityPaginatedResponseLogSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
