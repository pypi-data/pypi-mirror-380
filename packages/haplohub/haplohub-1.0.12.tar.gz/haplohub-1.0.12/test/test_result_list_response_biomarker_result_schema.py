# coding: utf-8

"""
HaploHub API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from haplohub.models.result_list_response_biomarker_result_schema import ResultListResponseBiomarkerResultSchema  # noqa: E501


class TestResultListResponseBiomarkerResultSchema(unittest.TestCase):
    """ResultListResponseBiomarkerResultSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResultListResponseBiomarkerResultSchema:
        """Test ResultListResponseBiomarkerResultSchema
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ResultListResponseBiomarkerResultSchema`
        """
        model = ResultListResponseBiomarkerResultSchema()  # noqa: E501
        if include_optional:
            return ResultListResponseBiomarkerResultSchema(
                status = 'success',
                items = [
                    haplohub.models.biomarker_result_schema.BiomarkerResultSchema(
                        order = haplohub.models.order_schema.OrderSchema(
                            id = 56, 
                            age = 56, 
                            dob = '', 
                            clia_number = '', 
                            patient = '', 
                            provider = '', 
                            laboratory = '', 
                            date_reported = '', 
                            date_collected = '', 
                            specimen_number = '', 
                            date_received = '', 
                            status = '', 
                            interpretation = '', ), 
                        results = [
                            haplohub.models.result_schema.ResultSchema(
                                name = '', 
                                slug = '', 
                                value = 1.337, 
                                result = '', 
                                type = '', 
                                unit = '', 
                                timestamp = '', 
                                notes = '', 
                                min_range_value = 1.337, 
                                max_range_value = 1.337, 
                                is_above_max_range = True, 
                                is_below_min_range = True, 
                                interpretation = '', 
                                loinc = '', 
                                loinc_slug = '', 
                                provider_id = '', )
                            ], )
                    ]
            )
        else:
            return ResultListResponseBiomarkerResultSchema(
                items = [
                    haplohub.models.biomarker_result_schema.BiomarkerResultSchema(
                        order = haplohub.models.order_schema.OrderSchema(
                            id = 56, 
                            age = 56, 
                            dob = '', 
                            clia_number = '', 
                            patient = '', 
                            provider = '', 
                            laboratory = '', 
                            date_reported = '', 
                            date_collected = '', 
                            specimen_number = '', 
                            date_received = '', 
                            status = '', 
                            interpretation = '', ), 
                        results = [
                            haplohub.models.result_schema.ResultSchema(
                                name = '', 
                                slug = '', 
                                value = 1.337, 
                                result = '', 
                                type = '', 
                                unit = '', 
                                timestamp = '', 
                                notes = '', 
                                min_range_value = 1.337, 
                                max_range_value = 1.337, 
                                is_above_max_range = True, 
                                is_below_min_range = True, 
                                interpretation = '', 
                                loinc = '', 
                                loinc_slug = '', 
                                provider_id = '', )
                            ], )
                    ],
        )
        """

    def testResultListResponseBiomarkerResultSchema(self):
        """Test ResultListResponseBiomarkerResultSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
