# coding: utf-8

"""
HaploHub API

The HaploHub is a turnkey solution to securely store and interpret biomarkers, genetics, and 'omics data. Our customers use the HaploHub to:  * Store WGS, WES, low-pass, and array data with uniform REST interfaces to access variants  * Interpret genomic variants  * Generate risk scores for an individual  * Run the typical algorithms (phasing, imputation, etc.)  * Calculate 'biological age' or 'organ age' biomarkers  * Generate custom reports  The HaploHub platform is continually updated to remain at the forefront of scientific understanding.

The version of the OpenAPI document: 1.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from haplohub.api.algorithm_version_api import AlgorithmVersionApi  # noqa: E501


class TestAlgorithmVersionApi(unittest.TestCase):
    """AlgorithmVersionApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AlgorithmVersionApi()

    def tearDown(self) -> None:
        pass

    def test_get_algorithm_version(self) -> None:
        """Test case for get_algorithm_version

        Get algorithm version  # noqa: E501
        """
        pass

    def test_list_algorithm_versions(self) -> None:
        """Test case for list_algorithm_versions

        List algorithm versions  # noqa: E501
        """
        pass


if __name__ == "__main__":
    unittest.main()
