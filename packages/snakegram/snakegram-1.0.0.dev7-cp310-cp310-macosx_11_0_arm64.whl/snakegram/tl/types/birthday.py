
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Optional, TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class Birthday(TLObject, family='TypeBirthday'):
    """
    [Birthday](https://core.telegram.org/api/profile#birthday) information for a user.
    """

    _id = 0X6C8E1E06
    _group_id = 0XFA278314

    def __init__(
        self,
        day: int,
        month: int,
        year: Optional[int] = None
    ):

        """
        [Birthday](https://core.telegram.org/api/profile#birthday) information for a user.

        Args:
            day (int): Birth day
            month (int): Birth month
            year (Optional[int], optional): (Optional) birth year.
        """

        self.day = day
        self.month = month
        self.year = year

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x06\x1e\x8el' if boxed else b'') as writer:
            with writer.flag() as flags:
                writer.int(self.day)
                writer.int(self.month)

                if flags(self.year, 0):
                    writer.int(self.year)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        flags = reader.flag()
        day_ = reader.int()
        month_ = reader.int()
        year_ = (
            reader.int()
            if flags(0) else None
        )

        return cls(
            day=day_,
            month=month_,
            year=year_
        )

TypeBirthday = Birthday