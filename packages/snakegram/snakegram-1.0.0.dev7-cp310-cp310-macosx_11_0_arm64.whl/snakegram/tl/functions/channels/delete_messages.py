
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.messages.affected_messages import TypeMessagesAffectedMessages


if TYPE_CHECKING:
    from ...types.input_channel import TypeInputChannel


class DeleteMessages(TLRequest[TypeMessagesAffectedMessages]):
    """
    Delete messages in a [channel/supergroup](https://core.telegram.org/api/channel)

    **Bots can use this method**

    Raises:
        `400`ChannelInvalidError: The provided channel is invalid.
        `400`MsgIdInvalidError: Invalid message ID provided.
        `406`ChannelPrivateError: You haven't joined this channel/supergroup.
        `403`MessageDeleteForbiddenError: You can't delete one of the messages you tried to delete, most likely because it is a service message.

    """

    _id = 0X84C1FD4E
    _result_id = 0X115F5ED1

    def __init__(
        self,
        channel: 'TypeInputChannel',
        id: List[int]
    ):

        """
        Delete messages in a [channel/supergroup](https://core.telegram.org/api/channel)

        **Bots can use this method**

        Args:
            channel ('TypeInputChannel'): [Channel/supergroup](https://core.telegram.org/api/channel)
            id (List[int]): IDs of messages to delete
        """

        self.channel = channel
        self.id = id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'N\xfd\xc1\x84' if boxed else b'') as writer:
            writer.object(
                self.channel,
                group_id=0X42691CEF
            )
            writer.vector(
                self.id,
                writer.int
            )

            return writer.getvalue()