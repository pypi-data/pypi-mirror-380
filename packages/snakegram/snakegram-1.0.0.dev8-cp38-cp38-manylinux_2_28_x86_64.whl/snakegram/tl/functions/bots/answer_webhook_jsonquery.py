
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.data_json import TypeDataJSON


class AnswerWebhookJSONQuery(TLRequest[bool]):
    """
    Answers a custom query **for bots only**

    Raises:
        `400`DataJsonInvalidError: The provided JSON data is invalid.
        `400`QueryIdInvalidError: The query ID is invalid.
        `400`UserBotRequiredError: This method can only be called by a bot.
        `403`UserBotInvalidError: User accounts must provide the `bot` method parameter when calling this method. If there is no such method parameter, this method can only be invoked by bot accounts.

    """

    _id = 0XE6213F4D
    _result_id = 0X43B904E1

    def __init__(
        self,
        query_id: int,
        data: 'TypeDataJSON'
    ):

        """
        Answers a custom query **for bots only**

        Args:
            query_id (int): Identifier of a custom query
            data ('TypeDataJSON'): JSON-serialized answer to the query
        """

        self.query_id = query_id
        self.data = data

    def to_bytes(self, boxed: bool=True):
        with Writer(b'M?!\xe6' if boxed else b'') as writer:
            writer.long(self.query_id)
            writer.object(
                self.data,
                group_id=0XE95B0798
            )

            return writer.getvalue()