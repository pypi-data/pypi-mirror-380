
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class InputClientProxy(TLObject, family='TypeInputClientProxy'):
    """
    Info about an [MTProxy](https://core.telegram.org/mtproto/mtproto-transports#transport-obfuscation) used to connect.
    """

    _id = 0X75588B3F
    _group_id = 0X990960D5

    def __init__(
        self,
        address: str,
        port: int
    ):

        """
        Info about an [MTProxy](https://core.telegram.org/mtproto/mtproto-transports#transport-obfuscation) used to connect.

        Args:
            address (str): Proxy address
            port (int): Proxy port
        """

        self.address = address
        self.port = port

    def to_bytes(self, boxed: bool=True):
        with Writer(b'?\x8bXu' if boxed else b'') as writer:
            writer.string(self.address)
            writer.int(self.port)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        address_ = reader.string()
        port_ = reader.int()

        return cls(
            address=address_,
            port=port_
        )

TypeInputClientProxy = InputClientProxy