
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Optional
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


class SetBotPrecheckoutResults(TLRequest[bool]):
    """
    Once the user has confirmed their payment and shipping details, the bot receives an [updateBotPrecheckoutQuery](https://core.telegram.org/constructor/updateBotPrecheckoutQuery) update. 
    Use this method to respond to such pre-checkout queries. 
     Note: Telegram must receive an answer within 10 seconds after the pre-checkout query was sent.

    **Bots can use this method**

    Raises:
        `400`ErrorTextEmptyError: The provided error message is empty.
        `400`UserBotRequiredError: This method can only be called by a bot.

    """

    _id = 0X9C2DD95
    _result_id = 0X43B904E1

    def __init__(
        self,
        query_id: int,
        success: bool = False,
        error: Optional[str] = None
    ):

        """
        Once the user has confirmed their payment and shipping details, the bot receives an [updateBotPrecheckoutQuery](https://core.telegram.org/constructor/updateBotPrecheckoutQuery) update. 
        Use this method to respond to such pre-checkout queries. 
         Note: Telegram must receive an answer within 10 seconds after the pre-checkout query was sent.

        **Bots can use this method**

        Args:
            query_id (int): Unique identifier for the query to be answered
            success (bool, optional): Set this flag if everything is alright (goods are available, etc.) and the bot is ready to proceed with the order, otherwise do not set it, and set the error field, instead
            error (Optional[str], optional): Required if the success isn't set. Error message in human readable form that explains the reason for failure to proceed with the checkout (e.g. "Sorry, somebody just bought the last of our amazing black T-shirts while you were busy filling out your payment details. Please choose a different color or garment!"). Telegram will display this message to the user.
        """

        self.query_id = query_id
        self.success = success
        self.error = error

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x95\xdd\xc2\t' if boxed else b'') as writer:
            with writer.flag() as flags:
                flags(self.success, 1)
                writer.long(self.query_id)

                if flags(self.error, 0):
                    writer.string(self.error)

            return writer.getvalue()