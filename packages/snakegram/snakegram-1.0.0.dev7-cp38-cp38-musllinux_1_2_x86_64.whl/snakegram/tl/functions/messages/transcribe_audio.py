
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.messages.transcribed_audio import TypeMessagesTranscribedAudio


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class TranscribeAudio(TLRequest[TypeMessagesTranscribedAudio]):
    """
    [Transcribe voice message](https://core.telegram.org/api/transcribe)

    Raises:
        `400`PeerIdInvalidError: The provided peer id is invalid.
        `400`TranscriptionFailedError: Audio transcription failed.
        `403`PremiumAccountRequiredError: A premium account is required to execute this action.

    """

    _id = 0X269E9A49
    _result_id = 0XFE3ED789

    def __init__(
        self,
        peer: 'TypeInputPeer',
        msg_id: int
    ):

        """
        [Transcribe voice message](https://core.telegram.org/api/transcribe)

        Args:
            peer ('TypeInputPeer'): Peer ID where the voice message was sent
            msg_id (int): Voice message ID
        """

        self.peer = peer
        self.msg_id = msg_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'I\x9a\x9e&' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )
            writer.int(self.msg_id)

            return writer.getvalue()