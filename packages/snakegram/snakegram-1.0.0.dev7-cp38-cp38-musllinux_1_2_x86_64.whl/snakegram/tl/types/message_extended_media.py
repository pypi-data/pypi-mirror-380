
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Optional, TYPE_CHECKING, Union
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .photo_size import TypePhotoSize
    from .message_media import TypeMessageMedia
    from ...gadgets.byteutils import Reader


class MessageExtendedMediaPreview(TLObject, family='TypeMessageExtendedMedia'):
    """
    Paid media preview for not yet purchased paid media, [see here](https://core.telegram.org/api/paid-media) for more info.
    """

    _id = 0XAD628CC8
    _group_id = 0X9339BD78

    def __init__(
        self,
        w: Optional[int] = None,
        h: Optional[int] = None,
        thumb: Optional['TypePhotoSize'] = None,
        video_duration: Optional[int] = None
    ):

        """
        Paid media preview for not yet purchased paid media, [see here](https://core.telegram.org/api/paid-media) for more info.

        Args:
            w (Optional[int], optional): Width
            h (Optional[int], optional): Height
            thumb (Optional['TypePhotoSize'], optional): [Extremely low resolution thumbnail](https://core.telegram.org/api/files#stripped-thumbnails).
            video_duration (Optional[int], optional): Video duration for videos.
        """

        self.w = w
        self.h = h
        self.thumb = thumb
        self.video_duration = video_duration

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xc8\x8cb\xad' if boxed else b'') as writer:
            with writer.flag() as flags:

                if flags(self.w, 0):
                    writer.int(self.w)

                if flags(self.h, 0):
                    writer.int(self.h)

                if flags(self.thumb, 1):
                    writer.object(
                        self.thumb,
                        group_id=0X478D00B0
                    )

                if flags(self.video_duration, 2):
                    writer.int(self.video_duration)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        flags = reader.flag()
        w_ = (
            reader.int()
            if flags(0) else None
        )

        h_ = (
            reader.int()
            if flags(0) else None
        )

        thumb_ = (
            reader.object(
                group_id=0X478D00B0
            )
            if flags(1) else None
        )

        video_duration_ = (
            reader.int()
            if flags(2) else None
        )

        return cls(
            w=w_,
            h=h_,
            thumb=thumb_,
            video_duration=video_duration_
        )

class MessageExtendedMedia(TLObject, family='TypeMessageExtendedMedia'):
    """
    Already purchased paid media, [see here](https://core.telegram.org/api/paid-media) for more info.
    """

    _id = 0XEE479C64
    _group_id = 0X9339BD78

    def __init__(
        self,
        media: 'TypeMessageMedia'
    ):

        """
        Already purchased paid media, [see here](https://core.telegram.org/api/paid-media) for more info.

        Args:
            media ('TypeMessageMedia'): The media we purchased.
        """

        self.media = media

    def to_bytes(self, boxed: bool=True):
        with Writer(b'd\x9cG\xee' if boxed else b'') as writer:
            writer.object(
                self.media,
                group_id=0X45F7A020
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        media_ = reader.object(
            group_id=0X45F7A020
        )

        return cls(
            media=media_
        )

TypeMessageExtendedMedia = Union[
    MessageExtendedMediaPreview,
    MessageExtendedMedia
]