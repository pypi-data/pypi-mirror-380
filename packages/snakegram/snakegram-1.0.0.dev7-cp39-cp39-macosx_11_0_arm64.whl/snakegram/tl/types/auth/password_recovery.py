
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ....gadgets.byteutils import Reader


class PasswordRecovery(TLObject, family='TypeAuthPasswordRecovery'):
    """
    Recovery info of a [2FA password](https://core.telegram.org/api/srp), only for accounts with a [recovery email configured](https://core.telegram.org/api/srp#email-verification).
    """

    _id = 0X137948A5
    _group_id = 0XE753626F

    def __init__(
        self,
        email_pattern: str
    ):

        """
        Recovery info of a [2FA password](https://core.telegram.org/api/srp), only for accounts with a [recovery email configured](https://core.telegram.org/api/srp#email-verification).

        Args:
            email_pattern (str): The email to which the recovery code was sent must match this [pattern](https://core.telegram.org/api/pattern).
        """

        self.email_pattern = email_pattern

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xa5Hy\x13' if boxed else b'') as writer:
            writer.string(self.email_pattern)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        email_pattern_ = reader.string()

        return cls(
            email_pattern=email_pattern_
        )

TypeAuthPasswordRecovery = PasswordRecovery