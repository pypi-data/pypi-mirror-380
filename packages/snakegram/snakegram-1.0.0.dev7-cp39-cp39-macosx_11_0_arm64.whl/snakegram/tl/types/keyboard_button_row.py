
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .keyboard_button import TypeKeyboardButton
    from ...gadgets.byteutils import Reader


class KeyboardButtonRow(TLObject, family='TypeKeyboardButtonRow'):
    """
    Inline keyboard row
    """

    _id = 0X77608B83
    _group_id = 0XEDE1E173

    def __init__(
        self,
        buttons: List['TypeKeyboardButton']
    ):

        """
        Inline keyboard row

        Args:
            buttons (List['TypeKeyboardButton']): Bot or inline keyboard buttons
        """

        self.buttons = buttons

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x83\x8b`w' if boxed else b'') as writer:
            writer.vector(
                self.buttons,
                lambda value: writer.object(
                    value,
                    group_id=0X89563B88
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        buttons_ = reader.vector(
            lambda: reader.object(
                group_id=0X89563B88
            )
        )

        return cls(
            buttons=buttons_
        )

TypeKeyboardButtonRow = KeyboardButtonRow