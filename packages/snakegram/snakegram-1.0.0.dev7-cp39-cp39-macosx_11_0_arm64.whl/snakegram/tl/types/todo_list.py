
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .todo_item import TypeTodoItem
    from .text_with_entities import TypeTextWithEntities
    from ...gadgets.byteutils import Reader


class TodoList(TLObject, family='TypeTodoList'):
    _id = 0X49B92A26
    _group_id = 0XC0516EC3

    def __init__(
        self,
        title: 'TypeTextWithEntities',
        list: List['TypeTodoItem'],
        others_can_append: bool = False,
        others_can_complete: bool = False
    ):

        self.title = title
        self.list = list
        self.others_can_append = others_can_append
        self.others_can_complete = others_can_complete

    def to_bytes(self, boxed: bool=True):
        with Writer(b'&*\xb9I' if boxed else b'') as writer:
            with writer.flag() as flags:
                flags(self.others_can_append, 0)
                flags(self.others_can_complete, 1)
                writer.object(
                    self.title,
                    group_id=0X5D96896
                )
                writer.vector(
                    self.list,
                    lambda value: writer.object(
                        value,
                        group_id=0X9B82B3C5
                    )
                )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        flags = reader.flag()
        title_ = reader.object(
            group_id=0X5D96896
        )

        list_ = reader.vector(
            lambda: reader.object(
                group_id=0X9B82B3C5
            )
        )

        return cls(
            title=title_,
            list=list_,
            others_can_append=flags(0),
            others_can_complete=flags(1)
        )

TypeTodoList = TodoList