
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...types.updates import TypeUpdates
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class ToggleNoForwards(TLRequest[TypeUpdates]):
    """
    Enable or disable [content protection](https://telegram.org/blog/protected-content-delete-by-date-and-more) on a channel or chat

    Raises:
        `400`ChatAdminRequiredError: You must be an admin in this chat to do this.
        `400`ChatNotModifiedError: No changes were made to chat information because the new information you passed is identical to the current information.
        `400`PeerIdInvalidError: The provided peer id is invalid.

    """

    _id = 0XB11EAFA2
    _result_id = 0XD68D29C0

    def __init__(
        self,
        peer: 'TypeInputPeer',
        enabled: bool
    ):

        """
        Enable or disable [content protection](https://telegram.org/blog/protected-content-delete-by-date-and-more) on a channel or chat

        Args:
            peer ('TypeInputPeer'): The chat or channel
            enabled (bool): Enable or disable content protection
        """

        self.peer = peer
        self.enabled = enabled

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xa2\xaf\x1e\xb1' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )
            writer.object(
                self.enabled,
                group_id=0X43B904E1
            )

            return writer.getvalue()