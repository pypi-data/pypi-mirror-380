import os


def center(text: str) -> str:
    lines = text.splitlines(keepends=True)
    max_width = max(len(line.strip()) for line in lines)
    
    result = []
    for line in lines:
        if not line.isspace():
            line = line.strip()
            padding = (max_width - len(line)) // 2
            result.append(' ' * padding + line + '\n')
        else:
            result.append(line.strip(' '))
    
    return ''.join(result)



NAME = 'snakegram'
WRITER_CLASS = 'Writer'
READER_CLASS = 'Reader'

BASE_CLASS = 'TLObject'
BASE_FUNCTION_CLASS = 'TLRequest'

# path
ROOT = os.path.dirname(os.path.dirname(__file__))
PKG_PATH = os.path.join(ROOT, NAME)



BASE_CLASS_PATH = os.path.join(PKG_PATH, 'gadgets', 'tlobject.py')
BYTE_UTILS_PATH = os.path.join(PKG_PATH, 'gadgets', 'byteutils.py')
BASE_ERROR_PATH = os.path.join(PKG_PATH, 'errors', 'base_rpc_errors.py')

# 
PY_INDENT = 4
WARN_TEXT = center(
    '''
    !!! WARNING !!!                     
    This is an auto-generated file!             
    Generated by [Builder].
    Any manual modifications will be lost upon regeneration.
    DO NOT EDIT THIS FILE DIRECTLY.
    '''
)


# maps
BASE_ERROR_CLASS = {
    303: 'SeeOtherError',
    400: 'BadRequestError',
    401: 'UnauthorizedError',
    403: 'ForbiddenError',
    404: 'NotFoundError',
    406: 'NotAcceptableError',
    420: 'FloodError',
    500: 'InternalError',
    -500: 'TimedoutError',
    -503: 'TimedoutError'
}


BASE_TYPES = {
    'bytes': 'bytes',
    'string': 'str',
    'double': 'float',

    # numbers
    'int': 'int', 'long': 'int',
    'int128': 'int', 'int256': 'int'
}

BOOLEAN_TYPES = [
    'true',
    'Bool',
    'True'
]

FILES_TO_MOVE_INTO_INIT = ['updates']

