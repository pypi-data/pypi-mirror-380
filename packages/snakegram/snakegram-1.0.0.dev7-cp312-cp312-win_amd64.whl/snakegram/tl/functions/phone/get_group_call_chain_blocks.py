
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...types.updates import TypeUpdates
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_group_call import TypeInputGroupCall


class GetGroupCallChainBlocks(TLRequest[TypeUpdates]):
    _id = 0XEE9F88A6
    _result_id = 0XD68D29C0

    def __init__(
        self,
        call: 'TypeInputGroupCall',
        sub_chain_id: int,
        offset: int,
        limit: int
    ):

        self.call = call
        self.sub_chain_id = sub_chain_id
        self.offset = offset
        self.limit = limit

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xa6\x88\x9f\xee' if boxed else b'') as writer:
            writer.object(
                self.call,
                group_id=0XDA9A559A
            )
            writer.int(self.sub_chain_id)
            writer.int(self.offset)
            writer.int(self.limit)

            return writer.getvalue()