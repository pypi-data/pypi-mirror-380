
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class Unblock(TLRequest[bool]):
    """
    Deletes a peer from a blocklist, see [here](https://core.telegram.org/api/block) for more info.

    Raises:
        `400`ChannelPrivateError: You haven't joined this channel/supergroup.
        `400`ContactIdInvalidError: The provided contact ID is invalid.
        `400`MsgIdInvalidError: Invalid message ID provided.
        `400`PeerIdInvalidError: The provided peer id is invalid.

    """

    _id = 0XB550D328
    _result_id = 0X43B904E1

    def __init__(
        self,
        id: 'TypeInputPeer',
        my_stories_from: bool = False
    ):

        """
        Deletes a peer from a blocklist, see [here](https://core.telegram.org/api/block) for more info.

        Args:
            id ('TypeInputPeer'): Peer
            my_stories_from (bool, optional): Whether the peer should be removed from the story blocklist; if not set, the peer will be removed from the main blocklist, see [here](https://core.telegram.org/api/block) for more info.
        """

        self.id = id
        self.my_stories_from = my_stories_from

    def to_bytes(self, boxed: bool=True):
        with Writer(b'(\xd3P\xb5' if boxed else b'') as writer:
            with writer.flag() as flags:
                flags(self.my_stories_from, 0)
                writer.object(
                    self.id,
                    group_id=0X995DB9DF
                )

            return writer.getvalue()