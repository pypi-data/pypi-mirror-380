
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import List, TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.stories.stories import TypeStoriesStories


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class GetStoriesByID(TLRequest[TypeStoriesStories]):
    """
    Obtain full info about a set of [stories](https://core.telegram.org/api/stories) by their IDs.

    Raises:
        `400`ChannelInvalidError: The provided channel is invalid.
        `400`ChannelPrivateError: You haven't joined this channel/supergroup.
        `400`PeerIdInvalidError: The provided peer id is invalid.
        `400`StoriesNeverCreatedError: This peer hasn't ever posted any stories.
        `400`StoryIdEmptyError: You specified no story IDs.

    """

    _id = 0X5774CA74
    _result_id = 0X596CD06C

    def __init__(
        self,
        peer: 'TypeInputPeer',
        id: List[int]
    ):

        """
        Obtain full info about a set of [stories](https://core.telegram.org/api/stories) by their IDs.

        Args:
            peer ('TypeInputPeer'): Peer where the stories were posted
            id (List[int]): Story IDs
        """

        self.peer = peer
        self.id = id

    def to_bytes(self, boxed: bool=True):
        with Writer(b't\xcatW' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )
            writer.vector(
                self.id,
                writer.int
            )

            return writer.getvalue()