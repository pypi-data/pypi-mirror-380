
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import List, TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.bot_command import TypeBotCommand
    from ...types.bot_command_scope import TypeBotCommandScope


class SetBotCommands(TLRequest[bool]):
    """
    Set bot command list

    **Bots can use this method**

    Raises:
        `400`BotCommandDescriptionInvalidError: The specified command description is invalid.
        `400`BotCommandInvalidError: The specified command is invalid.
        `400`LangCodeInvalidError: The specified language code is invalid.
        `400`PeerIdInvalidError: The provided peer id is invalid.
        `400`UserBotRequiredError: This method can only be called by a bot.
        `400`UserIdInvalidError: The provided user ID is invalid.

    """

    _id = 0X517165A
    _result_id = 0X43B904E1

    def __init__(
        self,
        scope: 'TypeBotCommandScope',
        lang_code: str,
        commands: List['TypeBotCommand']
    ):

        """
        Set bot command list

        **Bots can use this method**

        Args:
            scope ('TypeBotCommandScope'): Command scope
            lang_code (str): Language code
            commands (List['TypeBotCommand']): Bot commands
        """

        self.scope = scope
        self.lang_code = lang_code
        self.commands = commands

    def to_bytes(self, boxed: bool=True):
        with Writer(b'Z\x16\x17\x05' if boxed else b'') as writer:
            writer.object(
                self.scope,
                group_id=0XE7915F1F
            )
            writer.string(self.lang_code)
            writer.vector(
                self.commands,
                lambda value: writer.object(
                    value,
                    group_id=0X3A20FA17
                )
            )

            return writer.getvalue()