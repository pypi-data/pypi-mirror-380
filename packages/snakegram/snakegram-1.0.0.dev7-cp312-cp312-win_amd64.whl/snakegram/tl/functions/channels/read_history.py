
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_channel import TypeInputChannel


class ReadHistory(TLRequest[bool]):
    """
    Mark [channel/supergroup](https://core.telegram.org/api/channel) history as read

    Raises:
        `400`ChannelInvalidError: The provided channel is invalid.
        `400`MsgIdInvalidError: Invalid message ID provided.
        `406`ChannelPrivateError: You haven't joined this channel/supergroup.

    """

    _id = 0XCC104937
    _result_id = 0X43B904E1

    def __init__(
        self,
        channel: 'TypeInputChannel',
        max_id: int
    ):

        """
        Mark [channel/supergroup](https://core.telegram.org/api/channel) history as read

        Args:
            channel ('TypeInputChannel'): [Channel/supergroup](https://core.telegram.org/api/channel)
            max_id (int): ID of message up to which messages should be marked as read
        """

        self.channel = channel
        self.max_id = max_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'7I\x10\xcc' if boxed else b'') as writer:
            writer.object(
                self.channel,
                group_id=0X42691CEF
            )
            writer.int(self.max_id)

            return writer.getvalue()