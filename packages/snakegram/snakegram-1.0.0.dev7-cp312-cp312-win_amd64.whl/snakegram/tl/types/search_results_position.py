
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class SearchResultPosition(TLObject, family='TypeSearchResultsPosition'):
    """
    Information about a message in a specific position
    """

    _id = 0X7F648B67
    _group_id = 0XF3E2DC37

    def __init__(
        self,
        msg_id: int,
        date: int,
        offset: int
    ):

        """
        Information about a message in a specific position

        Args:
            msg_id (int): Message ID
            date (int): When was the message sent
            offset (int): 0-based message position in the full list of suitable messages
        """

        self.msg_id = msg_id
        self.date = date
        self.offset = offset

    def to_bytes(self, boxed: bool=True):
        with Writer(b'g\x8bd\x7f' if boxed else b'') as writer:
            writer.int(self.msg_id)
            writer.int(self.date)
            writer.int(self.offset)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        msg_id_ = reader.int()
        date_ = reader.int()
        offset_ = reader.int()

        return cls(
            msg_id=msg_id_,
            date=date_,
            offset=offset_
        )

TypeSearchResultsPosition = SearchResultPosition