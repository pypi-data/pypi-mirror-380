
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Union, TYPE_CHECKING
from ...gadgets.tlobject import TLObject


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class InputReportReasonSpam(TLObject, family='TypeReportReason'):
    """
    Report for spam
    """

    _id = 0X58DBCAB8
    _group_id = 0X869AA335


    def to_bytes(self, boxed: bool=True):
        return b'\xb8\xca\xdbX' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class InputReportReasonViolence(TLObject, family='TypeReportReason'):
    """
    Report for violence
    """

    _id = 0X1E22C78D
    _group_id = 0X869AA335


    def to_bytes(self, boxed: bool=True):
        return b'\x8d\xc7"\x1e' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class InputReportReasonPornography(TLObject, family='TypeReportReason'):
    """
    Report for pornography
    """

    _id = 0X2E59D922
    _group_id = 0X869AA335


    def to_bytes(self, boxed: bool=True):
        return b'"\xd9Y.' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class InputReportReasonChildAbuse(TLObject, family='TypeReportReason'):
    """
    Report for child abuse
    """

    _id = 0XADF44EE3
    _group_id = 0X869AA335


    def to_bytes(self, boxed: bool=True):
        return b'\xe3N\xf4\xad' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class InputReportReasonOther(TLObject, family='TypeReportReason'):
    """
    Other
    """

    _id = 0XC1E4A2B1
    _group_id = 0X869AA335


    def to_bytes(self, boxed: bool=True):
        return b'\xb1\xa2\xe4\xc1' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class InputReportReasonCopyright(TLObject, family='TypeReportReason'):
    """
    Report for copyrighted content
    """

    _id = 0X9B89F93A
    _group_id = 0X869AA335


    def to_bytes(self, boxed: bool=True):
        return b':\xf9\x89\x9b' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class InputReportReasonGeoIrrelevant(TLObject, family='TypeReportReason'):
    """
    Report an irrelevant geogroup
    """

    _id = 0XDBD4FEED
    _group_id = 0X869AA335


    def to_bytes(self, boxed: bool=True):
        return b'\xed\xfe\xd4\xdb' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class InputReportReasonFake(TLObject, family='TypeReportReason'):
    """
    Report for impersonation
    """

    _id = 0XF5DDD6E7
    _group_id = 0X869AA335


    def to_bytes(self, boxed: bool=True):
        return b'\xe7\xd6\xdd\xf5' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class InputReportReasonIllegalDrugs(TLObject, family='TypeReportReason'):
    """
    Report for illegal drugs
    """

    _id = 0XA8EB2BE
    _group_id = 0X869AA335


    def to_bytes(self, boxed: bool=True):
        return b'\xbe\xb2\x8e\n' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class InputReportReasonPersonalDetails(TLObject, family='TypeReportReason'):
    """
    Report for divulgation of personal details
    """

    _id = 0X9EC7863D
    _group_id = 0X869AA335


    def to_bytes(self, boxed: bool=True):
        return b'=\x86\xc7\x9e' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

TypeReportReason = Union[
    InputReportReasonSpam,
    InputReportReasonViolence,
    InputReportReasonPornography,
    InputReportReasonChildAbuse,
    InputReportReasonOther,
    InputReportReasonCopyright,
    InputReportReasonGeoIrrelevant,
    InputReportReasonFake,
    InputReportReasonIllegalDrugs,
    InputReportReasonPersonalDetails
]