
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.messages.high_scores import TypeMessagesHighScores


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer
    from ...types.input_user import TypeInputUser


class GetGameHighScores(TLRequest[TypeMessagesHighScores]):
    """
    Get highscores of a game

    **Bots can use this method**

    Raises:
        `400`MessageIdInvalidError: The provided message id is invalid.
        `400`PeerIdInvalidError: The provided peer id is invalid.
        `400`UserBotRequiredError: This method can only be called by a bot.

    """

    _id = 0XE822649D
    _result_id = 0XAB759131

    def __init__(
        self,
        peer: 'TypeInputPeer',
        id: int,
        user_id: 'TypeInputUser'
    ):

        """
        Get highscores of a game

        **Bots can use this method**

        Args:
            peer ('TypeInputPeer'): Where was the game sent
            id (int): ID of message with game media attachment
            user_id ('TypeInputUser'): Get high scores made by a certain user
        """

        self.peer = peer
        self.id = id
        self.user_id = user_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x9dd"\xe8' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )
            writer.int(self.id)
            writer.object(
                self.user_id,
                group_id=0XB628962F
            )

            return writer.getvalue()