
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.messages.messages import TypeMessagesMessages


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class GetScheduledHistory(TLRequest[TypeMessagesMessages]):
    """
    Get scheduled messages

    Raises:
        `400`ChatAdminRequiredError: You must be an admin in this chat to do this.
        `400`PeerIdInvalidError: The provided peer id is invalid.

    """

    _id = 0XF516760B
    _result_id = 0XC8BB9188

    def __init__(
        self,
        peer: 'TypeInputPeer',
        hash: int
    ):

        """
        Get scheduled messages

        Args:
            peer ('TypeInputPeer'): Peer
            hash (int): [Hash used for caching, for more info click here](https://core.telegram.org/api/offsets#hash-generation). To generate the hash, populate the ids array with the id, date and edit_date (in this order) of the previously returned messages (in order, i.e. ids = [id1, date1, edit_date1, id2, date2, edit_date2, ...]).
        """

        self.peer = peer
        self.hash = hash

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x0bv\x16\xf5' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )
            writer.long(self.hash)

            return writer.getvalue()