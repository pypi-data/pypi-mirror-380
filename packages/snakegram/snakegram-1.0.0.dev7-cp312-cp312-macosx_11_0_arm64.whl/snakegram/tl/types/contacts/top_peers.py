
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import List, TYPE_CHECKING, Union
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ..chat import TypeChat
    from ..user import TypeUser
    from ....gadgets.byteutils import Reader
    from ..top_peer_category_peers import TypeTopPeerCategoryPeers


class TopPeersNotModified(TLObject, family='TypeContactsTopPeers'):
    """
    Top peer info hasn't changed
    """

    _id = 0XDE266EF5
    _group_id = 0X15AC5C95


    def to_bytes(self, boxed: bool=True):
        return b'\xf5n&\xde' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class TopPeers(TLObject, family='TypeContactsTopPeers'):
    """
    Top peers
    """

    _id = 0X70B772A8
    _group_id = 0X15AC5C95

    def __init__(
        self,
        categories: List['TypeTopPeerCategoryPeers'],
        chats: List['TypeChat'],
        users: List['TypeUser']
    ):

        """
        Top peers

        Args:
            categories (List['TypeTopPeerCategoryPeers']): Top peers by top peer category
            chats (List['TypeChat']): Chats
            users (List['TypeUser']): Users
        """

        self.categories = categories
        self.chats = chats
        self.users = users

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xa8r\xb7p' if boxed else b'') as writer:
            writer.vector(
                self.categories,
                lambda value: writer.object(
                    value,
                    group_id=0XB0AD15
                )
            )
            writer.vector(
                self.chats,
                lambda value: writer.object(
                    value,
                    group_id=0X73A5C0D9
                )
            )
            writer.vector(
                self.users,
                lambda value: writer.object(
                    value,
                    group_id=0X9BABE43A
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        categories_ = reader.vector(
            lambda: reader.object(
                group_id=0XB0AD15
            )
        )

        chats_ = reader.vector(
            lambda: reader.object(
                group_id=0X73A5C0D9
            )
        )

        users_ = reader.vector(
            lambda: reader.object(
                group_id=0X9BABE43A
            )
        )

        return cls(
            categories=categories_,
            chats=chats_,
            users=users_
        )

class TopPeersDisabled(TLObject, family='TypeContactsTopPeers'):
    """
    Top peers disabled
    """

    _id = 0XB52C939D
    _group_id = 0X15AC5C95


    def to_bytes(self, boxed: bool=True):
        return b'\x9d\x93,\xb5' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

TypeContactsTopPeers = Union[
    TopPeersNotModified,
    TopPeers,
    TopPeersDisabled
]