
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...types.updates import TypeUpdates
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class SetHistoryTTL(TLRequest[TypeUpdates]):
    """
    Set maximum Time-To-Live of all messages in the specified chat

    Raises:
        `400`ChatNotModifiedError: No changes were made to chat information because the new information you passed is identical to the current information.
        `400`PeerIdInvalidError: The provided peer id is invalid.
        `400`TtlPeriodInvalidError: The specified TTL period is invalid.

    """

    _id = 0XB80E5FE4
    _result_id = 0XD68D29C0

    def __init__(
        self,
        peer: 'TypeInputPeer',
        period: int
    ):

        """
        Set maximum Time-To-Live of all messages in the specified chat

        Args:
            peer ('TypeInputPeer'): The dialog
            period (int): Automatically delete all messages sent in the chat after this many seconds
        """

        self.peer = peer
        self.period = period

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xe4_\x0e\xb8' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )
            writer.int(self.period)

            return writer.getvalue()