
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .peer import TypePeer
    from .auto_save_settings import TypeAutoSaveSettings
    from ...gadgets.byteutils import Reader


class AutoSaveException(TLObject, family='TypeAutoSaveException'):
    """
    Peer-specific media autosave settings
    """

    _id = 0X81602D47
    _group_id = 0XB41050F4

    def __init__(
        self,
        peer: 'TypePeer',
        settings: 'TypeAutoSaveSettings'
    ):

        """
        Peer-specific media autosave settings

        Args:
            peer ('TypePeer'): The peer
            settings ('TypeAutoSaveSettings'): Media autosave settings
        """

        self.peer = peer
        self.settings = settings

    def to_bytes(self, boxed: bool=True):
        with Writer(b'G-`\x81' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0XB4DECBCA
            )
            writer.object(
                self.settings,
                group_id=0X5D28B575
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        peer_ = reader.object(
            group_id=0XB4DECBCA
        )

        settings_ = reader.object(
            group_id=0X5D28B575
        )

        return cls(
            peer=peer_,
            settings=settings_
        )

TypeAutoSaveException = AutoSaveException