
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Union, TYPE_CHECKING, List
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .rich_text import TypeRichText
    from .page_block import TypePageBlock
    from ...gadgets.byteutils import Reader


class PageListItemText(TLObject, family='TypePageListItem'):
    """
    List item
    """

    _id = 0XB92FB6CD
    _group_id = 0X8E35A2A3

    def __init__(
        self,
        text: 'TypeRichText'
    ):

        """
        List item

        Args:
            text ('TypeRichText'): Text
        """

        self.text = text

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xcd\xb6/\xb9' if boxed else b'') as writer:
            writer.object(
                self.text,
                group_id=0XB588E109
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        text_ = reader.object(
            group_id=0XB588E109
        )

        return cls(
            text=text_
        )

class PageListItemBlocks(TLObject, family='TypePageListItem'):
    """
    List item
    """

    _id = 0X25E073FC
    _group_id = 0X8E35A2A3

    def __init__(
        self,
        blocks: List['TypePageBlock']
    ):

        """
        List item

        Args:
            blocks (List['TypePageBlock']): Blocks
        """

        self.blocks = blocks

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xfcs\xe0%' if boxed else b'') as writer:
            writer.vector(
                self.blocks,
                lambda value: writer.object(
                    value,
                    group_id=0X4A8B7F2D
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        blocks_ = reader.vector(
            lambda: reader.object(
                group_id=0X4A8B7F2D
            )
        )

        return cls(
            blocks=blocks_
        )

TypePageListItem = Union[
    PageListItemText,
    PageListItemBlocks
]