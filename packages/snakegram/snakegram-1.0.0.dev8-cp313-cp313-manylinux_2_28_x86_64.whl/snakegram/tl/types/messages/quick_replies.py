
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import List, TYPE_CHECKING, Union
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ..chat import TypeChat
    from ..user import TypeUser
    from ..message import TypeMessage
    from ..quick_reply import TypeQuickReply
    from ....gadgets.byteutils import Reader


class QuickReplies(TLObject, family='TypeMessagesQuickReplies'):
    """
    Info about [quick reply shortcuts](https://core.telegram.org/api/business#quick-reply-shortcuts).
    """

    _id = 0XC68D6695
    _group_id = 0X97157285

    def __init__(
        self,
        quick_replies: List['TypeQuickReply'],
        messages: List['TypeMessage'],
        chats: List['TypeChat'],
        users: List['TypeUser']
    ):

        """
        Info about [quick reply shortcuts](https://core.telegram.org/api/business#quick-reply-shortcuts).

        Args:
            quick_replies (List['TypeQuickReply']): Quick reply shortcuts.
            messages (List['TypeMessage']): Messages mentioned in quick_replies.
            chats (List['TypeChat']): Mentioned chats
            users (List['TypeUser']): Mentioned users
        """

        self.quick_replies = quick_replies
        self.messages = messages
        self.chats = chats
        self.users = users

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x95f\x8d\xc6' if boxed else b'') as writer:
            writer.vector(
                self.quick_replies,
                lambda value: writer.object(
                    value,
                    group_id=0XD6D497C7
                )
            )
            writer.vector(
                self.messages,
                lambda value: writer.object(
                    value,
                    group_id=0X25780A8F
                )
            )
            writer.vector(
                self.chats,
                lambda value: writer.object(
                    value,
                    group_id=0X73A5C0D9
                )
            )
            writer.vector(
                self.users,
                lambda value: writer.object(
                    value,
                    group_id=0X9BABE43A
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        quick_replies_ = reader.vector(
            lambda: reader.object(
                group_id=0XD6D497C7
            )
        )

        messages_ = reader.vector(
            lambda: reader.object(
                group_id=0X25780A8F
            )
        )

        chats_ = reader.vector(
            lambda: reader.object(
                group_id=0X73A5C0D9
            )
        )

        users_ = reader.vector(
            lambda: reader.object(
                group_id=0X9BABE43A
            )
        )

        return cls(
            quick_replies=quick_replies_,
            messages=messages_,
            chats=chats_,
            users=users_
        )

class QuickRepliesNotModified(TLObject, family='TypeMessagesQuickReplies'):
    """
    Info about [quick reply shortcuts](https://core.telegram.org/api/business#quick-reply-shortcuts) hasn't changed.
    """

    _id = 0X5F91EB5B
    _group_id = 0X97157285


    def to_bytes(self, boxed: bool=True):
        return b'[\xeb\x91_' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

TypeMessagesQuickReplies = Union[
    QuickReplies,
    QuickRepliesNotModified
]