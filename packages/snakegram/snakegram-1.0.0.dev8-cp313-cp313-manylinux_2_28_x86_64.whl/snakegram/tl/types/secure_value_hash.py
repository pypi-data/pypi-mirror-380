
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .secure_value_type import TypeSecureValueType
    from ...gadgets.byteutils import Reader


class SecureValueHash(TLObject, family='TypeSecureValueHash'):
    """
    Secure value hash
    """

    _id = 0XED1ECDB0
    _group_id = 0X79CBC208

    def __init__(
        self,
        type: 'TypeSecureValueType',
        hash: bytes
    ):

        """
        Secure value hash

        Args:
            type ('TypeSecureValueType'): Secure value type
            hash (bytes): Hash
        """

        self.type = type
        self.hash = hash

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xb0\xcd\x1e\xed' if boxed else b'') as writer:
            writer.object(
                self.type,
                group_id=0X24ADF799
            )
            writer.bytes(self.hash)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        type_ = reader.object(
            group_id=0X24ADF799
        )

        hash_ = reader.bytes()

        return cls(
            type=type_,
            hash=hash_
        )

TypeSecureValueHash = SecureValueHash