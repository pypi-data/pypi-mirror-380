
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class SecureData(TLObject, family='TypeSecureData'):
    """
    Secure [passport](https://core.telegram.org/passport) data, for more info [see the passport docs](https://core.telegram.org/passport/encryption#securedata)
    """

    _id = 0X8AEABEC3
    _group_id = 0X48EA8661

    def __init__(
        self,
        data: bytes,
        data_hash: bytes,
        secret: bytes
    ):

        """
        Secure [passport](https://core.telegram.org/passport) data, for more info [see the passport docs](https://core.telegram.org/passport/encryption#securedata)

        Args:
            data (bytes): Data
            data_hash (bytes): Data hash
            secret (bytes): Secret
        """

        self.data = data
        self.data_hash = data_hash
        self.secret = secret

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xc3\xbe\xea\x8a' if boxed else b'') as writer:
            writer.bytes(self.data)
            writer.bytes(self.data_hash)
            writer.bytes(self.secret)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        data_ = reader.bytes()
        data_hash_ = reader.bytes()
        secret_ = reader.bytes()

        return cls(
            data=data_,
            data_hash=data_hash_,
            secret=secret_
        )

TypeSecureData = SecureData