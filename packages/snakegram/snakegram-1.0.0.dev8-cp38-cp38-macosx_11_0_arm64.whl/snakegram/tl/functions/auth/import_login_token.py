
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.auth.login_token import TypeAuthLoginToken


class ImportLoginToken(TLRequest[TypeAuthLoginToken]):
    """
    Login using a redirected login token, generated in case of DC mismatch during [QR code login](https://core.telegram.org/api/qr-login).

    Raises:
        `400`AuthTokenAlreadyAcceptedError: The specified auth token was already accepted.
        `400`AuthTokenExpiredError: The authorization token has expired.
        `400`AuthTokenInvalidError: The specified auth token is invalid.
        `400`AuthTokenInvalidxError: The specified auth token is invalid.

    """

    _id = 0X95AC5CE4
    _result_id = 0X4C003CCD

    def __init__(
        self,
        token: bytes
    ):

        """
        Login using a redirected login token, generated in case of DC mismatch during [QR code login](https://core.telegram.org/api/qr-login).

        Args:
            token (bytes): Login token
        """

        self.token = token

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xe4\\\xac\x95' if boxed else b'') as writer:
            writer.bytes(self.token)

            return writer.getvalue()