
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Optional
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class BotVerifierSettings(TLObject, family='TypeBotVerifierSettings'):
    _id = 0XB0CD6617
    _group_id = 0X349433CA

    def __init__(
        self,
        icon: int,
        company: str,
        can_modify_custom_description: bool = False,
        custom_description: Optional[str] = None
    ):

        self.icon = icon
        self.company = company
        self.can_modify_custom_description = can_modify_custom_description
        self.custom_description = custom_description

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x17f\xcd\xb0' if boxed else b'') as writer:
            with writer.flag() as flags:
                flags(self.can_modify_custom_description, 1)
                writer.long(self.icon)
                writer.string(self.company)

                if flags(self.custom_description, 0):
                    writer.string(self.custom_description)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        flags = reader.flag()
        icon_ = reader.long()
        company_ = reader.string()
        custom_description_ = (
            reader.string()
            if flags(0) else None
        )

        return cls(
            icon=icon_,
            company=company_,
            can_modify_custom_description=flags(1),
            custom_description=custom_description_
        )

TypeBotVerifierSettings = BotVerifierSettings