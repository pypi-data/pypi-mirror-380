
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Optional
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class PeerColor(TLObject, family='TypePeerColor'):
    """
    Represents a [color palette](https://core.telegram.org/api/colors).
    """

    _id = 0XB54B5ACF
    _group_id = 0XA2C08D16

    def __init__(
        self,
        color: Optional[int] = None,
        background_emoji_id: Optional[int] = None
    ):

        """
        Represents a [color palette](https://core.telegram.org/api/colors).

        Args:
            color (Optional[int], optional): [Color palette ID, see here](https://core.telegram.org/api/colors) for more info; if not set, the default palette should be used.
            background_emoji_id (Optional[int], optional): Optional [custom emoji ID](https://core.telegram.org/api/custom-emoji) used to generate the pattern.
        """

        self.color = color
        self.background_emoji_id = background_emoji_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xcfZK\xb5' if boxed else b'') as writer:
            with writer.flag() as flags:

                if flags(self.color, 0):
                    writer.int(self.color)

                if flags(self.background_emoji_id, 1):
                    writer.long(self.background_emoji_id)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        flags = reader.flag()
        color_ = (
            reader.int()
            if flags(0) else None
        )

        background_emoji_id_ = (
            reader.long()
            if flags(1) else None
        )

        return cls(
            color=color_,
            background_emoji_id=background_emoji_id_
        )

TypePeerColor = PeerColor