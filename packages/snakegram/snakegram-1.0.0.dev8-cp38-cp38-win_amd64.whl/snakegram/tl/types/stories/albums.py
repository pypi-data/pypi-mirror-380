
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import List, Union, TYPE_CHECKING
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ..story_album import TypeStoryAlbum
    from ....gadgets.byteutils import Reader


class AlbumsNotModified(TLObject, family='TypeStoriesAlbums'):
    _id = 0X564EDAEB
    _group_id = 0XA994CAF7


    def to_bytes(self, boxed: bool=True):
        return b'\xeb\xdaNV' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class Albums(TLObject, family='TypeStoriesAlbums'):
    _id = 0XC3987A3A
    _group_id = 0XA994CAF7

    def __init__(
        self,
        hash: int,
        albums: List['TypeStoryAlbum']
    ):

        self.hash = hash
        self.albums = albums

    def to_bytes(self, boxed: bool=True):
        with Writer(b':z\x98\xc3' if boxed else b'') as writer:
            writer.long(self.hash)
            writer.vector(
                self.albums,
                lambda value: writer.object(
                    value,
                    group_id=0X48B2C677
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        hash_ = reader.long()
        albums_ = reader.vector(
            lambda: reader.object(
                group_id=0X48B2C677
            )
        )

        return cls(
            hash=hash_,
            albums=albums_
        )

TypeStoriesAlbums = Union[
    AlbumsNotModified,
    Albums
]