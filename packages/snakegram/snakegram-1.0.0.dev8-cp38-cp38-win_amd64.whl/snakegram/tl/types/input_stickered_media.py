
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Union, TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .input_photo import TypeInputPhoto
    from .input_document import TypeInputDocument
    from ...gadgets.byteutils import Reader


class InputStickeredMediaPhoto(TLObject, family='TypeInputStickeredMedia'):
    """
    A photo with stickers attached
    """

    _id = 0X4A992157
    _group_id = 0X9404E918

    def __init__(
        self,
        id: 'TypeInputPhoto'
    ):

        """
        A photo with stickers attached

        Args:
            id ('TypeInputPhoto'): The photo
        """

        self.id = id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'W!\x99J' if boxed else b'') as writer:
            writer.object(
                self.id,
                group_id=0XB05DFB35
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        id_ = reader.object(
            group_id=0XB05DFB35
        )

        return cls(
            id=id_
        )

class InputStickeredMediaDocument(TLObject, family='TypeInputStickeredMedia'):
    """
    A document with stickers attached
    """

    _id = 0X438865B
    _group_id = 0X9404E918

    def __init__(
        self,
        id: 'TypeInputDocument'
    ):

        """
        A document with stickers attached

        Args:
            id ('TypeInputDocument'): The document
        """

        self.id = id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'[\x868\x04' if boxed else b'') as writer:
            writer.object(
                self.id,
                group_id=0X84313E
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        id_ = reader.object(
            group_id=0X84313E
        )

        return cls(
            id=id_
        )

TypeInputStickeredMedia = Union[
    InputStickeredMediaPhoto,
    InputStickeredMediaDocument
]