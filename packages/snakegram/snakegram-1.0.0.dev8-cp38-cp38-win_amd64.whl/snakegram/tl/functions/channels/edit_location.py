
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_channel import TypeInputChannel
    from ...types.input_geo_point import TypeInputGeoPoint


class EditLocation(TLRequest[bool]):
    """
    Edit location of geogroup, see [here](https://core.telegram.org/api/nearby) for more info on geogroups.

    Raises:
        `400`ChannelInvalidError: The provided channel is invalid.
        `400`ChatAdminRequiredError: You must be an admin in this chat to do this.
        `400`ChatNotModifiedError: No changes were made to chat information because the new information you passed is identical to the current information.
        `400`MegagroupGeoRequiredError: This method can only be invoked on a geogroup.
        `400`MegagroupRequiredError: You can only use this method on a supergroup.

    """

    _id = 0X58E63F6D
    _result_id = 0X43B904E1

    def __init__(
        self,
        channel: 'TypeInputChannel',
        geo_point: 'TypeInputGeoPoint',
        address: str
    ):

        """
        Edit location of geogroup, see [here](https://core.telegram.org/api/nearby) for more info on geogroups.

        Args:
            channel ('TypeInputChannel'): [Geogroup](https://core.telegram.org/api/channel)
            geo_point ('TypeInputGeoPoint'): New geolocation
            address (str): Address string
        """

        self.channel = channel
        self.geo_point = geo_point
        self.address = address

    def to_bytes(self, boxed: bool=True):
        with Writer(b'm?\xe6X' if boxed else b'') as writer:
            writer.object(
                self.channel,
                group_id=0X42691CEF
            )
            writer.object(
                self.geo_point,
                group_id=0XF78B3873
            )
            writer.string(self.address)

            return writer.getvalue()