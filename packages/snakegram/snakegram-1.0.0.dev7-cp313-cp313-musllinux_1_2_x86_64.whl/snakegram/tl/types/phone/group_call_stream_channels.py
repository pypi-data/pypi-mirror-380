
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ....gadgets.byteutils import Reader
    from ..group_call_stream_channel import TypeGroupCallStreamChannel


class GroupCallStreamChannels(TLObject, family='TypePhoneGroupCallStreamChannels'):
    """
    Info about RTMP streams in a group call or livestream
    """

    _id = 0XD0E482B2
    _group_id = 0X9E772913

    def __init__(
        self,
        channels: List['TypeGroupCallStreamChannel']
    ):

        """
        Info about RTMP streams in a group call or livestream

        Args:
            channels (List['TypeGroupCallStreamChannel']): RTMP streams
        """

        self.channels = channels

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xb2\x82\xe4\xd0' if boxed else b'') as writer:
            writer.vector(
                self.channels,
                lambda value: writer.object(
                    value,
                    group_id=0X7F68C3E0
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        channels_ = reader.vector(
            lambda: reader.object(
                group_id=0X7F68C3E0
            )
        )

        return cls(
            channels=channels_
        )

TypePhoneGroupCallStreamChannels = GroupCallStreamChannels