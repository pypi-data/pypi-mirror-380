
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ..stats_graph import TypeStatsGraph
    from ..stats_percent_value import TypeStatsPercentValue
    from ....gadgets.byteutils import Reader
    from ..stats_date_range_days import TypeStatsDateRangeDays
    from ..stats_abs_value_and_prev import TypeStatsAbsValueAndPrev
    from ..post_interaction_counters import TypePostInteractionCounters


class BroadcastStats(TLObject, family='TypeStatsBroadcastStats'):
    """
    [Channel statistics](https://core.telegram.org/api/stats).
    """

    _id = 0X396CA5FC
    _group_id = 0XC574FBA4

    def __init__(
        self,
        period: 'TypeStatsDateRangeDays',
        followers: 'TypeStatsAbsValueAndPrev',
        views_per_post: 'TypeStatsAbsValueAndPrev',
        shares_per_post: 'TypeStatsAbsValueAndPrev',
        reactions_per_post: 'TypeStatsAbsValueAndPrev',
        views_per_story: 'TypeStatsAbsValueAndPrev',
        shares_per_story: 'TypeStatsAbsValueAndPrev',
        reactions_per_story: 'TypeStatsAbsValueAndPrev',
        enabled_notifications: 'TypeStatsPercentValue',
        growth_graph: 'TypeStatsGraph',
        followers_graph: 'TypeStatsGraph',
        mute_graph: 'TypeStatsGraph',
        top_hours_graph: 'TypeStatsGraph',
        interactions_graph: 'TypeStatsGraph',
        iv_interactions_graph: 'TypeStatsGraph',
        views_by_source_graph: 'TypeStatsGraph',
        new_followers_by_source_graph: 'TypeStatsGraph',
        languages_graph: 'TypeStatsGraph',
        reactions_by_emotion_graph: 'TypeStatsGraph',
        story_interactions_graph: 'TypeStatsGraph',
        story_reactions_by_emotion_graph: 'TypeStatsGraph',
        recent_posts_interactions: List['TypePostInteractionCounters']
    ):

        """
        [Channel statistics](https://core.telegram.org/api/stats).

        Args:
            period ('TypeStatsDateRangeDays'): Period in consideration
            followers ('TypeStatsAbsValueAndPrev'): Follower count change for period in consideration
            views_per_post ('TypeStatsAbsValueAndPrev'): total_viewcount/postcount, for posts posted during the period in consideration. Note that in this case, current refers to the period in consideration ( min_date till max_date), and prev refers to the previous period ( (min_date - (max_date - min_date)) till min_date).
            shares_per_post ('TypeStatsAbsValueAndPrev'): total_sharecount/postcount, for posts posted during the period in consideration. Note that in this case, current refers to the period in consideration ( min_date till max_date), and prev refers to the previous period ( (min_date - (max_date - min_date)) till min_date)
            reactions_per_post ('TypeStatsAbsValueAndPrev'): total_reactions/postcount, for posts posted during the period in consideration. Note that in this case, current refers to the period in consideration ( min_date till max_date), and prev refers to the previous period ( (min_date - (max_date - min_date)) till min_date)
            views_per_story ('TypeStatsAbsValueAndPrev'): total_views/storycount, for posts posted during the period in consideration. Note that in this case, current refers to the period in consideration ( min_date till max_date), and prev refers to the previous period ( (min_date - (max_date - min_date)) till min_date)
            shares_per_story ('TypeStatsAbsValueAndPrev'): total_shares/storycount, for posts posted during the period in consideration. Note that in this case, current refers to the period in consideration ( min_date till max_date), and prev refers to the previous period ( (min_date - (max_date - min_date)) till min_date)
            reactions_per_story ('TypeStatsAbsValueAndPrev'): total_reactions/storycount, for posts posted during the period in consideration. Note that in this case, current refers to the period in consideration ( min_date till max_date), and prev refers to the previous period ( (min_date - (max_date - min_date)) till min_date)
            enabled_notifications ('TypeStatsPercentValue'): Percentage of subscribers with enabled notifications
            growth_graph ('TypeStatsGraph'): Channel growth graph (absolute subscriber count)
            followers_graph ('TypeStatsGraph'): Followers growth graph (relative subscriber count)
            mute_graph ('TypeStatsGraph'): Muted users graph (relative)
            top_hours_graph ('TypeStatsGraph'): Views per hour graph (absolute)
            interactions_graph ('TypeStatsGraph'): Interactions graph (absolute)
            iv_interactions_graph ('TypeStatsGraph'): IV interactions graph (absolute)
            views_by_source_graph ('TypeStatsGraph'): Views by source graph (absolute)
            new_followers_by_source_graph ('TypeStatsGraph'): New followers by source graph (absolute)
            languages_graph ('TypeStatsGraph'): Subscriber language graph (pie chart)
            reactions_by_emotion_graph ('TypeStatsGraph'): A graph containing the number of reactions on posts categorized by emotion
            story_interactions_graph ('TypeStatsGraph'): A graph containing the number of story views and shares
            story_reactions_by_emotion_graph ('TypeStatsGraph'): A graph containing the number of reactions on stories categorized by emotion
            recent_posts_interactions (List['TypePostInteractionCounters']): Detailed statistics about number of views and shares of recently sent messages and stories
        """

        self.period = period
        self.followers = followers
        self.views_per_post = views_per_post
        self.shares_per_post = shares_per_post
        self.reactions_per_post = reactions_per_post
        self.views_per_story = views_per_story
        self.shares_per_story = shares_per_story
        self.reactions_per_story = reactions_per_story
        self.enabled_notifications = enabled_notifications
        self.growth_graph = growth_graph
        self.followers_graph = followers_graph
        self.mute_graph = mute_graph
        self.top_hours_graph = top_hours_graph
        self.interactions_graph = interactions_graph
        self.iv_interactions_graph = iv_interactions_graph
        self.views_by_source_graph = views_by_source_graph
        self.new_followers_by_source_graph = new_followers_by_source_graph
        self.languages_graph = languages_graph
        self.reactions_by_emotion_graph = reactions_by_emotion_graph
        self.story_interactions_graph = story_interactions_graph
        self.story_reactions_by_emotion_graph = story_reactions_by_emotion_graph
        self.recent_posts_interactions = recent_posts_interactions

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xfc\xa5l9' if boxed else b'') as writer:
            writer.object(
                self.period,
                group_id=0X79285AFD
            )
            writer.object(
                self.followers,
                group_id=0X3AA03D8A
            )
            writer.object(
                self.views_per_post,
                group_id=0X3AA03D8A
            )
            writer.object(
                self.shares_per_post,
                group_id=0X3AA03D8A
            )
            writer.object(
                self.reactions_per_post,
                group_id=0X3AA03D8A
            )
            writer.object(
                self.views_per_story,
                group_id=0X3AA03D8A
            )
            writer.object(
                self.shares_per_story,
                group_id=0X3AA03D8A
            )
            writer.object(
                self.reactions_per_story,
                group_id=0X3AA03D8A
            )
            writer.object(
                self.enabled_notifications,
                group_id=0XFE9414C3
            )
            writer.object(
                self.growth_graph,
                group_id=0XAFAEA986
            )
            writer.object(
                self.followers_graph,
                group_id=0XAFAEA986
            )
            writer.object(
                self.mute_graph,
                group_id=0XAFAEA986
            )
            writer.object(
                self.top_hours_graph,
                group_id=0XAFAEA986
            )
            writer.object(
                self.interactions_graph,
                group_id=0XAFAEA986
            )
            writer.object(
                self.iv_interactions_graph,
                group_id=0XAFAEA986
            )
            writer.object(
                self.views_by_source_graph,
                group_id=0XAFAEA986
            )
            writer.object(
                self.new_followers_by_source_graph,
                group_id=0XAFAEA986
            )
            writer.object(
                self.languages_graph,
                group_id=0XAFAEA986
            )
            writer.object(
                self.reactions_by_emotion_graph,
                group_id=0XAFAEA986
            )
            writer.object(
                self.story_interactions_graph,
                group_id=0XAFAEA986
            )
            writer.object(
                self.story_reactions_by_emotion_graph,
                group_id=0XAFAEA986
            )
            writer.vector(
                self.recent_posts_interactions,
                lambda value: writer.object(
                    value,
                    group_id=0XAB525254
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        period_ = reader.object(
            group_id=0X79285AFD
        )

        followers_ = reader.object(
            group_id=0X3AA03D8A
        )

        views_per_post_ = reader.object(
            group_id=0X3AA03D8A
        )

        shares_per_post_ = reader.object(
            group_id=0X3AA03D8A
        )

        reactions_per_post_ = reader.object(
            group_id=0X3AA03D8A
        )

        views_per_story_ = reader.object(
            group_id=0X3AA03D8A
        )

        shares_per_story_ = reader.object(
            group_id=0X3AA03D8A
        )

        reactions_per_story_ = reader.object(
            group_id=0X3AA03D8A
        )

        enabled_notifications_ = reader.object(
            group_id=0XFE9414C3
        )

        growth_graph_ = reader.object(
            group_id=0XAFAEA986
        )

        followers_graph_ = reader.object(
            group_id=0XAFAEA986
        )

        mute_graph_ = reader.object(
            group_id=0XAFAEA986
        )

        top_hours_graph_ = reader.object(
            group_id=0XAFAEA986
        )

        interactions_graph_ = reader.object(
            group_id=0XAFAEA986
        )

        iv_interactions_graph_ = reader.object(
            group_id=0XAFAEA986
        )

        views_by_source_graph_ = reader.object(
            group_id=0XAFAEA986
        )

        new_followers_by_source_graph_ = reader.object(
            group_id=0XAFAEA986
        )

        languages_graph_ = reader.object(
            group_id=0XAFAEA986
        )

        reactions_by_emotion_graph_ = reader.object(
            group_id=0XAFAEA986
        )

        story_interactions_graph_ = reader.object(
            group_id=0XAFAEA986
        )

        story_reactions_by_emotion_graph_ = reader.object(
            group_id=0XAFAEA986
        )

        recent_posts_interactions_ = reader.vector(
            lambda: reader.object(
                group_id=0XAB525254
            )
        )

        return cls(
            period=period_,
            followers=followers_,
            views_per_post=views_per_post_,
            shares_per_post=shares_per_post_,
            reactions_per_post=reactions_per_post_,
            views_per_story=views_per_story_,
            shares_per_story=shares_per_story_,
            reactions_per_story=reactions_per_story_,
            enabled_notifications=enabled_notifications_,
            growth_graph=growth_graph_,
            followers_graph=followers_graph_,
            mute_graph=mute_graph_,
            top_hours_graph=top_hours_graph_,
            interactions_graph=interactions_graph_,
            iv_interactions_graph=iv_interactions_graph_,
            views_by_source_graph=views_by_source_graph_,
            new_followers_by_source_graph=new_followers_by_source_graph_,
            languages_graph=languages_graph_,
            reactions_by_emotion_graph=reactions_by_emotion_graph_,
            story_interactions_graph=story_interactions_graph_,
            story_reactions_by_emotion_graph=story_reactions_by_emotion_graph_,
            recent_posts_interactions=recent_posts_interactions_
        )

TypeStatsBroadcastStats = BroadcastStats