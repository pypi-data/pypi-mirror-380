
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class InputEncryptedChat(TLObject, family='TypeInputEncryptedChat'):
    """
    Creates an encrypted chat.
    """

    _id = 0XF141B5E1
    _group_id = 0X947D3E78

    def __init__(
        self,
        chat_id: int,
        access_hash: int
    ):

        """
        Creates an encrypted chat.

        Args:
            chat_id (int): Chat ID
            access_hash (int): Checking sum from constructor [encryptedChat](https://core.telegram.org/constructor/encryptedChat), [encryptedChatWaiting](https://core.telegram.org/constructor/encryptedChatWaiting) or [encryptedChatRequested](https://core.telegram.org/constructor/encryptedChatRequested)
        """

        self.chat_id = chat_id
        self.access_hash = access_hash

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xe1\xb5A\xf1' if boxed else b'') as writer:
            writer.int(self.chat_id)
            writer.long(self.access_hash)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        chat_id_ = reader.int()
        access_hash_ = reader.long()

        return cls(
            chat_id=chat_id_,
            access_hash=access_hash_
        )

TypeInputEncryptedChat = InputEncryptedChat