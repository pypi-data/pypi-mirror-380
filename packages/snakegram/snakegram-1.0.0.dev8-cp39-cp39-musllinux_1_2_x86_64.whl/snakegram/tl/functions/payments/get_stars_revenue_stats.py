
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.payments.stars_revenue_stats import TypePaymentsStarsRevenueStats


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class GetStarsRevenueStats(TLRequest[TypePaymentsStarsRevenueStats]):
    """
    Get [Telegram Star revenue statistics](https://core.telegram.org/api/stars).

    Raises:
        `400`PeerIdInvalidError: The provided peer id is invalid.

    """

    _id = 0XD91FFAD6
    _result_id = 0X51B5B14C

    def __init__(
        self,
        peer: 'TypeInputPeer',
        dark: bool = False,
        ton: bool = False
    ):

        """
        Get [Telegram Star revenue statistics](https://core.telegram.org/api/stars).

        Args:
            peer ('TypeInputPeer'): Get statistics for the specified bot, channel or ourselves ( [inputPeerSelf](https://core.telegram.org/constructor/inputPeerSelf)).
            dark (bool, optional): Whether to enable dark theme for graph colors
            ton (bool, optional): ...
        """

        self.peer = peer
        self.dark = dark
        self.ton = ton

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xd6\xfa\x1f\xd9' if boxed else b'') as writer:
            with writer.flag() as flags:
                flags(self.dark, 0)
                flags(self.ton, 1)
                writer.object(
                    self.peer,
                    group_id=0X995DB9DF
                )

            return writer.getvalue()