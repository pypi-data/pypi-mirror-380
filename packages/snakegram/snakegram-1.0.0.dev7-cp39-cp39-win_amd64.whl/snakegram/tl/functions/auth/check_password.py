
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.auth.authorization import TypeAuthAuthorization


if TYPE_CHECKING:
    from ...types.input_check_password_srp import TypeInputCheckPasswordSRP


class CheckPassword(TLRequest[TypeAuthAuthorization]):
    """
    Try logging to an account protected by a [2FA password](https://core.telegram.org/api/srp).

    Raises:
        `500`AuthKeyUnsynchronizedError: Internal error, please repeat the method call.
        `400`PasswordHashInvalidError: The provided password hash is invalid.
        `400`SrpIdInvalidError: Invalid SRP ID provided.
        `400`SrpPasswordChangedError: Password has changed.

    """

    _id = 0XD18B4D16
    _result_id = 0X2A654890

    def __init__(
        self,
        password: 'TypeInputCheckPasswordSRP'
    ):

        """
        Try logging to an account protected by a [2FA password](https://core.telegram.org/api/srp).

        Args:
            password ('TypeInputCheckPasswordSRP'): The account's password (see [SRP](https://core.telegram.org/api/srp))
        """

        self.password = password

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x16M\x8b\xd1' if boxed else b'') as writer:
            writer.object(
                self.password,
                group_id=0X9F1A3F43
            )

            return writer.getvalue()