
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_notify_peer import TypeInputNotifyPeer
    from ...types.input_peer_notify_settings import TypeInputPeerNotifySettings


class UpdateNotifySettings(TLRequest[bool]):
    """
    Edits notification settings from a given user/group, from all users/all groups.

    Raises:
        `400`ChannelInvalidError: The provided channel is invalid.
        `400`ChannelPrivateError: You haven't joined this channel/supergroup.
        `400`MsgIdInvalidError: Invalid message ID provided.
        `400`PeerIdInvalidError: The provided peer id is invalid.
        `400`SettingsInvalidError: Invalid settings were provided.

    """

    _id = 0X84BE5B93
    _result_id = 0X43B904E1

    def __init__(
        self,
        peer: 'TypeInputNotifyPeer',
        settings: 'TypeInputPeerNotifySettings'
    ):

        """
        Edits notification settings from a given user/group, from all users/all groups.

        Args:
            peer ('TypeInputNotifyPeer'): Notification source
            settings ('TypeInputPeerNotifySettings'): Notification settings
        """

        self.peer = peer
        self.settings = settings

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x93[\xbe\x84' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0XF4A6141A
            )
            writer.object(
                self.settings,
                group_id=0X55C31CC2
            )

            return writer.getvalue()