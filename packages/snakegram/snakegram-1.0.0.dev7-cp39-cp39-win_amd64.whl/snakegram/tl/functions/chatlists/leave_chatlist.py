
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import List, TYPE_CHECKING
from ...types.updates import TypeUpdates
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer
    from ...types.input_chatlist import TypeInputChatlist


class LeaveChatlist(TLRequest[TypeUpdates]):
    """
    Delete a folder imported using a [chat folder deep link](https://core.telegram.org/api/links#chat-folder-links)

    Raises:
        `400`FilterIdInvalidError: The specified filter ID is invalid.

    """

    _id = 0X74FAE13A
    _result_id = 0XD68D29C0

    def __init__(
        self,
        chatlist: 'TypeInputChatlist',
        peers: List['TypeInputPeer']
    ):

        """
        Delete a folder imported using a [chat folder deep link](https://core.telegram.org/api/links#chat-folder-links)

        Args:
            chatlist ('TypeInputChatlist'): Folder ID
            peers (List['TypeInputPeer']): Also leave the specified channels and groups
        """

        self.chatlist = chatlist
        self.peers = peers

    def to_bytes(self, boxed: bool=True):
        with Writer(b':\xe1\xfat' if boxed else b'') as writer:
            writer.object(
                self.chatlist,
                group_id=0XF1847C0F
            )
            writer.vector(
                self.peers,
                lambda value: writer.object(
                    value,
                    group_id=0X995DB9DF
                )
            )

            return writer.getvalue()