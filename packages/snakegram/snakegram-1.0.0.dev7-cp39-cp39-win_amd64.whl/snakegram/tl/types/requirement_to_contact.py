
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Union
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class RequirementToContactEmpty(TLObject, family='TypeRequirementToContact'):
    _id = 0X50A9839
    _group_id = 0X896B07B4


    def to_bytes(self, boxed: bool=True):
        return b'9\x98\n\x05' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class RequirementToContactPremium(TLObject, family='TypeRequirementToContact'):
    _id = 0XE581E4E9
    _group_id = 0X896B07B4


    def to_bytes(self, boxed: bool=True):
        return b'\xe9\xe4\x81\xe5' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class RequirementToContactPaidMessages(TLObject, family='TypeRequirementToContact'):
    _id = 0XB4F67E93
    _group_id = 0X896B07B4

    def __init__(
        self,
        stars_amount: int
    ):

        self.stars_amount = stars_amount

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x93~\xf6\xb4' if boxed else b'') as writer:
            writer.long(self.stars_amount)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        stars_amount_ = reader.long()

        return cls(
            stars_amount=stars_amount_
        )

TypeRequirementToContact = Union[
    RequirementToContactEmpty,
    RequirementToContactPremium,
    RequirementToContactPaidMessages
]