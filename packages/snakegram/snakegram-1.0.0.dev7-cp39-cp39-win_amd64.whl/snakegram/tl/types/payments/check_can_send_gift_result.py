
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Union
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ..text_with_entities import TypeTextWithEntities
    from ....gadgets.byteutils import Reader


class CheckCanSendGiftResultOk(TLObject, family='TypePaymentsCheckCanSendGiftResult'):
    _id = 0X374FA7AD
    _group_id = 0X6E34309D


    def to_bytes(self, boxed: bool=True):
        return b'\xad\xa7O7' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class CheckCanSendGiftResultFail(TLObject, family='TypePaymentsCheckCanSendGiftResult'):
    _id = 0XD5E58274
    _group_id = 0X6E34309D

    def __init__(
        self,
        reason: 'TypeTextWithEntities'
    ):

        self.reason = reason

    def to_bytes(self, boxed: bool=True):
        with Writer(b't\x82\xe5\xd5' if boxed else b'') as writer:
            writer.object(
                self.reason,
                group_id=0X5D96896
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        reason_ = reader.object(
            group_id=0X5D96896
        )

        return cls(
            reason=reason_
        )

TypePaymentsCheckCanSendGiftResult = Union[
    CheckCanSendGiftResultOk,
    CheckCanSendGiftResultFail
]