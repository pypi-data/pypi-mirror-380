
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Union
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ....gadgets.byteutils import Reader


class BadMsgNotification(TLObject, family='TypeBadMsgNotification'):
    _id = 0XA7EFF811
    _group_id = 0X36B199EF

    def __init__(
        self,
        bad_msg_id: int,
        bad_msg_seqno: int,
        error_code: int
    ):

        self.bad_msg_id = bad_msg_id
        self.bad_msg_seqno = bad_msg_seqno
        self.error_code = error_code

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x11\xf8\xef\xa7' if boxed else b'') as writer:
            writer.long(self.bad_msg_id)
            writer.int(self.bad_msg_seqno)
            writer.int(self.error_code)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        bad_msg_id_ = reader.long()
        bad_msg_seqno_ = reader.int()
        error_code_ = reader.int()

        return cls(
            bad_msg_id=bad_msg_id_,
            bad_msg_seqno=bad_msg_seqno_,
            error_code=error_code_
        )

class BadServerSalt(TLObject, family='TypeBadMsgNotification'):
    _id = 0XEDAB447B
    _group_id = 0X36B199EF

    def __init__(
        self,
        bad_msg_id: int,
        bad_msg_seqno: int,
        error_code: int,
        new_server_salt: int
    ):

        self.bad_msg_id = bad_msg_id
        self.bad_msg_seqno = bad_msg_seqno
        self.error_code = error_code
        self.new_server_salt = new_server_salt

    def to_bytes(self, boxed: bool=True):
        with Writer(b'{D\xab\xed' if boxed else b'') as writer:
            writer.long(self.bad_msg_id)
            writer.int(self.bad_msg_seqno)
            writer.int(self.error_code)
            writer.long(self.new_server_salt)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        bad_msg_id_ = reader.long()
        bad_msg_seqno_ = reader.int()
        error_code_ = reader.int()
        new_server_salt_ = reader.long()

        return cls(
            bad_msg_id=bad_msg_id_,
            bad_msg_seqno=bad_msg_seqno_,
            error_code=error_code_,
            new_server_salt=new_server_salt_
        )

TypeBadMsgNotification = Union[
    BadMsgNotification,
    BadServerSalt
]