
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...types.updates import TypeUpdates
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.data_json import TypeDataJSON
    from ...types.input_store_payment_purpose import TypeInputStorePaymentPurpose


class AssignPlayMarketTransaction(TLRequest[TypeUpdates]):
    """
    Informs server about a purchase made through the Play Store: for official applications only.

    Raises:
        `400`DataJsonInvalidError: The provided JSON data is invalid.

    """

    _id = 0XDFFD50D3
    _result_id = 0XD68D29C0

    def __init__(
        self,
        receipt: 'TypeDataJSON',
        purpose: 'TypeInputStorePaymentPurpose'
    ):

        """
        Informs server about a purchase made through the Play Store: for official applications only.

        Args:
            receipt ('TypeDataJSON'): Receipt
            purpose ('TypeInputStorePaymentPurpose'): Payment purpose
        """

        self.receipt = receipt
        self.purpose = purpose

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xd3P\xfd\xdf' if boxed else b'') as writer:
            writer.object(
                self.receipt,
                group_id=0XE95B0798
            )
            writer.object(
                self.purpose,
                group_id=0XECBAD07B
            )

            return writer.getvalue()