
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Union
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class InputCollectibleUsername(TLObject, family='TypeInputCollectible'):
    """
    Represents a [username fragment collectible](https://core.telegram.org/api/fragment)
    """

    _id = 0XE39460A9
    _group_id = 0XBA1CA278

    def __init__(
        self,
        username: str
    ):

        """
        Represents a [username fragment collectible](https://core.telegram.org/api/fragment)

        Args:
            username (str): Username
        """

        self.username = username

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xa9`\x94\xe3' if boxed else b'') as writer:
            writer.string(self.username)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        username_ = reader.string()

        return cls(
            username=username_
        )

class InputCollectiblePhone(TLObject, family='TypeInputCollectible'):
    """
    Represents a [phone number fragment collectible](https://core.telegram.org/api/fragment)
    """

    _id = 0XA2E214A4
    _group_id = 0XBA1CA278

    def __init__(
        self,
        phone: str
    ):

        """
        Represents a [phone number fragment collectible](https://core.telegram.org/api/fragment)

        Args:
            phone (str): Phone number
        """

        self.phone = phone

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xa4\x14\xe2\xa2' if boxed else b'') as writer:
            writer.string(self.phone)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        phone_ = reader.string()

        return cls(
            phone=phone_
        )

TypeInputCollectible = Union[
    InputCollectibleUsername,
    InputCollectiblePhone
]