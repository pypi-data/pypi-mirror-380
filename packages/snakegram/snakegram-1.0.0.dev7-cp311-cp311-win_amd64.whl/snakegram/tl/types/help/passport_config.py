
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Union
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ..data_json import TypeDataJSON
    from ....gadgets.byteutils import Reader


class PassportConfigNotModified(TLObject, family='TypeHelpPassportConfig'):
    """
    Password configuration not modified
    """

    _id = 0XBFB9F457
    _group_id = 0XCE79B99


    def to_bytes(self, boxed: bool=True):
        return b'W\xf4\xb9\xbf' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class PassportConfig(TLObject, family='TypeHelpPassportConfig'):
    """
    Telegram [passport](https://core.telegram.org/passport) configuration
    """

    _id = 0XA098D6AF
    _group_id = 0XCE79B99

    def __init__(
        self,
        hash: int,
        countries_langs: 'TypeDataJSON'
    ):

        """
        Telegram [passport](https://core.telegram.org/passport) configuration

        Args:
            hash (int): [Hash used for caching, for more info click here](https://core.telegram.org/api/offsets#hash-generation)
            countries_langs ('TypeDataJSON'): Localization
        """

        self.hash = hash
        self.countries_langs = countries_langs

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xaf\xd6\x98\xa0' if boxed else b'') as writer:
            writer.int(self.hash)
            writer.object(
                self.countries_langs,
                group_id=0XE95B0798
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        hash_ = reader.int()
        countries_langs_ = reader.object(
            group_id=0XE95B0798
        )

        return cls(
            hash=hash_,
            countries_langs=countries_langs_
        )

TypeHelpPassportConfig = Union[
    PassportConfigNotModified,
    PassportConfig
]