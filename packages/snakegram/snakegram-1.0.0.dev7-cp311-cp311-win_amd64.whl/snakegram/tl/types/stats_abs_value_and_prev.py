
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class StatsAbsValueAndPrev(TLObject, family='TypeStatsAbsValueAndPrev'):
    """
    Statistics value couple; initial and final value for period of time currently in consideration
    """

    _id = 0XCB43ACDE
    _group_id = 0X3AA03D8A

    def __init__(
        self,
        current: float,
        previous: float
    ):

        """
        Statistics value couple; initial and final value for period of time currently in consideration

        Args:
            current (float): Current value
            previous (float): Previous value
        """

        self.current = current
        self.previous = previous

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xde\xacC\xcb' if boxed else b'') as writer:
            writer.double(self.current)
            writer.double(self.previous)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        current_ = reader.double()
        previous_ = reader.double()

        return cls(
            current=current_,
            previous=previous_
        )

TypeStatsAbsValueAndPrev = StatsAbsValueAndPrev