
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Union
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class InputGroupCall(TLObject, family='TypeInputGroupCall'):
    """
    Points to a specific group call
    """

    _id = 0XD8AA840F
    _group_id = 0XDA9A559A

    def __init__(
        self,
        id: int,
        access_hash: int
    ):

        """
        Points to a specific group call

        Args:
            id (int): Group call ID
            access_hash (int): Group call access hash
        """

        self.id = id
        self.access_hash = access_hash

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x0f\x84\xaa\xd8' if boxed else b'') as writer:
            writer.long(self.id)
            writer.long(self.access_hash)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        id_ = reader.long()
        access_hash_ = reader.long()

        return cls(
            id=id_,
            access_hash=access_hash_
        )

class InputGroupCallSlug(TLObject, family='TypeInputGroupCall'):
    _id = 0XFE06823F
    _group_id = 0XDA9A559A

    def __init__(
        self,
        slug: str
    ):

        self.slug = slug

    def to_bytes(self, boxed: bool=True):
        with Writer(b'?\x82\x06\xfe' if boxed else b'') as writer:
            writer.string(self.slug)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        slug_ = reader.string()

        return cls(
            slug=slug_
        )

class InputGroupCallInviteMessage(TLObject, family='TypeInputGroupCall'):
    _id = 0X8C10603F
    _group_id = 0XDA9A559A

    def __init__(
        self,
        msg_id: int
    ):

        self.msg_id = msg_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'?`\x10\x8c' if boxed else b'') as writer:
            writer.int(self.msg_id)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        msg_id_ = reader.int()

        return cls(
            msg_id=msg_id_
        )

TypeInputGroupCall = Union[
    InputGroupCall,
    InputGroupCallSlug,
    InputGroupCallInviteMessage
]