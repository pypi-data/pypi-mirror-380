
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Union
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class StarGiftAttributeIdModel(TLObject, family='TypeStarGiftAttributeId'):
    _id = 0X48AAAE3C
    _group_id = 0X76631A31

    def __init__(
        self,
        document_id: int
    ):

        self.document_id = document_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'<\xae\xaaH' if boxed else b'') as writer:
            writer.long(self.document_id)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        document_id_ = reader.long()

        return cls(
            document_id=document_id_
        )

class StarGiftAttributeIdPattern(TLObject, family='TypeStarGiftAttributeId'):
    _id = 0X4A162433
    _group_id = 0X76631A31

    def __init__(
        self,
        document_id: int
    ):

        self.document_id = document_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'3$\x16J' if boxed else b'') as writer:
            writer.long(self.document_id)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        document_id_ = reader.long()

        return cls(
            document_id=document_id_
        )

class StarGiftAttributeIdBackdrop(TLObject, family='TypeStarGiftAttributeId'):
    _id = 0X1F01C757
    _group_id = 0X76631A31

    def __init__(
        self,
        backdrop_id: int
    ):

        self.backdrop_id = backdrop_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'W\xc7\x01\x1f' if boxed else b'') as writer:
            writer.int(self.backdrop_id)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        backdrop_id_ = reader.int()

        return cls(
            backdrop_id=backdrop_id_
        )

TypeStarGiftAttributeId = Union[
    StarGiftAttributeIdModel,
    StarGiftAttributeIdPattern,
    StarGiftAttributeIdBackdrop
]