
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import List, TYPE_CHECKING
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ..authorization import TypeAuthorization
    from ....gadgets.byteutils import Reader


class Authorizations(TLObject, family='TypeAccountAuthorizations'):
    """
    Logged-in sessions
    """

    _id = 0X4BFF8EA0
    _group_id = 0XA1BB6D7

    def __init__(
        self,
        authorization_ttl_days: int,
        authorizations: List['TypeAuthorization']
    ):

        """
        Logged-in sessions

        Args:
            authorization_ttl_days (int): Time-to-live of session
            authorizations (List['TypeAuthorization']): Logged-in sessions
        """

        self.authorization_ttl_days = authorization_ttl_days
        self.authorizations = authorizations

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xa0\x8e\xffK' if boxed else b'') as writer:
            writer.int(self.authorization_ttl_days)
            writer.vector(
                self.authorizations,
                lambda value: writer.object(
                    value,
                    group_id=0X3AA82A4C
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        authorization_ttl_days_ = reader.int()
        authorizations_ = reader.vector(
            lambda: reader.object(
                group_id=0X3AA82A4C
            )
        )

        return cls(
            authorization_ttl_days=authorization_ttl_days_,
            authorizations=authorizations_
        )

TypeAccountAuthorizations = Authorizations