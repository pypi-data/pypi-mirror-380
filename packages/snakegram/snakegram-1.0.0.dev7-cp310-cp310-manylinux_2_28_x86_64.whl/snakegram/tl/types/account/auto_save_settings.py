
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import List, TYPE_CHECKING
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ..chat import TypeChat
    from ..user import TypeUser
    from ..auto_save_settings import TypeAutoSaveSettings
    from ..auto_save_exception import TypeAutoSaveException
    from ....gadgets.byteutils import Reader


class AutoSaveSettings(TLObject, family='TypeAccountAutoSaveSettings'):
    """
    Contains media autosave settings
    """

    _id = 0X4C3E069D
    _group_id = 0X979A7487

    def __init__(
        self,
        users_settings: 'TypeAutoSaveSettings',
        chats_settings: 'TypeAutoSaveSettings',
        broadcasts_settings: 'TypeAutoSaveSettings',
        exceptions: List['TypeAutoSaveException'],
        chats: List['TypeChat'],
        users: List['TypeUser']
    ):

        """
        Contains media autosave settings

        Args:
            users_settings ('TypeAutoSaveSettings'): Default media autosave settings for private chats
            chats_settings ('TypeAutoSaveSettings'): Default media autosave settings for [groups and supergroups](https://core.telegram.org/api/channel)
            broadcasts_settings ('TypeAutoSaveSettings'): Default media autosave settings for [channels](https://core.telegram.org/api/channel)
            exceptions (List['TypeAutoSaveException']): Peer-specific granular autosave settings
            chats (List['TypeChat']): Chats mentioned in the peer-specific granular autosave settings
            users (List['TypeUser']): Users mentioned in the peer-specific granular autosave settings
        """

        self.users_settings = users_settings
        self.chats_settings = chats_settings
        self.broadcasts_settings = broadcasts_settings
        self.exceptions = exceptions
        self.chats = chats
        self.users = users

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x9d\x06>L' if boxed else b'') as writer:
            writer.object(
                self.users_settings,
                group_id=0X5D28B575
            )
            writer.object(
                self.chats_settings,
                group_id=0X5D28B575
            )
            writer.object(
                self.broadcasts_settings,
                group_id=0X5D28B575
            )
            writer.vector(
                self.exceptions,
                lambda value: writer.object(
                    value,
                    group_id=0XB41050F4
                )
            )
            writer.vector(
                self.chats,
                lambda value: writer.object(
                    value,
                    group_id=0X73A5C0D9
                )
            )
            writer.vector(
                self.users,
                lambda value: writer.object(
                    value,
                    group_id=0X9BABE43A
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        users_settings_ = reader.object(
            group_id=0X5D28B575
        )

        chats_settings_ = reader.object(
            group_id=0X5D28B575
        )

        broadcasts_settings_ = reader.object(
            group_id=0X5D28B575
        )

        exceptions_ = reader.vector(
            lambda: reader.object(
                group_id=0XB41050F4
            )
        )

        chats_ = reader.vector(
            lambda: reader.object(
                group_id=0X73A5C0D9
            )
        )

        users_ = reader.vector(
            lambda: reader.object(
                group_id=0X9BABE43A
            )
        )

        return cls(
            users_settings=users_settings_,
            chats_settings=chats_settings_,
            broadcasts_settings=broadcasts_settings_,
            exceptions=exceptions_,
            chats=chats_,
            users=users_
        )

TypeAccountAutoSaveSettings = AutoSaveSettings