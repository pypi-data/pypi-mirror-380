
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...types.updates import TypeUpdates
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_chat_photo import TypeInputChatPhoto


class EditChatPhoto(TLRequest[TypeUpdates]):
    """
    Changes chat photo and sends a service message on it

    **Bots can use this method**

    Raises:
        `400`ChatIdInvalidError: The provided chat id is invalid.
        `400`ChatNotModifiedError: No changes were made to chat information because the new information you passed is identical to the current information.
        `400`ImageProcessFailedError: Failure while processing image.
        `400`PeerIdInvalidError: The provided peer id is invalid.
        `400`PhotoCropSizeSmallError: Photo is too small.
        `400`PhotoExtInvalidError: The extension of the photo is invalid.
        `400`PhotoInvalidError: Photo invalid.

    """

    _id = 0X35DDD674
    _result_id = 0XD68D29C0

    def __init__(
        self,
        chat_id: int,
        photo: 'TypeInputChatPhoto'
    ):

        """
        Changes chat photo and sends a service message on it

        **Bots can use this method**

        Args:
            chat_id (int): Chat ID
            photo ('TypeInputChatPhoto'): Photo to be set
        """

        self.chat_id = chat_id
        self.photo = photo

    def to_bytes(self, boxed: bool=True):
        with Writer(b't\xd6\xdd5' if boxed else b'') as writer:
            writer.long(self.chat_id)
            writer.object(
                self.photo,
                group_id=0X5610625F
            )

            return writer.getvalue()