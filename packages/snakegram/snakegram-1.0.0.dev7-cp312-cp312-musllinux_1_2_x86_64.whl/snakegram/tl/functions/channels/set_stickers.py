
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_channel import TypeInputChannel
    from ...types.input_sticker_set import TypeInputStickerSet


class SetStickers(TLRequest[bool]):
    """
    Associate a stickerset to the supergroup

    **Bots can use this method**

    Raises:
        `400`ChannelInvalidError: The provided channel is invalid.
        `400`ChatIdInvalidError: The provided chat id is invalid.
        `400`ParticipantsTooFewError: Not enough participants.
        `406`StickersetOwnerAnonymousError: Provided stickerset can't be installed as group stickerset to prevent admin deanonymization.

    """

    _id = 0XEA8CA4F9
    _result_id = 0X43B904E1

    def __init__(
        self,
        channel: 'TypeInputChannel',
        stickerset: 'TypeInputStickerSet'
    ):

        """
        Associate a stickerset to the supergroup

        **Bots can use this method**

        Args:
            channel ('TypeInputChannel'): Supergroup
            stickerset ('TypeInputStickerSet'): The stickerset to associate
        """

        self.channel = channel
        self.stickerset = stickerset

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xf9\xa4\x8c\xea' if boxed else b'') as writer:
            writer.object(
                self.channel,
                group_id=0X42691CEF
            )
            writer.object(
                self.stickerset,
                group_id=0X919D8BA5
            )

            return writer.getvalue()