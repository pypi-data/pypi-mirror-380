
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import List, TYPE_CHECKING, Union
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ....gadgets.byteutils import Reader


class SavedMusicIdsNotModified(TLObject, family='TypeAccountSavedMusicIds'):
    _id = 0X4FC81D6E
    _group_id = 0X7E6DD8D3


    def to_bytes(self, boxed: bool=True):
        return b'n\x1d\xc8O' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class SavedMusicIds(TLObject, family='TypeAccountSavedMusicIds'):
    _id = 0X998D6636
    _group_id = 0X7E6DD8D3

    def __init__(
        self,
        ids: List[int]
    ):

        self.ids = ids

    def to_bytes(self, boxed: bool=True):
        with Writer(b'6f\x8d\x99' if boxed else b'') as writer:
            writer.vector(
                self.ids,
                writer.long
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        ids_ = reader.vector(
            reader.long
        )

        return cls(
            ids=ids_
        )

TypeAccountSavedMusicIds = Union[
    SavedMusicIdsNotModified,
    SavedMusicIds
]