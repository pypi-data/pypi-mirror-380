
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class TogglePinned(TLRequest[List[int]]):
    """
    Pin or unpin one or more stories

    Raises:
        `400`PeerIdInvalidError: The provided peer id is invalid.

    """

    _id = 0X9A75A1EF

    def __init__(
        self,
        peer: 'TypeInputPeer',
        id: List[int],
        pinned: bool
    ):

        """
        Pin or unpin one or more stories

        Args:
            peer ('TypeInputPeer'): Peer where to pin or unpin stories
            id (List[int]): IDs of stories to pin or unpin
            pinned (bool): Whether to pin or unpin the stories
        """

        self.peer = peer
        self.id = id
        self.pinned = pinned

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xef\xa1u\x9a' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )
            writer.vector(
                self.id,
                writer.int
            )
            writer.object(
                self.pinned,
                group_id=0X43B904E1
            )

            return writer.getvalue()