
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Union
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class InputChatThemeEmpty(TLObject, family='TypeInputChatTheme'):
    _id = 0X83268483
    _group_id = 0XD5D2014F


    def to_bytes(self, boxed: bool=True):
        return b'\x83\x84&\x83' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class InputChatTheme(TLObject, family='TypeInputChatTheme'):
    _id = 0XC93DE95C
    _group_id = 0XD5D2014F

    def __init__(
        self,
        emoticon: str
    ):

        self.emoticon = emoticon

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\\\xe9=\xc9' if boxed else b'') as writer:
            writer.string(self.emoticon)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        emoticon_ = reader.string()

        return cls(
            emoticon=emoticon_
        )

class InputChatThemeUniqueGift(TLObject, family='TypeInputChatTheme'):
    _id = 0X87E5DFE4
    _group_id = 0XD5D2014F

    def __init__(
        self,
        slug: str
    ):

        self.slug = slug

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xe4\xdf\xe5\x87' if boxed else b'') as writer:
            writer.string(self.slug)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        slug_ = reader.string()

        return cls(
            slug=slug_
        )

TypeInputChatTheme = Union[
    InputChatThemeEmpty,
    InputChatTheme,
    InputChatThemeUniqueGift
]