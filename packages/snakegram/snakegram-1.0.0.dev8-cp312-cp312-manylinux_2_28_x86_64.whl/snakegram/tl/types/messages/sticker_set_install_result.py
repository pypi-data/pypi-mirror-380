
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Union, List, TYPE_CHECKING
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ....gadgets.byteutils import Reader
    from ..sticker_set_covered import TypeStickerSetCovered


class StickerSetInstallResultSuccess(TLObject, family='TypeMessagesStickerSetInstallResult'):
    """
    The stickerset was installed successfully
    """

    _id = 0X38641628
    _group_id = 0X9CBB83CE


    def to_bytes(self, boxed: bool=True):
        return b'(\x16d8' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class StickerSetInstallResultArchive(TLObject, family='TypeMessagesStickerSetInstallResult'):
    """
    The stickerset was installed, but since there are too many stickersets some were archived
    """

    _id = 0X35E410A8
    _group_id = 0X9CBB83CE

    def __init__(
        self,
        sets: List['TypeStickerSetCovered']
    ):

        """
        The stickerset was installed, but since there are too many stickersets some were archived

        Args:
            sets (List['TypeStickerSetCovered']): Archived stickersets
        """

        self.sets = sets

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xa8\x10\xe45' if boxed else b'') as writer:
            writer.vector(
                self.sets,
                lambda value: writer.object(
                    value,
                    group_id=0X16103538
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        sets_ = reader.vector(
            lambda: reader.object(
                group_id=0X16103538
            )
        )

        return cls(
            sets=sets_
        )

TypeMessagesStickerSetInstallResult = Union[
    StickerSetInstallResultSuccess,
    StickerSetInstallResultArchive
]