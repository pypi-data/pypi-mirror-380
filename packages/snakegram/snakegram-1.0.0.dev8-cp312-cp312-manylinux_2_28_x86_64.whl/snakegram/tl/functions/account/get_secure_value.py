
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List
from ....gadgets.tlobject import TLRequest
from ...types.secure_value import TypeSecureValue
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.secure_value_type import TypeSecureValueType


class GetSecureValue(TLRequest[List[TypeSecureValue]]):
    """
    Get saved [Telegram Passport](https://core.telegram.org/passport) document, [for more info see the passport docs](https://core.telegram.org/passport/encryption#encryption)
    """

    _id = 0X73665BC2

    def __init__(
        self,
        types: List['TypeSecureValueType']
    ):

        """
        Get saved [Telegram Passport](https://core.telegram.org/passport) document, [for more info see the passport docs](https://core.telegram.org/passport/encryption#encryption)

        Args:
            types (List['TypeSecureValueType']): Requested value types
        """

        self.types = types

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xc2[fs' if boxed else b'') as writer:
            writer.vector(
                self.types,
                lambda value: writer.object(
                    value,
                    group_id=0X24ADF799
                )
            )

            return writer.getvalue()