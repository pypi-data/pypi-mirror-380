
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_channel import TypeInputChannel


class SetDiscussionGroup(TLRequest[bool]):
    """
    Associate a group to a channel as [discussion group](https://core.telegram.org/api/discussion) for that channel

    Raises:
        `400`BroadcastIdInvalidError: Broadcast ID invalid.
        `400`ChannelInvalidError: The provided channel is invalid.
        `400`ChatAdminRequiredError: You must be an admin in this chat to do this.
        `400`LinkNotModifiedError: Discussion link not modified.
        `400`MegagroupIdInvalidError: Invalid supergroup ID.
        `400`MegagroupPrehistoryHiddenError: Group with hidden history for new members can't be set as discussion groups.
        `403`ChatWriteForbiddenError: You can't write in this chat.

    """

    _id = 0X40582BB2
    _result_id = 0X43B904E1

    def __init__(
        self,
        broadcast: 'TypeInputChannel',
        group: 'TypeInputChannel'
    ):

        """
        Associate a group to a channel as [discussion group](https://core.telegram.org/api/discussion) for that channel

        Args:
            broadcast ('TypeInputChannel'): Channel
            group ('TypeInputChannel'): [Discussion group](https://core.telegram.org/api/discussion) to associate to the channel
        """

        self.broadcast = broadcast
        self.group = group

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xb2+X@' if boxed else b'') as writer:
            writer.object(
                self.broadcast,
                group_id=0X42691CEF
            )
            writer.object(
                self.group,
                group_id=0X42691CEF
            )

            return writer.getvalue()