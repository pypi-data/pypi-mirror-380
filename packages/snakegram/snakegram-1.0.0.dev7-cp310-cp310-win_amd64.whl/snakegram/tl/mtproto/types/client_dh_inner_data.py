
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ....gadgets.byteutils import Reader


class ClientDHInnerData(TLObject, family='TypeClientDHInnerData'):
    _id = 0X6643B654
    _group_id = 0XAF262CA1

    def __init__(
        self,
        nonce: int,
        server_nonce: int,
        retry_id: int,
        g_b: bytes
    ):

        self.nonce = nonce
        self.server_nonce = server_nonce
        self.retry_id = retry_id
        self.g_b = g_b

    def to_bytes(self, boxed: bool=True):
        with Writer(b'T\xb6Cf' if boxed else b'') as writer:
            writer.int128(self.nonce)
            writer.int128(self.server_nonce)
            writer.long(self.retry_id)
            writer.bytes(self.g_b)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        nonce_ = reader.int128()
        server_nonce_ = reader.int128()
        retry_id_ = reader.long()
        g_b_ = reader.bytes()

        return cls(
            nonce=nonce_,
            server_nonce=server_nonce_,
            retry_id=retry_id_,
            g_b=g_b_
        )

TypeClientDHInnerData = ClientDHInnerData