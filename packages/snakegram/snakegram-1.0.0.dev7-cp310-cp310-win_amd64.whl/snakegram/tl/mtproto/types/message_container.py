
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import List, TYPE_CHECKING
from .message import TypeMessage
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ....gadgets.byteutils import Reader


class MsgContainer(TLObject, family='TypeMessageContainer'):
    _id = 0X73F1F8DC
    _group_id = 0XE599B727

    def __init__(
        self,
        messages: List[TypeMessage]
    ):

        self.messages = messages

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xdc\xf8\xf1s' if boxed else b'') as writer:
            writer.vector(
                self.messages,
                lambda value: writer.object(
                    value,
                    base_type=TypeMessage
                ),
                boxed=False
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        messages_ = reader.vector(
            lambda: reader.object(
                boxed=False,
                base_type=TypeMessage
            ),
            boxed=False
        )

        return cls(
            messages=messages_
        )

TypeMessageContainer = MsgContainer