
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.account.sent_email_code import TypeAccountSentEmailCode


if TYPE_CHECKING:
    from ...types.email_verify_purpose import TypeEmailVerifyPurpose


class SendVerifyEmailCode(TLRequest[TypeAccountSentEmailCode]):
    """
    Send an email verification code.

    Raises:
        `400`EmailInvalidError: The specified email is invalid.
        `400`EmailNotAllowedError: The specified email cannot be used to complete the operation.
        `400`EmailNotSetupError: In order to change the login email with emailVerifyPurposeLoginChange, an existing login email must already be set using emailVerifyPurposeLoginSetup.
        `400`PhoneHashExpiredError: An invalid or expired `phone_code_hash` was provided.
        `400`PhoneNumberInvalidError: The phone number is invalid.

    """

    _id = 0X98E037BB
    _result_id = 0X5CD4EE2F

    def __init__(
        self,
        purpose: 'TypeEmailVerifyPurpose',
        email: str
    ):

        """
        Send an email verification code.

        Args:
            purpose ('TypeEmailVerifyPurpose'): Verification purpose.
            email (str): The email where to send the code.
        """

        self.purpose = purpose
        self.email = email

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xbb7\xe0\x98' if boxed else b'') as writer:
            writer.object(
                self.purpose,
                group_id=0X41635250
            )
            writer.string(self.email)

            return writer.getvalue()