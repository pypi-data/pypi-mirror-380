
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import List, TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.messages.message_views import TypeMessagesMessageViews


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class GetMessagesViews(TLRequest[TypeMessagesMessageViews]):
    """
    Get and increase the view counter of a message sent or forwarded from a [channel](https://core.telegram.org/api/channel)

    Raises:
        `400`ChannelInvalidError: The provided channel is invalid.
        `400`ChatIdInvalidError: The provided chat id is invalid.
        `400`MsgIdInvalidError: Invalid message ID provided.
        `400`PeerIdInvalidError: The provided peer id is invalid.
        `406`ChannelPrivateError: You haven't joined this channel/supergroup.

    """

    _id = 0X5784D3E1
    _result_id = 0XCF97707F

    def __init__(
        self,
        peer: 'TypeInputPeer',
        id: List[int],
        increment: bool
    ):

        """
        Get and increase the view counter of a message sent or forwarded from a [channel](https://core.telegram.org/api/channel)

        Args:
            peer ('TypeInputPeer'): Peer where the message was found
            id (List[int]): ID of message
            increment (bool): Whether to mark the message as viewed and increment the view counter
        """

        self.peer = peer
        self.id = id
        self.increment = increment

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xe1\xd3\x84W' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )
            writer.vector(
                self.id,
                writer.int
            )
            writer.object(
                self.increment,
                group_id=0X43B904E1
            )

            return writer.getvalue()