
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_encrypted_chat import TypeInputEncryptedChat


class SetEncryptedTyping(TLRequest[bool]):
    """
    Send typing event by the current user to a secret chat.

    Raises:
        `400`ChatIdInvalidError: The provided chat id is invalid.

    """

    _id = 0X791451ED
    _result_id = 0X43B904E1

    def __init__(
        self,
        peer: 'TypeInputEncryptedChat',
        typing: bool
    ):

        """
        Send typing event by the current user to a secret chat.

        Args:
            peer ('TypeInputEncryptedChat'): Secret chat ID
            typing (bool): Typing. Possible values: [(boolTrue)](https://core.telegram.org/constructor/boolTrue), if the user started typing and more than 5 seconds have passed since the last request [(boolFalse)](https://core.telegram.org/constructor/boolFalse), if the user stopped typing
        """

        self.peer = peer
        self.typing = typing

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xedQ\x14y' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X947D3E78
            )
            writer.object(
                self.typing,
                group_id=0X43B904E1
            )

            return writer.getvalue()