
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class ChangeStarsSubscription(TLRequest[bool]):
    """
    Activate or deactivate a [Telegram Star subscription](https://core.telegram.org/api/invites#paid-invite-links).

    Raises:
        `400`PeerIdInvalidError: The provided peer id is invalid.

    """

    _id = 0XC7770878
    _result_id = 0X43B904E1

    def __init__(
        self,
        peer: 'TypeInputPeer',
        subscription_id: str,
        canceled: bool = False
    ):

        """
        Activate or deactivate a [Telegram Star subscription](https://core.telegram.org/api/invites#paid-invite-links).

        Args:
            peer ('TypeInputPeer'): Always pass [inputPeerSelf](https://core.telegram.org/constructor/inputPeerSelf).
            subscription_id (str): ID of the subscription.
            canceled (bool, optional): Whether to cancel or reactivate the subscription.
        """

        self.peer = peer
        self.subscription_id = subscription_id
        self.canceled = canceled

    def to_bytes(self, boxed: bool=True):
        with Writer(b'x\x08w\xc7' if boxed else b'') as writer:
            with writer.flag() as flags:
                writer.object(
                    self.peer,
                    group_id=0X995DB9DF
                )
                writer.string(self.subscription_id)

                if flags(self.canceled, 0):
                    writer.object(
                        self.canceled,
                        group_id=0X43B904E1
                    )

            return writer.getvalue()