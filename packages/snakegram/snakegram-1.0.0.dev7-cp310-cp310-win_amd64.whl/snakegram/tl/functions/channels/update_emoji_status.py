
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...types.updates import TypeUpdates
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.emoji_status import TypeEmojiStatus
    from ...types.input_channel import TypeInputChannel


class UpdateEmojiStatus(TLRequest[TypeUpdates]):
    """
    Set an [emoji status](https://core.telegram.org/api/emoji-status) for a channel or supergroup.

    Raises:
        `400`ChannelInvalidError: The provided channel is invalid.

    """

    _id = 0XF0D3E6A8
    _result_id = 0XD68D29C0

    def __init__(
        self,
        channel: 'TypeInputChannel',
        emoji_status: 'TypeEmojiStatus'
    ):

        """
        Set an [emoji status](https://core.telegram.org/api/emoji-status) for a channel or supergroup.

        Args:
            channel ('TypeInputChannel'): The channel/supergroup, must have at least [channel_emoji_status_level_min](https://core.telegram.org/api/config#channel-emoji-status-level-min)/ [group_emoji_status_level_min](https://core.telegram.org/api/config#group-emoji-status-level-min) boosts.
            emoji_status ('TypeEmojiStatus'): [Emoji status](https://core.telegram.org/api/emoji-status) to set
        """

        self.channel = channel
        self.emoji_status = emoji_status

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xa8\xe6\xd3\xf0' if boxed else b'') as writer:
            writer.object(
                self.channel,
                group_id=0X42691CEF
            )
            writer.object(
                self.emoji_status,
                group_id=0XFBDA9FB
            )

            return writer.getvalue()