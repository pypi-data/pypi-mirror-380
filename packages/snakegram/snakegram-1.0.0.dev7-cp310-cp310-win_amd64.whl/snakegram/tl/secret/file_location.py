
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Union, TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class FileLocationUnavailable(TLObject, family='TypeFileLocation'):
    _id = 0X7C596B46
    _group_id = 0X926C7631

    def __init__(
        self,
        volume_id: int,
        local_id: int,
        secret: int
    ):

        self.volume_id = volume_id
        self.local_id = local_id
        self.secret = secret

    def to_bytes(self, boxed: bool=True):
        with Writer(b'FkY|' if boxed else b'') as writer:
            writer.long(self.volume_id)
            writer.int(self.local_id)
            writer.long(self.secret)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        volume_id_ = reader.long()
        local_id_ = reader.int()
        secret_ = reader.long()

        return cls(
            volume_id=volume_id_,
            local_id=local_id_,
            secret=secret_
        )

class FileLocation(TLObject, family='TypeFileLocation'):
    _id = 0X53D69076
    _group_id = 0X926C7631

    def __init__(
        self,
        dc_id: int,
        volume_id: int,
        local_id: int,
        secret: int
    ):

        self.dc_id = dc_id
        self.volume_id = volume_id
        self.local_id = local_id
        self.secret = secret

    def to_bytes(self, boxed: bool=True):
        with Writer(b'v\x90\xd6S' if boxed else b'') as writer:
            writer.int(self.dc_id)
            writer.long(self.volume_id)
            writer.int(self.local_id)
            writer.long(self.secret)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        dc_id_ = reader.int()
        volume_id_ = reader.long()
        local_id_ = reader.int()
        secret_ = reader.long()

        return cls(
            dc_id=dc_id_,
            volume_id=volume_id_,
            local_id=local_id_,
            secret=secret_
        )

TypeFileLocation = Union[
    FileLocationUnavailable,
    FileLocation
]