
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Union, TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .geo_point import TypeGeoPoint
    from ...gadgets.byteutils import Reader


class ChannelLocationEmpty(TLObject, family='TypeChannelLocation'):
    """
    No location (normal supergroup)
    """

    _id = 0XBFB5AD8B
    _group_id = 0X40180970


    def to_bytes(self, boxed: bool=True):
        return b'\x8b\xad\xb5\xbf' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class ChannelLocation(TLObject, family='TypeChannelLocation'):
    """
    Geographical location of supergroup (geogroups)
    """

    _id = 0X209B82DB
    _group_id = 0X40180970

    def __init__(
        self,
        geo_point: 'TypeGeoPoint',
        address: str
    ):

        """
        Geographical location of supergroup (geogroups)

        Args:
            geo_point ('TypeGeoPoint'): Geographical location of supergroup
            address (str): Textual description of the address
        """

        self.geo_point = geo_point
        self.address = address

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xdb\x82\x9b ' if boxed else b'') as writer:
            writer.object(
                self.geo_point,
                group_id=0X9248B41D
            )
            writer.string(self.address)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        geo_point_ = reader.object(
            group_id=0X9248B41D
        )

        address_ = reader.string()

        return cls(
            geo_point=geo_point_,
            address=address_
        )

TypeChannelLocation = Union[
    ChannelLocationEmpty,
    ChannelLocation
]