
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Union, TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class InputWallPaper(TLObject, family='TypeInputWallPaper'):
    """
    [Wallpaper](https://core.telegram.org/api/wallpapers)
    """

    _id = 0XE630B979
    _group_id = 0X6C8C6F31

    def __init__(
        self,
        id: int,
        access_hash: int
    ):

        """
        [Wallpaper](https://core.telegram.org/api/wallpapers)

        Args:
            id (int): [Wallpaper](https://core.telegram.org/api/wallpapers) ID
            access_hash (int): Access hash
        """

        self.id = id
        self.access_hash = access_hash

    def to_bytes(self, boxed: bool=True):
        with Writer(b'y\xb90\xe6' if boxed else b'') as writer:
            writer.long(self.id)
            writer.long(self.access_hash)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        id_ = reader.long()
        access_hash_ = reader.long()

        return cls(
            id=id_,
            access_hash=access_hash_
        )

class InputWallPaperSlug(TLObject, family='TypeInputWallPaper'):
    """
    [Wallpaper](https://core.telegram.org/api/wallpapers) by slug (a unique ID, obtained from a [wallpaper link](https://core.telegram.org/api/links#wallpaper-links))
    """

    _id = 0X72091C80
    _group_id = 0X6C8C6F31

    def __init__(
        self,
        slug: str
    ):

        """
        [Wallpaper](https://core.telegram.org/api/wallpapers) by slug (a unique ID, obtained from a [wallpaper link](https://core.telegram.org/api/links#wallpaper-links))

        Args:
            slug (str): Unique wallpaper ID
        """

        self.slug = slug

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x80\x1c\tr' if boxed else b'') as writer:
            writer.string(self.slug)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        slug_ = reader.string()

        return cls(
            slug=slug_
        )

class InputWallPaperNoFile(TLObject, family='TypeInputWallPaper'):
    """
    [Wallpaper](https://core.telegram.org/api/wallpapers) with no file access hash, used for example when deleting ( unsave=true) wallpapers using [account.saveWallPaper](https://core.telegram.org/method/account.saveWallPaper), specifying just the wallpaper ID.
    """

    _id = 0X967A462E
    _group_id = 0X6C8C6F31

    def __init__(
        self,
        id: int
    ):

        """
        [Wallpaper](https://core.telegram.org/api/wallpapers) with no file access hash, used for example when deleting ( unsave=true) wallpapers using [account.saveWallPaper](https://core.telegram.org/method/account.saveWallPaper), specifying just the wallpaper ID.

        Args:
            id (int): Wallpaper ID
        """

        self.id = id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'.Fz\x96' if boxed else b'') as writer:
            writer.long(self.id)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        id_ = reader.long()

        return cls(
            id=id_
        )

TypeInputWallPaper = Union[
    InputWallPaper,
    InputWallPaperSlug,
    InputWallPaperNoFile
]