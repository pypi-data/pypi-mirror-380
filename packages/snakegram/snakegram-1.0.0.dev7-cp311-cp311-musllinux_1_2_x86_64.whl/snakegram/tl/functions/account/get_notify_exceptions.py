
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Optional, TYPE_CHECKING
from ...types.updates import TypeUpdates
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_notify_peer import TypeInputNotifyPeer


class GetNotifyExceptions(TLRequest[TypeUpdates]):
    """
    Returns list of chats with non-default notification settings
    """

    _id = 0X53577479
    _result_id = 0XD68D29C0

    def __init__(
        self,
        compare_sound: bool = False,
        compare_stories: bool = False,
        peer: Optional['TypeInputNotifyPeer'] = None
    ):

        """
        Returns list of chats with non-default notification settings

        Args:
            compare_sound (bool, optional): If set, chats with non-default sound will be returned
            compare_stories (bool, optional): If set, chats with non-default notification settings for stories will be returned
            peer (Optional['TypeInputNotifyPeer'], optional): If specified, only chats of the specified category will be returned
        """

        self.compare_sound = compare_sound
        self.compare_stories = compare_stories
        self.peer = peer

    def to_bytes(self, boxed: bool=True):
        with Writer(b'ytWS' if boxed else b'') as writer:
            with writer.flag() as flags:
                flags(self.compare_sound, 1)
                flags(self.compare_stories, 2)

                if flags(self.peer, 0):
                    writer.object(
                        self.peer,
                        group_id=0XF4A6141A
                    )

            return writer.getvalue()