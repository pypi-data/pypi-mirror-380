
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.web_view_message_sent import TypeWebViewMessageSent


if TYPE_CHECKING:
    from ...types.input_bot_inline_result import TypeInputBotInlineResult


class SendWebViewResultMessage(TLRequest[TypeWebViewMessageSent]):
    """
    Terminate webview interaction started with [messages.requestWebView](https://core.telegram.org/method/messages.requestWebView), sending the specified message to the chat on behalf of the user.

    **Bots can use this method**

    Raises:
        `400`QueryIdInvalidError: The query ID is invalid.
        `400`UserBotRequiredError: This method can only be called by a bot.

    """

    _id = 0XA4314F5
    _result_id = 0X8DEFABAA

    def __init__(
        self,
        bot_query_id: str,
        result: 'TypeInputBotInlineResult'
    ):

        """
        Terminate webview interaction started with [messages.requestWebView](https://core.telegram.org/method/messages.requestWebView), sending the specified message to the chat on behalf of the user.

        **Bots can use this method**

        Args:
            bot_query_id (str): Webview interaction ID obtained from [messages.requestWebView](https://core.telegram.org/method/messages.requestWebView)
            result ('TypeInputBotInlineResult'): Message to send
        """

        self.bot_query_id = bot_query_id
        self.result = result

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xf5\x14C\n' if boxed else b'') as writer:
            writer.string(self.bot_query_id)
            writer.object(
                self.result,
                group_id=0X84BAC7FB
            )

            return writer.getvalue()