
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.encrypted_file import TypeEncryptedFile


if TYPE_CHECKING:
    from ...types.input_encrypted_chat import TypeInputEncryptedChat
    from ...types.input_encrypted_file import TypeInputEncryptedFile


class UploadEncryptedFile(TLRequest[TypeEncryptedFile]):
    """
    Upload encrypted file and associate it to a secret chat

    Raises:
        `400`ChatIdInvalidError: The provided chat id is invalid.

    """

    _id = 0X5057C497
    _result_id = 0X77918D96

    def __init__(
        self,
        peer: 'TypeInputEncryptedChat',
        file: 'TypeInputEncryptedFile'
    ):

        """
        Upload encrypted file and associate it to a secret chat

        Args:
            peer ('TypeInputEncryptedChat'): The secret chat to associate the file to
            file ('TypeInputEncryptedFile'): The file
        """

        self.peer = peer
        self.file = file

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x97\xc4WP' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X947D3E78
            )
            writer.object(
                self.file,
                group_id=0X7D7FFAC2
            )

            return writer.getvalue()