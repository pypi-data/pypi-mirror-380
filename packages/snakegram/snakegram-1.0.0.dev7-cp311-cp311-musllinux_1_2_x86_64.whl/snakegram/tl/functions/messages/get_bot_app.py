
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.messages.bot_app import TypeMessagesBotApp


if TYPE_CHECKING:
    from ...types.input_bot_app import TypeInputBotApp


class GetBotApp(TLRequest[TypeMessagesBotApp]):
    """
    Obtain information about a [direct link Mini App](https://core.telegram.org/api/bots/webapps#direct-link-mini-apps)

    Raises:
        `400`BotAppBotInvalidError: The bot_id passed in the inputBotAppShortName constructor is invalid.
        `400`BotAppInvalidError: The specified bot app is invalid.
        `400`BotAppShortnameInvalidError: The specified bot app short name is invalid.

    """

    _id = 0X34FDC5C3
    _result_id = 0X72AACBBA

    def __init__(
        self,
        app: 'TypeInputBotApp',
        hash: int
    ):

        """
        Obtain information about a [direct link Mini App](https://core.telegram.org/api/bots/webapps#direct-link-mini-apps)

        Args:
            app ('TypeInputBotApp'): Bot app information obtained from a [Direct Mini App deep link](https://core.telegram.org/api/links#direct-mini-app-links).
            hash (int): [Hash used for caching, for more info click here](https://core.telegram.org/api/offsets#hash-generation)
        """

        self.app = app
        self.hash = hash

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xc3\xc5\xfd4' if boxed else b'') as writer:
            writer.object(
                self.app,
                group_id=0X40D88192
            )
            writer.long(self.hash)

            return writer.getvalue()