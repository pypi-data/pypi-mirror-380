
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Union, TYPE_CHECKING, Optional
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .data_json import TypeDataJSON
    from ...gadgets.byteutils import Reader


class StatsGraphAsync(TLObject, family='TypeStatsGraph'):
    """
    This [channel statistics graph](https://core.telegram.org/api/stats) must be generated asynchronously using [stats.loadAsyncGraph](https://core.telegram.org/method/stats.loadAsyncGraph) to reduce server load
    """

    _id = 0X4A27EB2D
    _group_id = 0XAFAEA986

    def __init__(
        self,
        token: str
    ):

        """
        This [channel statistics graph](https://core.telegram.org/api/stats) must be generated asynchronously using [stats.loadAsyncGraph](https://core.telegram.org/method/stats.loadAsyncGraph) to reduce server load

        Args:
            token (str): Token to use for fetching the async graph
        """

        self.token = token

    def to_bytes(self, boxed: bool=True):
        with Writer(b"-\xeb'J" if boxed else b'') as writer:
            writer.string(self.token)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        token_ = reader.string()

        return cls(
            token=token_
        )

class StatsGraphError(TLObject, family='TypeStatsGraph'):
    """
    An error occurred while generating the [statistics graph](https://core.telegram.org/api/stats)
    """

    _id = 0XBEDC9822
    _group_id = 0XAFAEA986

    def __init__(
        self,
        error: str
    ):

        """
        An error occurred while generating the [statistics graph](https://core.telegram.org/api/stats)

        Args:
            error (str): The error
        """

        self.error = error

    def to_bytes(self, boxed: bool=True):
        with Writer(b'"\x98\xdc\xbe' if boxed else b'') as writer:
            writer.string(self.error)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        error_ = reader.string()

        return cls(
            error=error_
        )

class StatsGraph(TLObject, family='TypeStatsGraph'):
    """
    [Channel statistics graph](https://core.telegram.org/api/stats)
    """

    _id = 0X8EA464B6
    _group_id = 0XAFAEA986

    def __init__(
        self,
        json: 'TypeDataJSON',
        zoom_token: Optional[str] = None
    ):

        """
        [Channel statistics graph](https://core.telegram.org/api/stats)

        Args:
            json ('TypeDataJSON'): Statistics data
            zoom_token (Optional[str], optional): Zoom token
        """

        self.json = json
        self.zoom_token = zoom_token

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xb6d\xa4\x8e' if boxed else b'') as writer:
            with writer.flag() as flags:
                writer.object(
                    self.json,
                    group_id=0XE95B0798
                )

                if flags(self.zoom_token, 0):
                    writer.string(self.zoom_token)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        flags = reader.flag()
        json_ = reader.object(
            group_id=0XE95B0798
        )

        zoom_token_ = (
            reader.string()
            if flags(0) else None
        )

        return cls(
            json=json_,
            zoom_token=zoom_token_
        )

TypeStatsGraph = Union[
    StatsGraphAsync,
    StatsGraphError,
    StatsGraph
]