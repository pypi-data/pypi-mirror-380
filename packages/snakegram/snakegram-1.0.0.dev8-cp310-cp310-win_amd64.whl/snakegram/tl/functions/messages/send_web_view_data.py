
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...types.updates import TypeUpdates
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Long, Writer


if TYPE_CHECKING:
    from ...types.input_user import TypeInputUser


class SendWebViewData(TLRequest[TypeUpdates]):
    """
    Used by the user to relay data from an opened [reply keyboard bot mini app](https://core.telegram.org/api/bots/webapps) to the bot that owns it.

    Raises:
        `400`BotInvalidError: This is not a valid bot.

    """

    _id = 0XDC0242C8
    _result_id = 0XD68D29C0

    def __init__(
        self,
        bot: 'TypeInputUser',
        button_text: str,
        data: str,
        random_id: int = None
    ):

        """
        Used by the user to relay data from an opened [reply keyboard bot mini app](https://core.telegram.org/api/bots/webapps) to the bot that owns it.

        Args:
            bot ('TypeInputUser'): Bot that owns the web app
            button_text (str): Text of the [keyboardButtonSimpleWebView](https://core.telegram.org/constructor/keyboardButtonSimpleWebView) that was pressed to open the web app.
            data (str): Data to relay to the bot, obtained from a [web_app_data_send JS event](https://core.telegram.org/api/web-events#web-app-data-send).
            random_id (int, optional): Unique client message ID to prevent duplicate sending of the same event
        """

        self.bot = bot
        self.button_text = button_text
        self.data = data
        self.random_id = Long() if random_id is None else random_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xc8B\x02\xdc' if boxed else b'') as writer:
            writer.object(
                self.bot,
                group_id=0XB628962F
            )
            writer.long(self.random_id)
            writer.string(self.button_text)
            writer.string(self.data)

            return writer.getvalue()