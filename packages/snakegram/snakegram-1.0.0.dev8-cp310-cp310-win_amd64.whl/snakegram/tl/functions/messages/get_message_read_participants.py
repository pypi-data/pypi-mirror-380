
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.read_participant_date import TypeReadParticipantDate


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class GetMessageReadParticipants(TLRequest[List[TypeReadParticipantDate]]):
    """
    Get which users read a specific message: only available for groups and supergroups with less than [chat_read_mark_size_threshold members](https://core.telegram.org/api/config#chat-read-mark-size-threshold), read receipts will be stored for [chat_read_mark_expire_period seconds after the message was sent](https://core.telegram.org/api/config#chat-read-mark-expire-period), see [client configuration for more info](https://core.telegram.org/api/config#client-configuration).

    Raises:
        `400`ChatTooBigError: This method is not available for groups with more than `chat_read_mark_size_threshold` members, [see client configuration &raquo;](https://core.telegram.org/api/config#client-configuration).
        `400`MsgIdInvalidError: Invalid message ID provided.
        `400`MsgTooOldError: [`chat_read_mark_expire_period` seconds](https://core.telegram.org/api/config#chat-read-mark-expire-period) have passed since the message was sent, read receipts were deleted.
        `400`PeerIdInvalidError: The provided peer id is invalid.

    """

    _id = 0X31C1C44F

    def __init__(
        self,
        peer: 'TypeInputPeer',
        msg_id: int
    ):

        """
        Get which users read a specific message: only available for groups and supergroups with less than [chat_read_mark_size_threshold members](https://core.telegram.org/api/config#chat-read-mark-size-threshold), read receipts will be stored for [chat_read_mark_expire_period seconds after the message was sent](https://core.telegram.org/api/config#chat-read-mark-expire-period), see [client configuration for more info](https://core.telegram.org/api/config#client-configuration).

        Args:
            peer ('TypeInputPeer'): Dialog
            msg_id (int): Message ID
        """

        self.peer = peer
        self.msg_id = msg_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'O\xc4\xc11' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )
            writer.int(self.msg_id)

            return writer.getvalue()