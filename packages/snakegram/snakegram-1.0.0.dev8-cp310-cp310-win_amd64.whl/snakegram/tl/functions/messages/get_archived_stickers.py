
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.messages.archived_stickers import TypeMessagesArchivedStickers


class GetArchivedStickers(TLRequest[TypeMessagesArchivedStickers]):
    """
    Get all archived stickers
    """

    _id = 0X57F17692
    _result_id = 0XAD1A49CE

    def __init__(
        self,
        offset_id: int,
        limit: int,
        masks: bool = False,
        emojis: bool = False
    ):

        """
        Get all archived stickers

        Args:
            offset_id (int): [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
            limit (int): Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets)
            masks (bool, optional): Get [mask stickers](https://core.telegram.org/api/stickers#mask-stickers)
            emojis (bool, optional): Get [custom emoji stickers](https://core.telegram.org/api/custom-emoji)
        """

        self.offset_id = offset_id
        self.limit = limit
        self.masks = masks
        self.emojis = emojis

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x92v\xf1W' if boxed else b'') as writer:
            with writer.flag() as flags:
                flags(self.masks, 0)
                flags(self.emojis, 1)
                writer.long(self.offset_id)
                writer.int(self.limit)

            return writer.getvalue()