
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Optional
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.messages.chats import TypeMessagesChats


if TYPE_CHECKING:
    from ...types.input_channel import TypeInputChannel


class GetChannelRecommendations(TLRequest[TypeMessagesChats]):
    """
    Obtain a list of similarly themed public channels, selected based on similarities in their subscriber bases.

    Raises:
        `400`ChannelInvalidError: The provided channel is invalid.
        `400`ChannelPrivateError: You haven't joined this channel/supergroup.

    """

    _id = 0X25A71742
    _result_id = 0X23A4AC0E

    def __init__(
        self,
        channel: Optional['TypeInputChannel'] = None
    ):

        """
        Obtain a list of similarly themed public channels, selected based on similarities in their subscriber bases.

        Args:
            channel (Optional['TypeInputChannel'], optional): The method will return channels related to the passed channel. If not set, the method will returns channels related to channels the user has joined.
        """

        self.channel = channel

    def to_bytes(self, boxed: bool=True):
        with Writer(b'B\x17\xa7%' if boxed else b'') as writer:
            with writer.flag() as flags:

                if flags(self.channel, 0):
                    writer.object(
                        self.channel,
                        group_id=0X42691CEF
                    )

            return writer.getvalue()