
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Optional, TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .stars_amount import TypeStarsAmount
    from ...gadgets.byteutils import Reader


class SuggestedPost(TLObject, family='TypeSuggestedPost'):
    _id = 0XE8E37E5
    _group_id = 0X7DC96856

    def __init__(
        self,
        accepted: bool = False,
        rejected: bool = False,
        price: Optional['TypeStarsAmount'] = None,
        schedule_date: Optional[int] = None
    ):

        self.accepted = accepted
        self.rejected = rejected
        self.price = price
        self.schedule_date = schedule_date

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xe57\x8e\x0e' if boxed else b'') as writer:
            with writer.flag() as flags:
                flags(self.accepted, 1)
                flags(self.rejected, 2)

                if flags(self.price, 3):
                    writer.object(
                        self.price,
                        group_id=0XC3D62A83
                    )

                if flags(self.schedule_date, 0):
                    writer.int(self.schedule_date)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        flags = reader.flag()
        price_ = (
            reader.object(
                group_id=0XC3D62A83
            )
            if flags(3) else None
        )

        schedule_date_ = (
            reader.int()
            if flags(0) else None
        )

        return cls(
            accepted=flags(1),
            rejected=flags(2),
            price=price_,
            schedule_date=schedule_date_
        )

TypeSuggestedPost = SuggestedPost