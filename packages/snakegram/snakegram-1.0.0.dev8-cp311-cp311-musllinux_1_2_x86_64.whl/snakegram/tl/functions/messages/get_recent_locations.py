
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.messages.messages import TypeMessagesMessages


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class GetRecentLocations(TLRequest[TypeMessagesMessages]):
    """
    Get live location history of a certain user
    """

    _id = 0X702A40E0
    _result_id = 0XC8BB9188

    def __init__(
        self,
        peer: 'TypeInputPeer',
        limit: int,
        hash: int
    ):

        """
        Get live location history of a certain user

        Args:
            peer ('TypeInputPeer'): User
            limit (int): Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets)
            hash (int): [Hash used for caching, for more info click here](https://core.telegram.org/api/offsets#hash-generation)
        """

        self.peer = peer
        self.limit = limit
        self.hash = hash

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xe0@*p' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )
            writer.int(self.limit)
            writer.long(self.hash)

            return writer.getvalue()