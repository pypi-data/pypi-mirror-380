
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...types.updates import TypeUpdates
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer
    from ...types.input_store_payment_purpose import TypeInputStorePaymentPurpose


class LaunchPrepaidGiveaway(TLRequest[TypeUpdates]):
    """
    Launch a [prepaid giveaway](https://core.telegram.org/api/giveaways).

    Raises:
        `400`PeerIdInvalidError: The provided peer id is invalid.

    """

    _id = 0X5FF58F20
    _result_id = 0XD68D29C0

    def __init__(
        self,
        peer: 'TypeInputPeer',
        giveaway_id: int,
        purpose: 'TypeInputStorePaymentPurpose'
    ):

        """
        Launch a [prepaid giveaway](https://core.telegram.org/api/giveaways).

        Args:
            peer ('TypeInputPeer'): The peer where to launch the giveaway.
            giveaway_id (int): The prepaid giveaway ID.
            purpose ('TypeInputStorePaymentPurpose'): Giveway parameters
        """

        self.peer = peer
        self.giveaway_id = giveaway_id
        self.purpose = purpose

    def to_bytes(self, boxed: bool=True):
        with Writer(b' \x8f\xf5_' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )
            writer.long(self.giveaway_id)
            writer.object(
                self.purpose,
                group_id=0XECBAD07B
            )

            return writer.getvalue()