
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...types.updates import TypeUpdates
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_channel import TypeInputChannel


class SetBoostsToUnblockRestrictions(TLRequest[TypeUpdates]):
    """
    Admins with [ban_users admin rights](https://core.telegram.org/constructor/chatAdminRights) may allow users that apply a certain number of [booosts](https://core.telegram.org/api/boost) to the group to bypass [slow mode](https://core.telegram.org/method/channels.toggleSlowMode) and [other](https://core.telegram.org/api/rights#default-rights) supergroup restrictions, see [here](https://core.telegram.org/api/boost#bypass-slowmode-and-chat-restrictions) for more info.

    Raises:
        `400`ChannelInvalidError: The provided channel is invalid.

    """

    _id = 0XAD399CEE
    _result_id = 0XD68D29C0

    def __init__(
        self,
        channel: 'TypeInputChannel',
        boosts: int
    ):

        """
        Admins with [ban_users admin rights](https://core.telegram.org/constructor/chatAdminRights) may allow users that apply a certain number of [booosts](https://core.telegram.org/api/boost) to the group to bypass [slow mode](https://core.telegram.org/method/channels.toggleSlowMode) and [other](https://core.telegram.org/api/rights#default-rights) supergroup restrictions, see [here](https://core.telegram.org/api/boost#bypass-slowmode-and-chat-restrictions) for more info.

        Args:
            channel ('TypeInputChannel'): The supergroup.
            boosts (int): The number of required boosts (1-8, 0 to disable).
        """

        self.channel = channel
        self.boosts = boosts

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xee\x9c9\xad' if boxed else b'') as writer:
            writer.object(
                self.channel,
                group_id=0X42691CEF
            )
            writer.int(self.boosts)

            return writer.getvalue()