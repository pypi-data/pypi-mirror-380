
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import List, TYPE_CHECKING, Optional
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.payments.resale_star_gifts import TypePaymentsResaleStarGifts


if TYPE_CHECKING:
    from ...types.star_gift_attribute_id import TypeStarGiftAttributeId


class GetResaleStarGifts(TLRequest[TypePaymentsResaleStarGifts]):
    _id = 0X7A5FA236
    _result_id = 0X3A050DD3

    def __init__(
        self,
        gift_id: int,
        offset: str,
        limit: int,
        sort_by_price: bool = False,
        sort_by_num: bool = False,
        attributes_hash: Optional[int] = None,
        attributes: Optional[List['TypeStarGiftAttributeId']] = None
    ):

        self.gift_id = gift_id
        self.offset = offset
        self.limit = limit
        self.sort_by_price = sort_by_price
        self.sort_by_num = sort_by_num
        self.attributes_hash = attributes_hash
        self.attributes = attributes

    def to_bytes(self, boxed: bool=True):
        with Writer(b'6\xa2_z' if boxed else b'') as writer:
            with writer.flag() as flags:
                flags(self.sort_by_price, 1)
                flags(self.sort_by_num, 2)

                if flags(self.attributes_hash, 0):
                    writer.long(self.attributes_hash)
                writer.long(self.gift_id)

                if flags(self.attributes, 3):
                    writer.vector(
                        self.attributes,
                        lambda value: writer.object(
                            value,
                            group_id=0X76631A31
                        )
                    )
                writer.string(self.offset)
                writer.int(self.limit)

            return writer.getvalue()