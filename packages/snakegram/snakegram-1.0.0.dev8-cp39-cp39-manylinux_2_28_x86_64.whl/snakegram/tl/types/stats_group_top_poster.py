
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class StatsGroupTopPoster(TLObject, family='TypeStatsGroupTopPoster'):
    """
    Information about an active user in a supergroup
    """

    _id = 0X9D04AF9B
    _group_id = 0X4487FEA5

    def __init__(
        self,
        user_id: int,
        messages: int,
        avg_chars: int
    ):

        """
        Information about an active user in a supergroup

        Args:
            user_id (int): User ID
            messages (int): Number of messages for [statistics](https://core.telegram.org/api/stats) period in consideration
            avg_chars (int): Average number of characters per message
        """

        self.user_id = user_id
        self.messages = messages
        self.avg_chars = avg_chars

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x9b\xaf\x04\x9d' if boxed else b'') as writer:
            writer.long(self.user_id)
            writer.int(self.messages)
            writer.int(self.avg_chars)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        user_id_ = reader.long()
        messages_ = reader.int()
        avg_chars_ = reader.int()

        return cls(
            user_id=user_id_,
            messages=messages_,
            avg_chars=avg_chars_
        )

TypeStatsGroupTopPoster = StatsGroupTopPoster