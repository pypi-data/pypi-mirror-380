
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Union
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ....gadgets.byteutils import Reader


class RpcAnswerUnknown(TLObject, family='TypeRpcDropAnswer'):
    _id = 0X5E2AD36E
    _group_id = 0XB8719F26


    def to_bytes(self, boxed: bool=True):
        return b'n\xd3*^' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class RpcAnswerDroppedRunning(TLObject, family='TypeRpcDropAnswer'):
    _id = 0XCD78E586
    _group_id = 0XB8719F26


    def to_bytes(self, boxed: bool=True):
        return b'\x86\xe5x\xcd' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class RpcAnswerDropped(TLObject, family='TypeRpcDropAnswer'):
    _id = 0XA43AD8B7
    _group_id = 0XB8719F26

    def __init__(
        self,
        msg_id: int,
        seq_no: int,
        bytes: int
    ):

        self.msg_id = msg_id
        self.seq_no = seq_no
        self.bytes = bytes

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xb7\xd8:\xa4' if boxed else b'') as writer:
            writer.long(self.msg_id)
            writer.int(self.seq_no)
            writer.int(self.bytes)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        msg_id_ = reader.long()
        seq_no_ = reader.int()
        bytes_ = reader.int()

        return cls(
            msg_id=msg_id_,
            seq_no=seq_no_,
            bytes=bytes_
        )

TypeRpcDropAnswer = Union[
    RpcAnswerUnknown,
    RpcAnswerDroppedRunning,
    RpcAnswerDropped
]