
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Union, TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class StarsAmount(TLObject, family='TypeStarsAmount'):
    """
    Describes a real (i.e. possibly decimal) amount of [Telegram Stars](https://core.telegram.org/api/stars).
    """

    _id = 0XBBB6B4A3
    _group_id = 0XC3D62A83

    def __init__(
        self,
        amount: int,
        nanos: int
    ):

        """
        Describes a real (i.e. possibly decimal) amount of [Telegram Stars](https://core.telegram.org/api/stars).

        Args:
            amount (int): The integer amount of Telegram Stars.
            nanos (int): The decimal amount of Telegram Stars, expressed as nanostars (i.e. 1 nanostar is equal to 1/1'000'000'000th of a Telegram Star). This field may also be negative (the allowed range is -999999999 to 999999999).
        """

        self.amount = amount
        self.nanos = nanos

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xa3\xb4\xb6\xbb' if boxed else b'') as writer:
            writer.long(self.amount)
            writer.int(self.nanos)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        amount_ = reader.long()
        nanos_ = reader.int()

        return cls(
            amount=amount_,
            nanos=nanos_
        )

class StarsTonAmount(TLObject, family='TypeStarsAmount'):
    _id = 0X74AEE3E0
    _group_id = 0XC3D62A83

    def __init__(
        self,
        amount: int
    ):

        self.amount = amount

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xe0\xe3\xaet' if boxed else b'') as writer:
            writer.long(self.amount)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        amount_ = reader.long()

        return cls(
            amount=amount_
        )

TypeStarsAmount = Union[
    StarsAmount,
    StarsTonAmount
]