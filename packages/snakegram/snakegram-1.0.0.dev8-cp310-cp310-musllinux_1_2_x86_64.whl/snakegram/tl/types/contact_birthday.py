
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .birthday import TypeBirthday
    from ...gadgets.byteutils import Reader


class ContactBirthday(TLObject, family='TypeContactBirthday'):
    """
    Birthday information of a contact.
    """

    _id = 0X1D998733
    _group_id = 0X74E32A09

    def __init__(
        self,
        contact_id: int,
        birthday: 'TypeBirthday'
    ):

        """
        Birthday information of a contact.

        Args:
            contact_id (int): User ID.
            birthday ('TypeBirthday'): Birthday information.
        """

        self.contact_id = contact_id
        self.birthday = birthday

    def to_bytes(self, boxed: bool=True):
        with Writer(b'3\x87\x99\x1d' if boxed else b'') as writer:
            writer.long(self.contact_id)
            writer.object(
                self.birthday,
                group_id=0XFA278314
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        contact_id_ = reader.long()
        birthday_ = reader.object(
            group_id=0XFA278314
        )

        return cls(
            contact_id=contact_id_,
            birthday=birthday_
        )

TypeContactBirthday = ContactBirthday