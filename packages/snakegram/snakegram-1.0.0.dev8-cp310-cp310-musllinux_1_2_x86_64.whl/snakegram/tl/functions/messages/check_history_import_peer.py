
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.messages.checked_history_import_peer import TypeMessagesCheckedHistoryImportPeer


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class CheckHistoryImportPeer(TLRequest[TypeMessagesCheckedHistoryImportPeer]):
    """
    Check whether chat history exported from another chat app can be [imported into a specific Telegram chat, click here for more info](https://core.telegram.org/api/import).

    Raises:
        `400`ChatAdminRequiredError: You must be an admin in this chat to do this.
        `400`PeerIdInvalidError: The provided peer id is invalid.
        `400`UserNotMutualContactError: The provided user is not a mutual contact.

    """

    _id = 0X5DC60F03
    _result_id = 0X6ABD4676

    def __init__(
        self,
        peer: 'TypeInputPeer'
    ):

        """
        Check whether chat history exported from another chat app can be [imported into a specific Telegram chat, click here for more info](https://core.telegram.org/api/import).

        Args:
            peer ('TypeInputPeer'): The chat where we want to [import history](https://core.telegram.org/api/import).
        """

        self.peer = peer

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x03\x0f\xc6]' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )

            return writer.getvalue()