
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.contacts.contacts import TypeContactsContacts


class GetContacts(TLRequest[TypeContactsContacts]):
    """
    Returns the current user's contact list.
    """

    _id = 0X5DD69E12
    _result_id = 0XB3FAC2EB

    def __init__(
        self,
        hash: int
    ):

        """
        Returns the current user's contact list.

        Args:
            hash (int): [Hash used for caching, for more info click here](https://core.telegram.org/api/offsets#hash-generation). Note that the hash is computed [using the usual algorithm](https://core.telegram.org/api/offsets#hash-generation), passing to the algorithm first the previously returned [contacts.contacts](https://core.telegram.org/constructor/contacts.contacts). saved_count field, then max 100000 sorted user IDs from the contact list, including the ID of the currently logged in user if it is saved as a contact. Example: [tdlib implementation](https://github.com/tdlib/td/blob/63c7d0301825b78c30dc7307f1f1466be049eb79/td/telegram/UserManager.cpp#L5754).
        """

        self.hash = hash

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x12\x9e\xd6]' if boxed else b'') as writer:
            writer.long(self.hash)

            return writer.getvalue()