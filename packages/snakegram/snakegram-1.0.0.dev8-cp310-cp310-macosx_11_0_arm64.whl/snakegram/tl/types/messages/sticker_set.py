
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List, Union
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ..document import TypeDocument
    from ..sticker_set import TypeStickerSet
    from ..sticker_pack import TypeStickerPack
    from ..sticker_keyword import TypeStickerKeyword
    from ....gadgets.byteutils import Reader


class StickerSet(TLObject, family='TypeMessagesStickerSet'):
    """
    Stickerset and stickers inside it
    """

    _id = 0X6E153F16
    _group_id = 0X5CC84E96

    def __init__(
        self,
        set: 'TypeStickerSet',
        packs: List['TypeStickerPack'],
        keywords: List['TypeStickerKeyword'],
        documents: List['TypeDocument']
    ):

        """
        Stickerset and stickers inside it

        Args:
            set ('TypeStickerSet'): The stickerset
            packs (List['TypeStickerPack']): Emoji info for stickers
            keywords (List['TypeStickerKeyword']): Keywords for some or every sticker in the stickerset.
            documents (List['TypeDocument']): Stickers in stickerset
        """

        self.set = set
        self.packs = packs
        self.keywords = keywords
        self.documents = documents

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x16?\x15n' if boxed else b'') as writer:
            writer.object(
                self.set,
                group_id=0X8EED6744
            )
            writer.vector(
                self.packs,
                lambda value: writer.object(
                    value,
                    group_id=0X6962BC17
                )
            )
            writer.vector(
                self.keywords,
                lambda value: writer.object(
                    value,
                    group_id=0XD76E5240
                )
            )
            writer.vector(
                self.documents,
                lambda value: writer.object(
                    value,
                    group_id=0X6547BD50
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        set_ = reader.object(
            group_id=0X8EED6744
        )

        packs_ = reader.vector(
            lambda: reader.object(
                group_id=0X6962BC17
            )
        )

        keywords_ = reader.vector(
            lambda: reader.object(
                group_id=0XD76E5240
            )
        )

        documents_ = reader.vector(
            lambda: reader.object(
                group_id=0X6547BD50
            )
        )

        return cls(
            set=set_,
            packs=packs_,
            keywords=keywords_,
            documents=documents_
        )

class StickerSetNotModified(TLObject, family='TypeMessagesStickerSet'):
    """
    The stickerset hasn't changed
    """

    _id = 0XD3F924EB
    _group_id = 0X5CC84E96


    def to_bytes(self, boxed: bool=True):
        return b'\xeb$\xf9\xd3' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

TypeMessagesStickerSet = Union[
    StickerSet,
    StickerSetNotModified
]