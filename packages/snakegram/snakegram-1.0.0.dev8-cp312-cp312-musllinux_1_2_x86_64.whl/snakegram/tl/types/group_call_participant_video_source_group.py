
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class GroupCallParticipantVideoSourceGroup(TLObject, family='TypeGroupCallParticipantVideoSourceGroup'):
    """
    Describes a group of video synchronization source identifiers
    """

    _id = 0XDCB118B7
    _group_id = 0XF8A17DED

    def __init__(
        self,
        semantics: str,
        sources: List[int]
    ):

        """
        Describes a group of video synchronization source identifiers

        Args:
            semantics (str): SDP semantics
            sources (List[int]): Source IDs
        """

        self.semantics = semantics
        self.sources = sources

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xb7\x18\xb1\xdc' if boxed else b'') as writer:
            writer.string(self.semantics)
            writer.vector(
                self.sources,
                writer.int
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        semantics_ = reader.string()
        sources_ = reader.vector(
            reader.int
        )

        return cls(
            semantics=semantics_,
            sources=sources_
        )

TypeGroupCallParticipantVideoSourceGroup = GroupCallParticipantVideoSourceGroup