
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ..dialog_filter import TypeDialogFilter
    from ....gadgets.byteutils import Reader


class DialogFilters(TLObject, family='TypeMessagesDialogFilters'):
    """
    [Folder and folder tags](https://core.telegram.org/api/folders) information
    """

    _id = 0X2AD93719
    _group_id = 0X9C9C60EE

    def __init__(
        self,
        filters: List['TypeDialogFilter'],
        tags_enabled: bool = False
    ):

        """
        [Folder and folder tags](https://core.telegram.org/api/folders) information

        Args:
            filters (List['TypeDialogFilter']): Folders.
            tags_enabled (bool, optional): Whether [folder tags](https://core.telegram.org/api/folders#folder-tags) are enabled.
        """

        self.filters = filters
        self.tags_enabled = tags_enabled

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x197\xd9*' if boxed else b'') as writer:
            with writer.flag() as flags:
                flags(self.tags_enabled, 0)
                writer.vector(
                    self.filters,
                    lambda value: writer.object(
                        value,
                        group_id=0X6BB0DA45
                    )
                )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        flags = reader.flag()
        filters_ = reader.vector(
            lambda: reader.object(
                group_id=0X6BB0DA45
            )
        )

        return cls(
            filters=filters_,
            tags_enabled=flags(0)
        )

TypeMessagesDialogFilters = DialogFilters