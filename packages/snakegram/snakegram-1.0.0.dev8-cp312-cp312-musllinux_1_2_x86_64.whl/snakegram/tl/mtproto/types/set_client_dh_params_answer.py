
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Union
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ....gadgets.byteutils import Reader


class DhGenOk(TLObject, family='TypeSetClientDHParamsAnswer'):
    _id = 0X3BCBF734
    _group_id = 0XBB3E1DDD

    def __init__(
        self,
        nonce: int,
        server_nonce: int,
        new_nonce_hash1: int
    ):

        self.nonce = nonce
        self.server_nonce = server_nonce
        self.new_nonce_hash1 = new_nonce_hash1

    def to_bytes(self, boxed: bool=True):
        with Writer(b'4\xf7\xcb;' if boxed else b'') as writer:
            writer.int128(self.nonce)
            writer.int128(self.server_nonce)
            writer.int128(self.new_nonce_hash1)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        nonce_ = reader.int128()
        server_nonce_ = reader.int128()
        new_nonce_hash1_ = reader.int128()

        return cls(
            nonce=nonce_,
            server_nonce=server_nonce_,
            new_nonce_hash1=new_nonce_hash1_
        )

class DhGenRetry(TLObject, family='TypeSetClientDHParamsAnswer'):
    _id = 0X46DC1FB9
    _group_id = 0XBB3E1DDD

    def __init__(
        self,
        nonce: int,
        server_nonce: int,
        new_nonce_hash2: int
    ):

        self.nonce = nonce
        self.server_nonce = server_nonce
        self.new_nonce_hash2 = new_nonce_hash2

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xb9\x1f\xdcF' if boxed else b'') as writer:
            writer.int128(self.nonce)
            writer.int128(self.server_nonce)
            writer.int128(self.new_nonce_hash2)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        nonce_ = reader.int128()
        server_nonce_ = reader.int128()
        new_nonce_hash2_ = reader.int128()

        return cls(
            nonce=nonce_,
            server_nonce=server_nonce_,
            new_nonce_hash2=new_nonce_hash2_
        )

class DhGenFail(TLObject, family='TypeSetClientDHParamsAnswer'):
    _id = 0XA69DAE02
    _group_id = 0XBB3E1DDD

    def __init__(
        self,
        nonce: int,
        server_nonce: int,
        new_nonce_hash3: int
    ):

        self.nonce = nonce
        self.server_nonce = server_nonce
        self.new_nonce_hash3 = new_nonce_hash3

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x02\xae\x9d\xa6' if boxed else b'') as writer:
            writer.int128(self.nonce)
            writer.int128(self.server_nonce)
            writer.int128(self.new_nonce_hash3)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        nonce_ = reader.int128()
        server_nonce_ = reader.int128()
        new_nonce_hash3_ = reader.int128()

        return cls(
            nonce=nonce_,
            server_nonce=server_nonce_,
            new_nonce_hash3=new_nonce_hash3_
        )

TypeSetClientDHParamsAnswer = Union[
    DhGenOk,
    DhGenRetry,
    DhGenFail
]