
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ....gadgets.byteutils import Reader


class SentEmailCode(TLObject, family='TypeAccountSentEmailCode'):
    """
    The sent email code
    """

    _id = 0X811F854F
    _group_id = 0X5CD4EE2F

    def __init__(
        self,
        email_pattern: str,
        length: int
    ):

        """
        The sent email code

        Args:
            email_pattern (str): The email (to which the code was sent) must match this [pattern](https://core.telegram.org/api/pattern)
            length (int): The length of the verification code
        """

        self.email_pattern = email_pattern
        self.length = length

    def to_bytes(self, boxed: bool=True):
        with Writer(b'O\x85\x1f\x81' if boxed else b'') as writer:
            writer.string(self.email_pattern)
            writer.int(self.length)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        email_pattern_ = reader.string()
        length_ = reader.int()

        return cls(
            email_pattern=email_pattern_,
            length=length_
        )

TypeAccountSentEmailCode = SentEmailCode