
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Union, TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .peer import TypePeer
    from ...gadgets.byteutils import Reader


class StarsTransactionPeerUnsupported(TLObject, family='TypeStarsTransactionPeer'):
    """
    Describes a [Telegram Star](https://core.telegram.org/api/stars) transaction that cannot be described using the current layer.
    """

    _id = 0X95F2BFE4
    _group_id = 0X45A8F5A6


    def to_bytes(self, boxed: bool=True):
        return b'\xe4\xbf\xf2\x95' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class StarsTransactionPeerAppStore(TLObject, family='TypeStarsTransactionPeer'):
    """
    Describes a [Telegram Star](https://core.telegram.org/api/stars) transaction with the App Store, used when purchasing Telegram Stars through the App Store.
    """

    _id = 0XB457B375
    _group_id = 0X45A8F5A6


    def to_bytes(self, boxed: bool=True):
        return b'u\xb3W\xb4' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class StarsTransactionPeerPlayMarket(TLObject, family='TypeStarsTransactionPeer'):
    """
    Describes a [Telegram Star](https://core.telegram.org/api/stars) transaction with the Play Store, used when purchasing Telegram Stars through the Play Store.
    """

    _id = 0X7B560A0B
    _group_id = 0X45A8F5A6


    def to_bytes(self, boxed: bool=True):
        return b'\x0b\nV{' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class StarsTransactionPeerPremiumBot(TLObject, family='TypeStarsTransactionPeer'):
    """
    Describes a [Telegram Star](https://core.telegram.org/api/stars) transaction made using [@PremiumBot](https://t.me/premiumbot) (i.e. using the [inputInvoiceStars](https://core.telegram.org/constructor/inputInvoiceStars) flow described [here](https://core.telegram.org/api/stars#buying-or-gifting-stars)).
    """

    _id = 0X250DBAF8
    _group_id = 0X45A8F5A6


    def to_bytes(self, boxed: bool=True):
        return b'\xf8\xba\r%' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class StarsTransactionPeerFragment(TLObject, family='TypeStarsTransactionPeer'):
    """
    Describes a [Telegram Star](https://core.telegram.org/api/stars) transaction with [Fragment](https://fragment.com), used when purchasing Telegram Stars through [Fragment](https://fragment.com).
    """

    _id = 0XE92FD902
    _group_id = 0X45A8F5A6


    def to_bytes(self, boxed: bool=True):
        return b'\x02\xd9/\xe9' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class StarsTransactionPeer(TLObject, family='TypeStarsTransactionPeer'):
    """
    Describes a [Telegram Star](https://core.telegram.org/api/stars) transaction with another peer.
    """

    _id = 0XD80DA15D
    _group_id = 0X45A8F5A6

    def __init__(
        self,
        peer: 'TypePeer'
    ):

        """
        Describes a [Telegram Star](https://core.telegram.org/api/stars) transaction with another peer.

        Args:
            peer ('TypePeer'): The peer.
        """

        self.peer = peer

    def to_bytes(self, boxed: bool=True):
        with Writer(b']\xa1\r\xd8' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0XB4DECBCA
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        peer_ = reader.object(
            group_id=0XB4DECBCA
        )

        return cls(
            peer=peer_
        )

class StarsTransactionPeerAds(TLObject, family='TypeStarsTransactionPeer'):
    """
    Describes a [Telegram Star](https://core.telegram.org/api/stars) transaction used to pay for [Telegram ads as specified here](https://core.telegram.org/api/stars#paying-for-ads).
    """

    _id = 0X60682812
    _group_id = 0X45A8F5A6


    def to_bytes(self, boxed: bool=True):
        return b'\x12(h`' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class StarsTransactionPeerAPI(TLObject, family='TypeStarsTransactionPeer'):
    """
    Describes a [Telegram Star](https://core.telegram.org/api/stars) transaction used to pay for paid API usage, such as [paid bot broadcasts](https://core.telegram.org/bots/faq#how-can-i-message-all-of-my-bot-39s-subscribers-at-once).
    """

    _id = 0XF9677AAD
    _group_id = 0X45A8F5A6


    def to_bytes(self, boxed: bool=True):
        return b'\xadzg\xf9' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

TypeStarsTransactionPeer = Union[
    StarsTransactionPeerUnsupported,
    StarsTransactionPeerAppStore,
    StarsTransactionPeerPlayMarket,
    StarsTransactionPeerPremiumBot,
    StarsTransactionPeerFragment,
    StarsTransactionPeer,
    StarsTransactionPeerAds,
    StarsTransactionPeerAPI
]