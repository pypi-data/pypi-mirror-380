
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Optional, List, TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.star_gift_collection import TypeStarGiftCollection


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer
    from ...types.input_saved_star_gift import TypeInputSavedStarGift


class UpdateStarGiftCollection(TLRequest[TypeStarGiftCollection]):
    _id = 0X4FDDBEE7
    _result_id = 0XBBEBF3F2

    def __init__(
        self,
        peer: 'TypeInputPeer',
        collection_id: int,
        title: Optional[str] = None,
        delete_stargift: Optional[List['TypeInputSavedStarGift']] = None,
        add_stargift: Optional[List['TypeInputSavedStarGift']] = None,
        order: Optional[List['TypeInputSavedStarGift']] = None
    ):

        self.peer = peer
        self.collection_id = collection_id
        self.title = title
        self.delete_stargift = delete_stargift
        self.add_stargift = add_stargift
        self.order = order

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xe7\xbe\xddO' if boxed else b'') as writer:
            with writer.flag() as flags:
                writer.object(
                    self.peer,
                    group_id=0X995DB9DF
                )
                writer.int(self.collection_id)

                if flags(self.title, 0):
                    writer.string(self.title)

                if flags(self.delete_stargift, 1):
                    writer.vector(
                        self.delete_stargift,
                        lambda value: writer.object(
                            value,
                            group_id=0X777EA116
                        )
                    )

                if flags(self.add_stargift, 2):
                    writer.vector(
                        self.add_stargift,
                        lambda value: writer.object(
                            value,
                            group_id=0X777EA116
                        )
                    )

                if flags(self.order, 3):
                    writer.vector(
                        self.order,
                        lambda value: writer.object(
                            value,
                            group_id=0X777EA116
                        )
                    )

            return writer.getvalue()