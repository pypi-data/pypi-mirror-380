
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import List, TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.messages.chats import TypeMessagesChats


if TYPE_CHECKING:
    from ...types.input_channel import TypeInputChannel


class GetChannels(TLRequest[TypeMessagesChats]):
    """
    Get info about [channels/supergroups](https://core.telegram.org/api/channel)

    **Bots can use this method**

    Raises:
        `400`ChannelInvalidError: The provided channel is invalid.
        `400`MsgIdInvalidError: Invalid message ID provided.
        `400`UserBannedInChannelError: You're banned from sending messages in supergroups/channels.
        `406`ChannelPrivateError: You haven't joined this channel/supergroup.

    """

    _id = 0XA7F6BBB
    _result_id = 0X23A4AC0E

    def __init__(
        self,
        id: List['TypeInputChannel']
    ):

        """
        Get info about [channels/supergroups](https://core.telegram.org/api/channel)

        **Bots can use this method**

        Args:
            id (List['TypeInputChannel']): IDs of channels/supergroups to get info about
        """

        self.id = id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xbbk\x7f\n' if boxed else b'') as writer:
            writer.vector(
                self.id,
                lambda value: writer.object(
                    value,
                    group_id=0X42691CEF
                )
            )

            return writer.getvalue()