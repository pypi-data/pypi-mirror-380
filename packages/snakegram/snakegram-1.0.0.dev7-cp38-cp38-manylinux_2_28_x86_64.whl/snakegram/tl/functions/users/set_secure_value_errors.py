
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import List, TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_user import TypeInputUser
    from ...types.secure_value_error import TypeSecureValueError


class SetSecureValueErrors(TLRequest[bool]):
    """
    Notify the user that the sent [passport](https://core.telegram.org/passport) data contains some errors The user will not be able to re-submit their Passport data to you until the errors are fixed (the contents of the field for which you returned the error must change).

    **Bots can use this method**

    Raises:
        `403`UserBotInvalidError: User accounts must provide the `bot` method parameter when calling this method. If there is no such method parameter, this method can only be invoked by bot accounts.
        `400`UserBotRequiredError: This method can only be called by a bot.
        `400`UserIdInvalidError: The provided user ID is invalid.

    """

    _id = 0X90C894B5
    _result_id = 0X43B904E1

    def __init__(
        self,
        id: 'TypeInputUser',
        errors: List['TypeSecureValueError']
    ):

        """
        Notify the user that the sent [passport](https://core.telegram.org/passport) data contains some errors The user will not be able to re-submit their Passport data to you until the errors are fixed (the contents of the field for which you returned the error must change).

        **Bots can use this method**

        Args:
            id ('TypeInputUser'): The user
            errors (List['TypeSecureValueError']): Errors
        """

        self.id = id
        self.errors = errors

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xb5\x94\xc8\x90' if boxed else b'') as writer:
            writer.object(
                self.id,
                group_id=0XB628962F
            )
            writer.vector(
                self.errors,
                lambda value: writer.object(
                    value,
                    group_id=0X96147C5D
                )
            )

            return writer.getvalue()