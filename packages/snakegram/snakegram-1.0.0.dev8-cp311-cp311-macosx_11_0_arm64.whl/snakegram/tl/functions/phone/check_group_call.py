
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_group_call import TypeInputGroupCall


class CheckGroupCall(TLRequest[List[int]]):
    """
    Check whether the group call Server Forwarding Unit is currently receiving the streams with the specified WebRTC source IDs. 
    Returns an intersection of the source IDs specified in sources, and the source IDs currently being forwarded by the SFU.

    Raises:
        `400`GroupcallInvalidError: The specified group call is invalid.
        `400`GroupcallJoinMissingError: You haven't joined this group call.

    """

    _id = 0XB59CF977

    def __init__(
        self,
        call: 'TypeInputGroupCall',
        sources: List[int]
    ):

        """
        Check whether the group call Server Forwarding Unit is currently receiving the streams with the specified WebRTC source IDs. 
        Returns an intersection of the source IDs specified in sources, and the source IDs currently being forwarded by the SFU.

        Args:
            call ('TypeInputGroupCall'): Group call
            sources (List[int]): Source IDs
        """

        self.call = call
        self.sources = sources

    def to_bytes(self, boxed: bool=True):
        with Writer(b'w\xf9\x9c\xb5' if boxed else b'') as writer:
            writer.object(
                self.call,
                group_id=0XDA9A559A
            )
            writer.vector(
                self.sources,
                writer.int
            )

            return writer.getvalue()