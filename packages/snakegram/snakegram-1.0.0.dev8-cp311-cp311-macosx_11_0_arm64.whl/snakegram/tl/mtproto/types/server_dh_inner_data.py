
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ....gadgets.byteutils import Reader


class ServerDHInnerData(TLObject, family='TypeServerDHInnerData'):
    _id = 0XB5890DBA
    _group_id = 0XEDBD8147

    def __init__(
        self,
        nonce: int,
        server_nonce: int,
        g: int,
        dh_prime: bytes,
        g_a: bytes,
        server_time: int
    ):

        self.nonce = nonce
        self.server_nonce = server_nonce
        self.g = g
        self.dh_prime = dh_prime
        self.g_a = g_a
        self.server_time = server_time

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xba\r\x89\xb5' if boxed else b'') as writer:
            writer.int128(self.nonce)
            writer.int128(self.server_nonce)
            writer.int(self.g)
            writer.bytes(self.dh_prime)
            writer.bytes(self.g_a)
            writer.int(self.server_time)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        nonce_ = reader.int128()
        server_nonce_ = reader.int128()
        g_ = reader.int()
        dh_prime_ = reader.bytes()
        g_a_ = reader.bytes()
        server_time_ = reader.int()

        return cls(
            nonce=nonce_,
            server_nonce=server_nonce_,
            g=g_,
            dh_prime=dh_prime_,
            g_a=g_a_,
            server_time=server_time_
        )

TypeServerDHInnerData = ServerDHInnerData