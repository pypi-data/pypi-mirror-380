
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Optional, TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .document import TypeDocument
    from ...gadgets.byteutils import Reader


class StarGiftCollection(TLObject, family='TypeStarGiftCollection'):
    _id = 0X9D6B13B0
    _group_id = 0XBBEBF3F2

    def __init__(
        self,
        collection_id: int,
        title: str,
        gifts_count: int,
        hash: int,
        icon: Optional['TypeDocument'] = None
    ):

        self.collection_id = collection_id
        self.title = title
        self.gifts_count = gifts_count
        self.hash = hash
        self.icon = icon

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xb0\x13k\x9d' if boxed else b'') as writer:
            with writer.flag() as flags:
                writer.int(self.collection_id)
                writer.string(self.title)

                if flags(self.icon, 0):
                    writer.object(
                        self.icon,
                        group_id=0X6547BD50
                    )
                writer.int(self.gifts_count)
                writer.long(self.hash)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        flags = reader.flag()
        collection_id_ = reader.int()
        title_ = reader.string()
        icon_ = (
            reader.object(
                group_id=0X6547BD50
            )
            if flags(0) else None
        )

        gifts_count_ = reader.int()
        hash_ = reader.long()

        return cls(
            collection_id=collection_id_,
            title=title_,
            gifts_count=gifts_count_,
            hash=hash_,
            icon=icon_
        )

TypeStarGiftCollection = StarGiftCollection