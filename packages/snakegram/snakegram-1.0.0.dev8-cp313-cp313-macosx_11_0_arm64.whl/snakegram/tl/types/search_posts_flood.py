
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Optional, TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class SearchPostsFlood(TLObject, family='TypeSearchPostsFlood'):
    _id = 0X3E0B5B6A
    _group_id = 0X52D3EF52

    def __init__(
        self,
        total_daily: int,
        remains: int,
        stars_amount: int,
        query_is_free: bool = False,
        wait_till: Optional[int] = None
    ):

        self.total_daily = total_daily
        self.remains = remains
        self.stars_amount = stars_amount
        self.query_is_free = query_is_free
        self.wait_till = wait_till

    def to_bytes(self, boxed: bool=True):
        with Writer(b'j[\x0b>' if boxed else b'') as writer:
            with writer.flag() as flags:
                flags(self.query_is_free, 0)
                writer.int(self.total_daily)
                writer.int(self.remains)

                if flags(self.wait_till, 1):
                    writer.int(self.wait_till)
                writer.long(self.stars_amount)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        flags = reader.flag()
        total_daily_ = reader.int()
        remains_ = reader.int()
        wait_till_ = (
            reader.int()
            if flags(1) else None
        )

        stars_amount_ = reader.long()

        return cls(
            total_daily=total_daily_,
            remains=remains_,
            stars_amount=stars_amount_,
            query_is_free=flags(0),
            wait_till=wait_till_
        )

TypeSearchPostsFlood = SearchPostsFlood