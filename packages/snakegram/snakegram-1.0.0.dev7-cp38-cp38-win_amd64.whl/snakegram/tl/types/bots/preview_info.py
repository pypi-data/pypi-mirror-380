
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ..bot_preview_media import TypeBotPreviewMedia
    from ....gadgets.byteutils import Reader


class PreviewInfo(TLObject, family='TypeBotsPreviewInfo'):
    """
    Contains info about [Main Mini App previews, see here](https://core.telegram.org/api/bots/webapps#main-mini-app-previews) for more info.
    """

    _id = 0XCA71D64
    _group_id = 0X5B938BC5

    def __init__(
        self,
        media: List['TypeBotPreviewMedia'],
        lang_codes: List[str]
    ):

        """
        Contains info about [Main Mini App previews, see here](https://core.telegram.org/api/bots/webapps#main-mini-app-previews) for more info.

        Args:
            media (List['TypeBotPreviewMedia']): All preview medias for the language code passed to [bots.getPreviewInfo](https://core.telegram.org/method/bots.getPreviewInfo).
            lang_codes (List[str]): All available language codes for which preview medias were uploaded (regardless of the language code passed to [bots.getPreviewInfo](https://core.telegram.org/method/bots.getPreviewInfo)).
        """

        self.media = media
        self.lang_codes = lang_codes

    def to_bytes(self, boxed: bool=True):
        with Writer(b'd\x1d\xa7\x0c' if boxed else b'') as writer:
            writer.vector(
                self.media,
                lambda value: writer.object(
                    value,
                    group_id=0XFA14BE22
                )
            )
            writer.vector(
                self.lang_codes,
                writer.string
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        media_ = reader.vector(
            lambda: reader.object(
                group_id=0XFA14BE22
            )
        )

        lang_codes_ = reader.vector(
            reader.string
        )

        return cls(
            media=media_,
            lang_codes=lang_codes_
        )

TypeBotsPreviewInfo = PreviewInfo