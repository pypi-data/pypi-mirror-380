
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Union
from ...gadgets.tlobject import TLObject


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class ProfileTabPosts(TLObject, family='TypeProfileTab'):
    _id = 0XB98CD696
    _group_id = 0X9A764961


    def to_bytes(self, boxed: bool=True):
        return b'\x96\xd6\x8c\xb9' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class ProfileTabGifts(TLObject, family='TypeProfileTab'):
    _id = 0X4D4BD46A
    _group_id = 0X9A764961


    def to_bytes(self, boxed: bool=True):
        return b'j\xd4KM' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class ProfileTabMedia(TLObject, family='TypeProfileTab'):
    _id = 0X72C64955
    _group_id = 0X9A764961


    def to_bytes(self, boxed: bool=True):
        return b'UI\xc6r' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class ProfileTabFiles(TLObject, family='TypeProfileTab'):
    _id = 0XAB339C00
    _group_id = 0X9A764961


    def to_bytes(self, boxed: bool=True):
        return b'\x00\x9c3\xab' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class ProfileTabMusic(TLObject, family='TypeProfileTab'):
    _id = 0X9F27D26E
    _group_id = 0X9A764961


    def to_bytes(self, boxed: bool=True):
        return b"n\xd2'\x9f" if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class ProfileTabVoice(TLObject, family='TypeProfileTab'):
    _id = 0XE477092E
    _group_id = 0X9A764961


    def to_bytes(self, boxed: bool=True):
        return b'.\tw\xe4' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class ProfileTabLinks(TLObject, family='TypeProfileTab'):
    _id = 0XD3656499
    _group_id = 0X9A764961


    def to_bytes(self, boxed: bool=True):
        return b'\x99de\xd3' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class ProfileTabGifs(TLObject, family='TypeProfileTab'):
    _id = 0XA2C0F695
    _group_id = 0X9A764961


    def to_bytes(self, boxed: bool=True):
        return b'\x95\xf6\xc0\xa2' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

TypeProfileTab = Union[
    ProfileTabPosts,
    ProfileTabGifts,
    ProfileTabMedia,
    ProfileTabFiles,
    ProfileTabMusic,
    ProfileTabVoice,
    ProfileTabLinks,
    ProfileTabGifs
]