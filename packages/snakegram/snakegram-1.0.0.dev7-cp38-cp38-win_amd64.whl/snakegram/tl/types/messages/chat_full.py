
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ..chat import TypeChat
    from ..user import TypeUser
    from ..chat_full import TypeChatFull
    from ....gadgets.byteutils import Reader


class ChatFull(TLObject, family='TypeMessagesChatFull'):
    """
    Full info about a [channel](https://core.telegram.org/api/channel#channels), [supergroup](https://core.telegram.org/api/channel#supergroups), [gigagroup](https://core.telegram.org/api/channel#gigagroups) or [basic group](https://core.telegram.org/api/channel#basic-groups).
    """

    _id = 0XE5D7D19C
    _group_id = 0X3E55CBDF

    def __init__(
        self,
        full_chat: 'TypeChatFull',
        chats: List['TypeChat'],
        users: List['TypeUser']
    ):

        """
        Full info about a [channel](https://core.telegram.org/api/channel#channels), [supergroup](https://core.telegram.org/api/channel#supergroups), [gigagroup](https://core.telegram.org/api/channel#gigagroups) or [basic group](https://core.telegram.org/api/channel#basic-groups).

        Args:
            full_chat ('TypeChatFull'): Full info
            chats (List['TypeChat']): Mentioned chats
            users (List['TypeUser']): Mentioned users
        """

        self.full_chat = full_chat
        self.chats = chats
        self.users = users

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x9c\xd1\xd7\xe5' if boxed else b'') as writer:
            writer.object(
                self.full_chat,
                group_id=0X90C273E7
            )
            writer.vector(
                self.chats,
                lambda value: writer.object(
                    value,
                    group_id=0X73A5C0D9
                )
            )
            writer.vector(
                self.users,
                lambda value: writer.object(
                    value,
                    group_id=0X9BABE43A
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        full_chat_ = reader.object(
            group_id=0X90C273E7
        )

        chats_ = reader.vector(
            lambda: reader.object(
                group_id=0X73A5C0D9
            )
        )

        users_ = reader.vector(
            lambda: reader.object(
                group_id=0X9BABE43A
            )
        )

        return cls(
            full_chat=full_chat_,
            chats=chats_,
            users=users_
        )

TypeMessagesChatFull = ChatFull