
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Union
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class InputTheme(TLObject, family='TypeInputTheme'):
    """
    Theme
    """

    _id = 0X3C5693E9
    _group_id = 0X339F9825

    def __init__(
        self,
        id: int,
        access_hash: int
    ):

        """
        Theme

        Args:
            id (int): ID
            access_hash (int): Access hash
        """

        self.id = id
        self.access_hash = access_hash

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xe9\x93V<' if boxed else b'') as writer:
            writer.long(self.id)
            writer.long(self.access_hash)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        id_ = reader.long()
        access_hash_ = reader.long()

        return cls(
            id=id_,
            access_hash=access_hash_
        )

class InputThemeSlug(TLObject, family='TypeInputTheme'):
    """
    Theme by theme ID
    """

    _id = 0XF5890DF1
    _group_id = 0X339F9825

    def __init__(
        self,
        slug: str
    ):

        """
        Theme by theme ID

        Args:
            slug (str): Unique theme ID obtained from a [theme deep link](https://core.telegram.org/api/links#theme-links)
        """

        self.slug = slug

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xf1\r\x89\xf5' if boxed else b'') as writer:
            writer.string(self.slug)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        slug_ = reader.string()

        return cls(
            slug=slug_
        )

TypeInputTheme = Union[
    InputTheme,
    InputThemeSlug
]