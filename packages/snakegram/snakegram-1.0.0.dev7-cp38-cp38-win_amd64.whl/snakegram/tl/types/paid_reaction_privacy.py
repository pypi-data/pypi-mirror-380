
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Union
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .input_peer import TypeInputPeer
    from ...gadgets.byteutils import Reader


class PaidReactionPrivacyDefault(TLObject, family='TypePaidReactionPrivacy'):
    _id = 0X206AD49E
    _group_id = 0XA09546B0


    def to_bytes(self, boxed: bool=True):
        return b'\x9e\xd4j ' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class PaidReactionPrivacyAnonymous(TLObject, family='TypePaidReactionPrivacy'):
    _id = 0X1F0C1AD9
    _group_id = 0XA09546B0


    def to_bytes(self, boxed: bool=True):
        return b'\xd9\x1a\x0c\x1f' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class PaidReactionPrivacyPeer(TLObject, family='TypePaidReactionPrivacy'):
    _id = 0XDC6CFCF0
    _group_id = 0XA09546B0

    def __init__(
        self,
        peer: 'TypeInputPeer'
    ):

        self.peer = peer

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xf0\xfcl\xdc' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        peer_ = reader.object(
            group_id=0X995DB9DF
        )

        return cls(
            peer=peer_
        )

TypePaidReactionPrivacy = Union[
    PaidReactionPrivacyDefault,
    PaidReactionPrivacyAnonymous,
    PaidReactionPrivacyPeer
]