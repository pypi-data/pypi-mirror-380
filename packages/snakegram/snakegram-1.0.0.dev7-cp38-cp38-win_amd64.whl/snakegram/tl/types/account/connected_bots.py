
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ..user import TypeUser
    from ..connected_bot import TypeConnectedBot
    from ....gadgets.byteutils import Reader


class ConnectedBots(TLObject, family='TypeAccountConnectedBots'):
    """
    Info about currently connected [business bots](https://core.telegram.org/api/business#connected-bots).
    """

    _id = 0X17D7F87B
    _group_id = 0XD1EDD992

    def __init__(
        self,
        connected_bots: List['TypeConnectedBot'],
        users: List['TypeUser']
    ):

        """
        Info about currently connected [business bots](https://core.telegram.org/api/business#connected-bots).

        Args:
            connected_bots (List['TypeConnectedBot']): Info about the connected bots
            users (List['TypeUser']): Bot information
        """

        self.connected_bots = connected_bots
        self.users = users

    def to_bytes(self, boxed: bool=True):
        with Writer(b'{\xf8\xd7\x17' if boxed else b'') as writer:
            writer.vector(
                self.connected_bots,
                lambda value: writer.object(
                    value,
                    group_id=0X3773058C
                )
            )
            writer.vector(
                self.users,
                lambda value: writer.object(
                    value,
                    group_id=0X9BABE43A
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        connected_bots_ = reader.vector(
            lambda: reader.object(
                group_id=0X3773058C
            )
        )

        users_ = reader.vector(
            lambda: reader.object(
                group_id=0X9BABE43A
            )
        )

        return cls(
            connected_bots=connected_bots_,
            users=users_
        )

TypeAccountConnectedBots = ConnectedBots