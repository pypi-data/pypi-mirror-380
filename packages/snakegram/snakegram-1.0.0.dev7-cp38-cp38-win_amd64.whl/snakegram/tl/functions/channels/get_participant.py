
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.channels.channel_participant import TypeChannelsChannelParticipant


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer
    from ...types.input_channel import TypeInputChannel


class GetParticipant(TLRequest[TypeChannelsChannelParticipant]):
    """
    Get info about a [channel/supergroup](https://core.telegram.org/api/channel) participant

    **Bots can use this method**

    Raises:
        `400`ChannelInvalidError: The provided channel is invalid.
        `400`MsgIdInvalidError: Invalid message ID provided.
        `400`ParticipantIdInvalidError: The specified participant ID is invalid.
        `400`UserIdInvalidError: The provided user ID is invalid.
        `400`UserNotParticipantError: You're not a member of this supergroup/channel.
        `406`ChannelPrivateError: You haven't joined this channel/supergroup.
        `403`ChatAdminRequiredError: You must be an admin in this chat to do this.

    """

    _id = 0XA0AB6CC6
    _result_id = 0X7F1901AB

    def __init__(
        self,
        channel: 'TypeInputChannel',
        participant: 'TypeInputPeer'
    ):

        """
        Get info about a [channel/supergroup](https://core.telegram.org/api/channel) participant

        **Bots can use this method**

        Args:
            channel ('TypeInputChannel'): Channel/supergroup
            participant ('TypeInputPeer'): Participant to get info about
        """

        self.channel = channel
        self.participant = participant

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xc6l\xab\xa0' if boxed else b'') as writer:
            writer.object(
                self.channel,
                group_id=0X42691CEF
            )
            writer.object(
                self.participant,
                group_id=0X995DB9DF
            )

            return writer.getvalue()