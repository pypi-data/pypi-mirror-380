
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.channels.send_as_peers import TypeChannelsSendAsPeers


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class GetSendAs(TLRequest[TypeChannelsSendAsPeers]):
    """
    Obtains a list of peers that can be used to send messages in a specific group

    Raises:
        `400`ChannelInvalidError: The provided channel is invalid.
        `400`ChannelPrivateError: You haven't joined this channel/supergroup.
        `400`ChatIdInvalidError: The provided chat id is invalid.
        `400`PeerIdInvalidError: The provided peer id is invalid.

    """

    _id = 0XE785A43F
    _result_id = 0X5B0AE521

    def __init__(
        self,
        peer: 'TypeInputPeer',
        for_paid_reactions: bool = False
    ):

        """
        Obtains a list of peers that can be used to send messages in a specific group

        Args:
            peer ('TypeInputPeer'): The group where we intend to send messages
            for_paid_reactions (bool, optional): ...
        """

        self.peer = peer
        self.for_paid_reactions = for_paid_reactions

    def to_bytes(self, boxed: bool=True):
        with Writer(b'?\xa4\x85\xe7' if boxed else b'') as writer:
            with writer.flag() as flags:
                flags(self.for_paid_reactions, 0)
                writer.object(
                    self.peer,
                    group_id=0X995DB9DF
                )

            return writer.getvalue()