
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .user_status import TypeUserStatus
    from ...gadgets.byteutils import Reader


class ContactStatus(TLObject, family='TypeContactStatus'):
    """
    Contact status: online / offline.
    """

    _id = 0X16D9703B
    _group_id = 0X9B7B3D1A

    def __init__(
        self,
        user_id: int,
        status: 'TypeUserStatus'
    ):

        """
        Contact status: online / offline.

        Args:
            user_id (int): User identifier
            status ('TypeUserStatus'): Online status
        """

        self.user_id = user_id
        self.status = status

    def to_bytes(self, boxed: bool=True):
        with Writer(b';p\xd9\x16' if boxed else b'') as writer:
            writer.long(self.user_id)
            writer.object(
                self.status,
                group_id=0X6F35ECEB
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        user_id_ = reader.long()
        status_ = reader.object(
            group_id=0X6F35ECEB
        )

        return cls(
            user_id=user_id_,
            status=status_
        )

TypeContactStatus = ContactStatus