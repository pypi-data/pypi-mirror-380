
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.messages.sticker_set import TypeMessagesStickerSet


if TYPE_CHECKING:
    from ...types.input_document import TypeInputDocument


class ChangeStickerPosition(TLRequest[TypeMessagesStickerSet]):
    """
    Changes the absolute position of a sticker in the set to which it belongs. The sticker set must have been created by the current user/bot.

    **Bots can use this method**

    Raises:
        `400`StickerInvalidError: The provided sticker is invalid.

    """

    _id = 0XFFB6D4CA
    _result_id = 0X5CC84E96

    def __init__(
        self,
        sticker: 'TypeInputDocument',
        position: int
    ):

        """
        Changes the absolute position of a sticker in the set to which it belongs. The sticker set must have been created by the current user/bot.

        **Bots can use this method**

        Args:
            sticker ('TypeInputDocument'): The sticker
            position (int): The new position of the sticker, zero-based
        """

        self.sticker = sticker
        self.position = position

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xca\xd4\xb6\xff' if boxed else b'') as writer:
            writer.object(
                self.sticker,
                group_id=0X84313E
            )
            writer.int(self.position)

            return writer.getvalue()