
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_channel import TypeInputChannel


class CheckUsername(TLRequest[bool]):
    """
    Check if a username is free and can be assigned to a channel/supergroup

    Raises:
        `400`ChannelsAdminPublicTooMuchError: You're admin of too many public channels, make some channels private to change the username of this channel.
        `400`ChannelInvalidError: The provided channel is invalid.
        `400`ChannelPrivateError: You haven't joined this channel/supergroup.
        `400`ChatIdInvalidError: The provided chat id is invalid.
        `400`MsgIdInvalidError: Invalid message ID provided.
        `400`PeerIdInvalidError: The provided peer id is invalid.
        `400`UsernameInvalidError: The provided username is not valid.
        `400`UsernameOccupiedError: The provided username is already occupied.
        `400`UsernamePurchaseAvailableError: The specified username can be purchased on https://fragment.com.

    """

    _id = 0X10E6BD2C
    _result_id = 0X43B904E1

    def __init__(
        self,
        channel: 'TypeInputChannel',
        username: str
    ):

        """
        Check if a username is free and can be assigned to a channel/supergroup

        Args:
            channel ('TypeInputChannel'): The [channel/supergroup](https://core.telegram.org/api/channel) that will assigned the specified username
            username (str): The username to check
        """

        self.channel = channel
        self.username = username

    def to_bytes(self, boxed: bool=True):
        with Writer(b',\xbd\xe6\x10' if boxed else b'') as writer:
            writer.object(
                self.channel,
                group_id=0X42691CEF
            )
            writer.string(self.username)

            return writer.getvalue()