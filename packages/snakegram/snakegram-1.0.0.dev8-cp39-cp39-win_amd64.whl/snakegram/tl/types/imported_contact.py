
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class ImportedContact(TLObject, family='TypeImportedContact'):
    """
    Successfully imported contact.
    """

    _id = 0XC13E3C50
    _group_id = 0X197BB9D5

    def __init__(
        self,
        user_id: int,
        client_id: int
    ):

        """
        Successfully imported contact.

        Args:
            user_id (int): User identifier
            client_id (int): The contact's client identifier (passed to one of the [InputContact](https://core.telegram.org/type/InputContact) constructors)
        """

        self.user_id = user_id
        self.client_id = client_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'P<>\xc1' if boxed else b'') as writer:
            writer.long(self.user_id)
            writer.long(self.client_id)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        user_id_ = reader.long()
        client_id_ = reader.long()

        return cls(
            user_id=user_id_,
            client_id=client_id_
        )

TypeImportedContact = ImportedContact