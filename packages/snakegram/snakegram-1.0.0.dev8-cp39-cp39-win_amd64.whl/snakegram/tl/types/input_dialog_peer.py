
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Union, TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .input_peer import TypeInputPeer
    from ...gadgets.byteutils import Reader


class InputDialogPeer(TLObject, family='TypeInputDialogPeer'):
    """
    A peer
    """

    _id = 0XFCAAFEB7
    _group_id = 0XE22959A

    def __init__(
        self,
        peer: 'TypeInputPeer'
    ):

        """
        A peer

        Args:
            peer ('TypeInputPeer'): Peer
        """

        self.peer = peer

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xb7\xfe\xaa\xfc' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        peer_ = reader.object(
            group_id=0X995DB9DF
        )

        return cls(
            peer=peer_
        )

class InputDialogPeerFolder(TLObject, family='TypeInputDialogPeer'):
    """
    All peers in a [peer folder](https://core.telegram.org/api/folders#peer-folders)
    """

    _id = 0X64600527
    _group_id = 0XE22959A

    def __init__(
        self,
        folder_id: int
    ):

        """
        All peers in a [peer folder](https://core.telegram.org/api/folders#peer-folders)

        Args:
            folder_id (int): [Peer folder ID, for more info click here](https://core.telegram.org/api/folders#peer-folders)
        """

        self.folder_id = folder_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b"'\x05`d" if boxed else b'') as writer:
            writer.int(self.folder_id)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        folder_id_ = reader.int()

        return cls(
            folder_id=folder_id_
        )

TypeInputDialogPeer = Union[
    InputDialogPeer,
    InputDialogPeerFolder
]