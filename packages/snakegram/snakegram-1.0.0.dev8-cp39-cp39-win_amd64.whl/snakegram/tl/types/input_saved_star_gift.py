
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Union, TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .input_peer import TypeInputPeer
    from ...gadgets.byteutils import Reader


class InputSavedStarGiftUser(TLObject, family='TypeInputSavedStarGift'):
    _id = 0X69279795
    _group_id = 0X777EA116

    def __init__(
        self,
        msg_id: int
    ):

        self.msg_id = msg_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b"\x95\x97'i" if boxed else b'') as writer:
            writer.int(self.msg_id)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        msg_id_ = reader.int()

        return cls(
            msg_id=msg_id_
        )

class InputSavedStarGiftChat(TLObject, family='TypeInputSavedStarGift'):
    _id = 0XF101AA7F
    _group_id = 0X777EA116

    def __init__(
        self,
        peer: 'TypeInputPeer',
        saved_id: int
    ):

        self.peer = peer
        self.saved_id = saved_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x7f\xaa\x01\xf1' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )
            writer.long(self.saved_id)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        peer_ = reader.object(
            group_id=0X995DB9DF
        )

        saved_id_ = reader.long()

        return cls(
            peer=peer_,
            saved_id=saved_id_
        )

class InputSavedStarGiftSlug(TLObject, family='TypeInputSavedStarGift'):
    _id = 0X2085C238
    _group_id = 0X777EA116

    def __init__(
        self,
        slug: str
    ):

        self.slug = slug

    def to_bytes(self, boxed: bool=True):
        with Writer(b'8\xc2\x85 ' if boxed else b'') as writer:
            writer.string(self.slug)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        slug_ = reader.string()

        return cls(
            slug=slug_
        )

TypeInputSavedStarGift = Union[
    InputSavedStarGiftUser,
    InputSavedStarGiftChat,
    InputSavedStarGiftSlug
]