
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import List, TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .page_table_cell import TypePageTableCell
    from ...gadgets.byteutils import Reader


class PageTableRow(TLObject, family='TypePageTableRow'):
    """
    Table row
    """

    _id = 0XE0C0C5E5
    _group_id = 0X5B37F003

    def __init__(
        self,
        cells: List['TypePageTableCell']
    ):

        """
        Table row

        Args:
            cells (List['TypePageTableCell']): Table cells
        """

        self.cells = cells

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xe5\xc5\xc0\xe0' if boxed else b'') as writer:
            writer.vector(
                self.cells,
                lambda value: writer.object(
                    value,
                    group_id=0X4350DA02
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        cells_ = reader.vector(
            lambda: reader.object(
                group_id=0X4350DA02
            )
        )

        return cls(
            cells=cells_
        )

TypePageTableRow = PageTableRow