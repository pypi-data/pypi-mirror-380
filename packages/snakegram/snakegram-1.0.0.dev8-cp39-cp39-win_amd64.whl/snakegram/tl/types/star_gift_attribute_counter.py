
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader
    from .star_gift_attribute_id import TypeStarGiftAttributeId


class StarGiftAttributeCounter(TLObject, family='TypeStarGiftAttributeCounter'):
    _id = 0X2EB1B658
    _group_id = 0X873675A5

    def __init__(
        self,
        attribute: 'TypeStarGiftAttributeId',
        count: int
    ):

        self.attribute = attribute
        self.count = count

    def to_bytes(self, boxed: bool=True):
        with Writer(b'X\xb6\xb1.' if boxed else b'') as writer:
            writer.object(
                self.attribute,
                group_id=0X76631A31
            )
            writer.int(self.count)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        attribute_ = reader.object(
            group_id=0X76631A31
        )

        count_ = reader.int()

        return cls(
            attribute=attribute_,
            count=count_
        )

TypeStarGiftAttributeCounter = StarGiftAttributeCounter