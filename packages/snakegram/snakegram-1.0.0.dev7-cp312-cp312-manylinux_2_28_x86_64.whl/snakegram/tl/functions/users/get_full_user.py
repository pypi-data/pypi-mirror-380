
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.users.user_full import TypeUsersUserFull


if TYPE_CHECKING:
    from ...types.input_user import TypeInputUser


class GetFullUser(TLRequest[TypeUsersUserFull]):
    """
    Returns extended user info by ID.

    **Bots can use this method**

    Raises:
        `400`ChannelInvalidError: The provided channel is invalid.
        `400`ChannelPrivateError: You haven't joined this channel/supergroup.
        `400`MsgIdInvalidError: Invalid message ID provided.
        `400`UsernameOccupiedError: The provided username is already occupied.
        `400`UserIdInvalidError: The provided user ID is invalid.

    """

    _id = 0XB60F5918
    _result_id = 0XDBCB55AD

    def __init__(
        self,
        id: 'TypeInputUser'
    ):

        """
        Returns extended user info by ID.

        **Bots can use this method**

        Args:
            id ('TypeInputUser'): User ID
        """

        self.id = id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x18Y\x0f\xb6' if boxed else b'') as writer:
            writer.object(
                self.id,
                group_id=0XB628962F
            )

            return writer.getvalue()