
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Optional
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.dialog_filter import TypeDialogFilter


class UpdateDialogFilter(TLRequest[bool]):
    """
    Update [folder](https://core.telegram.org/api/folders)

    Raises:
        `400`ChatlistExcludeInvalidError: The specified `exclude_peers` are invalid.
        `400`ChatIdInvalidError: The provided chat id is invalid.
        `400`FilterIdInvalidError: The specified filter ID is invalid.
        `400`FilterIncludeEmptyError: The include_peers vector of the filter is empty.
        `400`FilterTitleEmptyError: The title field of the filter is empty.
        `400`MsgIdInvalidError: Invalid message ID provided.
        `400`PeerIdInvalidError: The provided peer id is invalid.

    """

    _id = 0X1AD4A04A
    _result_id = 0X43B904E1

    def __init__(
        self,
        id: int,
        filter: Optional['TypeDialogFilter'] = None
    ):

        """
        Update [folder](https://core.telegram.org/api/folders)

        Args:
            id (int): [Folder](https://core.telegram.org/api/folders) ID
            filter (Optional['TypeDialogFilter'], optional): [Folder](https://core.telegram.org/api/folders) info
        """

        self.id = id
        self.filter = filter

    def to_bytes(self, boxed: bool=True):
        with Writer(b'J\xa0\xd4\x1a' if boxed else b'') as writer:
            with writer.flag() as flags:
                writer.int(self.id)

                if flags(self.filter, 0):
                    writer.object(
                        self.filter,
                        group_id=0X6BB0DA45
                    )

            return writer.getvalue()