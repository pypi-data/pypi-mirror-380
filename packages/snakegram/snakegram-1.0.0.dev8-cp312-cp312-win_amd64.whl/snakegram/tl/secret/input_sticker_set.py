
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Union, TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class InputStickerSetShortName(TLObject, family='TypeInputStickerSet'):
    _id = 0X861CC8A0
    _group_id = 0X919D8BA5

    def __init__(
        self,
        short_name: str
    ):

        self.short_name = short_name

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xa0\xc8\x1c\x86' if boxed else b'') as writer:
            writer.string(self.short_name)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        short_name_ = reader.string()

        return cls(
            short_name=short_name_
        )

class InputStickerSetEmpty(TLObject, family='TypeInputStickerSet'):
    _id = 0XFFB62B95
    _group_id = 0X919D8BA5


    def to_bytes(self, boxed: bool=True):
        return b'\x95+\xb6\xff' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

TypeInputStickerSet = Union[
    InputStickerSetShortName,
    InputStickerSetEmpty
]