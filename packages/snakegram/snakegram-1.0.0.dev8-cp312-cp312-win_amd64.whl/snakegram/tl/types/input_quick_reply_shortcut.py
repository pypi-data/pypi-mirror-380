
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Union, TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class InputQuickReplyShortcut(TLObject, family='TypeInputQuickReplyShortcut'):
    """
    Selects a [quick reply shortcut](https://core.telegram.org/api/business#quick-reply-shortcuts) by name.
    """

    _id = 0X24596D41
    _group_id = 0X60706B98

    def __init__(
        self,
        shortcut: str
    ):

        """
        Selects a [quick reply shortcut](https://core.telegram.org/api/business#quick-reply-shortcuts) by name.

        Args:
            shortcut (str): Shortcut name.
        """

        self.shortcut = shortcut

    def to_bytes(self, boxed: bool=True):
        with Writer(b'AmY$' if boxed else b'') as writer:
            writer.string(self.shortcut)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        shortcut_ = reader.string()

        return cls(
            shortcut=shortcut_
        )

class InputQuickReplyShortcutId(TLObject, family='TypeInputQuickReplyShortcut'):
    """
    Selects a [quick reply shortcut](https://core.telegram.org/api/business#quick-reply-shortcuts) by its numeric ID.
    """

    _id = 0X1190CF1
    _group_id = 0X60706B98

    def __init__(
        self,
        shortcut_id: int
    ):

        """
        Selects a [quick reply shortcut](https://core.telegram.org/api/business#quick-reply-shortcuts) by its numeric ID.

        Args:
            shortcut_id (int): Shortcut ID.
        """

        self.shortcut_id = shortcut_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xf1\x0c\x19\x01' if boxed else b'') as writer:
            writer.int(self.shortcut_id)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        shortcut_id_ = reader.int()

        return cls(
            shortcut_id=shortcut_id_
        )

TypeInputQuickReplyShortcut = Union[
    InputQuickReplyShortcut,
    InputQuickReplyShortcutId
]