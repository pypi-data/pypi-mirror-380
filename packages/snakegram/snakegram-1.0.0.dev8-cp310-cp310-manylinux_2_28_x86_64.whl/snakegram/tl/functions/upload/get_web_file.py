
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.upload.web_file import TypeUploadWebFile


if TYPE_CHECKING:
    from ...types.input_web_file_location import TypeInputWebFileLocation


class GetWebFile(TLRequest[TypeUploadWebFile]):
    """
    Returns content of a web file, by proxying the request through telegram, see the [webfile docs for more info](https://core.telegram.org/api/files#downloading-webfiles).

    Raises:
        `400`DocumentInvalidError: The specified document is invalid.
        `400`LocationInvalidError: The provided location is invalid.

    """

    _id = 0X24E6818D
    _result_id = 0XF9EBE229

    def __init__(
        self,
        location: 'TypeInputWebFileLocation',
        offset: int,
        limit: int
    ):

        """
        Returns content of a web file, by proxying the request through telegram, see the [webfile docs for more info](https://core.telegram.org/api/files#downloading-webfiles).

        Args:
            location ('TypeInputWebFileLocation'): The file to download
            offset (int): Number of bytes to be skipped
            limit (int): Number of bytes to be returned
        """

        self.location = location
        self.offset = offset
        self.limit = limit

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x8d\x81\xe6$' if boxed else b'') as writer:
            writer.object(
                self.location,
                group_id=0XF330BCFC
            )
            writer.int(self.offset)
            writer.int(self.limit)

            return writer.getvalue()