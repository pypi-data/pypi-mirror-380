
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...types.updates import TypeUpdates
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_channel import TypeInputChannel


class UpdatePinnedForumTopic(TLRequest[TypeUpdates]):
    """
    Pin or unpin [forum topics](https://core.telegram.org/api/forum)

    Raises:
        `400`ChannelInvalidError: The provided channel is invalid.
        `400`TopicIdInvalidError: The specified topic ID is invalid.

    """

    _id = 0X6C2D9026
    _result_id = 0XD68D29C0

    def __init__(
        self,
        channel: 'TypeInputChannel',
        topic_id: int,
        pinned: bool
    ):

        """
        Pin or unpin [forum topics](https://core.telegram.org/api/forum)

        Args:
            channel ('TypeInputChannel'): Supergroup ID
            topic_id (int): [Forum topic ID](https://core.telegram.org/api/forum)
            pinned (bool): Whether to pin or unpin the topic
        """

        self.channel = channel
        self.topic_id = topic_id
        self.pinned = pinned

    def to_bytes(self, boxed: bool=True):
        with Writer(b'&\x90-l' if boxed else b'') as writer:
            writer.object(
                self.channel,
                group_id=0X42691CEF
            )
            writer.int(self.topic_id)
            writer.object(
                self.pinned,
                group_id=0X43B904E1
            )

            return writer.getvalue()