
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Union, TYPE_CHECKING, List
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ....gadgets.byteutils import Reader
    from ..star_gift_collection import TypeStarGiftCollection


class StarGiftCollectionsNotModified(TLObject, family='TypePaymentsStarGiftCollections'):
    _id = 0XA0BA4F17
    _group_id = 0X342D4108


    def to_bytes(self, boxed: bool=True):
        return b'\x17O\xba\xa0' if boxed else b''

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        return cls()

class StarGiftCollections(TLObject, family='TypePaymentsStarGiftCollections'):
    _id = 0X8A2932F3
    _group_id = 0X342D4108

    def __init__(
        self,
        collections: List['TypeStarGiftCollection']
    ):

        self.collections = collections

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xf32)\x8a' if boxed else b'') as writer:
            writer.vector(
                self.collections,
                lambda value: writer.object(
                    value,
                    group_id=0XBBEBF3F2
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        collections_ = reader.vector(
            lambda: reader.object(
                group_id=0XBBEBF3F2
            )
        )

        return cls(
            collections=collections_
        )

TypePaymentsStarGiftCollections = Union[
    StarGiftCollectionsNotModified,
    StarGiftCollections
]