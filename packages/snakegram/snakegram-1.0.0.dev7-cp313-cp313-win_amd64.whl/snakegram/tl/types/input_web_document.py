
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .document_attribute import TypeDocumentAttribute
    from ...gadgets.byteutils import Reader


class InputWebDocument(TLObject, family='TypeInputWebDocument'):
    """
    The document
    """

    _id = 0X9BED434D
    _group_id = 0X1AFB92D5

    def __init__(
        self,
        url: str,
        size: int,
        mime_type: str,
        attributes: List['TypeDocumentAttribute']
    ):

        """
        The document

        Args:
            url (str): Remote document URL to be downloaded using the appropriate [method](https://core.telegram.org/api/files)
            size (int): Remote file size
            mime_type (str): Mime type
            attributes (List['TypeDocumentAttribute']): Attributes for media types
        """

        self.url = url
        self.size = size
        self.mime_type = mime_type
        self.attributes = attributes

    def to_bytes(self, boxed: bool=True):
        with Writer(b'MC\xed\x9b' if boxed else b'') as writer:
            writer.string(self.url)
            writer.int(self.size)
            writer.string(self.mime_type)
            writer.vector(
                self.attributes,
                lambda value: writer.object(
                    value,
                    group_id=0X9EBF3A46
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        url_ = reader.string()
        size_ = reader.int()
        mime_type_ = reader.string()
        attributes_ = reader.vector(
            lambda: reader.object(
                group_id=0X9EBF3A46
            )
        )

        return cls(
            url=url_,
            size=size_,
            mime_type=mime_type_,
            attributes=attributes_
        )

TypeInputWebDocument = InputWebDocument