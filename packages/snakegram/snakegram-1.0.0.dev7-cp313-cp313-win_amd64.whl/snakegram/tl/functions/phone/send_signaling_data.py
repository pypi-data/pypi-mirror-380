
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_phone_call import TypeInputPhoneCall


class SendSignalingData(TLRequest[bool]):
    """
    Send VoIP signaling data

    Raises:
        `400`CallPeerInvalidError: The provided call peer object is invalid.

    """

    _id = 0XFF7A9383
    _result_id = 0X43B904E1

    def __init__(
        self,
        peer: 'TypeInputPhoneCall',
        data: bytes
    ):

        """
        Send VoIP signaling data

        Args:
            peer ('TypeInputPhoneCall'): Phone call
            data (bytes): Signaling payload
        """

        self.peer = peer
        self.data = data

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x83\x93z\xff' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X3E51BD6B
            )
            writer.bytes(self.data)

            return writer.getvalue()