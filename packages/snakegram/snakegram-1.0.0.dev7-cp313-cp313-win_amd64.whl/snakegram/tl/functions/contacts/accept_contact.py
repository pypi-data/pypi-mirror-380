
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...types.updates import TypeUpdates
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_user import TypeInputUser


class AcceptContact(TLRequest[TypeUpdates]):
    """
    If the [add contact action bar is active](https://core.telegram.org/api/action-bar#add-contact), add that user as contact

    Raises:
        `400`ContactAddMissingError: Contact to add is missing.
        `400`ContactIdInvalidError: The provided contact ID is invalid.
        `400`ContactReqMissingError: Missing contact request.
        `400`MsgIdInvalidError: Invalid message ID provided.

    """

    _id = 0XF831A20F
    _result_id = 0XD68D29C0

    def __init__(
        self,
        id: 'TypeInputUser'
    ):

        """
        If the [add contact action bar is active](https://core.telegram.org/api/action-bar#add-contact), add that user as contact

        Args:
            id ('TypeInputUser'): The user to add as contact
        """

        self.id = id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x0f\xa21\xf8' if boxed else b'') as writer:
            writer.object(
                self.id,
                group_id=0XB628962F
            )

            return writer.getvalue()