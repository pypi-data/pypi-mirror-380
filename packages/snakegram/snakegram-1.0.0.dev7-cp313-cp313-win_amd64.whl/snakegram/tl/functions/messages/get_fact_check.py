
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List
from ...types.fact_check import TypeFactCheck
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class GetFactCheck(TLRequest[List[TypeFactCheck]]):
    """
    Fetch one or more [factchecks, see here](https://core.telegram.org/api/factcheck) for the full flow.

    Raises:
        `400`PeerIdInvalidError: The provided peer id is invalid.

    """

    _id = 0XB9CDC5EE

    def __init__(
        self,
        peer: 'TypeInputPeer',
        msg_id: List[int]
    ):

        """
        Fetch one or more [factchecks, see here](https://core.telegram.org/api/factcheck) for the full flow.

        Args:
            peer ('TypeInputPeer'): Peer where the messages were sent.
            msg_id (List[int]): Messages that have associated [factCheck](https://core.telegram.org/constructor/factCheck) constructors with the need_check flag set.
        """

        self.peer = peer
        self.msg_id = msg_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xee\xc5\xcd\xb9' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )
            writer.vector(
                self.msg_id,
                writer.int
            )

            return writer.getvalue()