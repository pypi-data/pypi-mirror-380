
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, List
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.contacts.imported_contacts import TypeContactsImportedContacts


if TYPE_CHECKING:
    from ...types.input_contact import TypeInputContact


class ImportContacts(TLRequest[TypeContactsImportedContacts]):
    """
    Imports contacts: saves a full list on the server, adds already registered contacts to the contact list, returns added contacts and their info.
    """

    _id = 0X2C800BE5
    _result_id = 0XF234D809

    def __init__(
        self,
        contacts: List['TypeInputContact']
    ):

        """
        Imports contacts: saves a full list on the server, adds already registered contacts to the contact list, returns added contacts and their info.

        Args:
            contacts (List['TypeInputContact']): List of contacts to import
        """

        self.contacts = contacts

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xe5\x0b\x80,' if boxed else b'') as writer:
            writer.vector(
                self.contacts,
                lambda value: writer.object(
                    value,
                    group_id=0XACF27490
                )
            )

            return writer.getvalue()