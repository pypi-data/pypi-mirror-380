
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.global_privacy_settings import TypeGlobalPrivacySettings


if TYPE_CHECKING:
    from ...types.global_privacy_settings import TypeGlobalPrivacySettings


class SetGlobalPrivacySettings(TLRequest[TypeGlobalPrivacySettings]):
    """
    Set global privacy settings

    Raises:
        `400`AutoarchiveNotAvailableError: The autoarchive setting is not available at this time: please check the value of the [autoarchive_setting_available field in client config &raquo;](https://core.telegram.org/api/config#client-configuration) before calling this method.
        `403`PremiumAccountRequiredError: A premium account is required to execute this action.

    """

    _id = 0X1EDAAAC2
    _result_id = 0X820E9D53

    def __init__(
        self,
        settings: 'TypeGlobalPrivacySettings'
    ):

        """
        Set global privacy settings

        Args:
            settings ('TypeGlobalPrivacySettings'): Global privacy settings
        """

        self.settings = settings

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xc2\xaa\xda\x1e' if boxed else b'') as writer:
            writer.object(
                self.settings,
                group_id=0X820E9D53
            )

            return writer.getvalue()