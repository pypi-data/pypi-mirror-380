
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.peer_notify_settings import TypePeerNotifySettings


if TYPE_CHECKING:
    from ...types.input_notify_peer import TypeInputNotifyPeer


class GetNotifySettings(TLRequest[TypePeerNotifySettings]):
    """
    Gets current notification settings for a given user/group, from all users/all groups.

    Raises:
        `400`ChannelInvalidError: The provided channel is invalid.
        `400`ChannelPrivateError: You haven't joined this channel/supergroup.
        `400`PeerIdInvalidError: The provided peer id is invalid.

    """

    _id = 0X12B3AD31
    _result_id = 0X372BF8CC

    def __init__(
        self,
        peer: 'TypeInputNotifyPeer'
    ):

        """
        Gets current notification settings for a given user/group, from all users/all groups.

        Args:
            peer ('TypeInputNotifyPeer'): Notification source
        """

        self.peer = peer

    def to_bytes(self, boxed: bool=True):
        with Writer(b'1\xad\xb3\x12' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0XF4A6141A
            )

            return writer.getvalue()