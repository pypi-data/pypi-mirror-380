
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Optional
from ...types.updates import TypeUpdates
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer, Int


if TYPE_CHECKING:
    from ...types.data_json import TypeDataJSON


class CreateConferenceCall(TLRequest[TypeUpdates]):
    _id = 0X7D0444BB
    _result_id = 0XD68D29C0

    def __init__(
        self,
        muted: bool = False,
        video_stopped: bool = False,
        join: bool = False,
        public_key: Optional[int] = None,
        block: Optional[bytes] = None,
        params: Optional['TypeDataJSON'] = None,
        random_id: int = None
    ):

        self.muted = muted
        self.video_stopped = video_stopped
        self.join = join
        self.public_key = public_key
        self.block = block
        self.params = params
        self.random_id = Int() if random_id is None else random_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xbbD\x04}' if boxed else b'') as writer:
            with writer.flag() as flags:
                flags(self.muted, 0)
                flags(self.video_stopped, 2)
                flags(self.join, 3)
                writer.int(self.random_id)

                if flags(self.public_key, 3):
                    writer.int256(self.public_key)

                if flags(self.block, 3):
                    writer.bytes(self.block)

                if flags(self.params, 3):
                    writer.object(
                        self.params,
                        group_id=0XE95B0798
                    )

            return writer.getvalue()