
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...types.input_file import TypeInputFile
    from ...types.input_phone_call import TypeInputPhoneCall


class SaveCallLog(TLRequest[bool]):
    """
    Save phone call debug information

    Raises:
        `400`CallPeerInvalidError: The provided call peer object is invalid.

    """

    _id = 0X41248786
    _result_id = 0X43B904E1

    def __init__(
        self,
        peer: 'TypeInputPhoneCall',
        file: 'TypeInputFile'
    ):

        """
        Save phone call debug information

        Args:
            peer ('TypeInputPhoneCall'): Phone call
            file ('TypeInputFile'): Logs
        """

        self.peer = peer
        self.file = file

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x86\x87$A' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X3E51BD6B
            )
            writer.object(
                self.file,
                group_id=0XB7247676
            )

            return writer.getvalue()