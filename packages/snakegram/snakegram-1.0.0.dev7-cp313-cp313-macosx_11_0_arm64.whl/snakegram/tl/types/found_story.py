
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .peer import TypePeer
    from .story_item import TypeStoryItem
    from ...gadgets.byteutils import Reader


class FoundStory(TLObject, family='TypeFoundStory'):
    """
    A story found using [global story search](https://core.telegram.org/api/stories#searching-stories).
    """

    _id = 0XE87ACBC0
    _group_id = 0X8723F010

    def __init__(
        self,
        peer: 'TypePeer',
        story: 'TypeStoryItem'
    ):

        """
        A story found using [global story search](https://core.telegram.org/api/stories#searching-stories).

        Args:
            peer ('TypePeer'): The peer that posted the story.
            story ('TypeStoryItem'): The story.
        """

        self.peer = peer
        self.story = story

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xc0\xcbz\xe8' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0XB4DECBCA
            )
            writer.object(
                self.story,
                group_id=0X8436985A
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        peer_ = reader.object(
            group_id=0XB4DECBCA
        )

        story_ = reader.object(
            group_id=0X8436985A
        )

        return cls(
            peer=peer_,
            story=story_
        )

TypeFoundStory = FoundStory