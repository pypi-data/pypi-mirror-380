
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import List, TYPE_CHECKING
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ..user import TypeUser
    from ....gadgets.byteutils import Reader
    from ..chat_invite_importer import TypeChatInviteImporter


class ChatInviteImporters(TLObject, family='TypeMessagesChatInviteImporters'):
    """
    Info about the users that joined the chat using a specific chat invite
    """

    _id = 0X81B6B00A
    _group_id = 0X1C725BCB

    def __init__(
        self,
        count: int,
        importers: List['TypeChatInviteImporter'],
        users: List['TypeUser']
    ):

        """
        Info about the users that joined the chat using a specific chat invite

        Args:
            count (int): Number of users that joined
            importers (List['TypeChatInviteImporter']): The users that joined
            users (List['TypeUser']): The users that joined
        """

        self.count = count
        self.importers = importers
        self.users = users

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\n\xb0\xb6\x81' if boxed else b'') as writer:
            writer.int(self.count)
            writer.vector(
                self.importers,
                lambda value: writer.object(
                    value,
                    group_id=0XAB196C96
                )
            )
            writer.vector(
                self.users,
                lambda value: writer.object(
                    value,
                    group_id=0X9BABE43A
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        count_ = reader.int()
        importers_ = reader.vector(
            lambda: reader.object(
                group_id=0XAB196C96
            )
        )

        users_ = reader.vector(
            lambda: reader.object(
                group_id=0X9BABE43A
            )
        )

        return cls(
            count=count_,
            importers=importers_,
            users=users_
        )

TypeMessagesChatInviteImporters = ChatInviteImporters