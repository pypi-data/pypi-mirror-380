
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader
    from .channel_admin_log_event_action import TypeChannelAdminLogEventAction


class ChannelAdminLogEvent(TLObject, family='TypeChannelAdminLogEvent'):
    """
    Admin log event
    """

    _id = 0X1FAD68CD
    _group_id = 0X44916DBC

    def __init__(
        self,
        id: int,
        date: int,
        user_id: int,
        action: 'TypeChannelAdminLogEventAction'
    ):

        """
        Admin log event

        Args:
            id (int): Event ID
            date (int): Date
            user_id (int): User ID
            action ('TypeChannelAdminLogEventAction'): Action
        """

        self.id = id
        self.date = date
        self.user_id = user_id
        self.action = action

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xcdh\xad\x1f' if boxed else b'') as writer:
            writer.long(self.id)
            writer.int(self.date)
            writer.long(self.user_id)
            writer.object(
                self.action,
                group_id=0X3EA54A8B
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        id_ = reader.long()
        date_ = reader.int()
        user_id_ = reader.long()
        action_ = reader.object(
            group_id=0X3EA54A8B
        )

        return cls(
            id=id_,
            date=date_,
            user_id=user_id_,
            action=action_
        )

TypeChannelAdminLogEvent = ChannelAdminLogEvent