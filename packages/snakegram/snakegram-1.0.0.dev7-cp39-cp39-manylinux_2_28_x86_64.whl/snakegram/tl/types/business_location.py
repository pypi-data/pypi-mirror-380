
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import Optional, TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .geo_point import TypeGeoPoint
    from ...gadgets.byteutils import Reader


class BusinessLocation(TLObject, family='TypeBusinessLocation'):
    """
    Represents the location of a [Telegram Business](https://core.telegram.org/api/business#location).
    """

    _id = 0XAC5C1AF7
    _group_id = 0X9BFE943

    def __init__(
        self,
        address: str,
        geo_point: Optional['TypeGeoPoint'] = None
    ):

        """
        Represents the location of a [Telegram Business](https://core.telegram.org/api/business#location).

        Args:
            address (str): Textual description of the address (mandatory).
            geo_point (Optional['TypeGeoPoint'], optional): Geographical coordinates (optional).
        """

        self.address = address
        self.geo_point = geo_point

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xf7\x1a\\\xac' if boxed else b'') as writer:
            with writer.flag() as flags:

                if flags(self.geo_point, 0):
                    writer.object(
                        self.geo_point,
                        group_id=0X9248B41D
                    )
                writer.string(self.address)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        flags = reader.flag()
        geo_point_ = (
            reader.object(
                group_id=0X9248B41D
            )
            if flags(0) else None
        )

        address_ = reader.string()

        return cls(
            address=address_,
            geo_point=geo_point_
        )

TypeBusinessLocation = BusinessLocation