
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ...gadgets.byteutils import Reader


class SearchResultsCalendarPeriod(TLObject, family='TypeSearchResultsCalendarPeriod'):
    """
    Information about found messages sent on a specific day, used to split the messages in [messages.searchResultsCalendar](https://core.telegram.org/constructor/messages.searchResultsCalendar) constructors by days.
    """

    _id = 0XC9B0539F
    _group_id = 0XBC0E1D3C

    def __init__(
        self,
        date: int,
        min_msg_id: int,
        max_msg_id: int,
        count: int
    ):

        """
        Information about found messages sent on a specific day, used to split the messages in [messages.searchResultsCalendar](https://core.telegram.org/constructor/messages.searchResultsCalendar) constructors by days.

        Args:
            date (int): The day this object is referring to.
            min_msg_id (int): First message ID that was sent on this day.
            max_msg_id (int): Last message ID that was sent on this day.
            count (int): All messages that were sent on this day.
        """

        self.date = date
        self.min_msg_id = min_msg_id
        self.max_msg_id = max_msg_id
        self.count = count

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x9fS\xb0\xc9' if boxed else b'') as writer:
            writer.int(self.date)
            writer.int(self.min_msg_id)
            writer.int(self.max_msg_id)
            writer.int(self.count)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        date_ = reader.int()
        min_msg_id_ = reader.int()
        max_msg_id_ = reader.int()
        count_ = reader.int()

        return cls(
            date=date_,
            min_msg_id=min_msg_id_,
            max_msg_id=max_msg_id_,
            count=count_
        )

TypeSearchResultsCalendarPeriod = SearchResultsCalendarPeriod