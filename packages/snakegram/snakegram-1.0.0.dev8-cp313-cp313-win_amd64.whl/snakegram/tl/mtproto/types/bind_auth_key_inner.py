
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ....gadgets.byteutils import Reader


class BindAuthKeyInner(TLObject, family='TypeBindAuthKeyInner'):
    _id = 0X75A3F765
    _group_id = 0XBF1AB2E2

    def __init__(
        self,
        nonce: int,
        temp_auth_key_id: int,
        perm_auth_key_id: int,
        temp_session_id: int,
        expires_at: int
    ):

        self.nonce = nonce
        self.temp_auth_key_id = temp_auth_key_id
        self.perm_auth_key_id = perm_auth_key_id
        self.temp_session_id = temp_session_id
        self.expires_at = expires_at

    def to_bytes(self, boxed: bool=True):
        with Writer(b'e\xf7\xa3u' if boxed else b'') as writer:
            writer.long(self.nonce)
            writer.long(self.temp_auth_key_id)
            writer.long(self.perm_auth_key_id)
            writer.long(self.temp_session_id)
            writer.int(self.expires_at)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        nonce_ = reader.long()
        temp_auth_key_id_ = reader.long()
        perm_auth_key_id_ = reader.long()
        temp_session_id_ = reader.long()
        expires_at_ = reader.int()

        return cls(
            nonce=nonce_,
            temp_auth_key_id=temp_auth_key_id_,
            perm_auth_key_id=perm_auth_key_id_,
            temp_session_id=temp_session_id_,
            expires_at=expires_at_
        )

TypeBindAuthKeyInner = BindAuthKeyInner