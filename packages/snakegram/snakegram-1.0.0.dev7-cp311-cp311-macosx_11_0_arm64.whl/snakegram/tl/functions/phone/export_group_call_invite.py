
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.phone.exported_group_call_invite import TypePhoneExportedGroupCallInvite


if TYPE_CHECKING:
    from ...types.input_group_call import TypeInputGroupCall


class ExportGroupCallInvite(TLRequest[TypePhoneExportedGroupCallInvite]):
    """
    Get an [invite link](https://core.telegram.org/api/links#video-chat-livestream-links) for a group call or livestream

    Raises:
        `400`GroupcallInvalidError: The specified group call is invalid.
        `403`PublicChannelMissingError: You can only export group call invite links for public chats or channels.

    """

    _id = 0XE6AA647F
    _result_id = 0X341B1278

    def __init__(
        self,
        call: 'TypeInputGroupCall',
        can_self_unmute: bool = False
    ):

        """
        Get an [invite link](https://core.telegram.org/api/links#video-chat-livestream-links) for a group call or livestream

        Args:
            call ('TypeInputGroupCall'): The group call
            can_self_unmute (bool, optional): For livestreams or muted group chats, if set, users that join using this link will be able to speak without explicitly requesting permission by (for example by raising their hand).
        """

        self.call = call
        self.can_self_unmute = can_self_unmute

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x7fd\xaa\xe6' if boxed else b'') as writer:
            with writer.flag() as flags:
                flags(self.can_self_unmute, 0)
                writer.object(
                    self.call,
                    group_id=0XDA9A559A
                )

            return writer.getvalue()