# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import plotserver_pb2 as plotserver__pb2


class plotserverStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.panel = channel.unary_unary(
        '/rpc.gui.plotserver/panel',
        request_serializer=plotserver__pb2.NewPanel.SerializeToString,
        response_deserializer=plotserver__pb2.Id.FromString,
        )
    self.colors = channel.unary_unary(
        '/rpc.gui.plotserver/colors',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=plotserver__pb2.Colors.FromString,
        )
    self.colormaps = channel.unary_unary(
        '/rpc.gui.plotserver/colormaps',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=plotserver__pb2.ColorMaps.FromString,
        )
    self.symbols = channel.unary_unary(
        '/rpc.gui.plotserver/symbols',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=plotserver__pb2.Symbols.FromString,
        )
    self.line = channel.unary_unary(
        '/rpc.gui.plotserver/line',
        request_serializer=plotserver__pb2.NewLine.SerializeToString,
        response_deserializer=plotserver__pb2.Id.FromString,
        )
    self.scatter = channel.unary_unary(
        '/rpc.gui.plotserver/scatter',
        request_serializer=plotserver__pb2.NewScatter.SerializeToString,
        response_deserializer=plotserver__pb2.Id.FromString,
        )
    self.histogram = channel.unary_unary(
        '/rpc.gui.plotserver/histogram',
        request_serializer=plotserver__pb2.NewHistogram.SerializeToString,
        response_deserializer=plotserver__pb2.Id.FromString,
        )
    self.raster = channel.unary_unary(
        '/rpc.gui.plotserver/raster',
        request_serializer=plotserver__pb2.NewRaster.SerializeToString,
        response_deserializer=plotserver__pb2.Id.FromString,
        )
    self.setlabel = channel.unary_unary(
        '/rpc.gui.plotserver/setlabel',
        request_serializer=plotserver__pb2.Label.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.erase = channel.unary_unary(
        '/rpc.gui.plotserver/erase',
        request_serializer=plotserver__pb2.Id.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.close = channel.unary_unary(
        '/rpc.gui.plotserver/close',
        request_serializer=plotserver__pb2.Id.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.release = channel.unary_unary(
        '/rpc.gui.plotserver/release',
        request_serializer=plotserver__pb2.Id.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.hide = channel.unary_unary(
        '/rpc.gui.plotserver/hide',
        request_serializer=plotserver__pb2.Id.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.show = channel.unary_unary(
        '/rpc.gui.plotserver/show',
        request_serializer=plotserver__pb2.Id.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.loaddock = channel.unary_unary(
        '/rpc.gui.plotserver/loaddock',
        request_serializer=plotserver__pb2.DockSpec.SerializeToString,
        response_deserializer=plotserver__pb2.Id.FromString,
        )
    self.done = channel.unary_unary(
        '/rpc.gui.plotserver/done',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class plotserverServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def panel(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def colors(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def colormaps(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def symbols(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def line(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def scatter(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def histogram(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def raster(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def setlabel(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def erase(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def close(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def release(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def hide(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def show(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def loaddock(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def done(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_plotserverServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'panel': grpc.unary_unary_rpc_method_handler(
          servicer.panel,
          request_deserializer=plotserver__pb2.NewPanel.FromString,
          response_serializer=plotserver__pb2.Id.SerializeToString,
      ),
      'colors': grpc.unary_unary_rpc_method_handler(
          servicer.colors,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=plotserver__pb2.Colors.SerializeToString,
      ),
      'colormaps': grpc.unary_unary_rpc_method_handler(
          servicer.colormaps,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=plotserver__pb2.ColorMaps.SerializeToString,
      ),
      'symbols': grpc.unary_unary_rpc_method_handler(
          servicer.symbols,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=plotserver__pb2.Symbols.SerializeToString,
      ),
      'line': grpc.unary_unary_rpc_method_handler(
          servicer.line,
          request_deserializer=plotserver__pb2.NewLine.FromString,
          response_serializer=plotserver__pb2.Id.SerializeToString,
      ),
      'scatter': grpc.unary_unary_rpc_method_handler(
          servicer.scatter,
          request_deserializer=plotserver__pb2.NewScatter.FromString,
          response_serializer=plotserver__pb2.Id.SerializeToString,
      ),
      'histogram': grpc.unary_unary_rpc_method_handler(
          servicer.histogram,
          request_deserializer=plotserver__pb2.NewHistogram.FromString,
          response_serializer=plotserver__pb2.Id.SerializeToString,
      ),
      'raster': grpc.unary_unary_rpc_method_handler(
          servicer.raster,
          request_deserializer=plotserver__pb2.NewRaster.FromString,
          response_serializer=plotserver__pb2.Id.SerializeToString,
      ),
      'setlabel': grpc.unary_unary_rpc_method_handler(
          servicer.setlabel,
          request_deserializer=plotserver__pb2.Label.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'erase': grpc.unary_unary_rpc_method_handler(
          servicer.erase,
          request_deserializer=plotserver__pb2.Id.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'close': grpc.unary_unary_rpc_method_handler(
          servicer.close,
          request_deserializer=plotserver__pb2.Id.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'release': grpc.unary_unary_rpc_method_handler(
          servicer.release,
          request_deserializer=plotserver__pb2.Id.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'hide': grpc.unary_unary_rpc_method_handler(
          servicer.hide,
          request_deserializer=plotserver__pb2.Id.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'show': grpc.unary_unary_rpc_method_handler(
          servicer.show,
          request_deserializer=plotserver__pb2.Id.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'loaddock': grpc.unary_unary_rpc_method_handler(
          servicer.loaddock,
          request_deserializer=plotserver__pb2.DockSpec.FromString,
          response_serializer=plotserver__pb2.Id.SerializeToString,
      ),
      'done': grpc.unary_unary_rpc_method_handler(
          servicer.done,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'rpc.gui.plotserver', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
