[project]
name = "notihub"
version = "0.1.8pre"
description = "Notihub is a Python library to manage and use different notification services."
authors = [{ name = "Juan Trujillo", email = "juan.trujillo@alternova.com" }]
requires-python = ">=3.8"
readme = "README.md"
license = { file = "LICENSE" }
keywords = [
    "notifications",
    "aws",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "boto3>=1.20.0,<2",
    "coverage>=7.6.1",
    "dotenv>=0.9.9,<0.10",
    "pytest-cov>=5.0.0",
    "pytest-xdist>=3.6.1",
    "python-decouple>=3.8",
    "pytest>=8.3.5",
]

[project.optional-dependencies]
dev = []

[project.urls]
Homepage = "https://github.com/Alternova-Inc/notihub"
Repository = "https://github.com/Alternova-Inc/notihub"

[tool.hatch.build.targets.sdist]
include = ["notihub"]

[tool.hatch.build.targets.wheel]
include = ["notihub"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 90
select = [
    "F",    # pyflakes
    "E",    # pycodestyle
    "W",    # pycodestyle
    "I",    # isort
    "Q"     # flake8-quotes
]
fix = true
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.extend-per-file-ignores]
"__init__.py" = ["ALL"]

[tool.flake8]
max-line-length = 90

[tool.black]
line-length = 90
extend-exclude = '''(__init__.py)'''
exclude = '''
    /(
        \.git
      | \.hg
      | \.mypy_cache
      | \.nox
      | \.tox
      | \.venv
      | _build
      | buck-out
      | build
      | dist
      | node_modules
      | venv
    )/
'''

[tool.isort]
profile = "black"
line_length = 90
known_first_party = "notihub/."
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"

[tool.pylint]
disable = [
    "import-outside-toplevel",
    "unused-argument",
    "duplicate-code",
    "too-many-arguments",
    "consider-using-f-string",
    "too-many-instance-attributes",
    "too-few-public-methods",
]
max-line-length = 90
ignore-patterns = [
    "LICENSE",
    "test_.*?py",
    "(.)*_test.py",
    "(.)*.yml",
    "(.)*.yaml",
    "Dockerfile",
    "(.)*.md",
    "(.)*.txt",
    "(.)*.ini",
    "(.)*.toml",
    "(.)*.lock"
    ]
ignore-paths = ["tests/*"]

[tool.bandit]
exclude_dirs = [".venv", "tests"]
skips = ["B307"]

[tool.pytest.ini_options]
pythonpath = ["notihub"]
addopts = [
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=85",
    "--strict-markers",
]
asyncio_mode = "auto"

[tool.coverage.run]
branch = true
source = ["notihub"]
omit = [
    "*Test*",
    "*/usr/local/lib*",
    "*/tests/*",
    "*/pytest/*",
    "*/fixtures/*",
]

[tool.coverage.report]
omit = [
    "*Test*",
    "*/usr/local/lib*",
    "*/tests/*",
    "*/pytest/*",
    "*/fixtures/*",
]
