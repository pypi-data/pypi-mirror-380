Metadata-Version: 2.4
Name: bohr-library
Version: 0.1.0
Summary: Python package to calculate energy levels, orbital radii, and electronic transitions for the Bohr model of hydrogen and hydrogen-like atoms, with educational visualizations.
Author-email: Angie Lorena Pineda Morales <anlopimo580@gmail.com>
License: MIT License
        
        Copyright (c) 2025 Angie Lorena Pineda Morales
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/angielorenapm/Bohr_Library
Project-URL: Bug Tracker, https://github.com/angielorenapm/Bohr_Library/issues
Project-URL: Documentation, https://github.com/angielorenapm/Bohr_Library/wiki
Keywords: bohr,physics,atomic-model,hydrogen,education
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Education
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.23
Requires-Dist: matplotlib>=3.7
Dynamic: license-file

# BohrAJJP

## Description

BohrAJJP is an educational Python project that demonstrates the Bohr model for hydrogen‑like (hydrogenoid) atoms. The code provides three focused utilities: an energy-level calculator for a single electron, a transition calculator that returns ΔE, photon energy, frequency and wavelength, and a visualizer that draws energy levels and classical circular orbits and writes them to image files. The implementation is intentionally simple and readable so it can be used as a teaching aid or a base for further extensions.

## Current state

The repository contains a working `src/` package with three main modules that can each be executed as standalone scripts. `energy.py` offers an interactive menu for computing the energy of an electron in level `n` using the Bohr formula. `transition.py` computes initial and final level energies, the energy difference, the photon frequency and wavelength for a given transition. `plot_orbits.py` generates and saves two PNG images (`energy_levels_plot.png` and `orbits_plot.png`) with a simple attempt to open them in the system default image viewer; in headless environments the viewer call fails gracefully and the image files remain saved.

Basic input validation (positive integers for `Z` and `n`) and simple exception handling are implemented. Physical constants are included directly in the modules with sufficient precision for pedagogical purposes.

## Objectives

The primary goal of this project is pedagogical: to show how the Bohr model predicts bound-state energies and spectral lines and to provide a visual intuition for how energy and orbital radius scale with principal quantum number `n` and nuclear charge `Z`. 

## Installation

A Python 3.8+ environment is recommended. Create and activate a virtual environment and install the plotting dependency:

```
python -m venv .venv
# Windows
.venv\Scripts\activate
# macOS / Linux
source .venv/bin/activate
```
The package has been uploaded to PiPy;:
The instalation process is as simple as this:
```
pip install BohrAJJP
```

## Usage and examples

Pending...
---
Authors: Angie Lorena Pineda, Juan Sebastián Acuña, Jose Luis Zamora, Juan Pablo Patiño.
