[project]
name = "ahorn-loader"
version = "0.2.0"
description = "Library and command-line application to interact with datasets in the Aachen Higher-Order Repository of Networks."
readme = "README.md"
authors = [
    { name = "Florian Frantzen", email = "frantzen@netsci.rwth-aachen.de" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
]
requires-python = ">=3.11"
dependencies = [
    "requests>=2.32.4",
    "typer>=0.16.0",
]

[project.scripts]
ahorn-loader = "ahorn_loader.cli:app"

[build-system]
requires = ["uv_build>=0.8.4,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "mypy>=1.17.1",
    "pytest>=8.4.1",
    "ruff>=0.12.7",
    "types-requests>=2.32.4",
]

[tool.mypy]
strict = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
log_cli_level = "INFO"
testpaths = ["tests"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "F", # pyflakes errors
    "E", # code style
    "W", # warnings
    "I", # import order
    "D", # pydocstyle rules
    "UP", # pyupgrade rules
    "YTT", # flake8-2020 rules
    "S", # bandit rules
    "BLE", # blind except
    "B", # bugbear rules
    "A", # builtin shadowing
    "COM", # comma rules
    "C4", # comprehensions
    "DTZ", # datetime rules
    "T10", # debugger calls
    "FA", # future annotations
    "ISC", # implicit str concatenation
    "ICN", # import conventions
    "LOG", # logging rules
    "G", # logging format rules
    "PIE", # pie rules
    "Q", # quote rules
    "RSE", # raise rules
    "RET", # return rules
    "SLOT", # slot rules
    "SIM", # code simplifications
    "TID", # tidy imports
    "TC", # type checking rules
    "PTH", # use pathlib
    "PD", # pandas rules
    "PLC", # pylint conventions
    "PLE", # pylint errors
    "FLY", # flynt
    "NPY", # numpy rules
    "PERF", # performance rules
    "FURB", # refurb
    "RUF", # miscellaneous rules
]
ignore = [
    "E501",    # line too long
    "COM812",  # trailing commas; conflict with `ruff format`
    "ISC001",  # implicitly single-line str concat; conflict with `ruff format`
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F403"]
"tests/**.py" = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
