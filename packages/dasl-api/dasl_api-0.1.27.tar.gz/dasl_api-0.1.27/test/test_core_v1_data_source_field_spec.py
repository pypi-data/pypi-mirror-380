# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.1.27
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.core_v1_data_source_field_spec import CoreV1DataSourceFieldSpec

class TestCoreV1DataSourceFieldSpec(unittest.TestCase):
    """CoreV1DataSourceFieldSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoreV1DataSourceFieldSpec:
        """Test CoreV1DataSourceFieldSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoreV1DataSourceFieldSpec`
        """
        model = CoreV1DataSourceFieldSpec()
        if include_optional:
            return CoreV1DataSourceFieldSpec(
                name = '',
                comment = '',
                var_assert = [
                    dasl_api.models.core_v1_data_source_field_spec_assert_inner.core_v1_DataSource_FieldSpec_assert_inner(
                        expr = '', 
                        message = '', )
                    ],
                var_from = '',
                alias = '',
                expr = '',
                literal = '',
                join = dasl_api.models.core_v1_data_source_field_spec_join.core_v1_DataSource_FieldSpec_join(
                    with_table = '', 
                    with_csv = dasl_api.models.core_v1_data_source_field_spec_join_with_csv.core_v1_DataSource_FieldSpec_join_withCSV(
                        path = '', ), 
                    lhs = '', 
                    rhs = '', 
                    select = '', )
            )
        else:
            return CoreV1DataSourceFieldSpec(
        )
        """

    def testCoreV1DataSourceFieldSpec(self):
        """Test CoreV1DataSourceFieldSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
