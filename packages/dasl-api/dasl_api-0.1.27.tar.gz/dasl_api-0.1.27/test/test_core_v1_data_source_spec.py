# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.1.27
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.core_v1_data_source_spec import CoreV1DataSourceSpec

class TestCoreV1DataSourceSpec(unittest.TestCase):
    """CoreV1DataSourceSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoreV1DataSourceSpec:
        """Test CoreV1DataSourceSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoreV1DataSourceSpec`
        """
        model = CoreV1DataSourceSpec()
        if include_optional:
            return CoreV1DataSourceSpec(
                target_medallion = '',
                source = '',
                source_type = '',
                schedule = dasl_api.models.core/v1/schedule.core.v1.Schedule(
                    at_least_every = '', 
                    exactly = '', 
                    continuous = True, 
                    compute_group = '', 
                    enabled = True, ),
                custom = dasl_api.models.core_v1_data_source_spec_custom.core_v1_DataSourceSpec_custom(
                    notebook = '', ),
                epoch = 56,
                use_preset = '',
                use_preset_version = 56,
                primary_key = dasl_api.models.core/v1/data_source_primary_key_spec.core.v1.DataSourcePrimaryKeySpec(
                    time_column = '', 
                    additional_columns = [
                        ''
                        ], ),
                autoloader = dasl_api.models.core/v1/data_source_autoloader_spec.core.v1.DataSourceAutoloaderSpec(
                    format = '', 
                    location = '', 
                    schema_file = '', 
                    schema = '', 
                    cloud_files = dasl_api.models.content_v1_datasource_preset_autoloader_cloud_files.content_v1_DatasourcePreset_autoloader_cloudFiles(
                        schema_hints_file = '', 
                        schema_hints = '', ), ),
                compute_mode = 'high',
                bronze = dasl_api.models.core_v1_data_source_spec_bronze.core_v1_DataSourceSpec_bronze(
                    clustering = dasl_api.models.core_v1_data_source_spec_bronze_clustering.core_v1_DataSourceSpec_bronze_clustering(
                        column_names = [
                            ''
                            ], 
                        time_column = '', ), 
                    bronze_table = '', 
                    skip_bronze_loading = True, 
                    load_as_single_variant = True, 
                    pre_transform = [
                        [
                            ''
                            ]
                        ], ),
                silver = dasl_api.models.core_v1_data_source_spec_silver.core_v1_DataSourceSpec_silver(
                    bronze_tables = [
                        dasl_api.models.core_v1_data_source_spec_silver_bronze_tables_inner.core_v1_DataSourceSpec_silver_bronzeTables_inner(
                            name = '', 
                            streaming = True, 
                            watermark = dasl_api.models.core_v1_data_source_spec_silver_bronze_tables_inner_watermark.core_v1_DataSourceSpec_silver_bronzeTables_inner_watermark(
                                event_time_column = '', 
                                delay_threshold = '', 
                                drop_duplicates = [
                                    ''
                                    ], ), 
                            alias = '', 
                            join_type = '', 
                            join_expr = '', )
                        ], 
                    pre_transform = dasl_api.models.core_v1_data_source_spec_silver_pre_transform.core_v1_DataSourceSpec_silver_preTransform(
                        use_preset = '', 
                        skip_pre_transform = True, 
                        custom = dasl_api.models.core_v1_data_source_spec_silver_pre_transform_custom.core_v1_DataSourceSpec_silver_preTransform_custom(
                            function = '', 
                            options = {
                                'key' : ''
                                }, ), 
                        filter = '', 
                        post_filter = '', 
                        preset_overrides = dasl_api.models.core_v1_data_source_spec_silver_pre_transform_preset_overrides.core_v1_DataSourceSpec_silver_preTransform_presetOverrides(
                            omit_fields = [
                                ''
                                ], ), 
                        add_fields = [
                            dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                                name = '', 
                                comment = '', 
                                assert = [
                                    dasl_api.models.core_v1_data_source_field_spec_assert_inner.core_v1_DataSource_FieldSpec_assert_inner(
                                        expr = '', 
                                        message = '', )
                                    ], 
                                from = '', 
                                alias = '', 
                                expr = '', 
                                literal = '', 
                                join = dasl_api.models.core_v1_data_source_field_spec_join.core_v1_DataSource_FieldSpec_join(
                                    with_table = '', 
                                    with_csv = dasl_api.models.core_v1_data_source_field_spec_join_with_csv.core_v1_DataSource_FieldSpec_join_withCSV(
                                        path = '', ), 
                                    lhs = '', 
                                    rhs = '', 
                                    select = '', ), )
                            ], 
                        utils = null, ), 
                    transform = dasl_api.models.core_v1_data_source_spec_silver_transform.core_v1_DataSourceSpec_silver_transform(
                        skip_silver_transform = True, 
                        do_not_materialize = True, ), ),
                gold = dasl_api.models.core_v1_data_source_spec_gold.core_v1_DataSourceSpec_gold(
                    preset_overrides = dasl_api.models.core_v1_data_source_spec_gold_preset_overrides.core_v1_DataSourceSpec_gold_presetOverrides(
                        omit_tables = [
                            ''
                            ], 
                        modify_tables = [
                            dasl_api.models.core_v1_data_source_spec_gold_preset_overrides_modify_tables_inner.core_v1_DataSourceSpec_gold_presetOverrides_modifyTables_inner(
                                name = '', 
                                source_table = '', 
                                custom = dasl_api.models.core_v1_data_source_spec_silver_transform_preset_overrides_modify_tables_inner_custom.core_v1_DataSourceSpec_silver_transform_presetOverrides_modifyTables_inner_custom(
                                    function = '', 
                                    options = {
                                        'key' : ''
                                        }, ), 
                                omit_fields = [
                                    ''
                                    ], 
                                add_fields = [
                                    dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                                        name = '', 
                                        comment = '', 
                                        assert = [
                                            dasl_api.models.core_v1_data_source_field_spec_assert_inner.core_v1_DataSource_FieldSpec_assert_inner(
                                                expr = '', 
                                                message = '', )
                                            ], 
                                        from = '', 
                                        alias = '', 
                                        expr = '', 
                                        literal = '', 
                                        join = dasl_api.models.core_v1_data_source_field_spec_join.core_v1_DataSource_FieldSpec_join(
                                            with_table = '', 
                                            with_csv = dasl_api.models.core_v1_data_source_field_spec_join_with_csv.core_v1_DataSource_FieldSpec_join_withCSV(
                                                path = '', ), 
                                            lhs = '', 
                                            rhs = '', 
                                            select = '', ), )
                                    ], 
                                filter = '', 
                                post_filter = '', )
                            ], 
                        add_tables = [
                            dasl_api.models.core_v1_data_source_spec_gold_preset_overrides_add_tables_inner.core_v1_DataSourceSpec_gold_presetOverrides_addTables_inner(
                                name = '', 
                                source_table = '', 
                                filter = '', 
                                post_filter = '', 
                                fields = [
                                    dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                                        name = '', 
                                        comment = '', 
                                        from = '', 
                                        alias = '', 
                                        expr = '', 
                                        literal = '', )
                                    ], )
                            ], ), )
            )
        else:
            return CoreV1DataSourceSpec(
                schedule = dasl_api.models.core/v1/schedule.core.v1.Schedule(
                    at_least_every = '', 
                    exactly = '', 
                    continuous = True, 
                    compute_group = '', 
                    enabled = True, ),
        )
        """

    def testCoreV1DataSourceSpec(self):
        """Test CoreV1DataSourceSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
