# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.1.27
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.workspace_v1_export_config import WorkspaceV1ExportConfig

class TestWorkspaceV1ExportConfig(unittest.TestCase):
    """WorkspaceV1ExportConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WorkspaceV1ExportConfig:
        """Test WorkspaceV1ExportConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WorkspaceV1ExportConfig`
        """
        model = WorkspaceV1ExportConfig()
        if include_optional:
            return WorkspaceV1ExportConfig(
                destination = 'webhook',
                export_open_only = True,
                webhook_config = dasl_api.models.workspace_v1_export_config_webhook_config.workspace_v1_ExportConfig_webhookConfig(
                    destination = dasl_api.models.workspace_v1_export_config_webhook_config_destination.workspace_v1_ExportConfig_webhookConfig_destination(
                        value = '', 
                        scope = '', 
                        key = '', ), ),
                slack_config = dasl_api.models.workspace_v1_export_config_slack_config.workspace_v1_ExportConfig_slackConfig(
                    token = dasl_api.models.workspace_v1_export_config_slack_config_token.workspace_v1_ExportConfig_slackConfig_token(
                        value = '', 
                        scope = '', 
                        key = '', ), 
                    channel = '', 
                    url = '', 
                    message = '', ),
                jira_config = dasl_api.models.workspace_v1_export_config_jira_config.workspace_v1_ExportConfig_jiraConfig(
                    server = '', 
                    project = '', 
                    issue_type = '', 
                    summary = '', 
                    email = '', 
                    token = dasl_api.models.workspace_v1_export_config_jira_config_token.workspace_v1_ExportConfig_jiraConfig_token(
                        value = '', 
                        scope = '', 
                        key = '', ), ),
                service_now_config = dasl_api.models.workspace_v1_export_config_service_now_config.workspace_v1_ExportConfig_serviceNowConfig(
                    server = '', 
                    source_expr = '', 
                    node_expr = '', 
                    severity_expr = '', 
                    event_type = '', 
                    user_id = '', 
                    password = dasl_api.models.workspace_v1_export_config_service_now_config_password.workspace_v1_ExportConfig_serviceNowConfig_password(
                        value = '', 
                        scope = '', 
                        key = '', ), )
            )
        else:
            return WorkspaceV1ExportConfig(
        )
        """

    def testWorkspaceV1ExportConfig(self):
        """Test WorkspaceV1ExportConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
