# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.1.27
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.dbui_v1_transform_request import DbuiV1TransformRequest

class TestDbuiV1TransformRequest(unittest.TestCase):
    """DbuiV1TransformRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DbuiV1TransformRequest:
        """Test DbuiV1TransformRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DbuiV1TransformRequest`
        """
        model = DbuiV1TransformRequest()
        if include_optional:
            return DbuiV1TransformRequest(
                ingestion = dasl_api.models.dbui_v1_transform_request_ingestion.dbui_v1_TransformRequest_ingestion(
                    input = dasl_api.models.dbui_v1_transform_request_ingestion_input.dbui_v1_TransformRequest_ingestion_input(
                        columns = [
                            dasl_api.models.dbui/v1/table_column_details.dbui.v1.TableColumnDetails(
                                name = '', 
                                type_name = '', 
                                type_detail = '', 
                                position = 56, 
                                nullable = True, )
                            ], 
                        data = [
                            {
                                'key' : ''
                                }
                            ], ), 
                    autoloader_input = null, 
                    load_as_single_variant = True, 
                    additional_input_tables = [
                        dasl_api.models.dbui_v1_transform_request_ingestion_additional_input_tables_inner.dbui_v1_TransformRequest_ingestion_additionalInputTables_inner(
                            name = '', 
                            alias = '', 
                            join_type = '', 
                            join_expr = '', )
                        ], 
                    pre_transform = [
                        [
                            ''
                            ]
                        ], ),
                use_preset = '',
                use_preset_version = 56,
                transforms = [
                    dasl_api.models.dbui_v1_transform_request_transforms_inner.dbui_v1_TransformRequest_transforms_inner(
                        transform_type = 'SilverPreTransform', 
                        use_preset_table = '', 
                        filter = '', 
                        post_filter = '', 
                        preset_overrides = dasl_api.models.dbui_v1_transform_request_transforms_inner_preset_overrides.dbui_v1_TransformRequest_transforms_inner_presetOverrides(
                            omit_fields = [
                                ''
                                ], ), 
                        add_fields = [
                            dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                                name = '', 
                                comment = '', 
                                assert = [
                                    dasl_api.models.core_v1_data_source_field_spec_assert_inner.core_v1_DataSource_FieldSpec_assert_inner(
                                        expr = '', 
                                        message = '', )
                                    ], 
                                from = '', 
                                alias = '', 
                                expr = '', 
                                literal = '', 
                                join = dasl_api.models.core_v1_data_source_field_spec_join.core_v1_DataSource_FieldSpec_join(
                                    with_table = '', 
                                    with_csv = dasl_api.models.core_v1_data_source_field_spec_join_with_csv.core_v1_DataSource_FieldSpec_join_withCSV(
                                        path = '', ), 
                                    lhs = '', 
                                    rhs = '', 
                                    select = '', ), )
                            ], 
                        utils = null, )
                    ]
            )
        else:
            return DbuiV1TransformRequest(
                transforms = [
                    dasl_api.models.dbui_v1_transform_request_transforms_inner.dbui_v1_TransformRequest_transforms_inner(
                        transform_type = 'SilverPreTransform', 
                        use_preset_table = '', 
                        filter = '', 
                        post_filter = '', 
                        preset_overrides = dasl_api.models.dbui_v1_transform_request_transforms_inner_preset_overrides.dbui_v1_TransformRequest_transforms_inner_presetOverrides(
                            omit_fields = [
                                ''
                                ], ), 
                        add_fields = [
                            dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                                name = '', 
                                comment = '', 
                                assert = [
                                    dasl_api.models.core_v1_data_source_field_spec_assert_inner.core_v1_DataSource_FieldSpec_assert_inner(
                                        expr = '', 
                                        message = '', )
                                    ], 
                                from = '', 
                                alias = '', 
                                expr = '', 
                                literal = '', 
                                join = dasl_api.models.core_v1_data_source_field_spec_join.core_v1_DataSource_FieldSpec_join(
                                    with_table = '', 
                                    with_csv = dasl_api.models.core_v1_data_source_field_spec_join_with_csv.core_v1_DataSource_FieldSpec_join_withCSV(
                                        path = '', ), 
                                    lhs = '', 
                                    rhs = '', 
                                    select = '', ), )
                            ], 
                        utils = null, )
                    ],
        )
        """

    def testDbuiV1TransformRequest(self):
        """Test DbuiV1TransformRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
