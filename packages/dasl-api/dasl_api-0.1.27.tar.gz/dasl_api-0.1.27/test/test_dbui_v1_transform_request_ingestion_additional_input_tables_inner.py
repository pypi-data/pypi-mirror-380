# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.1.27
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.dbui_v1_transform_request_ingestion_additional_input_tables_inner import DbuiV1TransformRequestIngestionAdditionalInputTablesInner

class TestDbuiV1TransformRequestIngestionAdditionalInputTablesInner(unittest.TestCase):
    """DbuiV1TransformRequestIngestionAdditionalInputTablesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DbuiV1TransformRequestIngestionAdditionalInputTablesInner:
        """Test DbuiV1TransformRequestIngestionAdditionalInputTablesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DbuiV1TransformRequestIngestionAdditionalInputTablesInner`
        """
        model = DbuiV1TransformRequestIngestionAdditionalInputTablesInner()
        if include_optional:
            return DbuiV1TransformRequestIngestionAdditionalInputTablesInner(
                name = '',
                alias = '',
                join_type = '',
                join_expr = ''
            )
        else:
            return DbuiV1TransformRequestIngestionAdditionalInputTablesInner(
                name = '',
                alias = '',
                join_type = '',
                join_expr = '',
        )
        """

    def testDbuiV1TransformRequestIngestionAdditionalInputTablesInner(self):
        """Test DbuiV1TransformRequestIngestionAdditionalInputTablesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
