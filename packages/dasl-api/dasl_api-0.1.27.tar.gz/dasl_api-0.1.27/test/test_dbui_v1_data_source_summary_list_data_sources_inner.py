# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.1.27
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.dbui_v1_data_source_summary_list_data_sources_inner import DbuiV1DataSourceSummaryListDataSourcesInner

class TestDbuiV1DataSourceSummaryListDataSourcesInner(unittest.TestCase):
    """DbuiV1DataSourceSummaryListDataSourcesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DbuiV1DataSourceSummaryListDataSourcesInner:
        """Test DbuiV1DataSourceSummaryListDataSourcesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DbuiV1DataSourceSummaryListDataSourcesInner`
        """
        model = DbuiV1DataSourceSummaryListDataSourcesInner()
        if include_optional:
            return DbuiV1DataSourceSummaryListDataSourcesInner(
                name = '',
                source = '',
                source_type = '',
                description = '',
                title = '',
                author = '',
                icon_url = '',
                enabled = True,
                alerts = dasl_api.models.dbui_v1_data_source_summary_list_data_sources_inner_alerts.dbui_v1_DataSourceSummaryList_dataSources_inner_alerts(
                    alerts_last7days = 1.337, 
                    alerts_preceding7days = 1.337, 
                    alerts_last24hours = 1.337, 
                    alerts_preceding24hours = 1.337, 
                    currently_open = 1.337, ),
                metrics = dasl_api.models.dbui_v1_data_source_summary_list_rollup_metrics.dbui_v1_DataSourceSummaryList_rollupMetrics(
                    events_last7days = 1.337, 
                    events_preceding7days = 1.337, 
                    events_last24hours = 1.337, 
                    events_preceding24hours = 1.337, 
                    events_spark_line = [
                        1.337
                        ], )
            )
        else:
            return DbuiV1DataSourceSummaryListDataSourcesInner(
                name = '',
                source = '',
                source_type = '',
                description = '',
                title = '',
                author = '',
                icon_url = '',
                enabled = True,
        )
        """

    def testDbuiV1DataSourceSummaryListDataSourcesInner(self):
        """Test DbuiV1DataSourceSummaryListDataSourcesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
