# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.1.27
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.core_v1_data_source import CoreV1DataSource

class TestCoreV1DataSource(unittest.TestCase):
    """CoreV1DataSource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoreV1DataSource:
        """Test CoreV1DataSource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoreV1DataSource`
        """
        model = CoreV1DataSource()
        if include_optional:
            return CoreV1DataSource(
                api_version = '',
                kind = '',
                metadata = dasl_api.models.common/v1/object_meta.common.v1.ObjectMeta(
                    name = '', 
                    workspace = '', 
                    comment = '', 
                    annotations = {
                        'key' : ''
                        }, 
                    created_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_by = '', 
                    modified_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_successful_run_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    modified_by = '', 
                    version = 56, 
                    deleted = True, 
                    resource_status = 'none', 
                    ui_status = '', 
                    client_of_origin = '', ),
                job_meta = dasl_api.models.common/v1/job_meta.common.v1.JobMeta(
                    last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_started = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_completed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_deadline = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    job_status = 'idle', ),
                spec = dasl_api.models.core/v1/data_source_spec.core.v1.DataSourceSpec(
                    target_medallion = '', 
                    source = '', 
                    source_type = '', 
                    schedule = dasl_api.models.core/v1/schedule.core.v1.Schedule(
                        at_least_every = '', 
                        exactly = '', 
                        continuous = True, 
                        compute_group = '', 
                        enabled = True, ), 
                    custom = dasl_api.models.core_v1_data_source_spec_custom.core_v1_DataSourceSpec_custom(
                        notebook = '', ), 
                    epoch = 56, 
                    use_preset = '', 
                    use_preset_version = 56, 
                    primary_key = null, 
                    autoloader = null, 
                    compute_mode = 'high', 
                    bronze = dasl_api.models.core_v1_data_source_spec_bronze.core_v1_DataSourceSpec_bronze(
                        clustering = dasl_api.models.core_v1_data_source_spec_bronze_clustering.core_v1_DataSourceSpec_bronze_clustering(
                            column_names = [
                                ''
                                ], 
                            time_column = '', ), 
                        bronze_table = '', 
                        skip_bronze_loading = True, 
                        load_as_single_variant = True, 
                        pre_transform = [
                            [
                                ''
                                ]
                            ], ), 
                    silver = dasl_api.models.core_v1_data_source_spec_silver.core_v1_DataSourceSpec_silver(
                        bronze_tables = [
                            dasl_api.models.core_v1_data_source_spec_silver_bronze_tables_inner.core_v1_DataSourceSpec_silver_bronzeTables_inner(
                                name = '', 
                                streaming = True, 
                                watermark = dasl_api.models.core_v1_data_source_spec_silver_bronze_tables_inner_watermark.core_v1_DataSourceSpec_silver_bronzeTables_inner_watermark(
                                    event_time_column = '', 
                                    delay_threshold = '', 
                                    drop_duplicates = [
                                        ''
                                        ], ), 
                                alias = '', 
                                join_type = '', 
                                join_expr = '', )
                            ], 
                        transform = dasl_api.models.core_v1_data_source_spec_silver_transform.core_v1_DataSourceSpec_silver_transform(
                            skip_silver_transform = True, 
                            do_not_materialize = True, 
                            preset_overrides = dasl_api.models.core_v1_data_source_spec_silver_transform_preset_overrides.core_v1_DataSourceSpec_silver_transform_presetOverrides(
                                modify_tables = [
                                    dasl_api.models.core_v1_data_source_spec_silver_transform_preset_overrides_modify_tables_inner.core_v1_DataSourceSpec_silver_transform_presetOverrides_modifyTables_inner(
                                        name = '', 
                                        omit_fields = [
                                            ''
                                            ], 
                                        override_liquid_columns = [
                                            ''
                                            ], 
                                        add_fields = [
                                            dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                                                name = '', 
                                                comment = '', 
                                                assert = [
                                                    dasl_api.models.core_v1_data_source_field_spec_assert_inner.core_v1_DataSource_FieldSpec_assert_inner(
                                                        expr = '', 
                                                        message = '', )
                                                    ], 
                                                from = '', 
                                                alias = '', 
                                                expr = '', 
                                                literal = '', 
                                                join = dasl_api.models.core_v1_data_source_field_spec_join.core_v1_DataSource_FieldSpec_join(
                                                    with_table = '', 
                                                    with_csv = dasl_api.models.core_v1_data_source_field_spec_join_with_csv.core_v1_DataSource_FieldSpec_join_withCSV(
                                                        path = '', ), 
                                                    lhs = '', 
                                                    rhs = '', 
                                                    select = '', ), )
                                            ], 
                                        filter = '', 
                                        post_filter = '', 
                                        utils = null, )
                                    ], 
                                omit_tables = [
                                    ''
                                    ], 
                                add_tables = [
                                    dasl_api.models.core_v1_data_source_spec_silver_transform_preset_overrides_add_tables_inner.core_v1_DataSourceSpec_silver_transform_presetOverrides_addTables_inner(
                                        name = '', 
                                        filter = '', 
                                        post_filter = '', 
                                        fields = [
                                            dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                                                name = '', 
                                                comment = '', 
                                                from = '', 
                                                alias = '', 
                                                expr = '', 
                                                literal = '', )
                                            ], 
                                        utils = null, )
                                    ], ), ), ), 
                    gold = dasl_api.models.core_v1_data_source_spec_gold.core_v1_DataSourceSpec_gold(), ),
                status = dasl_api.models.core/v1/resource_status.core.v1.ResourceStatus(
                    job_id = 56, 
                    job_name = '', 
                    enabled = True, 
                    notebook_path = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    job_status = 'unscheduled', 
                    events = [
                        null
                        ], )
            )
        else:
            return CoreV1DataSource(
                spec = dasl_api.models.core/v1/data_source_spec.core.v1.DataSourceSpec(
                    target_medallion = '', 
                    source = '', 
                    source_type = '', 
                    schedule = dasl_api.models.core/v1/schedule.core.v1.Schedule(
                        at_least_every = '', 
                        exactly = '', 
                        continuous = True, 
                        compute_group = '', 
                        enabled = True, ), 
                    custom = dasl_api.models.core_v1_data_source_spec_custom.core_v1_DataSourceSpec_custom(
                        notebook = '', ), 
                    epoch = 56, 
                    use_preset = '', 
                    use_preset_version = 56, 
                    primary_key = null, 
                    autoloader = null, 
                    compute_mode = 'high', 
                    bronze = dasl_api.models.core_v1_data_source_spec_bronze.core_v1_DataSourceSpec_bronze(
                        clustering = dasl_api.models.core_v1_data_source_spec_bronze_clustering.core_v1_DataSourceSpec_bronze_clustering(
                            column_names = [
                                ''
                                ], 
                            time_column = '', ), 
                        bronze_table = '', 
                        skip_bronze_loading = True, 
                        load_as_single_variant = True, 
                        pre_transform = [
                            [
                                ''
                                ]
                            ], ), 
                    silver = dasl_api.models.core_v1_data_source_spec_silver.core_v1_DataSourceSpec_silver(
                        bronze_tables = [
                            dasl_api.models.core_v1_data_source_spec_silver_bronze_tables_inner.core_v1_DataSourceSpec_silver_bronzeTables_inner(
                                name = '', 
                                streaming = True, 
                                watermark = dasl_api.models.core_v1_data_source_spec_silver_bronze_tables_inner_watermark.core_v1_DataSourceSpec_silver_bronzeTables_inner_watermark(
                                    event_time_column = '', 
                                    delay_threshold = '', 
                                    drop_duplicates = [
                                        ''
                                        ], ), 
                                alias = '', 
                                join_type = '', 
                                join_expr = '', )
                            ], 
                        transform = dasl_api.models.core_v1_data_source_spec_silver_transform.core_v1_DataSourceSpec_silver_transform(
                            skip_silver_transform = True, 
                            do_not_materialize = True, 
                            preset_overrides = dasl_api.models.core_v1_data_source_spec_silver_transform_preset_overrides.core_v1_DataSourceSpec_silver_transform_presetOverrides(
                                modify_tables = [
                                    dasl_api.models.core_v1_data_source_spec_silver_transform_preset_overrides_modify_tables_inner.core_v1_DataSourceSpec_silver_transform_presetOverrides_modifyTables_inner(
                                        name = '', 
                                        omit_fields = [
                                            ''
                                            ], 
                                        override_liquid_columns = [
                                            ''
                                            ], 
                                        add_fields = [
                                            dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                                                name = '', 
                                                comment = '', 
                                                assert = [
                                                    dasl_api.models.core_v1_data_source_field_spec_assert_inner.core_v1_DataSource_FieldSpec_assert_inner(
                                                        expr = '', 
                                                        message = '', )
                                                    ], 
                                                from = '', 
                                                alias = '', 
                                                expr = '', 
                                                literal = '', 
                                                join = dasl_api.models.core_v1_data_source_field_spec_join.core_v1_DataSource_FieldSpec_join(
                                                    with_table = '', 
                                                    with_csv = dasl_api.models.core_v1_data_source_field_spec_join_with_csv.core_v1_DataSource_FieldSpec_join_withCSV(
                                                        path = '', ), 
                                                    lhs = '', 
                                                    rhs = '', 
                                                    select = '', ), )
                                            ], 
                                        filter = '', 
                                        post_filter = '', 
                                        utils = null, )
                                    ], 
                                omit_tables = [
                                    ''
                                    ], 
                                add_tables = [
                                    dasl_api.models.core_v1_data_source_spec_silver_transform_preset_overrides_add_tables_inner.core_v1_DataSourceSpec_silver_transform_presetOverrides_addTables_inner(
                                        name = '', 
                                        filter = '', 
                                        post_filter = '', 
                                        fields = [
                                            dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                                                name = '', 
                                                comment = '', 
                                                from = '', 
                                                alias = '', 
                                                expr = '', 
                                                literal = '', )
                                            ], 
                                        utils = null, )
                                    ], ), ), ), 
                    gold = dasl_api.models.core_v1_data_source_spec_gold.core_v1_DataSourceSpec_gold(), ),
        )
        """

    def testCoreV1DataSource(self):
        """Test CoreV1DataSource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
