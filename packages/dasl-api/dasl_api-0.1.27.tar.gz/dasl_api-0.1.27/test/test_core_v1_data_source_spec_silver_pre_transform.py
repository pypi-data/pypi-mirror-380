# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.1.27
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.core_v1_data_source_spec_silver_pre_transform import CoreV1DataSourceSpecSilverPreTransform

class TestCoreV1DataSourceSpecSilverPreTransform(unittest.TestCase):
    """CoreV1DataSourceSpecSilverPreTransform unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoreV1DataSourceSpecSilverPreTransform:
        """Test CoreV1DataSourceSpecSilverPreTransform
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoreV1DataSourceSpecSilverPreTransform`
        """
        model = CoreV1DataSourceSpecSilverPreTransform()
        if include_optional:
            return CoreV1DataSourceSpecSilverPreTransform(
                use_preset = '',
                skip_pre_transform = True,
                custom = dasl_api.models.core_v1_data_source_spec_silver_pre_transform_custom.core_v1_DataSourceSpec_silver_preTransform_custom(
                    function = '', 
                    options = {
                        'key' : ''
                        }, ),
                filter = '',
                post_filter = '',
                preset_overrides = dasl_api.models.core_v1_data_source_spec_silver_pre_transform_preset_overrides.core_v1_DataSourceSpec_silver_preTransform_presetOverrides(
                    omit_fields = [
                        ''
                        ], ),
                add_fields = [
                    dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                        name = '', 
                        comment = '', 
                        assert = [
                            dasl_api.models.core_v1_data_source_field_spec_assert_inner.core_v1_DataSource_FieldSpec_assert_inner(
                                expr = '', 
                                message = '', )
                            ], 
                        from = '', 
                        alias = '', 
                        expr = '', 
                        literal = '', 
                        join = dasl_api.models.core_v1_data_source_field_spec_join.core_v1_DataSource_FieldSpec_join(
                            with_table = '', 
                            with_csv = dasl_api.models.core_v1_data_source_field_spec_join_with_csv.core_v1_DataSource_FieldSpec_join_withCSV(
                                path = '', ), 
                            lhs = '', 
                            rhs = '', 
                            select = '', ), )
                    ],
                utils = dasl_api.models.core/v1/data_source/field_utils.core.v1.DataSource.FieldUtils(
                    temporary_fields = [
                        dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                            name = '', 
                            comment = '', 
                            assert = [
                                dasl_api.models.core_v1_data_source_field_spec_assert_inner.core_v1_DataSource_FieldSpec_assert_inner(
                                    expr = '', 
                                    message = '', )
                                ], 
                            from = '', 
                            alias = '', 
                            expr = '', 
                            literal = '', 
                            join = dasl_api.models.core_v1_data_source_field_spec_join.core_v1_DataSource_FieldSpec_join(
                                with_table = '', 
                                with_csv = dasl_api.models.core_v1_data_source_field_spec_join_with_csv.core_v1_DataSource_FieldSpec_join_withCSV(
                                    path = '', ), 
                                lhs = '', 
                                rhs = '', 
                                select = '', ), )
                        ], 
                    unreferenced_columns = dasl_api.models.core_v1_data_source_field_utils_unreferenced_columns.core_v1_DataSource_FieldUtils_unreferencedColumns(
                        preserve = True, 
                        embed_column = '', 
                        embed_column_type = '', 
                        omit_columns = [
                            ''
                            ], 
                        duplicate_prefix = '', ), 
                    json_extract = [
                        dasl_api.models.core_v1_data_source_field_utils_json_extract_inner.core_v1_DataSource_FieldUtils_jsonExtract_inner(
                            source = '', 
                            omit_fields = [
                                ''
                                ], 
                            duplicate_prefix = '', 
                            embed_column = '', )
                        ], )
            )
        else:
            return CoreV1DataSourceSpecSilverPreTransform(
        )
        """

    def testCoreV1DataSourceSpecSilverPreTransform(self):
        """Test CoreV1DataSourceSpecSilverPreTransform"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
