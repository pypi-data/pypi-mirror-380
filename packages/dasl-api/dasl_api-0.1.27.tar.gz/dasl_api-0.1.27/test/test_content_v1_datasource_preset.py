# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.1.27
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.content_v1_datasource_preset import ContentV1DatasourcePreset

class TestContentV1DatasourcePreset(unittest.TestCase):
    """ContentV1DatasourcePreset unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContentV1DatasourcePreset:
        """Test ContentV1DatasourcePreset
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContentV1DatasourcePreset`
        """
        model = ContentV1DatasourcePreset()
        if include_optional:
            return ContentV1DatasourcePreset(
                name = '',
                author = '',
                description = '',
                title = '',
                icon_url = '',
                primary_key = dasl_api.models.core/v1/data_source_primary_key_spec.core.v1.DataSourcePrimaryKeySpec(
                    time_column = '', 
                    additional_columns = [
                        ''
                        ], ),
                autoloader = dasl_api.models.content_v1_datasource_preset_autoloader.content_v1_DatasourcePreset_autoloader(
                    format = '', 
                    schema_file = '', 
                    schema = '', 
                    cloud_files = dasl_api.models.content_v1_datasource_preset_autoloader_cloud_files.content_v1_DatasourcePreset_autoloader_cloudFiles(
                        schema_hints_file = '', 
                        schema_hints = '', ), ),
                bronze = dasl_api.models.content_v1_datasource_preset_bronze.content_v1_DatasourcePreset_bronze(
                    load_as_single_variant = True, 
                    pre_transform = [
                        [
                            ''
                            ]
                        ], ),
                silver = dasl_api.models.content_v1_datasource_preset_silver.content_v1_DatasourcePreset_silver(
                    pre_transform = [
                        dasl_api.models.content_v1_datasource_preset_silver_pre_transform_inner.content_v1_DatasourcePreset_silver_preTransform_inner(
                            name = '', 
                            filter = '', 
                            post_filter = '', 
                            fields = [
                                dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                                    name = '', 
                                    comment = '', 
                                    assert = [
                                        dasl_api.models.core_v1_data_source_field_spec_assert_inner.core_v1_DataSource_FieldSpec_assert_inner(
                                            expr = '', 
                                            message = '', )
                                        ], 
                                    from = '', 
                                    alias = '', 
                                    expr = '', 
                                    literal = '', 
                                    join = dasl_api.models.core_v1_data_source_field_spec_join.core_v1_DataSource_FieldSpec_join(
                                        with_table = '', 
                                        with_csv = dasl_api.models.core_v1_data_source_field_spec_join_with_csv.core_v1_DataSource_FieldSpec_join_withCSV(
                                            path = '', ), 
                                        lhs = '', 
                                        rhs = '', 
                                        select = '', ), )
                                ], 
                            utils = null, )
                        ], 
                    transform = [
                        dasl_api.models.content_v1_datasource_preset_silver_transform_inner.content_v1_DatasourcePreset_silver_transform_inner(
                            name = '', 
                            filter = '', 
                            post_filter = '', 
                            utils = null, )
                        ], ),
                gold = [
                    dasl_api.models.content_v1_datasource_preset_gold_inner.content_v1_DatasourcePreset_gold_inner(
                        name = '', 
                        input = '', 
                        filter = '', 
                        post_filter = '', 
                        fields = [
                            dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                                name = '', 
                                comment = '', 
                                assert = [
                                    dasl_api.models.core_v1_data_source_field_spec_assert_inner.core_v1_DataSource_FieldSpec_assert_inner(
                                        expr = '', 
                                        message = '', )
                                    ], 
                                from = '', 
                                alias = '', 
                                expr = '', 
                                literal = '', 
                                join = dasl_api.models.core_v1_data_source_field_spec_join.core_v1_DataSource_FieldSpec_join(
                                    with_table = '', 
                                    with_csv = dasl_api.models.core_v1_data_source_field_spec_join_with_csv.core_v1_DataSource_FieldSpec_join_withCSV(
                                        path = '', ), 
                                    lhs = '', 
                                    rhs = '', 
                                    select = '', ), )
                            ], )
                    ],
                version_number = 56,
                latest_version = 56,
                bronze_event_expr = '',
                silver_table_event_mappings = {
                    'key' : ''
                    },
                gold_table_event_mappings = {
                    'key' : ''
                    }
            )
        else:
            return ContentV1DatasourcePreset(
        )
        """

    def testContentV1DatasourcePreset(self):
        """Test ContentV1DatasourcePreset"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
