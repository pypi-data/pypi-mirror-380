# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.1.27
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.dbui_v1_promote_event_request import DbuiV1PromoteEventRequest

class TestDbuiV1PromoteEventRequest(unittest.TestCase):
    """DbuiV1PromoteEventRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DbuiV1PromoteEventRequest:
        """Test DbuiV1PromoteEventRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DbuiV1PromoteEventRequest`
        """
        model = DbuiV1PromoteEventRequest()
        if include_optional:
            return DbuiV1PromoteEventRequest(
                summary = '',
                context = {
                    'key' : ''
                    },
                state = 'Open',
                assigned_to = '',
                observables = [
                    dasl_api.models.dbui/v1/observable_instance.dbui.v1.ObservableInstance(
                        observable_id = '', 
                        timestamp = '', 
                        observable_type = '', 
                        observable_value = '', 
                        notable_id = '', 
                        rule_name = '', 
                        risk_adjustment = 1.337, 
                        adjustment_type = '', 
                        relationship = '', 
                        impact = 1.337, 
                        confidence = 1.337, )
                    ]
            )
        else:
            return DbuiV1PromoteEventRequest(
        )
        """

    def testDbuiV1PromoteEventRequest(self):
        """Test DbuiV1PromoteEventRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
