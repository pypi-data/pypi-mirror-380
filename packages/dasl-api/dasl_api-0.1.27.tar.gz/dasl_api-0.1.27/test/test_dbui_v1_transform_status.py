# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.1.27
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.dbui_v1_transform_status import DbuiV1TransformStatus

class TestDbuiV1TransformStatus(unittest.TestCase):
    """DbuiV1TransformStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DbuiV1TransformStatus:
        """Test DbuiV1TransformStatus
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DbuiV1TransformStatus`
        """
        model = DbuiV1TransformStatus()
        if include_optional:
            return DbuiV1TransformStatus(
                id = '',
                status = 'running',
                error = '',
                result = dasl_api.models.dbui/v1/transform_response.dbui.v1.TransformResponse(
                    stages = [
                        dasl_api.models.dbui_v1_transform_response_stages_inner.dbui_v1_TransformResponse_stages_inner(
                            transform_type = 'SilverPreTransform', 
                            columns = [
                                dasl_api.models.dbui/v1/table_column_details.dbui.v1.TableColumnDetails(
                                    name = '', 
                                    type_name = '', 
                                    type_detail = '', 
                                    position = 56, 
                                    nullable = True, )
                                ], 
                            data = [
                                {
                                    'key' : ''
                                    }
                                ], )
                        ], )
            )
        else:
            return DbuiV1TransformStatus(
                id = '',
                status = 'running',
        )
        """

    def testDbuiV1TransformStatus(self):
        """Test DbuiV1TransformStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
