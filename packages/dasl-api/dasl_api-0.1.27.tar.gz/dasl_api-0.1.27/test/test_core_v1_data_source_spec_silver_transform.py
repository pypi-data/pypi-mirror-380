# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.1.27
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.core_v1_data_source_spec_silver_transform import CoreV1DataSourceSpecSilverTransform

class TestCoreV1DataSourceSpecSilverTransform(unittest.TestCase):
    """CoreV1DataSourceSpecSilverTransform unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoreV1DataSourceSpecSilverTransform:
        """Test CoreV1DataSourceSpecSilverTransform
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoreV1DataSourceSpecSilverTransform`
        """
        model = CoreV1DataSourceSpecSilverTransform()
        if include_optional:
            return CoreV1DataSourceSpecSilverTransform(
                skip_silver_transform = True,
                do_not_materialize = True,
                preset_overrides = dasl_api.models.core_v1_data_source_spec_silver_transform_preset_overrides.core_v1_DataSourceSpec_silver_transform_presetOverrides(
                    modify_tables = [
                        dasl_api.models.core_v1_data_source_spec_silver_transform_preset_overrides_modify_tables_inner.core_v1_DataSourceSpec_silver_transform_presetOverrides_modifyTables_inner(
                            name = '', 
                            custom = dasl_api.models.core_v1_data_source_spec_silver_transform_preset_overrides_modify_tables_inner_custom.core_v1_DataSourceSpec_silver_transform_presetOverrides_modifyTables_inner_custom(
                                function = '', 
                                options = {
                                    'key' : ''
                                    }, ), 
                            omit_fields = [
                                ''
                                ], 
                            override_liquid_columns = [
                                ''
                                ], 
                            add_fields = [
                                dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                                    name = '', 
                                    comment = '', 
                                    assert = [
                                        dasl_api.models.core_v1_data_source_field_spec_assert_inner.core_v1_DataSource_FieldSpec_assert_inner(
                                            expr = '', 
                                            message = '', )
                                        ], 
                                    from = '', 
                                    alias = '', 
                                    expr = '', 
                                    literal = '', 
                                    join = dasl_api.models.core_v1_data_source_field_spec_join.core_v1_DataSource_FieldSpec_join(
                                        with_table = '', 
                                        with_csv = dasl_api.models.core_v1_data_source_field_spec_join_with_csv.core_v1_DataSource_FieldSpec_join_withCSV(
                                            path = '', ), 
                                        lhs = '', 
                                        rhs = '', 
                                        select = '', ), )
                                ], 
                            filter = '', 
                            post_filter = '', 
                            utils = null, )
                        ], 
                    omit_tables = [
                        ''
                        ], 
                    add_tables = [
                        dasl_api.models.core_v1_data_source_spec_silver_transform_preset_overrides_add_tables_inner.core_v1_DataSourceSpec_silver_transform_presetOverrides_addTables_inner(
                            name = '', 
                            filter = '', 
                            post_filter = '', 
                            fields = [
                                dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                                    name = '', 
                                    comment = '', 
                                    from = '', 
                                    alias = '', 
                                    expr = '', 
                                    literal = '', )
                                ], 
                            utils = null, )
                        ], )
            )
        else:
            return CoreV1DataSourceSpecSilverTransform(
        )
        """

    def testCoreV1DataSourceSpecSilverTransform(self):
        """Test CoreV1DataSourceSpecSilverTransform"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
