# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.1.27
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.core_v1_data_source_spec_silver_bronze_tables_inner import CoreV1DataSourceSpecSilverBronzeTablesInner

class TestCoreV1DataSourceSpecSilverBronzeTablesInner(unittest.TestCase):
    """CoreV1DataSourceSpecSilverBronzeTablesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoreV1DataSourceSpecSilverBronzeTablesInner:
        """Test CoreV1DataSourceSpecSilverBronzeTablesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoreV1DataSourceSpecSilverBronzeTablesInner`
        """
        model = CoreV1DataSourceSpecSilverBronzeTablesInner()
        if include_optional:
            return CoreV1DataSourceSpecSilverBronzeTablesInner(
                name = '',
                streaming = True,
                watermark = dasl_api.models.core_v1_data_source_spec_silver_bronze_tables_inner_watermark.core_v1_DataSourceSpec_silver_bronzeTables_inner_watermark(
                    event_time_column = '', 
                    delay_threshold = '', 
                    drop_duplicates = [
                        ''
                        ], ),
                alias = '',
                join_type = '',
                join_expr = ''
            )
        else:
            return CoreV1DataSourceSpecSilverBronzeTablesInner(
        )
        """

    def testCoreV1DataSourceSpecSilverBronzeTablesInner(self):
        """Test CoreV1DataSourceSpecSilverBronzeTablesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
