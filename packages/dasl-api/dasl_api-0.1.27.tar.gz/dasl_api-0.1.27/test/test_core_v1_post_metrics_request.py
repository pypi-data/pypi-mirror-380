# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.1.27
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.core_v1_post_metrics_request import CoreV1PostMetricsRequest

class TestCoreV1PostMetricsRequest(unittest.TestCase):
    """CoreV1PostMetricsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoreV1PostMetricsRequest:
        """Test CoreV1PostMetricsRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoreV1PostMetricsRequest`
        """
        model = CoreV1PostMetricsRequest()
        if include_optional:
            return CoreV1PostMetricsRequest(
                job_name = '',
                job_id = 56,
                job_type = '',
                datasource_source_type = '',
                datasource_source = '',
                operational_alert_count = 56,
                failed_resource_names = [
                    ''
                    ],
                exec_results = [
                    dasl_api.models.core_v1_post_metrics_request_exec_results_inner.core_v1_PostMetricsRequest_execResults_inner(
                        resource_name = '', 
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        duration = 1.337, 
                        rows_processed = 56, 
                        bronze_rows_written = 56, 
                        silver_rows_written = 56, 
                        gold_rows_written = 56, 
                        table_rows_written = {
                            'key' : 56
                            }, 
                        batch_processing_ms = 56, 
                        bronze_batch_processing_ms = 56, 
                        silver_batch_processing_ms = 56, 
                        gold_batch_processing_ms = 56, 
                        table_batch_processing_ms = {
                            'key' : 56
                            }, )
                    ]
            )
        else:
            return CoreV1PostMetricsRequest(
        )
        """

    def testCoreV1PostMetricsRequest(self):
        """Test CoreV1PostMetricsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
