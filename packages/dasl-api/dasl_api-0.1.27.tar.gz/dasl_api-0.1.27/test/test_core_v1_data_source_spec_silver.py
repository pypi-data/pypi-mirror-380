# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.1.27
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.core_v1_data_source_spec_silver import CoreV1DataSourceSpecSilver

class TestCoreV1DataSourceSpecSilver(unittest.TestCase):
    """CoreV1DataSourceSpecSilver unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoreV1DataSourceSpecSilver:
        """Test CoreV1DataSourceSpecSilver
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoreV1DataSourceSpecSilver`
        """
        model = CoreV1DataSourceSpecSilver()
        if include_optional:
            return CoreV1DataSourceSpecSilver(
                bronze_tables = [
                    dasl_api.models.core_v1_data_source_spec_silver_bronze_tables_inner.core_v1_DataSourceSpec_silver_bronzeTables_inner(
                        name = '', 
                        streaming = True, 
                        watermark = dasl_api.models.core_v1_data_source_spec_silver_bronze_tables_inner_watermark.core_v1_DataSourceSpec_silver_bronzeTables_inner_watermark(
                            event_time_column = '', 
                            delay_threshold = '', 
                            drop_duplicates = [
                                ''
                                ], ), 
                        alias = '', 
                        join_type = '', 
                        join_expr = '', )
                    ],
                pre_transform = dasl_api.models.core_v1_data_source_spec_silver_pre_transform.core_v1_DataSourceSpec_silver_preTransform(
                    use_preset = '', 
                    skip_pre_transform = True, 
                    custom = dasl_api.models.core_v1_data_source_spec_silver_pre_transform_custom.core_v1_DataSourceSpec_silver_preTransform_custom(
                        function = '', 
                        options = {
                            'key' : ''
                            }, ), 
                    filter = '', 
                    post_filter = '', 
                    preset_overrides = dasl_api.models.core_v1_data_source_spec_silver_pre_transform_preset_overrides.core_v1_DataSourceSpec_silver_preTransform_presetOverrides(
                        omit_fields = [
                            ''
                            ], ), 
                    add_fields = [
                        dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                            name = '', 
                            comment = '', 
                            assert = [
                                dasl_api.models.core_v1_data_source_field_spec_assert_inner.core_v1_DataSource_FieldSpec_assert_inner(
                                    expr = '', 
                                    message = '', )
                                ], 
                            from = '', 
                            alias = '', 
                            expr = '', 
                            literal = '', 
                            join = dasl_api.models.core_v1_data_source_field_spec_join.core_v1_DataSource_FieldSpec_join(
                                with_table = '', 
                                with_csv = dasl_api.models.core_v1_data_source_field_spec_join_with_csv.core_v1_DataSource_FieldSpec_join_withCSV(
                                    path = '', ), 
                                lhs = '', 
                                rhs = '', 
                                select = '', ), )
                        ], 
                    utils = null, ),
                transform = dasl_api.models.core_v1_data_source_spec_silver_transform.core_v1_DataSourceSpec_silver_transform(
                    skip_silver_transform = True, 
                    do_not_materialize = True, 
                    preset_overrides = dasl_api.models.core_v1_data_source_spec_silver_transform_preset_overrides.core_v1_DataSourceSpec_silver_transform_presetOverrides(
                        modify_tables = [
                            dasl_api.models.core_v1_data_source_spec_silver_transform_preset_overrides_modify_tables_inner.core_v1_DataSourceSpec_silver_transform_presetOverrides_modifyTables_inner(
                                name = '', 
                                custom = dasl_api.models.core_v1_data_source_spec_silver_transform_preset_overrides_modify_tables_inner_custom.core_v1_DataSourceSpec_silver_transform_presetOverrides_modifyTables_inner_custom(
                                    function = '', 
                                    options = {
                                        'key' : ''
                                        }, ), 
                                omit_fields = [
                                    ''
                                    ], 
                                override_liquid_columns = [
                                    ''
                                    ], 
                                add_fields = [
                                    dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                                        name = '', 
                                        comment = '', 
                                        assert = [
                                            dasl_api.models.core_v1_data_source_field_spec_assert_inner.core_v1_DataSource_FieldSpec_assert_inner(
                                                expr = '', 
                                                message = '', )
                                            ], 
                                        from = '', 
                                        alias = '', 
                                        expr = '', 
                                        literal = '', 
                                        join = dasl_api.models.core_v1_data_source_field_spec_join.core_v1_DataSource_FieldSpec_join(
                                            with_table = '', 
                                            with_csv = dasl_api.models.core_v1_data_source_field_spec_join_with_csv.core_v1_DataSource_FieldSpec_join_withCSV(
                                                path = '', ), 
                                            lhs = '', 
                                            rhs = '', 
                                            select = '', ), )
                                    ], 
                                filter = '', 
                                post_filter = '', 
                                utils = null, )
                            ], 
                        omit_tables = [
                            ''
                            ], 
                        add_tables = [
                            dasl_api.models.core_v1_data_source_spec_silver_transform_preset_overrides_add_tables_inner.core_v1_DataSourceSpec_silver_transform_presetOverrides_addTables_inner(
                                name = '', 
                                filter = '', 
                                post_filter = '', 
                                fields = [
                                    dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                                        name = '', 
                                        comment = '', 
                                        from = '', 
                                        alias = '', 
                                        expr = '', 
                                        literal = '', )
                                    ], 
                                utils = null, )
                            ], ), )
            )
        else:
            return CoreV1DataSourceSpecSilver(
        )
        """

    def testCoreV1DataSourceSpecSilver(self):
        """Test CoreV1DataSourceSpecSilver"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
