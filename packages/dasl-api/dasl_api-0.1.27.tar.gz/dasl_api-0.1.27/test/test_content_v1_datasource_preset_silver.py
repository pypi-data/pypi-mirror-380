# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.1.27
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.content_v1_datasource_preset_silver import ContentV1DatasourcePresetSilver

class TestContentV1DatasourcePresetSilver(unittest.TestCase):
    """ContentV1DatasourcePresetSilver unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContentV1DatasourcePresetSilver:
        """Test ContentV1DatasourcePresetSilver
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContentV1DatasourcePresetSilver`
        """
        model = ContentV1DatasourcePresetSilver()
        if include_optional:
            return ContentV1DatasourcePresetSilver(
                pre_transform = [
                    dasl_api.models.content_v1_datasource_preset_silver_pre_transform_inner.content_v1_DatasourcePreset_silver_preTransform_inner(
                        name = '', 
                        filter = '', 
                        post_filter = '', 
                        fields = [
                            dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                                name = '', 
                                comment = '', 
                                assert = [
                                    dasl_api.models.core_v1_data_source_field_spec_assert_inner.core_v1_DataSource_FieldSpec_assert_inner(
                                        expr = '', 
                                        message = '', )
                                    ], 
                                from = '', 
                                alias = '', 
                                expr = '', 
                                literal = '', 
                                join = dasl_api.models.core_v1_data_source_field_spec_join.core_v1_DataSource_FieldSpec_join(
                                    with_table = '', 
                                    with_csv = dasl_api.models.core_v1_data_source_field_spec_join_with_csv.core_v1_DataSource_FieldSpec_join_withCSV(
                                        path = '', ), 
                                    lhs = '', 
                                    rhs = '', 
                                    select = '', ), )
                            ], 
                        utils = null, )
                    ],
                transform = [
                    dasl_api.models.content_v1_datasource_preset_silver_transform_inner.content_v1_DatasourcePreset_silver_transform_inner(
                        name = '', 
                        filter = '', 
                        post_filter = '', 
                        fields = [
                            dasl_api.models.core/v1/data_source/field_spec.core.v1.DataSource.FieldSpec(
                                name = '', 
                                comment = '', 
                                assert = [
                                    dasl_api.models.core_v1_data_source_field_spec_assert_inner.core_v1_DataSource_FieldSpec_assert_inner(
                                        expr = '', 
                                        message = '', )
                                    ], 
                                from = '', 
                                alias = '', 
                                expr = '', 
                                literal = '', 
                                join = dasl_api.models.core_v1_data_source_field_spec_join.core_v1_DataSource_FieldSpec_join(
                                    with_table = '', 
                                    with_csv = dasl_api.models.core_v1_data_source_field_spec_join_with_csv.core_v1_DataSource_FieldSpec_join_withCSV(
                                        path = '', ), 
                                    lhs = '', 
                                    rhs = '', 
                                    select = '', ), )
                            ], 
                        utils = null, )
                    ]
            )
        else:
            return ContentV1DatasourcePresetSilver(
        )
        """

    def testContentV1DatasourcePresetSilver(self):
        """Test ContentV1DatasourcePresetSilver"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
