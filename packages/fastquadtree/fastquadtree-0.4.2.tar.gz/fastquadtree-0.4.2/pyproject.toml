[build-system]
requires = ["maturin>=1.5"]
build-backend = "maturin"

[project]
name = "fastquadtree"
# Version comes from Cargo.toml
dynamic = ["version"]
description = "Rust-accelerated quadtree for Python with fast inserts, range queries, and k-NN search."
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.8"
license = { file = "LICENSE" }
authors = [{ name = "Ethan Anderson" }]
keywords = ["quadtree", "spatial-index", "geometry", "rust", "pyo3", "nearest-neighbor", "k-nn"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Rust",
  "Programming Language :: Python :: Implementation :: CPython",
  "Operating System :: OS Independent",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Software Development :: Libraries",
  "Typing :: Typed",
  "License :: OSI Approved :: MIT License"
]

[project.urls]
Homepage = "https://github.com/Elan456/fastquadtree"
Repository = "https://github.com/Elan456/fastquadtree"
Issues = "https://github.com/Elan456/fastquadtree/issues"

[tool.maturin]
# Use PyO3 bindings
bindings = "pyo3"
strip = true
python-source = "pysrc"
module-name = "fastquadtree._native"
# Choose a wide wheel tag for Linux. Adjust if your build images are newer.
# Options include: manylinux2014, manylinux_2_28, musllinux_1_2, or "off".
compatibility = "manylinux2014"

[tool.pytest.ini_options]
addopts = "--cov=fastquadtree --cov-branch --cov-report=xml --cov-fail-under=95"
testpaths = ["tests"]  # still run tests

[tool.coverage.run]
source = ["fastquadtree"]
omit = [
  "tests/*",
]

[tool.coverage.report]
omit = [
  "tests/*",
]
