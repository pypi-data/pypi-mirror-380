# coding: utf-8

"""
    Core Operations

    The Sparkfly Platform provides a full lifecycle for promotions and rewards from creation to distribution to settlement. The platform integrates in real-time at the point-of-sale and provides item level discounting and tracking. The capabilities of the Sparkfly Platform are available through the use of the Sparkfly Platform API.  The Sparkfly documentation site is under development. If the documentation you're after isn't available here, please contact support@sparkfly.com and we will get you what you need.

    The version of the OpenAPI document: 1.0
    Contact: support@sparkfly.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sparkfly.api.stores_api import StoresApi


class TestStoresApi(unittest.IsolatedAsyncioTestCase):
    """StoresApi unit test stubs"""

    async def asyncSetUp(self) -> None:
        self.api = StoresApi()

    async def asyncTearDown(self) -> None:
        await self.api.api_client.close()

    async def test_delete_merchants_merchant_id_stores_store_id(self) -> None:
        """Test case for delete_merchants_merchant_id_stores_store_id

        Remove a Store
        """
        pass

    async def test_get_merchants_merchant_id_stores(self) -> None:
        """Test case for get_merchants_merchant_id_stores

        List all Stores
        """
        pass

    async def test_get_merchants_merchant_id_stores_index(self) -> None:
        """Test case for get_merchants_merchant_id_stores_index

        List all Stores with Active Offers
        """
        pass

    async def test_get_merchants_merchant_id_stores_store_id(self) -> None:
        """Test case for get_merchants_merchant_id_stores_store_id

        Retrieve a Store
        """
        pass

    async def test_post_merchants_merchant_id_stores(self) -> None:
        """Test case for post_merchants_merchant_id_stores

        Create a Store
        """
        pass

    async def test_put_merchants_merchant_id_stores_store_id(self) -> None:
        """Test case for put_merchants_merchant_id_stores_store_id

        Update a Store
        """
        pass


if __name__ == '__main__':
    unittest.main()
