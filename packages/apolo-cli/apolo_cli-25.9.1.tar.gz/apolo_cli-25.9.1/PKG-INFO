Metadata-Version: 2.4
Name: apolo-cli
Version: 25.9.1
Summary: Apolo Platform client
Home-page: https://github.com/neuro-inc/platform-client-python
Author: Apolo Team
Author-email: dev@apolo.us
License: Apache 2
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Information Technology
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development
Classifier: Topic :: Utilities
Classifier: License :: OSI Approved :: Apache Software License
Requires-Python: >=3.9.0
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: python-jose>=3.0.0
Requires-Dist: python-dateutil>=2.7.0
Requires-Dist: apolo-sdk>=25.9.1
Requires-Dist: click>=8.0
Requires-Dist: humanize>=3.3
Requires-Dist: certifi
Requires-Dist: wcwidth>=0.1.7
Requires-Dist: prompt-toolkit>=3.0.13
Requires-Dist: rich>=11.0.0
Requires-Dist: jedi>=0.16
Requires-Dist: async-timeout>=4.0.0; python_version < "3.11"
Requires-Dist: ruamel.yaml>=0.18.0
Dynamic: license-file

[![codecov](https://codecov.io/gh/neuro-cli/platform-client-python/branch/master/graph/badge.svg)](https://codecov.io/gh/neuro-cli/platform-client-python)

# Preface

Welcome to Apolo CLI tool for https://apolo.us/.
Package ship command line tool called `apolo`. With it you can:
* Execute and debug jobs
* Manipulate Data
* Make some fun

# Contributing

For OSX users install coreutils to properly interpret shell commands:

```
brew install coreutils
```

Before you begin, it is recommended to have clean virtual environment installed:

```shell
python -m venv .env
source .env/bin/activate
```

Development flow:

* Install dependencies: `make setup`
* Reformat code: `make format`
* Lint: `make lint`
* Run tests: `make test`
* Run end-to-end tests: `make e2e`
