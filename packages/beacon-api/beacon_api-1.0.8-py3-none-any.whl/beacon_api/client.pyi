import datetime
from .dataset import Dataset as Dataset
from .query import Query as Query
from .session import BaseBeaconSession as BaseBeaconSession
from .table import DataTable as DataTable
from _typeshed import Incomplete
from io import BytesIO as BytesIO
from requests import Session as Session

class Client:
    session: Incomplete
    def __init__(self, url: str, proxy_headers: dict[str, str] | None = None, jwt_token: str | None = None, basic_auth: tuple[str, str] | None = None) -> None: ...
    def check_status(self) -> None: ...
    def available_columns(self) -> list[str]: ...
    def available_columns_with_data_type(self) -> dict[str, type]: ...
    def list_tables(self) -> dict[str, DataTable]: ...
    def list_datasets(self, pattern: str | None = None, limit: int | None = None, offset: int | None = None) -> dict[str, Dataset]: ...
    def query(self) -> Query: ...
    def subset(self, longitude_column: str, latitude_column: str, time_column: str, depth_column: str, columns: list[str], bbox: tuple[float, float, float, float] | None = None, depth_range: tuple[float, float] | None = None, time_range: tuple[datetime.datetime, datetime.datetime] | None = None) -> Query: ...
