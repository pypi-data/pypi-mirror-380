# This file was auto-generated by Fern from our API Definition.

from .......core.pydantic_utilities import UniversalBaseModel
import typing
from ......common.resources.protocol.resources.ldap.ldap_server_info import LdapServerInfo
import pydantic
from ......common.resources.protocol.resources.ldap.ldap_auth_method import LdapAuthMethod
from .......core.pydantic_utilities import IS_PYDANTIC_V2


class EnumerateLdapDetails(UniversalBaseModel):
    target: str
    server_info: typing.Optional[LdapServerInfo] = pydantic.Field(alias="serverInfo", default=None)
    anonymous_bind_allowed: typing.Optional[bool] = pydantic.Field(alias="anonymousBindAllowed", default=None)
    null_bind_allowed: typing.Optional[bool] = pydantic.Field(alias="nullBindAllowed", default=None)
    auth_methods: typing.Optional[typing.List[LdapAuthMethod]] = pydantic.Field(alias="authMethods", default=None)
    base_dn: typing.Optional[str] = pydantic.Field(alias="baseDN", default=None)
    default_naming_context: typing.Optional[str] = pydantic.Field(alias="defaultNamingContext", default=None)
    schema_naming_context: typing.Optional[str] = pydantic.Field(alias="schemaNamingContext", default=None)
    configuration_naming_context: typing.Optional[str] = pydantic.Field(
        alias="configurationNamingContext", default=None
    )
    supported_ldap_version: typing.Optional[typing.List[str]] = pydantic.Field(
        alias="supportedLdapVersion", default=None
    )
    supported_sasl_mechanisms: typing.Optional[typing.List[str]] = pydantic.Field(
        alias="supportedSaslMechanisms", default=None
    )
    supported_capabilities: typing.Optional[typing.List[str]] = pydantic.Field(
        alias="supportedCapabilities", default=None
    )
    raw_response: typing.Optional[str] = pydantic.Field(alias="rawResponse", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
