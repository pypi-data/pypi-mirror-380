name: 🐛 Bug Report
description: Report a bug in flixopt
title: "[BUG] "
labels: ["type: bug"]
body:
- type: markdown
  attributes:
    value: |
      Thanks for taking the time to fill out this bug report!

      **Before submitting**: Please search [existing issues](https://github.com/flixOpt/flixopt/issues) to avoid duplicates.

- type: checkboxes
  id: checks
  attributes:
    label: Version Confirmation
    description: Please confirm you can reproduce this on a supported version
    options:
    - label: I have confirmed this bug exists on the latest [release](https://github.com/flixOpt/flixopt/releases) of FlixOpt
      required: true

- type: textarea
  id: problem
  attributes:
    label: Bug Description
    description: Clearly describe what went wrong
    placeholder: |
      What happened? What did you expect to happen instead?

      Include any error messages or unexpected outputs.
  validations:
    required: true

- type: textarea
  id: example
  attributes:
    label: Minimal Reproducible Example
    description: |
      Provide the smallest possible code example that reproduces the bug.
      See [how to create minimal bug reports](https://matthewrocklin.com/minimal-bug-reports).
    placeholder: |
      import flixopt as fx
      import pandas as pd

      # Minimal example that reproduces the bug
      timesteps = pd.date_range('2024-01-01', periods=24, freq='h')
      flow_system = fx.FlowSystem(timesteps)

      # Add components that trigger the bug...

      # Show the problematic operation
      result = flow_system.solve()  # This should fail/behave unexpectedly
    render: python
  validations:
    required: true

- type: textarea
  id: error-output
  attributes:
    label: Error Output
    description: If there's an error message, paste the full traceback here
    render: shell

- type: dropdown
  id: solver
  attributes:
    label: Solver Used
    description: Which solver were you using?
    options:
      - HiGHS (default)
      - Gurobi
      - CPLEX
      - GLPK
      - CBC
      - Other (specify below)
  validations:
    required: true

- type: input
  id: os
  attributes:
    label: Operating System
    placeholder: "e.g., Windows 11, macOS 14.2, Ubuntu 22.04"
  validations:
    required: true

- type: input
  id: python-version
  attributes:
    label: Python Version
    placeholder: "e.g., 3.11.5"
  validations:
    required: true

- type: textarea
  id: environment
  attributes:
    label: Environment Info
    description: |
      Run one of these commands and paste the output:
      - `pip freeze`
      - `conda env export`
    render: shell
    value: >
      <details>

      ```
      Replace this with your environment info
      ```

      </details>
