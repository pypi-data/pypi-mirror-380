# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from com.terraquantum.experiment.v1.bffexperimentrun import bff_experiment_run_pb2 as com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_bff__experiment__run__pb2
from com.terraquantum.experiment.v1.bffexperimentrun import bff_get_experiment_run_pb2 as com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_bff__get__experiment__run__pb2
from com.terraquantum.experiment.v1.bffexperimentrun import get_experiment_runs_count_pb2 as com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_get__experiment__runs__count__pb2
from com.terraquantum.experiment.v1.bffexperimentrun import list_bff_experiment_runs_request_pb2 as com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_list__bff__experiment__runs__request__pb2
from com.terraquantum.experiment.v1.bffexperimentrun import list_bff_experiment_runs_response_pb2 as com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_list__bff__experiment__runs__response__pb2


class BffExperimentRunServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListExperimentRuns = channel.unary_unary(
                '/com.terraquantum.experiment.v1.bffexperimentrun.BffExperimentRunService/ListExperimentRuns',
                request_serializer=com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_list__bff__experiment__runs__request__pb2.ListBffExperimentRunsRequest.SerializeToString,
                response_deserializer=com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_list__bff__experiment__runs__response__pb2.ListBffExperimentRunsResponse.FromString,
                _registered_method=True)
        self.GetExperimentRunsCount = channel.unary_unary(
                '/com.terraquantum.experiment.v1.bffexperimentrun.BffExperimentRunService/GetExperimentRunsCount',
                request_serializer=com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_get__experiment__runs__count__pb2.GetExperimentRunsCountRequest.SerializeToString,
                response_deserializer=com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_get__experiment__runs__count__pb2.GetExperimentRunsCountResponse.FromString,
                _registered_method=True)
        self.GetExperimentRun = channel.unary_unary(
                '/com.terraquantum.experiment.v1.bffexperimentrun.BffExperimentRunService/GetExperimentRun',
                request_serializer=com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_bff__get__experiment__run__pb2.GetBffExperimentRunRequest.SerializeToString,
                response_deserializer=com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_bff__experiment__run__pb2.BffExperimentRunProto.FromString,
                _registered_method=True)


class BffExperimentRunServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListExperimentRuns(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExperimentRunsCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExperimentRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BffExperimentRunServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListExperimentRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.ListExperimentRuns,
                    request_deserializer=com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_list__bff__experiment__runs__request__pb2.ListBffExperimentRunsRequest.FromString,
                    response_serializer=com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_list__bff__experiment__runs__response__pb2.ListBffExperimentRunsResponse.SerializeToString,
            ),
            'GetExperimentRunsCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExperimentRunsCount,
                    request_deserializer=com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_get__experiment__runs__count__pb2.GetExperimentRunsCountRequest.FromString,
                    response_serializer=com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_get__experiment__runs__count__pb2.GetExperimentRunsCountResponse.SerializeToString,
            ),
            'GetExperimentRun': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExperimentRun,
                    request_deserializer=com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_bff__get__experiment__run__pb2.GetBffExperimentRunRequest.FromString,
                    response_serializer=com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_bff__experiment__run__pb2.BffExperimentRunProto.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.terraquantum.experiment.v1.bffexperimentrun.BffExperimentRunService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('com.terraquantum.experiment.v1.bffexperimentrun.BffExperimentRunService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class BffExperimentRunService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListExperimentRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.terraquantum.experiment.v1.bffexperimentrun.BffExperimentRunService/ListExperimentRuns',
            com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_list__bff__experiment__runs__request__pb2.ListBffExperimentRunsRequest.SerializeToString,
            com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_list__bff__experiment__runs__response__pb2.ListBffExperimentRunsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetExperimentRunsCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.terraquantum.experiment.v1.bffexperimentrun.BffExperimentRunService/GetExperimentRunsCount',
            com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_get__experiment__runs__count__pb2.GetExperimentRunsCountRequest.SerializeToString,
            com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_get__experiment__runs__count__pb2.GetExperimentRunsCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetExperimentRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.terraquantum.experiment.v1.bffexperimentrun.BffExperimentRunService/GetExperimentRun',
            com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_bff__get__experiment__run__pb2.GetBffExperimentRunRequest.SerializeToString,
            com_dot_terraquantum_dot_experiment_dot_v1_dot_bffexperimentrun_dot_bff__experiment__run__pb2.BffExperimentRunProto.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
