# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from com.terraquantum.credits.v1alpha1 import check_experiment_run_pb2 as com_dot_terraquantum_dot_credits_dot_v1alpha1_dot_check__experiment__run__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ConsumptionServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckExperimentRunAgainstCredits = channel.unary_unary(
                '/com.terraquantum.credits.v1alpha1.ConsumptionService/CheckExperimentRunAgainstCredits',
                request_serializer=com_dot_terraquantum_dot_credits_dot_v1alpha1_dot_check__experiment__run__pb2.CheckExperimentRunAgainstCreditsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class ConsumptionServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CheckExperimentRunAgainstCredits(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConsumptionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckExperimentRunAgainstCredits': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckExperimentRunAgainstCredits,
                    request_deserializer=com_dot_terraquantum_dot_credits_dot_v1alpha1_dot_check__experiment__run__pb2.CheckExperimentRunAgainstCreditsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.terraquantum.credits.v1alpha1.ConsumptionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('com.terraquantum.credits.v1alpha1.ConsumptionService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ConsumptionService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CheckExperimentRunAgainstCredits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.terraquantum.credits.v1alpha1.ConsumptionService/CheckExperimentRunAgainstCredits',
            com_dot_terraquantum_dot_credits_dot_v1alpha1_dot_check__experiment__run__pb2.CheckExperimentRunAgainstCreditsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
