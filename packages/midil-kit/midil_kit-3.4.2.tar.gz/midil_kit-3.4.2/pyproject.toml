[tool.poetry]
name = "midil-kit"
version = "3.4.2"
description = "A Python SDK for backend systems development @midil.io"
authors = ["Engr. Michael Kofi Armah <michael.armah@midil.io>"]
readme = "README.md"
keywords = ["midil", "midil-kit", "event", "infrastructure", "extensions"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
packages = [{ include = "midil" }]

[tool.poetry.scripts]
midil = "midil:cli"

[tool.poetry.dependencies]
python = "^3.12"
pydantic = "^2.0.0"
starlette = "^0.47.2"
httpx = "^0.28.1"
loguru = "^0.7.3"
pyjwt = "^2.10.1"
python-dateutil = "^2.8.0"
click = "^8.1.7"
uvicorn = "^0.29.0"
fastapi = "^0.116.1"
aiobotocore = "^2.10.0"
aioboto3 = "^15.0.0"
redis = "^5.2.1"


types-aioboto3 = "^15.0.0"
rich = "^14.1.0"
tomli = "^2.2.1"
pydantic-settings = "^2.10.1"
cookiecutter = "^2.6.0"
tenacity = "^9.1.2"
websockets = "^15.0.1"
aiostream = "^0.7.0"
aioredis = "^2.0.1"
pyfiglet = "^1.0.4"


[tool.poetry.group.dev.dependencies]
pytest-cov = "^4.0.0"
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.0.0"
pre-commit = "^3.0.0"
ruff = ">=0.6.3,<0.10.0"
towncrier = "^24.8.0"
trio = "^0.30.0"
pytest-asyncio = "^1.1.0"
types-python-dateutil = "^2.9.0.20250708"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.0.0"
sphinx-rtd-theme = "^1.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
ignore = ["E501"]
exclude = ['venv', '.venv', 'integrations']

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.12"  # Also update this to match your actual Python version
mypy_path = ["."]  # Change from ["./midil"] to ["."]
explicit_package_bases = true
namespace_packages = true
exclude = [
    'venv',
    '.venv',
    'scripts',
    'docs',
]
plugins = [
    "pydantic.mypy"
]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=midil",
    "--cov-report=term-missing",
    "--cov-report=html",
    "-p",
    "pytest_asyncio",
]
markers = [
    "asyncio: mark test as async",
]


[tool.towncrier]
package = "midil"
filename = "CHANGELOG.md"
directory = "changelog"
title_format = "## v{version} ({date})"
underlines = ["", "", ""]
issue_format = "[#{issue}]"
template = "changelog/.template"

[[tool.towncrier.type]]
directory = "breaking"
name = "Breaking Changes"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecation"
name = "Deprecations"
showcontent = true

[[tool.towncrier.type]]
directory = "feature"
name = "Features"
showcontent = true

[[tool.towncrier.type]]
directory = "improvement"
name = "Improvements"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bug Fixes"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Improved Documentation"
showcontent = true
