# SPDX-FileCopyrightText: 2025 Geoffrey Lentner
# SPDX-License-Identifier: MIT
#
# Ported from original MATLAB code:
#   Eli Farber (2025). makeBanner - Big ASCII Style Comment Generator.
#   MATLAB Central File Exchange. Retrieved September 22, 2025.
#   URL: https://www.mathworks.com/matlabcentral/fileexchange/181715-makebanner-big-ascii-style-comment-generator)

"""ASCII styles."""


# Type annotations
from __future__ import annotations
from typing import Final, Dict, List

# Standard libs
import sys
from dataclasses import dataclass

# Public interface
__all__ = ['Font', 'font_map', 'big_font', 'mini_font']


@dataclass
class Font:
    name: str
    rows: int
    data: Dict[str, List[str]]


big_font: Final[Dict[str, List[str]]] = {
    'A': [' █████╗ ',
          '██╔══██╗',
          '██║  ██║',
          '███████║',
          '██╔══██║',
          '╚═╝  ╚═╝'],
    'B': ['██████╗ ',
          '██╔══██╗',
          '██████╔╝',
          '██╔══██╗',
          '██████╔╝',
          '╚═════╝ '],
    'C': [' ██████╗',
          '██╔════╝',
          '██║     ',
          '██║     ',
          '╚██████╗',
          ' ╚═════╝'],
    'D': ['██████╗ ',
          '██╔══██╗',
          '██║  ██║',
          '██║  ██║',
          '██████╔╝',
          '╚═════╝ '],
    'E': ['███████╗',
          '██╔════╝',
          '███████╗',
          '██╔════╝',
          '███████╗',
          '╚══════╝'],
    'F': ['███████╗',
          '██╔════╝',
          '█████╗  ',
          '██╔══╝  ',
          '██║     ',
          '╚═╝     '],
    'G': [' ██████╗ ',
          '██╔════╝ ',
          '██║  ███╗',
          '██║   ██║',
          '╚██████╔╝',
          ' ╚═════╝ '],
    'H': ['██╗  ██╗',
          '██║  ██║',
          '███████║',
          '██╔══██║',
          '██║  ██║',
          '╚═╝  ╚═╝'],
    'I': ['██╗',
          '██║',
          '██║',
          '██║',
          '██║',
          '╚═╝'],
    'J': ['     ██╗',
          '     ██║',
          '     ██║',
          '██   ██║',
          '╚█████╔╝',
          ' ╚════╝ '],
    'K': ['██╗  ██╗',
          '██║ ██╔╝',
          '█████╔╝ ',
          '██╔═██╗ ',
          '██║  ██╗',
          '╚═╝  ╚═╝'],
    'L': ['██╗     ',
          '██║     ',
          '██║     ',
          '██║     ',
          '███████╗',
          '╚══════╝'],
    'M': ['███╗   ███╗',
          '████╗ ████║',
          '██╔████╔██║',
          '██║╚██╔╝██║',
          '██║ ╚═╝ ██║',
          '╚═╝     ╚═╝'],
    'N': ['███╗  ██╗',
          '████╗ ██║',
          '██╔██╗██║',
          '██║╚████║',
          '██║ ╚███║',
          '╚═╝  ╚══╝'],
    'O': [' ██████╗ ',
          '██╔═══██╗',
          '██║   ██║',
          '██║   ██║',
          '╚██████╔╝',
          ' ╚═════╝ '],
    'P': ['██████╗ ',
          '██╔══██╗',
          '██████╔╝',
          '██╔═══╝ ',
          '██║     ',
          '╚═╝     '],
    'Q': [' ██████╗  ',
          '██╔═══██╗ ',
          '██║   ██║ ',
          '██║   ██║ ',
          '╚███████╚╗',
          ' ╚═════██╝'],
    'R': ['██████╗ ',
          '██╔══██╗',
          '██████╔╝',
          '██╔══██╗',
          '██║  ██║',
          '╚═╝  ╚═╝'],
    'S': [' ██████╗',
          '██╔════╝',
          '╚█████╗ ',
          ' ╚═══██╗',
          '██████╔╝',
          '╚═════╝ '],
    'T': ['████████╗',
          '╚══██╔══╝',
          '   ██║   ',
          '   ██║   ',
          '   ██║   ',
          '   ╚═╝   '],
    'U': ['██╗   ██╗',
          '██║   ██║',
          '██║   ██║',
          '██║   ██║',
          '╚██████╔╝',
          ' ╚═════╝ '],
    'V': ['██╗   ██╗',
          '██║   ██║',
          '╚██╗ ██╔╝',
          ' ╚████╔╝ ',
          '  ╚██╔╝  ',
          '   ╚═╝   '],
    'W': ['██╗     ██╗',
          '██║     ██║',
          '██║  █  ██║',
          '██║ ███ ██║',
          ' ███╔═╗██║ ',
          ' ╚══╝ ╚══╝ '],
    'X': ['██╗  ██╗',
          '╚██╗██╔╝',
          ' ╚███╔╝ ',
          ' ██╔██║ ',
          '██╔╝╚██╗',
          '╚═╝  ╚═╝'],
    'Y': ['██╗   ██╗',
          '╚██╗ ██╔╝',
          ' ╚████╔╝ ',
          '  ╚██╔╝  ',
          '   ██║   ',
          '   ╚═╝   '],
    'Z': ['████████╗',
          '╚═════██║',
          '    ██╔╝ ',
          '  ██╔╝   ',
          '████████╗',
          '╚═══════╝'],
    ' ': ['     ',
          '     ',
          '     ',
          '     ',
          '     ',
          '     '],
    '.': ['   ',
          '   ',
          '   ',
          '   ',
          '██╗',
          '╚═╝'],
    ':': ['    ',
          ' ██╗',
          ' ╚═╝',
          '    ',
          ' ██╗',
          ' ╚═╝'],
    ';': ['    ',
          ' ██╗',
          ' ╚═╝',
          '    ',
          ' ██╗',
          ' ╚█╝'],
    '-': ['       ',
          '       ',
          ' █████╗',
          ' ╚════╝',
          '       ',
          '       '],
    '_': ['          ',
          '          ',
          '          ',
          '          ',
          '█████████╗',
          '╚════════╝'],
    ',': ['    ',
          '    ',
          '    ',
          '    ',
          ' ██╗',
          ' ╚█╝'],
    '!': [' ██╗',
          ' ██║',
          ' ██║',
          ' ╚═╝',
          ' ██╗',
          ' ╚═╝'],
    '?': [' █████╗ ',
          ' ╚═══██╗',
          ' █████╔╝',
          ' ╚════╝ ',
          ' ██╗    ',
          ' ╚═╝    '],
    '&': [' █████╗    ',
          '██╔══██╗   ',
          '╚█████╔╝██╗',
          '██╔══████╔╝',
          '╚█████╔═██╗',
          ' ╚════╝ ╚═╝'],
    '/': ['    ██╗',
          '   ██╔╝',
          '  ██╔╝ ',
          ' ██╔╝  ',
          '██╔╝   ',
          '╚═╝    '],
    '\\': ['██╗    ',
           '╚██╗   ',
           ' ╚██╗  ',
           '  ╚██╗ ',
           '   ╚██╗',
           '    ╚═╝'],
    '0': [' ██████╗ ',
          '██╔═══██╗',
          '██║ █ ██║',
          '██║   ██║',
          '╚██████╔╝',
          ' ╚═════╝ '],
    '1': ['  ██╗',
          '████║',
          '  ██║',
          '  ██║',
          '  ██║',
          '  ╚═╝'],
    '2': ['██████╗ ',
          '╚════██╗',
          ' █████╔╝',
          '██╔═══╝ ',
          '███████╗',
          '╚══════╝'],
    '3': ['██████╗ ',
          '╚════██╗',
          '██████╔╝',
          '╚════██╗',
          '██████╔╝',
          '╚═════╝ '],
    '4': ['██╗  ██╗',
          '██║  ██║',
          '███████║',
          '╚════██║',
          '     ██║',
          '     ╚═╝'],
    '5': ['███████╗',
          '██╔════╝',
          '███████╗',
          '╚════██║',
          '██████╔╝',
          '╚═════╝ '],
    '6': [' ██████╗ ',
          '██╔════╝ ',
          '███████╗ ',
          '██╔═══██║',
          '╚██████╔╝',
          ' ╚═════╝ '],
    '7': ['████████╗',
          '╚═════██║',
          '     ██╔╝',
          '    ██╔╝ ',
          '   ██╔╝  ',
          '   ╚═╝   '],
    '8': [' ██████╗ ',
          '██╔═══██╗',
          '╚██████╔╝',
          '██╔═══██╗',
          '╚██████╔╝',
          ' ╚═════╝ '],
    '9': [' ██████╗ ',
          '██╔═══██║',
          '╚███████║',
          ' ╚════██║',
          ' ██████╔╝',
          ' ╚═════╝ '],
}


mini_font: Final[Dict[str, List[str]]] = {
    'A': ['╔═╗',
          '╠═╣',
          '╜ ╜'],
    'B': ['╔═╮',
          '╠═╣',
          '╚═╯'],
    'C': ['╭══',
          '║  ',
          '╰══'],
    'D': ['╔═╮',
          '║ ║',
          '╚═╯'],
    'E': ['╔══',
          '╠══',
          '╚══'],
    'F': ['╔══',
          '╠══',
          '╜  '],
    'G': ['╔═╕',
          '║ ╗',
          '╚═╝'],
    'H': ['╓ ╓',
          '╠═╣',
          '╜ ╜'],
    'I': ['╓',
          '║',
          '╜'],
    'J': ['  ╓',
          '  ║',
          '╚═╝'],
    'K': ['╖╭═',
          '╠╣ ',
          '╜╰═'],
    'L': ['╓  ',
          '║  ',
          '╚══'],
    'M': ['╔╗╔╗',
          '║╚╝║',
          '╜  ╜'],
    'N': ['╔╮ ╖',
          '║╚╗║',
          '╜ ╰╝'],
    'O': ['╭═╮',
          '║ ║',
          '╰═╯'],
    'P': ['╔═╗',
          '║═╝',
          '╝  '],
    'Q': ['╔═╗ ',
          '║ ║ ',
          '╚═╩╗'],
    'R': ['╔═╮',
          '║╦╯',
          '╝╚═'],
    'S': ['╭═╮',
          '╰═╮',
          '╰═╯'],
    'T': ['═╦═',
          ' ║ ',
          ' ╜ '],
    'U': ['╖ ╖',
          '║ ║',
          '╰═╯'],
    'V': ['╖  ╓',
          '╚╗╔╝',
          ' ╚╝ '],
    'W': ['╖  ╓',
          '║╔╗║',
          '╚╝╚╝'],
    'X': ['═╮╭═',
          ' ╠╣ ',
          '═╯╰═'],
    'Y': ['╖ ╓',
          '╚╦╝',
          ' ╜ '],
    'Z': ['══╗',
          ' ╱ ',
          '╚══'],
    ' ': ['   ',
          '   ',
          '   '],
    '.': [' ',
          ' ',
          '•'],
    ',': [' ',
          ' ',
          '╝'],
    ':': ['•',
          ' ',
          '•'],
    ';': ['•',
          ' ',
          '╝'],
    '-': ['  ',
          '══',
          '  '],
    '-': ['   ',
          '   ',
          '═══'],
    '!': ['╖',
          '║',
          '•'],
    '?': ['╔╗',
          '╔╝',
          '• '],
    '&': ['╭═╮  ',
          '╠═╬╦╯',
          '╰═╯╰ '],
    '/': ['  ╱',
          ' ╱ ',
          '╱  '],
    '\\': ['╲  ',
           ' ╲ ',
           '  ╲'],
    '0': ['╭═╮',
          '║╱║',
          '╰═╯'],
    '1': ['╖',
          '║',
          '╨'],
    '2': ['╒═╮',
          '╭═╝',
          '╚══'],
    '3': ['══╮',
          '══╣',
          '══╯'],
    '4': ['╔ ╗',
          '╚═╣',
          '  ╜'],
    '5': ['╔══',
          '╚═╗',
          '══╝'],
    '6': ['╭═╕',
          '╠═╮',
          '╰═╯'],
    '7': ['══╗',
          ' ╔╝',
          ' ╜ '],
    '8': ['╔═╮',
          '╠═╣',
          '╰═╝'],
    '9': ['╭═╮',
          '╰═╣',
          ' ═╯'],
}


font_map: Final[Dict[str, Font]] = {
    'big': Font(name='big', rows=6, data=big_font),
    'mini': Font(name='mini', rows=3, data=mini_font)
}
