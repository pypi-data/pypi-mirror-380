name: CodeEntropy CI

on:
  push:
    branches: [main]
  pull_request:
  schedule:
    - cron: '0 8 * * 1'

jobs:
  tests:
    name: Run tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025, macos-15]
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5.0.0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6.0.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install CodeEntropy and its testing dependencies
        run: pip install -e .[testing]

      - name: Run test suite
        run: pytest --cov CodeEntropy --cov-report term-missing --cov-append .

      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v2.3.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5.0.0
      - name: Set up Python 3.13
        uses: actions/setup-python@v6.0.0
        with:
          python-version: 3.13
      - name: Install python dependencies
        run: |
          pip install --upgrade pip
          pip install -e .[docs]
      - name: Build docs
        run: cd docs && make

  pre-commit:
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5.0.0
      - name: Set up Python 3.13
        uses: actions/setup-python@v6.0.0
        with:
          python-version: 3.13
      - name: Install python dependencies
        run: |
          pip install --upgrade pip
          pip install -e .[pre-commit,docs,testing]
      - name: Run pre-commit
        run: |
          pre-commit install
          pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

  mdanalysis-compatibility:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        mdanalysis-version: ["2.9.0", "latest"]
    name: MDAnalysis Compatibility Tests
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5.0.0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6.0.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies with MDAnalysis ${{ matrix.mdanalysis-version }}
        run: |
          pip install --upgrade pip
          pip install -e .[testing]
          if [ "${{ matrix.mdanalysis-version }}" = "latest" ]; then
            pip install MDAnalysis
          else
            pip install "MDAnalysis==${{ matrix.mdanalysis-version }}"
          fi

      - name: Run compatibility tests
        run: pytest --cov CodeEntropy --cov-report=term-missing --cov-append

      - name: Create Issue on Failure
        if: failure()
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYTHON_VERSION: ${{ matrix.python-version }}
          MDA_VERSION: ${{ matrix.mdanalysis-version }}
          RUN_NUMBER: ${{ github.run_number }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          filename: .github/workflows/mdanalysis-compatibility-failure.md
          update_existing: true
          search_existing: open
