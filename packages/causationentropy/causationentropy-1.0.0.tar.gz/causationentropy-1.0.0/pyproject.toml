[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "causationentropy"
version = "1.0.0"
authors = [
    {name = "Kevin Slote", email = "kslote1@gmail.com"},
]
description = "Causal network discovery using optimal causation entropy"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = [
    "causality",
    "causal-inference",
    "causal-discovery",
    "causal-network",
    "granger-causality",
    "causation-entropy",
    "entropy",
    "mutual-information",
    "information-theory",
    "time-series",
    "multivariate-time-series",
    "graph-theory",
    "network-science",
    "bayesian-networks",
    "markov-models",
    "statistical-inference",
    "machine-learning",
    "dimensionality-reduction",
    "complex-systems",
    "dynamical-systems",
    "neuroscience",
    "computational-biology",
    "epidemiology",
    "econometrics",
]

dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
    "networkx>=2.6.0",
    "matplotlib>=3.4.0",
    "tqdm>=4.60.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "flake8>=4.0",
    "isort>=5.0",
    "mypy>=0.900",
    "pre-commit>=2.15.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "numpydoc>=1.0",
    "jupyter-book>=0.12.0",
]
plotting = [
    "seaborn>=0.11",
    "plotly>=5.0",
    "graphviz>=0.17",
]
all = [
    "causationentropy[dev,docs,plotting]"
]

[project.urls]
Homepage = "https://github.com/Center-For-Complex-Systems-Science/causationentropy"
Repository = "https://github.com/Center-For-Complex-Systems-Science/causationentropy"
Documentation = "https://causationentropy.readthedocs.io/en/latest/"  # when live
"Bug Tracker" = "https://github.com/Center-For-Complex-Systems-Science/causationentropy/issues"

#[project.scripts]
#causationentropy-cli = "causationentropy.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["causationentropy*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
causationentropy = ["datasets/data/*", "*.json", "*.yaml"]

# Development tools configuration
[tool.pytest.ini_options]
testpaths = ["causationentropy/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=causationentropy --cov-report=html --cov-report=term-missing -m \"not integration\""
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["causationentropy"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "scipy.*",
    "sklearn.*",
    "networkx.*",
    "matplotlib.*",
    "seaborn.*",
    "plotly.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["causationentropy"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]