[LOCALE]
auto_index.description = If enabled, each URL used by the model will be automatically indexed using LlamaIndex (persistent index).
auto_index.label = Auto-index all used URLs using LlamaIndex
bing_api_key.description = You can obtain your own API key at https://www.microsoft.com/en-us/bing/apis/bing-web-search-api
bing_api_key.label = Microsoft Bing Search API KEY
bing_endpoint.description = API endpoint for the Bing Search API, default: https://api.bing.microsoft.com/v7.0/search
bing_endpoint.label = Bing Search API endpoint
chunk_size.description = Per-page content chunk size (maximum characters per chunk).
chunk_size.label = Per-page content chunk size
cmd.web_extract_images.description = If enabled, model will be able to open URL and get list of all images from it.
cmd.web_extract_images.label = Enable: extract_images from webpage
cmd.web_extract_links.description = If enabled, model will be able to open URL and get list of all links from it.
cmd.web_extract_links.label = Enable: extract_links from webpage
cmd.web_index.description = Enable `web_index` command execution.\nIf enabled, the model will be able to index pages and external content using LlamaIndex (persistent index).
cmd.web_index.label = Enable: indexing web and external content
cmd.web_index_query.description = Enable `web_index_query` command execution.\nIf enabled, the model will be able to quickly index and query web content using LlamaIndex (in-memory index).
cmd.web_index_query.label = Enable: quick query the Web and external content
cmd.web_index_query.tooltip = Example prompt: Query the Website http://example.com about (question).
cmd.web_index.tooltip = Example prompt: Index the Website http://example.com.
cmd.web_request.description = Enable `web_request` command execution.\nIf enabled, model will be able to send any HTTP request to specified URL or API endpoint.
cmd.web_request.label = Enable: sending any HTTP requests
cmd.web_search.description = Enable `web_search` command execution.\nIf enabled, the model will be able to search the Web.
cmd.web_search.label = Enable: search the Web
cmd.web_search.tooltip = Example prompt: Search the Web for (question).
cmd.web_url_open.description = Enable `web_url_open` command execution.\nIf enabled, the model will be able to open a specified URL and summarize the content.
cmd.web_url_open.label = Enable: opening URLs
cmd.web_url_open.tooltip = Example prompt: Read the Website http://example.com.
cmd.web_url_raw.description = Enable `web_url_raw` command execution.\nIf enabled, the model will be able to open a specified URL and get the raw content.
cmd.web_url_raw.label = Enable: reading the raw content from URLs
cmd.web_url_raw.tooltip = Example prompt: Give me the raw content of http://example.com.
cmd.web_urls.description = Enable `web_urls` command execution.\nIf enabled, the model will be able to search the Web and get a list of found URLs.
cmd.web_urls.label = Enable: getting a list of URLs from search results
cmd.web_urls.tooltip = Example prompt: Give me the list of URLs for query (question).
ddg_backend.description = Engine backend: auto, html, lite.
ddg_backend.label = Backend
ddg_region.description = DuckDuckGo region, e.g. us-en, pl-pl, wt-wt
ddg_region.label = Region (kl)
ddg_safesearch.description = Allowed values: on, moderate, off
ddg_safesearch.label = SafeSearch
ddg_timelimit.description = Use: d, w, m, y or leave empty for any time.
ddg_timelimit.label = Time limit (df)
disable_ssl.description = Disables SSL verification when crawling web pages.
disable_ssl.label = Disable SSL verification
google_api_cx.description = You can find your CX ID at https://programmablesearchengine.google.com/controlpanel/all\nRemember to enable the "Search on ALL internet pages" option in project settings.
google_api_cx.label = Google Custom Search CX ID
google_api_key.description = You can obtain your own API key at https://developers.google.com/custom-search/v1/overview
google_api_key.label = Google Custom Search API KEY
idx.description = ID of the index to use for web page indexing (persistent index).
idx.label = Index to use
img_thumbnail.description = Enable fetching thumbnails from opened websites.
img_thumbnail.label = Show thumbnail images
max_open_urls.description = Number of max URLs to open at once
max_open_urls.label = Number of max URLs to open at once
max_page_content_length.description = Maximum characters of page content to retrieve (0 = unlimited).
max_page_content_length.label = Max content characters
max_result_length.description = Maximum length of the summarized or raw result (characters). (0 = unlimited).
max_result_length.label = Max result length
model_tmp_query.description = Model used to query the temporary index for the `web_index_query` command (in-memory index).
model_tmp_query.label = Model for querying in-memory index
model_tmp_query.tooltip = Model used to query the temporary index for the `web_index_query` command (in-memory index)
num_pages.description = Maximum number of pages to search per query.
num_pages.label = Number of pages to search
plugin.description = Provides the ability to connect to the Web, search web pages for current data, and index external content using LlamaIndex data loaders.
plugin.name = Web Search
prompt_summarize.description = Prompt used for summarizing web search results, use {query} as a placeholder for the search query.
prompt_summarize.label = Summarize prompt
prompt_summarize_url.description = Prompt used for summarizing a specified URL page.
prompt_summarize_url.label = Summarize prompt (URL open)
provider.description = Select the search engine provider, default: Google.
provider.label = Provider
raw.description = Return raw content from web search instead of summarized content
raw.label = Use raw content (without summarization)
summary_max_tokens.description = Maximum tokens in output when generating a summary.
summary_max_tokens.label = Max summary tokens
summary_model.description = Model used for summarizing web pages, default: gpt-3.5-turbo-1106.
summary_model.label = Model used for web page summarization
timeout.description = Connection timeout (seconds)
timeout.label = Timeout
user_agent.description = User agent to use when making requests, default: Mozilla/5.0.
user_agent.label = User agent
