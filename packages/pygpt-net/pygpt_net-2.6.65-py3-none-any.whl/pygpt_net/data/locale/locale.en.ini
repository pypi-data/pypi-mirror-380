[LOCALE]
about.btn.github = GitHub
about.btn.support = Donate
about.btn.website = Website
about.thanks = Special thanks to:
about.thanks.contributors = GitHub community
about.thanks.sponsors = Sponsors
about.thanks.supporters = Supporters
action.add = Add
action.clear = Clear
action.close = Close
action.cmd.expand = JSON output
action.copy = Copy
action.ctx_copy_id = Copy ID
action.ctx.indexed = Last indexed at
action.ctx.new = New context...
action.ctx.new.in_group = New context in: {group}...
action.ctx_reset = Reset (clear)
action.delete = Delete
action.download = Download
action.duplicate = Duplicate
action.edit = Edit
action.group.delete.all = Delete all (with items)
action.group.delete.only = Delete (group only)
action.group.new = New group
action.group.remove = Remove from group
action.idx = Index with LlamaIndex...
action.idx.remove = Remove from
action.mkdir = Create directory...
action.move_to = Move to
action.new = New...
action.open = Open
action.open_dir = Open in directory...
action.open_dir_dest = Open Destination Directory
action.open_dir_src = Open Source Directory
action.open_dir_storage = Open Storage directory
action.open_new_tab = Open in a new tab
action.open_new_window = Open (new window)
action.paste = Paste
action.pin = Pin on top
action.preview = Preview
action.profile.delete = Remove profile (from list only)
action.profile.delete_all = Delete profile (with all user files)
action.redo = Redo
action.refresh = Refresh
action.reload = Reload
action.rename = Rename
action.reset = Reset
action.restore = Restore
action.save = Save
action.save_as = Save as...
action.save_selection_as = Save selection as...
action.select_all = Select all
action.tab.add.chat = Add a new chat
action.tab.add.chat.tooltip = Add a new chat (RMB click to more options...)
action.tab.add.notepad = Add a new notepad
action.tab.add.tool = Add a new tool
action.tab.close = Close
action.tab.close_all.chat = Close all chats
action.tab.close_all.notepad = Close all notepads
action.tab.move.left = Move to left column
action.tab.move.right = Move to right column
action.touch = Create file...
action.truncate = Truncate
action.undo = Undo
action.unpin = Unpin
action.upload = Upload files here...
action.use = Use
action.use.attachment = As attachment
action.use.copy_sys_path = Copy system path
action.use.copy_work_path = Copy working path
action.use.image = As image...
action.use.read_cmd = Ask for reading this file...
action.video.open = Open video or audio...
action.video.play = Play video or audio...
action.video.transcribe = Transcribe audio...
agent.builder.confirm.clear.msg = Do you really want to clear the graph?
agent.builder.confirm.clear.title = Clear
agent.builder.confirm.delete.msg = Do you really want to delete the agent?
agent.builder.title = Agents Builder
agent.coder.additional.label = Additional prompt
agent.coder.additional.prompt.desc = Additional prompt for agent (will be added to the base prompt)
agent.coder.base.label = Base prompt
agent.coder.base.prompt.desc = Code execute prompt (initial)
agent.eval.feedback = Feedback
agent.eval.next = Re-running with feedback
agent.eval.score = Evaluator score
agent.eval.score.good = Response is good enough, exiting.
agent.evolve.generation = Generation
agent.evolve.maxgen_limit = Max generations reached, exiting.
agent.evolve.option.max_generations = Max generations
agent.evolve.option.num_parents = Num of parents
agent.evolve.running = Running agent
agent.evolve.winner = Winner: agent
agent.infinity.confirm.content = WARNING: You are attempting to run an infinite loop! This may cause heavy token usage. Are you sure you want to continue?
agent.name.supervisor = Supervisor
agent.name.worker = Worker
agent.option.debug.trace_id = Trace ID
agent.option.debug.trace_id.desc = Optional Trace ID for tracing in OpenAI panel: https://platform.openai.com/logs?api=traces (OpenAI agents only)
agent.option.model = Model
agent.option.name = Name
agent.option.prompt = Prompt
agent.option.prompt.b1.desc = Prompt for bot 1
agent.option.prompt.b2.desc = Prompt for bot 2
agent.option.prompt.base.desc = Prompt for Base Agent
agent.option.prompt.chooser.desc = Prompt for Chooser agent
agent.option.prompt.desc = Prompt for agent
agent.option.prompt.feedback.desc = Prompt for feedback evaluation
agent.option.prompt.planner.desc = Prompt for Planner agent
agent.option.prompt.refine.desc = Prompt for plan refining
agent.option.prompt.search.desc = Prompt for search agent
agent.option.prompt.supervisor.desc = Prompt for Supervisor
agent.option.prompt.worker.desc = Prompt for Worker
agent.option.refine.after_each = After each step
agent.option.refine.after_each.desc = Refine plan after each step
agent.option.role = Short description of the agent's operation for instructing the model (optional)
agent.option.role.label = Role
agent.option.section.base = Base agent
agent.option.section.chooser = Chooser
agent.option.section.feedback = Feedback
agent.option.section.planner = Planner
agent.option.section.refine = Refine plan
agent.option.section.search = Search
agent.option.section.supervisor = Supervisor
agent.option.section.worker = Worker
agent.option.section.writer = Writer
agent.option.tools.local = Allow local tools
agent.option.tools.local.desc = Allow usage of local tools for this agent
agent.option.tools.remote = Allow remote tools
agent.option.tools.remote.desc = Allow usage of remote tools for this agent
agent.planner.display.executor = Executor
agent.planner.display.executor_agent = FunctionAgent
agent.planner.display.planner = PlannerWorkflow
agent.planner.label.execute = Execute
agent.planner.label.plan = Plan
agent.planner.label.refine = Refine
agent.planner.label.refine.index = Refine {index}
agent.planner.label.refine.index_total = Refine {index}/{total}
agent.planner.label.step = Step
agent.planner.label.subtask = Sub-task
agent.planner.label.subtask.index = Sub-task {index}
agent.planner.label.subtask.index_total = Sub-task {index}/{total}
agent.planner.label.with_name = {base}: {name}
agent.planner.plan.label = Planner (initial)
agent.planner.plan.prompt.desc = Initial plan prompt
agent.planner.refine.label = Planner (refine)
agent.planner.refine.prompt.desc = Plan refine prompt
agent.planner.step.label = Execute prompt
agent.planner.step.prompt.desc = Steps execute prompt
agent.planner.ui.current_plan = Current plan:
agent.planner.ui.dependencies = Dependencies:
agent.planner.ui.executing_plan = Executing plan...
agent.planner.ui.execution_stopped = Plan execution stopped.
agent.planner.ui.expected_output = Expected output:
agent.planner.ui.plan_execution_finished = Plan execution finished.
agent.planner.ui.plan_finished = Plan finished.
agent.planner.ui.plan_marked_complete = Planner marked the plan as complete: {reason}
agent.planner.ui.refine_failed_parse = Refine step failed to parse; continuing without changes.
agent.planner.ui.refining_remaining_plan = Refining remaining plan...
agent.planner.ui.subtask_failed = Sub-task failed: {error}
agent.planner.ui.subtask_finished = Finished Sub Task {index}/{total}: {name}
agent.planner.ui.subtask_header.one = **===== Sub Task {index}: {name} =====**
agent.planner.ui.subtask_header.progress = **===== Sub Task {index}/{total}: {name} =====**
agent.planner.ui.updated_remaining_plan = Updated remaining plan:
agent.tab.debug = Debug
alert.preset.empty_id = Name is required.
alert.preset.no_chat_completion = At least one of: chat, completion, img or vision option is required!
alert.snap.file_manager = Snap detected. Please open the directory manually in your file manager:
alert.title = Info
assistant.action.delete = Delete
assistant.action.duplicate = Duplicate
assistant.action.edit = Edit
assistant.api.tip = Help: https://platform.openai.com/assistants
assistant.description = Description
assistant.form.empty.fields = Name and model are required fields.
assistant.func.add = + Function
assistant.functions.label = Functions
assistant.id = ID
assistant.import = Import
assistant.instructions = Instructions (system prompt)
assistant.model = Model
assistant.name = Name
assistant.new = Create
assistant.new.id_tip = Leave empty ID if you are creating a new Assistant.\n...or provide ID from OpenAI if the Assistant already exists on the server.
assistant.run.completed = Run: Completed
assistant.run.failed = Run: Failed
assistant.run.func.call = Run: func call...
assistant.run.listening = Run: in progress...
assistant.store.expire_days = Expire days
assistant.store.expire_days.desc = 0 = Never
assistant.store.files.suffix = files
assistant.store.hide_threads = Hide threads vector stores
assistant.store.id = ID
assistant.store.menu.file.delete = Delete file
assistant.store.name = Name
assistant.store.status = Status
assistant.store.thread_only = (current thread only)
assistant.tool.code_interpreter = Code Interpreter
assistant.tool.file_search = Chat with Files
assistant.tool.function = Function
assistant.tool.retrieval = Retrieval
assistant.vector_store = Vector Store
attachments.auto_index = Auto-index on upload
attachments.btn.add = Add file
attachments.btn.add_url = Web
attachments.btn.clear = Clear
attachments.btn.input.add = Add attachment
attachments.capture_clear = Clear on capture
attachments.clear.confirm = Clear list?
attachments.ctx.indexed = Yes
attachments.ctx.label = Extra context
attachments.ctx.mode.full = Full context
attachments.ctx.mode.off = Off (disable)
attachments.ctx.mode.query = RAG
attachments.ctx.mode.summary = Summary
attachments.ctx.tooltip.list = {num} attachment(s)
attachments.delete.confirm = Remove file from list?
attachments.header.ctx = Ctx
attachments.header.idx = Idx
attachments.header.length = Length (chars / tokens)
attachments.header.name = Name
attachments.header.path = Path
attachments.header.size = Size
attachments.header.store = Vector Store(s)
attachments.options.label = Options
attachments.paste.file = Clipboard attachment
attachments.paste.img = Clipboard image
attachments.paste.success = Added attachment from clipboard
attachments.send_clear = Clear list after sending
attachments.tab = Attachments
attachments_uploaded.btn.clear = Clear
attachments_uploaded.btn.sync = Sync
attachments_uploaded.btn.sync.all = All stores
attachments_uploaded.btn.sync.current = Current only
attachments_uploaded.clear.confirm = WARNING: are you sure you want to delete all these files from the remote server?
attachments_uploaded.delete.confirm = WARNING: are you sure you want to delete this file from the remote server?
attachments_uploaded.sync.tip = Tip: click on 'Sync' to retrieve the file list from OpenAI
attachments_uploaded.tab = Uploaded
audio.auto_turn = Auto (VAD)
audio.cache.clear.confirm = Are you sure you want to delete all cached audio files?
audio.cache.clear.success = OK. All audio cache files cleared.
audio.control.btn = Voice control
audio.loop = Loop
audio.magic_word.detected = Magic word detected!
audio.magic_word.invalid = Not a magic word :(
audio.magic_word.please = Magic word please...
audio.speak.btn = Microphone
audio.speak.btn.continuous = Continuous recording
audio.speak.btn.stop = Stop
audio.speak.btn.stop.tooltip = Click to stop microphone listening
audio.speak.btn.tooltip = Click to start microphone listening
audio.speak.energy = Mic. Volume
audio.speak.ignoring = Ignored (no prefix)
audio.speak.now = Speak now...
audio.speak.sending = Sending...
audio.speak.wait = Wait...
audio.transcribe.auto_convert = Always convert video to mp3 before transcription (ffmpeg required)
audio.transcribe.clear.confirm = Clear current transcription?
audio.transcribe.confirm = Are you sure you want to transcribe this audio/video file?
audio.transcribe.open = Open audio/video file and transcribe...
audio.transcribe.result.finished = Finished: {path} 
audio.transcribe.result.selected = Selected file: {path}
audio.transcribe.tip = Tip: click on "Open..." to begin transcribing the audio from the file. The audio input provider from the plugin settings will be utilized.
audio.transcribe.title = Audio transcribe
calendar.day.label = Set label color...
calendar.day.label.color.blue = Blue
calendar.day.label.color.default = Default
calendar.day.label.color.green = Green
calendar.day.label.color.indigo = Indigo
calendar.day.label.color.orange = Orange
calendar.day.label.color.red = Red
calendar.day.label.color.violet = Violet
calendar.day.label.color.yellow = Yellow
calendar.day.search = Show conversations
calendar.note.label = Day note
changed.confirm = Do you want to save your changes before continuing?
chatbox.label = Chat
chatbox.plugins = plugin(s)
chat.name.bot = AI
chat.name.user = You
chat.prefix.attachment = Attachment
chat.prefix.doc = Sources (LlamaIndex)
chat.prefix.file = File
chat.prefix.img = Image
chat.prefix.url = Link
clipboard.copied = Copied to clipboard.
clipboard.copied_to = Copied to clipboard:
cmd.enabled = + Tools
cmd.tip = Tip: To enable the execution of tools from plugins you must enable the "+ Tools" option.
coming_soon = Coming soon...
common.down = Move down
common.up = Move up
confirm.assistant.delete = Delete assistant?
confirm.assistant.files.clear = Clear files (local only)?
confirm.assistant.files.truncate = Are you sure you want to remove all files from all Assistants?
confirm.assistant.files.truncate.store = Are you sure you want to remove all files from the selected store?
confirm.assistant.functions.clear = Are you sure you want to clear the functions list?
confirm.assistant.functions.import = Import functions from ACTIVE plugins?\nINFO: All functions in the list with the same names will be replaced!
confirm.assistant.import = Import all assistants from API?
confirm.assistant.import_files = Import all files from API?
confirm.assistant.import_files.store = Import current store files from API?
confirm.assistant.store.clear = Clear vector stores (local only)?
confirm.assistant.store.file.delete = Delete selected file in API?
confirm.assistant.store.import = Import all vector stores from API?
confirm.assistant.store.refresh = Refresh all stores?
confirm.assistant.store.truncate = Delete all vector stores in API?
confirm.ctx.delete = Delete group?
confirm.ctx.delete.all = Delete group and all items?
confirm.img.delete = Delete file from disk?
confirm.preset.avatar.delete = Are you sure you want to delete the avatar?
confirm.preset.clear = Are you sure you want to clear the preset?
confirm.preset.delete = Are you sure you want to delete this preset?
confirm.preset.overwrite = Preset exists. Overwrite?
confirm.preset.restore = Restore default preset for this mode?
confirm.profile.delete = Are you sure you want to delete the profile? It will only be removed from the list.
confirm.profile.delete_all = Are you sure you want to delete the profile with all config files and user data files in the profile working directory?
confirm.profile.reset = Are you sure you want to restore the profile to default settings? WARNING: All configuration files and context database will be removed! The data directory will be kept - to remove it, you must delete it manually or use the delete option.
context.btn.clear = Clear memory
context.items = items
context.label = Context
context.tokens = tokens
ctx.delete.all.confirm = Are you sure you want to delete ALL history contexts?
ctx.delete.confirm = Are you sure you want to delete?
ctx.delete.item.confirm = Delete conversation item?
ctx.delete.item.link = delete
ctx.extra.audio = Read response (audio)
ctx.extra.collapse = Collapse
ctx.extra.copied = Copied
ctx.extra.copy = Copy
ctx.extra.copy_code = Copy
ctx.extra.delete = Delete this item
ctx.extra.edit = Edit and regenerate (from this point)
ctx.extra.expand = Expand
ctx.extra.join = Append to previous response (merge)
ctx.extra.preview = Preview
ctx.extra.reply = Regenerate response (from this point)
ctx.extra.run = Run
ctx.join.item.confirm = Append this response to the previous response (merge items)?
ctx.list.label = Context and history
ctx.list.search.placeholder = Search...
ctx.new = New
ctx.new.prefix = New
ctx.replay.item.confirm = Regenerate response from this point?
ctx.reset_meta.confirm = Are you sure you want to reset this context? All items will be deleted!
ctx.tokens = tokens
db.backup = Auto backup
db.backup.tip = Create a backup before every delete/truncate/update
db.limit = Limit
db.next = Next
db.order = Order
db.page = Page
db.prev = Prev
db.refresh = Refresh
db.search = Search
db.search_in = in
db.search.placeholder = Search...
db.sort = Sort by
db.table = Table:
db.time_convert = Convert time()
db.time_convert.tip = Convert timestamp columns to YYYY-MM-DD HH:MM:SS format
dialog.about.build = Build
dialog.about.docs = Documentation
dialog.about.email = Email
dialog.about.github = GitHub
dialog.about.title = About
dialog.about.version = Version
dialog.about.website = Official website
dialog.agent.not_selected = Please select or add an agent first.
dialog.assistant = Create / Edit assistant
dialog.assistant.btn.clear_func = Clear
dialog.assistant.btn.close = Cancel
dialog.assistant.btn.current = Use current
dialog.assistant.btn.import_func = Import functions
dialog.assistant.btn.save = Save
dialog.assistant.btn.store = Vector Stores
dialog.assistant.store = OpenAI Vector Stores
dialog.assistant.store.alert.assign = Please assign a vector store for the Assistant first.
dialog.assistant.store.alert.select = Please select a vector store first.
dialog.assistant.store.btn.close = Cancel
dialog.assistant.store.btn.new = Create
dialog.assistant.store.btn.refresh_status = Refresh status
dialog.assistant.store.btn.save = Save
dialog.assistant.store.btn.upload.dir = + Directory
dialog.assistant.store.btn.upload.files = + Files
dialog.assistant.store.delete.confirm = Are you sure you want to delete the OpenAI Vector Store?
dialog.assistant.store.menu.all = All stores...
dialog.assistant.store.menu.all.clear_files = Clear files (all, local only)
dialog.assistant.store.menu.all.clear_store = Clear vector stores (all, local only)
dialog.assistant.store.menu.all.import_all = Import everything (all, stores + files)
dialog.assistant.store.menu.all.import_files = Import files only (all)
dialog.assistant.store.menu.all.refresh_store = Refresh all statuses
dialog.assistant.store.menu.all.truncate_files = Truncate files (all, local + remote)
dialog.assistant.store.menu.all.truncate_store = Truncate vector stores (all, local + remote)
dialog.assistant.store.menu.current = Current store...
dialog.assistant.store.menu.current.clear_files = Clear files (local only)
dialog.assistant.store.menu.current.delete = Delete store (+ files, local + remote)
dialog.assistant.store.menu.current.import_files = Import files
dialog.assistant.store.menu.current.refresh_store = Refresh status
dialog.assistant.store.menu.current.truncate_files = Truncate files (local + remote)
dialog.changelog.title = Changelog
dialog.confirm.no = No
dialog.confirm.title = Confirmation
dialog.confirm.yes = Yes
dialog.create.dismiss = Cancel
dialog.create.title = Name
dialog.create.update = Create
dialog.css.restore.confirm = Restore default CSS? (all changes in custom CSS files will be moved to .backup files)
dialog.css.restore.confirm.success = OK. Restored to default CSS styles.
dialog.editor.btn.defaults = Restore
dialog.editor.btn.defaults.app = Load defaults
dialog.editor.btn.save = Save
dialog.editor.label = Editing config file - restart is required to reload changes.
dialog.editor.title = Edit JSON/CSS file
dialog.find.btn.clear = Clear
dialog.find.btn.find_next = Find Next
dialog.find.btn.find_prev = Find Prev
dialog.find.title = Find...
dialog.html_canvas.title = HTML/JS Canvas (Chromium)
dialog.image.title = Generated image
dialog.interpreter.title = Python Code Interpreter
dialog.license.accept = I agree
dialog.license.label = By using this Software you are accepting the following terms:
dialog.license.title = License
dialog.logger.btn.clear = Clear
dialog.logger.title = Logger
dialog.models.editor = Models editor
dialog.models.editor.btn.defaults.app = Load defaults
dialog.models.editor.btn.defaults.user = Undo changes
dialog.models.editor.btn.new = Create
dialog.models.editor.btn.save = Save
dialog.models.editor.defaults.app.confirm = Load models factory settings?
dialog.models.editor.defaults.app.result = Restored to models factory settings.
dialog.models.editor.defaults.user.confirm = Undo current changes?
dialog.models.editor.defaults.user.result = Restored models user config
dialog.models.editor.delete.confirm = Are you sure you want to delete the model?
dialog.models.importer = Import models...
dialog.models.importer.btn.cancel = Cancel
dialog.models.importer.btn.refresh = Refresh
dialog.models.importer.btn.save = Save
dialog.ollama.model_not_found = The requested model ({model}) is not available in your Ollama.\nPlease download the model first by executing the command:\nollama pull {model}
dialog.ollama.not_installed = Ollama is not installed or not running.\nPlease install Ollama first by visiting:\nhttps://ollama.com/download
dialog.plugin_settings = Plugin settings
dialog.plugin.settings.btn.defaults.app = Load defaults
dialog.plugin.settings.btn.defaults.user = Undo changes
dialog.plugin.settings.btn.save = Save
dialog.plugin.settings.defaults.app.confirm = Load factory plugin settings?
dialog.plugin.settings.defaults.app.result = Restored to plugin factory settings.
dialog.plugin.settings.defaults.user.confirm = Undo current changes?
dialog.plugin.settings.defaults.user.result = Restored plugin user config
dialog.preset = Preset editor
dialog.preset.btn.current = Use current
dialog.preset.btn.save = Save
dialog.preset.plugins.editor = Plugins preset editor
dialog.profile.alert.delete.current = Cannot delete the current active profile!
dialog.profile.alert.duplicate.not_empty = Directory is not empty and there is no previous config inside! Aborting.\n\nTip: choose an existing workdir or an empty directory to create a new workdir in it.
dialog.profile.alert.name.empty = Name cannot be empty!
dialog.profile.alert.path.empty = Workdir path cannot be empty!
dialog.profile.alert.path.not_exists = Directory does not exist!
dialog.profile.alert.path.same = Source and destination paths are the same! Aborted.
dialog.profile.alert.src.empty = Source profile not found! Aborted.
dialog.profile.checkbox.include_datadir = + "data" directory
dialog.profile.checkbox.include_db = + database
dialog.profile.checkbox.switch = Switch to created profile
dialog.profile.editor = Profiles
dialog.profile.item.btn.create = Create
dialog.profile.item.btn.dismiss = Cancel
dialog.profile.item.btn.duplicate = Duplicate here
dialog.profile.item.btn.update = Update
dialog.profile.item.editor = Profile
dialog.profile.name.label = Profile name
dialog.profile.new = New profile
dialog.profile.status.changed = Profile changed to
dialog.profile.status.created = Profile created.
dialog.profile.status.deleted = Profile deleted
dialog.profile.status.duplicated = Profile duplicated.
dialog.profile.status.removed = Profile removed from list
dialog.profile.status.updated = Profile updated.
dialog.profile.tip = By creating new profiles, you can use separate settings, different context histories, and user data, and quickly switch between them.
dialog.profile.workdir.label = Workdir (directory for config files and user data)
dialog.rename.dismiss = Cancel
dialog.rename.title = Change name
dialog.rename.update = Update name
dialog.settings = Settings
dialog.settings.btn.defaults.app = Load defaults
dialog.settings.btn.defaults.user = Undo changes
dialog.settings.btn.save = Save
dialog.settings.defaults.app.result = Restored to factory settings. Previous settings saved in: config.json.backup.
dialog.settings.defaults.user.result = Restored user config
dialog.start.btn = Go to settings...
dialog.start.link = https://platform.openai.com/account/api-keys
dialog.start.settings.text = If you already have an API key, you can configure it in the settings window.\nClick the "Go to Settings" button, and then paste your API key into the API key field.
dialog.start.title = API key is not configured
dialog.start.title.text = Your API key for this provider is not configured yet.\n\nPlease go to the menu Config -> Settings -> API Keys,\nand paste your API key into the API Key field in provider's tab:
dialog.translator.title = Translator
dialog.url.dismiss = Cancel
dialog.url.tip = Provide the URL of the web page you want to attach as additional context, e.g., https://pl.wikipedia.org/wiki/Elon_Musk, or a YouTube video to transcribe, e.g., https://www.youtube.com/watch?v=CRRlbK5w8AE.
dialog.url.title = Add web or external content to provide additional context.
dialog.url.update = Add
dialog.workdir.change.confirm = Are you sure you want to change/move workdir to:\n{path}?
dialog.workdir.change.empty.alert = Directory is not empty! Aborting.
dialog.workdir.reset.btn = Current
dialog.workdir.result.directory_not_exists = Destination directory does not exist!
dialog.workdir.result.failed = An error occurred while moving the working directory.
dialog.workdir.result.no_free_space = Too low space on disk! Required: {required}, Free space: {free}.
dialog.workdir.result.same_directory = Nothing to move.
dialog.workdir.result.success = [OK] The working directory is currently set to: {path}
dialog.workdir.result.wait = Please wait... moving the current working directory... This may take a while...
dialog.workdir.tip = Choose a directory from the disk and click 'Change/Move...' to move the current working directory to a new location, or to set the current working directory to an existing one. Required disk space (for move): {size}
dialog.workdir.title = Change working directory
dialog.workdir.update.btn = Change/Move...
dialog.workdir.update.confirm = EXISTING WORKDIR: The directory "{path}" is not empty and already contains data from another workdir. Would you like to ONLY set this existing directory as the current workdir (without moving any data)?
dictionary.assistant.tool.function.desc = Description (optional)
dictionary.assistant.tool.function.name = Function name
dictionary.assistant.tool.function.params = Function params (JSON object)
dictionary.cmd.param.description = Description (optional)
dictionary.cmd.param.name = Param name
dictionary.cmd.param.required = Required (optional)
dictionary.cmd.param.type = Param type
dictionary.config.access.audio.event.speech.disabled.muted_action = Muted action
dictionary.config.access.shortcuts.action = Action to trigger
dictionary.config.access.shortcuts.key = Keyboard key
dictionary.config.access.shortcuts.key_modifier = Keyboard modifier
dictionary.config.llama.hub.loaders.args.loader = Data loader
dictionary.config.llama.hub.loaders.args.name = Name of keyword argument
dictionary.config.llama.hub.loaders.args.type = Type: for dict use JSON string, for list: item1,item2,etc.
dictionary.config.llama.hub.loaders.args.value = Value of keyword argument
dictionary.config.llama.hub.loaders.ext = File extensions (separated by comma if more than one)
dictionary.config.llama.hub.loaders.loader = Loader name on LlamaHub (name is passed to download_loader())
dictionary.config.llama.idx.custom_meta.extensions = File extension(s), separated by comma. Use * (asterisk) as an extension if you want to apply field to all files
dictionary.config.llama.idx.custom_meta.key = Metadata key (field name)
dictionary.config.llama.idx.custom_meta.value = Metadata value. Allowed placeholders: {path}, {relative_path} {filename}, {dirname}, {relative_dir} {ext}, {size}, {mtime}, {date}, {date_time}, {time}, {timestamp}. Set an empty value to remove the field with the specified key from metadata.
dictionary.config.llama.idx.custom_meta.web.key = Metadata key (field name)
dictionary.config.llama.idx.custom_meta.web.loader = Data type (loader)
dictionary.config.llama.idx.custom_meta.web.value = Metadata value. Allowed placeholders: {mtime}, {date}, {date_time}, {time}, {timestamp} + {data loader args}
dictionary.config.llama.idx.embeddings.args.name = Name of keyword argument
dictionary.config.llama.idx.embeddings.args.type = Type: for dict use JSON string, for list: item1,item2,etc.
dictionary.config.llama.idx.embeddings.args.value = Value of keyword argument
dictionary.config.llama.idx.embeddings.env.name = ENV name (to set with os.environ)
dictionary.config.llama.idx.embeddings.env.value = ENV value, use {config_key} as a placeholder to use the value from the application configuration.
dictionary.config.llama.idx.list.id = ID (directory name for index)
dictionary.config.llama.idx.list.model_embed = Model to use for embedding (indexing), default: gpt-3.5-turbo 
dictionary.config.llama.idx.list.model_query = Model for querying
dictionary.config.llama.idx.list.name = Name
dictionary.config.llama.idx.storage.args.name = Name of keyword argument
dictionary.config.llama.idx.storage.args.type = Type: for dict use JSON string, for list: item1,item2,etc.
dictionary.config.llama.idx.storage.args.value = Value of keyword argument
dictionary.model.langchain.args.name = Name of keyword argument
dictionary.model.langchain.args.type = Type: for dict use JSON string, for list: item1,item2,etc.
dictionary.model.langchain.args.value = Value of keyword argument
dictionary.model.langchain.env.name = ENV name (to set with os.environ)
dictionary.model.langchain.env.value = ENV value, use {config_key} as a placeholder to use the value from the application configuration.
dictionary.model.llama_index.args.name = Name of keyword argument
dictionary.model.llama_index.args.type = Type: for dict use JSON string, for list: item1,item2,etc.
dictionary.model.llama_index.args.value = Value of keyword argument
dictionary.model.llama_index.env.name = ENV name (to set with os.environ)
dictionary.model.llama_index.env.value = ENV value, use {config_key} as a placeholder to use the value from the application configuration.
dictionary.plugin.agent.prompts.enabled = Enabled (on/off)
dictionary.plugin.agent.prompts.name = Name
dictionary.plugin.agent.prompts.prompt = Prompt to handle autonomous mode
dictionary.plugin.audio_input.bing_args.name = Keyword argument name
dictionary.plugin.audio_input.bing_args.type = Type: for dict use JSON string, for list: item1,item2,etc.
dictionary.plugin.audio_input.bing_args.value = Keyword argument value
dictionary.plugin.audio_input.google_args.name = Keyword argument name
dictionary.plugin.audio_input.google_args.type = Type: for dict use JSON string, for list: item1,item2,etc.
dictionary.plugin.audio_input.google_args.value = Keyword argument value
dictionary.plugin.audio_input.google_cloud_args.name = Keyword argument name
dictionary.plugin.audio_input.google_cloud_args.type = Type: for dict use JSON string, for list: item1,item2,etc.
dictionary.plugin.audio_input.google_cloud_args.value = Keyword argument value
dictionary.plugin.cmd_api.cmds.enabled = Enabled (True/False)
dictionary.plugin.cmd_api.cmds.endpoint = Endpoint: API endpoint URL, use {param} as GET param placeholders
dictionary.plugin.cmd_api.cmds.get_params = GET params: list, separated by comma, GET params to append to endpoint URL
dictionary.plugin.cmd_api.cmds.headers = Headers: provide the JSON object with a dictionary of extra request headers, like Authorization, API keys, etc.
dictionary.plugin.cmd_api.cmds.instruction = Instruction: description for the model on when and how to use this API call
dictionary.plugin.cmd_api.cmds.name = Name: unique API call name (ID)
dictionary.plugin.cmd_api.cmds.post_json = POST JSON: provide the JSON object, template to send in POST JSON request, use %param% as POST param placeholders
dictionary.plugin.cmd_api.cmds.post_params = POST params: list, separated by comma, POST params to send in POST request
dictionary.plugin.cmd_api.cmds.type = Request type: use GET for basic GET request, POST to send encoded POST params or POST_JSON to send JSON-encoded object as body
dictionary.plugin.cmd_custom.cmds.cmd = Command to execute
dictionary.plugin.cmd_custom.cmds.enabled = Enabled (True/False)
dictionary.plugin.cmd_custom.cmds.instruction = Instruction prompt
dictionary.plugin.cmd_custom.cmds.name = Command name
dictionary.plugin.cmd_custom.cmds.params = Params list (separated by comma)
dictionary.plugin.crontab.crontab.crontab = Crontab (cron-syntax)
dictionary.plugin.crontab.crontab.enabled = Enabled (True/False)
dictionary.plugin.crontab.crontab.preset = Preset to use
dictionary.plugin.crontab.crontab.prompt = Prompt to send
dictionary.plugin.extra_prompt.prompts.enabled = Active (True/False)
dictionary.plugin.extra_prompt.prompts.name = Name
dictionary.plugin.extra_prompt.prompts.prompt = Prompt to append to the system prompt
dictionary.plugin.self_loop.prompts.enabled = Active (True/False)
dictionary.plugin.self_loop.prompts.name = Name
dictionary.plugin.self_loop.prompts.prompt = Prompt (system instruction)
dictionary.preset.tool.function.desc = Description (optional)
dictionary.preset.tool.function.name = Function name
dictionary.preset.tool.function.params = Function params (JSON object)
docker.build.finish = Success! The Docker image has been built. You can now request the execution of the previous command again.
docker.build.start = Building Docker image... please wait...
docker.image.build = The Docker image has not been built yet. This will happen now, and it may take a while (but it's a one-time procedure). The execution of the command has been paused. Once the image is built, please execute the command again.
docker.install = Sandbox requires Docker to be installed. Docker was not detected on this system. Please install Docker first; you can find the instructions here: https://docs.docker.com/engine/install/. The execution of the current command has been paused.
docker.install.snap = \n\nSNAP VERSION: \nYou are not connected to built-in Docker daemon. Please connect the slots with:\n\nsudo snap connect pygpt:docker-executables docker:docker-executables\n\nsudo snap connect pygpt:docker docker:docker-daemon\n\n...and restart the application.
dt.days_ago = days ago
dt.month = month ago
dt.today = today
dt.week = week ago
dt.weeks = weeks ago
dt.yesterday = yesterday
error.assistant_not_selected = Please create, import or select an assistant first!
eval.score = Score
event.audio.app.started = Welcome!
event.audio.app.status = Current mode: {mode}.\nCurrent conversation: {ctx}, last updated {last}.\nTotal conversations: {total}.
event.audio.calendar.add = Memo added to calendar.
event.audio.calendar.clear = Memos cleared in the calendar.
event.audio.camera.captured = Image has been captured from the camera.
event.audio.camera.disabled = Camera disabled.
event.audio.camera.enabled = Camera enabled.
event.audio.cmd = Voice command: {cmd}
event.audio.cmd.unrecognized = Voice command not recognized.
event.audio.confirm = Confirm this command by sending voice input again with the text "I confirm the command".
event.audio.ctx.attachments.clear = Attachments list empty.
event.audio.ctx.created = New context has been created.
event.audio.ctx.current = Current conversation: {ctx}, last updated: {last}.
event.audio.ctx.end = Finished.
event.audio.ctx.last = Your input: {input}. AI response: {output}.
event.audio.ctx.rename = Context renamed to {ctx}.
event.audio.ctx.search.clear = Search string cleared.
event.audio.ctx.search.string = Found records: {num}.
event.audio.ctx.selected = Selected context: {ctx}.
event.audio.input.append = Text appended to input.
event.audio.input.call = Input call.
event.audio.input.disable = Audio input enabled.
event.audio.input.enable = Audio input enabled.
event.audio.input.error = An error occurred during sending input.
event.audio.input.sent = Input sent.
event.audio.input.stopped = Input stopped.
event.audio.input.voice.listen.started = Listening. Please speak now.
event.audio.input.voice.listen.stopped = Listening has been stopped.
event.audio.model.selected = Selected model: {model}
event.audio.mode.selected = Selected mode: {mode}
event.audio.note.add = Note added to notepad.
event.audio.notepad.clear = Notepad cleared.
event.audio.output.disable = Audio output disabled.
event.audio.output.enable = Audio output enabled.
event.audio.preset.selected = Selected preset: {preset}
event.audio.tab.switch = Selected Tab is: {tab}.
event.audio.voice.control.sent = OK.
event.audio.voice.control.started = Voice control activated.
event.audio.voice.control.stopped = Voice control deactivated.
event.audio.voice.control.toggle = Voice control has been toggled.
event.audio.voice.control.unrecognized = Unrecognized command.
event.control.app.exit = App: Exit
event.control.app.status = App: Status
event.control.audio.input.disable = Audio input: Disable
event.control.audio.input.enable = Audio input: Enable
event.control.audio.output.disable = Audio output: Disable
event.control.audio.output.enable = Audio output: Enable
event.control.calendar.add = Memo added to calendar.
event.control.calendar.clear = Memos cleared in the calendar.
event.control.calendar.read = Calendar: Read
event.control.camera.capture = Camera: Capture
event.control.camera.disable = Camera: Disable
event.control.camera.enable = Camera: Enable
event.control.cmd.confirm = Confirmed.
event.control.cmd.list = Commands list (help).
event.control.ctx.attachments.clear = Attachments: Clear
event.control.ctx.current = Context: Current
event.control.ctx.input.append = Input: Append
event.control.ctx.input.clear = Input: Clear
event.control.ctx.input.focus = Input: Focus
event.control.ctx.input.send = Input: Send
event.control.ctx.last = Context: Last
event.control.ctx.new = Context: New
event.control.ctx.next = Context: Next
event.control.ctx.prev = Context: Prev
event.control.ctx.read.all = Context: Read (all)
event.control.ctx.read.last = Context: Read (latest)
event.control.ctx.rename = Context: Rename
event.control.ctx.search.clear = Search string cleared.
event.control.ctx.search.string = Search for conversation.
event.control.ctx.stop = Input: Stop
event.control.input.sent = Input sent.
event.control.input.stopped = Input stopped.
event.control.mode.chat = Mode: Chat
event.control.mode.llama_index = Mode: Chat with Files
event.control.model.next = Model: Next
event.control.model.prev = Model: Prev
event.control.mode.next = Mode: Next
event.control.mode.prev = Mode: Prev
event.control.note.add = Note added to notepad.
event.control.notepad.clear = Notepad cleared.
event.control.notepad.read = Notepad: Read
event.control.preset.next = Preset: Next
event.control.preset.prev = Preset: Prev
event.control.tab.calendar = Tab: Calendar
event.control.tab.chat = Tab: Chat
event.control.tab.draw = Tab: Draw
event.control.tab.files = Tab: Files
event.control.tab.next = Tab: Next
event.control.tab.notepad = Tab: Notepad
event.control.tab.prev = Tab: Prev
event.control.voice_cmd.start = Voice control: Start
event.control.voice_cmd.stop = Voice control: Stop
event.control.voice_cmd.toggle = Voice control: Toggle
event.control.voice_msg.start = Voice input: Start
event.control.voice_msg.stop = Voice input: Stop
event.control.voice_msg.toggle = Voice input: Toggle
exit.msg = Do you like PyGPT? Support the development of the project:
expert.wait.failed: Failed calling expert
expert.wait.status: Waiting for expert...
files.delete.confirm = Delete file/directory?
files.delete.recursive.confirm = Directory is not empty! Are you sure you want to delete the directory and all the files in it?
files.explorer.header.indexed = Indexed at
files.explorer.header.modified = Date modified
files.explorer.header.name = Name
files.explorer.header.size = Size
files.explorer.header.type = Type
files.local.dir.prefix = Path
files.local.upload = Upload files
filter.ctx.counters.all = All counters
filter.ctx.label = Context list display filter
filter.ctx.label.colors = Display by labels
filter.ctx.radio.all = All
filter.ctx.radio.indexed = Indexed (LlamaIndex)
filter.ctx.radio.labeled = Labeled
filter.ctx.radio.pinned = Pinned
header.assistant.tool.function.desc = Description
header.assistant.tool.function.name = Name
header.assistant.tool.function.params = Parameters (JSON)
html_canvas.btn.clear = Clear
html_canvas.btn.edit = Edit source
html_canvas.clear.confirm = Clear HTML canvas output?
icon.audio.input = Enable/disable audio input
icon.audio.output = Enable/disable audio output
icon.remote_tool.web = Web Search (remote tool, not a local tool)
icon.remote_tool.web.disabled = Web Search (remote tool, not a local tool) - disabled
icon.remote_tool.web.enabled = Web Search (remote tool, not a local tool) - enabled
icon.video.capture = Enable/disable camera capture
idx.btn.clear = Clear index
idx.btn.index_all = Index all
idx.btn.truncate = Clear index (all)
idx.confirm.clear.content = Are you sure you want to delete all data in the index?\nThis will delete the entire index directory from disk!
idx.confirm.db.content = Are you sure you want to index records from the database?
idx.confirm.file.content = Are you sure you want to index this file/directory:\n{dir}?
idx.confirm.file.remove.content = Are you sure you want to delete this file/directory from the index:\n{dir}?
idx.confirm.files.content = Are you sure you want to index all the files in the directory:\n{dir}?
idx.index_now = Index
idx.last = Last DB auto-indexing
idx.new = New
idx.query.raw = Query index only (without chat)
idx.status.empty = Nothing indexed.
idx.status.error = [ERROR] Nothing indexed.
idx.status.indexing = Indexing... please wait...
idx.status.success = [OK] Indexed items:
idx.status.truncate.error = [ERROR] Index not truncated.
idx.status.truncate.success = [OK] Index truncated.
idx.status.truncating = Removing index... please wait...
idx.token.warn = This will consume additional tokens to embed the data.
img.action.open = Open full size
img.action.save = Save As...
img.raw = Raw mode
img.save.title = Save image
img.status.downloading = Downloading... 
img.status.error = Image generation error
img.status.finished = Image generated and downloaded.
img.status.generating = Please wait... generating image from
img.status.prompt.error = Image prompt generation by model error
img.status.prompt.wait = Asking for image prompt... please wait...
img.status.save.error = Image save error
info.settings.all.saved = All settings saved
info.settings.saved = Settings saved
inline.vision = + Vision
input.btn.cancel = Cancel
input.btn.send = Send
input.btn.stop = Stop
input.btn.update = Update
input.label = Input (Your prompt)
input.radio.enter = Enter
input.radio.enter_shift = Shift+Enter
input.radio.none = Off
input.search.placeholder = Search...
input.send_clear = Clear on send
input.stream = Stream
input.tab = Input
input.tab.tooltip = {chars} chars (~{tokens} tokens)
interpreter.all = Execute history (all)
interpreter.auto_clear = Clear output on send
interpreter.btn.clear = Clear output
interpreter.btn.send = Send / execute
interpreter.clear.confirm = Clear the current window?
interpreter.edit = Edit mode
interpreter.edit_label.edit = Code (history)
interpreter.edit_label.output = Output
interpreter.input.placeholder = Python code to execute...\n\n/restart - restart kernel\n/clear - clear output
interpreter.menu.file = File
interpreter.menu.file.clear_all = Clear all
interpreter.menu.file.clear_history = Clear history
interpreter.menu.file.clear_output = Clear output
interpreter.menu.kernel = Kernel
interpreter.menu.kernel.restart = IPython: restart kernel
ipython.docker.build.finish = Success! The Docker image for IPython has been built.
ipython.docker.build.start = Building Docker image... please wait...
ipython.docker.install = Running IPython requires Docker to be installed. Docker was not detected on this system. Please install Docker first; you can find the instructions here: https://docs.docker.com/engine/install/. The execution of the current command has been paused.
ipython.docker.install.snap = \n\nSNAP VERSION: \nYou are not connected to built-in Docker daemon. Please connect the slots with:\n\nsudo snap connect pygpt:docker-executables docker:docker-executables\n\nsudo snap connect pygpt:docker docker:docker-daemon\n\n...and restart the application.
ipython.image.build = The Docker image for IPython has not been built yet. This will happen now, and it may take a while (but it's a one-time procedure). The execution of the command has been paused. Once the image is built, please execute the command again.
layout.split = Split screen
menu.audio = Audio / Voice
menu.audio.cache.clear = Clear audio cache...
menu.audio.control.global = Voice control (global)
menu.audio.control.plugin = Voice control (inline)
menu.audio.input = Input: Speech recognition
menu.audio.output = Output: Speech synthesis
menu.audio.stop = Stop audio playback
menu.config = Config
menu.config.access = Accessibility
menu.config.change_dir = Change working directory...
menu.config.edit.config = Edit config.json...
menu.config.edit.css = Edit CSS stylesheets...
menu.config.edit.css.restore = Restore default CSS...
menu.config.edit.json = Edit JSON configs...
menu.config.edit.models = Edit models.json...
menu.config.models = Models...
menu.config.models.edit = Edit models
menu.config.models.import.ollama = Import from Ollama
menu.config.models.import.provider = Import...
menu.config.open_dir = Open working directory...
menu.config.profile = Profile
menu.config.profile.edit = Edit profiles...
menu.config.profile.new = New profile...
menu.config.save = Save config
menu.config.settings = Settings...
menu.debug = Debug
menu.debug.agent = Agent...
menu.debug.agent_builder = Agents Builder
menu.debug.app.log = View log file (app.log)
menu.debug.assistants = Assistants...
menu.debug.attachments = Files / attachments...
menu.debug.config = Config...
menu.debug.context = Context...
menu.debug.db = DB Viewer
menu.debug.events = Events...
menu.debug.fixtures.stream = Fixture: stream
menu.debug.indexes = Indexes...
menu.debug.kernel = Kernel...
menu.debug.logger = Open Logger
menu.debug.models = Models...
menu.debug.plugins = Plugins...
menu.debug.presets = Presets...
menu.debug.render = Render...
menu.debug.tabs = Tabs...
menu.debug.ui = UI...
menu.file = File
menu.file_clear_history = Clear history
menu.file_clear_history_groups = Clear history (+ groups)
menu.file.current = Select current
menu.file.exit = Exit
menu.file.group.new = New group...
menu.file.new = New context...
menu.info = About
menu.info.about = About
menu.info.changelog = Changelog
menu.info.discord = Discord
menu.info.docs = Documentation
menu.info.donate = Donate PyGPT
menu.info.github = GitHub
menu.info.license = License
menu.info.ms_store = Microsoft Store
menu.info.pypi = PyPi
menu.info.report = Report a bug
menu.info.snap = Snap Store
menu.info.updates = Check for updates...
menu.info.website = Project Website - pygpt.net
menu.lang = Language
menu.plugins = Plugins
menu.plugins.presets = Presets...
menu.plugins.presets.edit = Edit presets...
menu.plugins.presets.new = New preset...
menu.plugins.settings = Settings...
menu.theme = Theme
menu.theme.blocks = Display blocks
menu.theme.dark = Dark color...
menu.theme.density = Layout size
menu.theme.light = Light color...
menu.theme.settings = Settings...
menu.theme.style = Style...
menu.theme.syntax = Code syntax highlight...
menu.theme.tooltips = Show tooltips
menu.tools = Tools
menu.tools.agent.builder = Agents Builder
menu.tools.audio.transcribe = Transcribe Audio/Video Files
menu.tools.html_canvas = HTML/JS Canvas
menu.tools.image.viewer = Image Viewer
menu.tools.interpreter = Python Code Interpreter
menu.tools.media.player = Media Player
menu.tools.text.editor = Text Editor
menu.tools.translator = Translator
menu.tools.web_browser = Web Browser (Chromium)
menu.tray.notepad = Open Notepad...
menu.tray.scheduled = Scheduled tasks
menu.tray.screenshot = Ask with screenshot...
menu.video = Video
menu.video.capture = Input: camera
menu.video.capture.auto = Auto capture
mode.agent = Agent (Autonomous)
mode.agent_llama = Agent (LlamaIndex)
mode.agent_llama.tooltip = Advanced agents (LlamaIndex)
mode.agent_openai = Agent (OpenAI)
mode.agent_openai.tooltip = Advanced agents (OpenAI)
mode.agent.tooltip = Simple agents (legacy)
mode.assistant = Assistants
mode.assistant.tooltip = Chat using Assistants API
mode.audio = Realtime + audio
mode.chat = Chat
mode.chat.tooltip = Chat mode (default)
mode.completion = Completion
mode.completion.tooltip = Completion mode
mode.computer = Computer use
mode.computer.tooltip = Computer use (mouse, keyboard, navigation)
mode.expert = Experts (Co-op)
mode.expert.tooltip = Experts to call in the background
mode.img = Image and video
mode.img.tooltip = Image generation
mode.langchain = Langchain
mode.langchain.tooltip = Chat with models provided by Langchain
model.ctx = Context tokens
model.ctx.desc = Max model input tokens
model.default = Default in mode
model.extra = Extra parameters (JSON)
model.extra.desc = A JSON object containing additional parameters for the model (such as reasoning effort, etc.).
model.id = Model ID
model.id.desc = Enter the exact model ID provided by the provider
model.input = Input
mode.llama_index = Chat with Files
mode.llama_index.tooltip = Chat with additional context provided by LlamaIndex 
model.langchain.args = [Langchain] LLM provider extra **kwargs
model.langchain.args.desc = Keyword arguments to pass into Langchain provider instance (config, API keys, model, etc.)
model.langchain.env = [Langchain] ENV vars (for os.environ)
model.langchain.env.desc = Environment variables to set for Langchain provider (API keys, etc.)
model.langchain.mode = [Langchain] Mode(s)
model.langchain.mode.desc = Available sub-modes: chat, completion
model.langchain.provider = [Langchain] Provider
model.langchain.provider.desc = LLM provider to use in "Langchain" mode
model.llama_index.args = [LlamaIndex] LLM provider extra **kwargs
model.llama_index.args.desc = Keyword arguments to pass into LlamaIndex provider instance (config, API keys, model, etc.)
model.llama_index.env = [LlamaIndex] ENV vars (for os.environ)
model.llama_index.env.desc = Environment variables to set for LlamaIndex provider (API keys, etc.)
model.llama_index.mode = [LlamaIndex] Mode(s)
model.llama_index.mode.desc = Available sub-modes: chat
model.llama_index.provider = [LlamaIndex] Provider
model.llama_index.provider.desc = LLM provider to use in "Chat with Files" mode
model.mode = Mode(s)
model.mode.desc = Available modes: chat, llama_index, audio, research, completion, img, vision, assistant, agent_llama, agent, expert
model.multimodal = Multimodal
model.name = Name
model.name.desc = Display name on the list, can be anything
model.openai = OpenAI API
model.openai.desc = Supports OpenAI API (or compatible)
model.output = Output
model.provider = Provider
model.provider.desc = Choose the provider for the model
models.importer.all = Show all
models.importer.available.label = Available models
models.importer.current.default = Please select a provider from the list.
models.importer.current.label = PyGPT models
models.importer.error.add.no_model = No model selected to add
models.importer.error.add.not_exists = Model already exists in current list
models.importer.error.no_connection = Ollama is not running or not available! Please start Ollama server and click REFRESH button.
models.importer.error.no_models = No Ollama models available! Please install models using Ollama CLI and click REFRESH button.
models.importer.error.remove.no_model = No model selected to remove
models.importer.error.remove.not_exists = Model already exists in current list
models.importer.list.select = --- Select provider ---
models.importer.loaded = {provider} models loaded successfully.
models.importer.status.imported = Models imported successfully.
models.importer.status.wait = Fetching models list...
model.tokens = Output tokens
model.tokens.desc = Max model output tokens
model.tool_calls = Tool calls (function calling)
model.tool_calls.desc = Enable native API function calling - not every model supports this, if disabled then system prompt with tools will be used
mode.research = Research
mode.research.tooltip = Web research with Perplexity
mode.vision = Vision
mode.vision.tooltip = Image analysis with GPT-4 Vision
msg.agent.plan = Plan
msg.agent.plan.current = Current plan
msg.agent.plan.deps = Dependencies
msg.agent.plan.expected = Expected output
msg.agent.plan.num_subtasks = Num of subtasks
msg.agent.plan.subtask = Sub Task
msg.agent.step = Step
msg.eval.score = Score
msg.name.evaluation = Evaluation
msg.name.system = System
multimodal.audio = Audio
multimodal.image = Image
multimodal.text = Text
multimodal.video = Video
node.editor.bottom.tip = Right-click: add node / undo / redo • Middle-click: pan view • Ctrl + Mouse wheel: zoom Left-click a port: create connection • Ctrl + Left-click a port: rewire or detach • Right-click or DEL a node/connection: remove
node.editor.cap.na = n/a
node.editor.cap.unlimited = unlimited (∞)
node.editor.cmd.add = Add
node.editor.cmd.clear = Clear
node.editor.cmd.connect = Connect
node.editor.cmd.delete_connection = Delete Connection
node.editor.cmd.delete_node = Delete Node
node.editor.cmd.move_node = Move Node
node.editor.cmd.resize_node = Resize Node
node.editor.cmd.rewire_connection = Rewire Connection
node.editor.edge.delete = Delete connection
node.editor.hint.click_start = Click: start a new connection
node.editor.hint.ctrl_rewire = Ctrl+Click: rewire/detach existing
node.editor.label.id = ID
node.editor.lbl.allowed = Allowed connections:
node.editor.lbl.node = Node:
node.editor.lbl.port = Port:
node.editor.list.tip = List of added custom agent workflows (available in the agent type section of the presets editor)
node.editor.macro.delete_selection = Delete selection
node.editor.menu.add = Add
node.editor.menu.clear = Clear
node.editor.menu.redo = Redo
node.editor.menu.undo = Undo
node.editor.node.delete = Delete
node.editor.node.rename = Rename
node.editor.overlay.grab = Grab: toggle global panning with Left Mouse Button
node.editor.overlay.zoom_in = Zoom In
node.editor.overlay.zoom_out = Zoom Out
node.editor.property.agent.name = Agent
node.editor.property.input.name = Input
node.editor.property.instruction.name = Instruction
node.editor.property.instruction.placeholder = System instruction for the agent
node.editor.property.local_tools.name = Local tools
node.editor.property.memory.name = Memory
node.editor.property.name.name = Name
node.editor.property.name.placeholder = Name of the agent
node.editor.property.output.name = Output
node.editor.property.remote_tools.name = Remote tools
node.editor.property.role.name = Role
node.editor.property.role.placeholder = Optional short description of agent's purpose
node.editor.rename.label = Name:
node.editor.rename.title = Rename Node
node.editor.side.input = Input
node.editor.side.output = Output
node.editor.spec.agent.title = Agent
node.editor.spec.end.title = End
node.editor.spec.memory.title = Memory (Context)
node.editor.spec.start.title = Start
node.editor.status.no_nodes = No nodes
node.editor.type.unknown = Unknown
notify.agent.goal.content = Agent: the goal has been achieved.
notify.agent.goal.title = Goal achieved
notify.agent.stop.content = Agent: stopped
notify.agent.stop.title = Finished
notify.cron.title = Running scheduled task
notify.update.title = New version available
output.edit = Edit
output.raw = Plain text
output.tab.calendar = Calendar
output.tab.chat = Chat
output.tab.files = Files
output.tab.notepad = Notepad
output.tab.painter = Painter
output.timestamp = Show time
output.tips.1 = Use CTRL + mouse wheel to zoom in or out.
output.tips.10 = You can import new models by using the Config -> Models -> Import... tool.
output.tips.11 = Use profiles to quickly switch between different app configurations and settings.
output.tips.12 = Create agents tailored to your tasks by selecting the best agent type. Customize agents' system prompts in the Presets editor as needed.
output.tips.13 = You can use the microphone input in the notepad to save audio notes.
output.tips.2 = Press CTRL + F to open the Find dialog.
output.tips.3 = Press the ESC key to stop generating a response at any time.
output.tips.4 = To utilize tools from plugins, make sure the "+ Tools" checkbox is selected.
output.tips.5 = You can add more chat or notepad tabs by clicking the [+] button in the top right corner or by right-clicking on any tab.
output.tips.6 = Open a conversation in a new tab by right-clicking on the context item and selecting "Open in a new tab."
output.tips.7 = For better performance, disable tools when using local models if tools aren’t needed.
output.tips.8 = When using local models, remember to set the local model for context summary and embeddings as well.
output.tips.9 = To configure audio input and output providers, go to Plugins -> Settings. To configure audio devices, go to Config -> Settings -> Audio.
output.tips.prefix = Tip
painter.btn.camera.capture = From camera
painter.btn.capture = Use image
painter.btn.clear = Clear
painter.btn.crop = Crop
painter.btn.fit = Fit
painter.capture.manual.captured.success = Image captured:
painter.capture.name.prefix = Drawing from
painter.mode.erase = Erase
painter.mode.paint = Paint
plugin.tab.general = General
preset.action.delete = Delete
preset.action.disable = Disable
preset.action.duplicate = Duplicate
preset.action.edit = Edit
preset.action.enable = Enable
preset.agent = Agent (Autonomous)
preset.agent_llama = Agent (LlamaIndex)
preset.agent_openai = Agent (OpenAI)
preset.agent_provider = Agent type
preset.agent_provider.desc = Select the agent type for the current preset
preset.ai_avatar = Avatar
preset.ai_name = AI name
preset.ai_personalize = Display the name and avatar in the chat window
preset.ai_personalize.desc = Enable this option to display the AI's name and avatar in the chat window during the conversation.
preset.assistant = Assistant
preset.assistant_id = OpenAI Assistant ID
preset.assistant_id.desc = * only for the OpenAI Assistant agent type. If not provided, a new Assistant will be created.
preset.audio = Chat with Audio
preset.chat = Chat
preset.clear = Clear
preset.completion = Completion
preset.computer = Computer use
preset.description = Description
preset.description.desc = Use the description to instruct other agents about what this expert or agent does, e.g., 'Generates the best jokes.'\nUse the system prompt to guide this expert on how to perform their job, e.g., 'You are an expert in generating jokes and very helpful assistant.'
preset.expert = Experts
preset.experts.available.label = Available experts
preset.experts.selected.label = Assigned experts (this agent)
preset.filename = ID (filename)
preset.idx = Index to use
preset.idx.desc = If an index is selected, the retrieval tool will be enabled automatically.
preset.img = Image
preset.langchain = Langchain
preset.llama_index = Chat with Files
preset.name = Preset Name
preset.new = Create
preset.personalize.avatar.choose = Choose...
preset.personalize.avatar.choose.title = Choose avatar
preset.personalize.avatar.current = Avatar
preset.personalize.avatar.remove = Remove
preset.personalize.warning = WARNING: Please do not use AI as a "friend". Real-life friendship is better than using an AI as a friendship replacement.\nDO NOT become emotionally involved in interactions with an AI.
preset.prompt = System prompt
preset.prompt.agent = Agent system prompt (additional); the base instruction is defined in: Config -> Prompts -> Agent: system instruction
preset.prompt.agent_llama = Agent system prompt
preset.prompt.delete = Delete
preset.prompt.paste_custom = Paste from My template...
preset.prompt.paste_template = Paste from template...
preset.prompt.rename = Rename
preset.prompt.save_custom = Save as My template
preset.prompt.use = Paste...
preset.research = Research
preset.tab.experts = Experts
preset.tab.general = General
preset.tab.personalize = Personalize
preset.tab.remote_tools = Remote tools
preset.temperature = Temperature
preset.tool.function = Functions
preset.tool.function.tip.agent_llama = Tip: Functions from plugins are enabled automatically.
preset.tool.function.tip.all = Tip: Functions from plugins are enabled automatically.
preset.tool.function.tip.assistant = Tip: Functions from plugins must be added manually for use in the Assistant API.
preset.untitled = (untitled)
preset.use = Use
preset.user_name = User name
preset.vision = Vision
profile.current.suffix = (current)
remote_tool.openai.code_interpreter = Code Interpreter
remote_tool.openai.computer_use = Computer use
remote_tool.openai.file_search = File search  
remote_tool.openai.image = Image generate
remote_tool.openai.mcp = Remote MCP
remote_tool.openai.web_search = Web search
screenshot.capture.name.prefix = Screenshot from
settings.access.audio.event.speech = Use voice synthesis to describe events on the screen.
settings.access.audio.event.speech.disabled = Blacklist for voice synthesis events describe (ignored events)
settings.access.audio.event.speech.disabled.desc = Add to this list all the actions that should not be described using audio synthesis.
settings.access.audio.notify.execute = Audio notify voice command execution
settings.access.audio.use_cache = Use audio output cache
settings.access.audio.use_cache.desc = If enabled, all static audio outputs will be cached on the disk instead of being generated every time.
settings.access.microphone.notify = Audio notify microphone listening start/stop
settings.access.shortcuts = Control shortcut keys
settings.access.shortcuts.desc = Setup keyboard shortcuts and voice commands to control the application using voice and microphone.
settings.access.voice_control = Enable voice control (using microphone)
settings.access.voice_control.blacklist = Voice control actions blacklist
settings.access.voice_control.blacklist.desc = Disable actions in voice control; add actions to the blacklist to prevent execution through voice commands.
settings.access.voice_control.model = Model
settings.access.voice_control.model.desc = Model to use for command recognition in voice control
settings.advanced.collapse = Show/hide advanced options
settings.agent.api_use_responses = Use Responses API in Agent mode
settings.agent.api_use_responses.desc = Use Responses API instead of ChatCompletions API in Agent (autonomous) mode. OpenAI models only.
settings.agent.func_call.native = Use native API function calls
settings.agent.func_call.native.desc = If enabled, the application will use native API function calls instead of the internal pygpt format and the command prompts will not be used. Autonomus agent mode only.
settings.agent.goal.notify = Display a tray notification when the goal is achieved.
settings.agent.idx = Index to use
settings.agent.idx.auto_retrieve = Auto retrieve additional context from RAG
settings.agent.idx.auto_retrieve.desc = Auto retrieve additional context from RAG at the beginning if the index is provided.
settings.agent.idx.desc = Only if sub-mode is Chat with Files, choose the index to use in Autonomous and Experts modes
settings.agent.llama.append_eval = Append and compare previous evaluation prompt in next evaluation
settings.agent.llama.append_eval.desc = If enabled, previous improvement prompt will be checked in next eval in loop
settings.agent.llama.eval_model = Model for evaluation
settings.agent.llama.eval_model.desc = Model used for evaluation with score/percentage (loop). If not selected, then current active model will be used.
settings.agent.llama.iterations = Max run iterations
settings.agent.llama.iterations.desc = Max run iterations before goal achieved in Always-continue mode
settings.agent.llama.max_eval = Max evaluation steps in loop
settings.agent.llama.max_eval.desc = Set the maximum evaluation steps to achieve the final result, 0 = infinity
settings.agent.llama.steps = Max steps (per iteration)
settings.agent.llama.steps.desc = Max steps in one iteration before goal achieved
settings.agent.llama.verbose = Verbose (log output to console)
settings.agent.mode = Sub-mode for agents
settings.agent.mode.desc = Sub-mode to use in Agent (Autonomous) mode
settings.agent.openai.response.split = Split response messages
settings.agent.openai.response.split.desc = Split response messages to separated context items in OpenAI Agents mode.
settings.agent.output.render.all = Display full agent output in chat view
settings.agent.output.render.all.desc = If enabled, then full output from agent will be displayed in chat window if agent is enabled.
settings.api_azure_endpoint = API Endpoint
settings.api_azure_endpoint.desc = Azure OpenAI API endpoint, https://<your-resource-name>.openai.azure.com/
settings.api_azure_version = OpenAI API version
settings.api_azure_version.desc = Azure OpenAI API version, e.g. 2023-07-01-preview
settings.api_endpoint = API Endpoint
settings.api_endpoint_anthropic = API Endpoint
settings.api_endpoint_anthropic.desc = Anthropic API endpoint URL, default: https://api.anthropic.com/v1
settings.api_endpoint_deepseek = API Endpoint
settings.api_endpoint_deepseek.desc = Deepseek API endpoint URL, default: https://api.deepseek.com/v1
settings.api_endpoint.desc = OpenAI API (or compatible) endpoint URL, default: https://api.openai.com/v1
settings.api_endpoint_google = API Endpoint
settings.api_endpoint_google.desc = Google API endpoint URL, default: https://generativelanguage.googleapis.com/v1beta/openai
settings.api_endpoint_hugging_face = Router API Endpoint
settings.api_endpoint_hugging_face.desc = API Endpoint for HuggingFace Router provider (OpenAI compatible ChatCompletions)
settings.api_endpoint_mistral = API Endpoint
settings.api_endpoint_mistral.desc = Mistral AI API endpoint URL, default: https://api.mistral.ai/v1
settings.api_endpoint_open_router = API Endpoint
settings.api_endpoint_open_router.desc = OpenRouter API endpoint URL, default: https://openrouter.ai/api/v1
settings.api_endpoint_perplexity = API Endpoint
settings.api_endpoint_perplexity.desc = Perplexity API endpoint URL, default: https://api.perplexity.ai
settings.api_endpoint_xai = API Endpoint
settings.api_endpoint_xai.desc = xAI API endpoint URL, default: https://api.x.ai
settings.api_key = OpenAI API KEY
settings.api_key.anthropic = Anthropic API KEY
settings.api_key.anthropic.desc = Required for the Anthropic API and Claude models.
settings.api_key.deepseek = DeepSeek API KEY
settings.api_key.deepseek.desc = Required for the DeepSeek API.
settings.api_key.desc = Required for the OpenAI API. If you wish to use custom endpoints or local APIs, then you may enter any value here.
settings.api_key.google = Google API KEY
settings.api_key.google.desc = Required for the Google API and Gemini models.
settings.api_key.hugging_face = HuggingFace API KEY
settings.api_key.hugging_face.desc = Required for the HuggingFace API.
settings.api_key.mistral = Mistral AI API KEY
settings.api_key.mistral.desc = Required for the Mistral AI API.
settings.api_key.open_router = OpenRouter API KEY
settings.api_key.open_router.desc = Required for the OpenRouter API.
settings.api_key.perplexity = Perplexity API KEY
settings.api_key.perplexity.desc = Required for the Perplexity API.
settings.api_key.voyage = VoyageAI API KEY
settings.api_key.voyage.desc = Required for the Voyage API - embeddings for Anthropic and DeepSeek API.
settings.api_key.xai = xAI API KEY
settings.api_key.xai.desc = Required for the xAI API and Grok models.
settings.api_native_anthropic = Use native API SDK
settings.api_native_anthropic.desc = Use native Anthropic SDK instead of compatible OpenAI client
settings.api_native_google = Use native API SDK
settings.api_native_google.app_credentials =  Google Application credentials (path)
settings.api_native_google.app_credentials.desc = Absolute path to credentials.json, e.g. /home/user/credentials.json
settings.api_native_google.cloud_location =  Google Cloud location
settings.api_native_google.cloud_location.desc = Provide your Google Cloud project location, default: us-central1
settings.api_native_google.cloud_project = Google Cloud project
settings.api_native_google.cloud_project.desc = Provide your Google Cloud project name
settings.api_native_google.desc = Use native GenAI SDK instead of compatible OpenAI client
settings.api_native_google.use_vertex = Use VertexAI
settings.api_native_google.use_vertex.desc = Enable to use VertexAI in Google GenAI SDK
settings.api_native_xai = Use native API SDK
settings.api_native_xai.desc = Use native xAI SDK instead of compatible OpenAI client
settings.api_proxy = Proxy address
settings.api_proxy.desc = Optional, proxy for API SDKs, e.g. http://proxy.example.com or socks5://user:pass@host:port
settings.api_proxy.enabled = Use proxy
settings.api_proxy.enabled.desc = Enable this option to use a proxy for connections to APIs
settings.api_use_responses = Use Responses API in Chat mode
settings.api_use_responses.desc = Use Responses API instead of ChatCompletions API in Chat mode
settings.api_use_responses_llama = Use Responses API in Chat with Files mode (LlamaIndex)
settings.api_use_responses_llama.desc = Use Responses API instead of ChatCompletions API in Chat with Files mode (LlamaIndex). OpenAI models only.
settings.app.env = Application environment (os.environ)
settings.app.env.desc = Additional environment vars to set on application start
settings.audio.cache.enabled = Enable Cache
settings.audio.cache.enabled.desc = Enable audio caching for speech synthesis generation.
settings.audio.cache.max_files = Max files to store
settings.audio.cache.max_files.desc = Max number of cached audio files stored to disk
settings.audio.input.backend = Audio Input Backend
settings.audio.input.backend.desc = Select the audio input backend.
settings.audio.input.channels = Channels
settings.audio.input.channels.desc = Input channels, default: 1
settings.audio.input.continuous = Continuous Audio Recording (Chunks)
settings.audio.input.continuous.desc = Enable recording in chunks for long audio recordings in notepad (voice notes).
settings.audio.input.device = Audio Input Device
settings.audio.input.device.desc = Select the audio device for Microphone input.
settings.audio.input.rate = Sampling Rate
settings.audio.input.rate.desc = Sampling rate, default: 44100
settings.audio.input.stop_interval = Continuous recording auto-transcribe interval
settings.audio.input.stop_interval.desc = Interval in seconds for auto-transcribe audio chunk, default: 10
settings.audio.input.timeout = Recording timeout
settings.audio.input.timeout.continuous = Enable timeout in continuous mode
settings.audio.input.timeout.desc = Timeout (seconds) for auto-stop recording, 0 to disable, default: 120
settings.audio.input.vad.prefix = VAD prefix padding (in ms)
settings.audio.input.vad.silence = VAD end silence (in ms)
settings.audio.output.backend = Audio Output Backend
settings.audio.output.backend.desc = Select the audio output backend.
settings.audio.output.device = Audio Output Device
settings.audio.output.device.desc = Select the audio device for audio output.
settings.check_updates = Check for updates on start
settings.check_updates.bg = Check for updates in the background
settings.cmd.config.collapse = JSON params
settings.cmd.field.desc = Enable `{cmd}` tool.
settings.cmd.field.enable = Tool:  {cmd}
settings.cmd.field.instruction = Instruction for model
settings.cmd.field.params = JSON parameters (tool arguments)
settings.cmd.field.tooltip = Enable `{cmd}` tool
settings.context_threshold = Context threshold
settings.context_threshold.desc = Tokens reserved for responses
settings.ctx.allow_item_delete = Allow context item deletion
settings.ctx.allow_item_delete.desc = Enable display of the delete conversation item link
settings.ctx.attachment.img = Allow images as additional context
settings.ctx.attachment.img.desc = If enabled, images can be used as additional context
settings.ctx.attachment.query.model = Model for querying index
settings.ctx.attachment.query.model.desc = Model to use for preparing query and querying the index when the RAG option is selected.
settings.ctx.attachment.rag.history = Use history in RAG query
settings.ctx.attachment.rag.history.desc = When enabled, the content of the entire conversation will be used when preparing a query if mode is RAG or Summary.
settings.ctx.attachment.rag.history.max_items = RAG limit
settings.ctx.attachment.rag.history.max_items.desc = Only if the option 'Use history in RAG query' is enabled. Specify the limit of how many recent entries in the conversation will be used when generating a query for RAG. 0 = no limit.
settings.ctx.attachment.summary.model = Model for attachment content summary
settings.ctx.attachment.summary.model.desc = Model to use when generating a summary for the content of a file when the Summary option is selected.
settings.ctx.attachment.verbose = Verbose mode
settings.ctx.attachment.verbose.desc = Log attachments usage to the console
settings.ctx.audio = Always show audio icon
settings.ctx.auto_summary = Context auto-summary
settings.ctx.auto_summary.model = Model used for auto-summary
settings.ctx.code_interpreter = Show Code Interpreter output
settings.ctx.code_interpreter.desc = If enabled, output from the code interpreter in the Assistant API will be displayed in real-time (in stream mode).
settings.ctx.convert_lists = Convert lists to paragraphs
settings.ctx.convert_lists.desc = Markdown renderer only
settings.ctx.copy_code = Show "copy to clipboard" in code blocks
settings.ctx.records.folders.top = Show context groups on top of the context list
settings.ctx.records.groups.separators = Show date separators in groups on the context list
settings.ctx.records.limit = Limit of last contexts on the list (0 = unlimited)
settings.ctx.records.pinned.separators = Show date separators in pinned items on the context list
settings.ctx.records.separators = Show date separators on the context list
settings.ctx.search_content = Search also in conversation content, not only in titles
settings.ctx.search.desc = Enable search also in context items' content
settings.ctx.sources = Show LlamaIndex sources
settings.ctx.sources.desc = If enabled, sources used will be displayed in the response (if available, it will not work in streamed chat)
settings.ctx.urls.internal = Open URLs in built-in browser
settings.ctx.urls.internal.desc = Enable this option to open all URLs in the built-in browser (Chromium) instead of an external browser.
settings.ctx.use_extra = Use extra context output
settings.ctx.use_extra.desc = If enabled, plain text output (if available) from command results will be displayed alongside the JSON output.
settings.debug.show_menu = Show debug menu
settings.defaults.app.confirm = Load factory app settings?
settings.defaults.user.confirm = Undo current changes?
settings.dict.delete.confirm = Remove item from list?
settings.download.dir = Directory for file downloads
settings.download.dir.desc = Subdirectory for downloaded files, e.g. in Assistants mode, inside "data"
settings.experts.api_use_responses = Use Responses API in Experts mode (master)
settings.experts.api_use_responses.desc = Use Responses API instead of ChatCompletions API in Experts (master model). OpenAI models only.
settings.experts.func_call.native = Use native API function calls
settings.experts.func_call.native.desc = If enabled, the application will use native API function calls instead of the internal pygpt format and the command prompts will not be used. Experts only.
settings.experts.internal.api_use_responses = Use Responses API in Experts (slaves)
settings.experts.internal.api_use_responses.desc = Use Responses API instead of ChatCompletions API for Expert instances (slave models). OpenAI models only.
settings.experts.mode = Sub-mode for experts
settings.experts.mode.desc = Sub-mode to use for Experts
settings.experts.use_agent = Use agent for expert reasoning
settings.experts.use_agent.desc = If enabled, expert will use the agent when generating response and calling tools.
settings.font_size = Font size (chat plain-text, notepads)
settings.font_size.ctx = Font size (ctx list)
settings.font_size.input = Font size (input)
settings.font_size.tip = Tip: You can change the font size using CTRL + Mouse Wheel
settings.font_size.toolbox = Font size (toolbox)
settings.frequency_penalty = Frequency Penalty
settings.func_call.native = Use native API function calls
settings.func_call.native.desc = If enabled, the application will use native API function calls instead of the internal pygpt format and the command prompts from below will not be used. Chat and Assistants modes ONLY.
settings.img_dialog_open = Open image dialog after generation (Image mode)
settings.img_prompt_model = Prompt generation model
settings.img_prompt_model.desc = LLM used to refine your prompt before image generation (not the image model)
settings.img_quality = Image quality
settings.img_resolution = Image size
settings.layout.animation.disable = Disable animations
settings.layout.animation.disable.desc = Disables layout animations, like animated loaders, etc.
settings.layout.density = Layout density
settings.layout.dialog.geometry.store = Store dialog window positions
settings.layout.dpi.factor = DPI factor
settings.layout.dpi.scaling = DPI Scaling
settings.layout.minimized = Start minimized
settings.layout.tooltips = Display tips (help descriptions)
settings.layout.tray = Show tray icon
settings.layout.tray.desc = Restart required. Tray icon provides additional features like "Ask with screenshot" or "Open notepad".
settings.layout.tray.minimize = Minimize to tray on exit
settings.layout.tray.minimize.desc = Tray icon enabled is required for this option to work.
settings.llama.extra.api.warning = Warning: remember that when indexing content, API calls to the embedding model are used. Each indexing consumes additional tokens. Always control the number of tokens used on the OpenAI page!
settings.llama.extra.btn.idx_auto = Auto-index DB in real-time (in the background of conversation)
settings.llama.extra.btn.idx_auto.index = ID of the index for auto-indexing
settings.llama.extra.btn.idx_auto.modes = Enable auto-index in modes
settings.llama.extra.btn.idx_db_all = DB (all)
settings.llama.extra.btn.idx_db_update = DB (update)
settings.llama.extra.btn.idx_files_all = Files (all)
settings.llama.extra.btn.idx_head = Click here to index files or DB:
settings.llama.extra.db.never = (never)
settings.llama.extra.legend = Legend:\nDB (all) - will reindex the entire conversation database\nDB (update) - will reindex the database only since the last indexing\nFiles (all) - will index all files in the 'data' directory\nAuto-index DB - automatically index in the background all new conversations (append only new data)\n
settings.llama.extra.loaders = Built-in data loaders
settings.llama.hub.loaders = Additional online data loaders to use (LlamaHub) - only for the Python version, will not work in the compiled or Snap versions
settings.llama.hub.loaders.args = Additional keyword arguments (**kwargs) for data loaders
settings.llama.hub.loaders.args.desc = Additional keyword arguments (**kwargs), such as settings, API keys, for the data loader. These arguments will be passed to the loader; please refer to the PyGPT documentation or LlamaHub loaders reference for a list of allowed arguments for the specified data loader. One argument per single row.
settings.llama.hub.loaders.use_local = Use local models in Video/Audio and Image (vision) loaders
settings.llama.hub.loaders.use_local.desc = Enable usage of local models in Video/Audio and Image (vision) loaders. If disabled, then API models will be used (GPT-4 Vision and Whisper). Note: local models will work only in the Python version (not compiled/Snap).
settings.llama.idx.chat.auto_retrieve = Auto-retrieve additional context
settings.llama.idx.chat.auto_retrieve.desc = If enabled, additional context will be retrieved with every query and appended to system prompt.
settings.llama.idx.chat.mode = Chat mode
settings.llama.idx.chat.mode.desc = Check LlamaIndex documentation for help
settings.llama.idx.custom_meta = Custom metadata to append/replace to indexed documents (files)
settings.llama.idx.custom_meta.desc = Define custom metadata key => value fields for specified file extensions, separate extensions by comma.\nAllowed placeholders: {path}, {relative_path} {filename}, {dirname}, {relative_dir} {ext}, {size}, {mtime}, {date}, {date_time}, {time}, {timestamp}
settings.llama.idx.custom_meta.web = Custom metadata to append/replace to indexed documents (web/external content)
settings.llama.idx.custom_meta.web.desc = Define custom metadata key => value fields for specified external data loaders.\nAllowed placeholders: {date}, {date_time}, {time}, {timestamp} + {data loader args}
settings.llama.idx.embeddings.args = Global embeddings provider **kwargs
settings.llama.idx.embeddings.args.desc = Additional keyword arguments (**kwargs), such as model name, for the embeddings provider instance. These arguments will be passed to the provider instance; please refer to the LlamaIndex API reference for a list of required arguments for the specified embeddings provider.
settings.llama.idx.embeddings.default = Default embedding providers for attachments
settings.llama.idx.embeddings.default.desc = Define embedding model by provider to use in attachments
settings.llama.idx.embeddings.env = Embeddings provider ENV vars
settings.llama.idx.embeddings.env.desc = Environment to set up before embedding provider initialization, such as API keys, etc. Use {config_key} as a placeholder to use the value from the application configuration.
settings.llama.idx.embeddings.limit.rpm = RPM limit
settings.llama.idx.embeddings.limit.rpm.desc = Limit for embeddings API calls - specify the limit of maximum requests per minute (RPM), 0 = no limit
settings.llama.idx.embeddings.provider = Embeddings provider
settings.llama.idx.excluded.ext = Excluded file extensions
settings.llama.idx.excluded.ext.desc = File extensions to exclude if no data loader for this extension, separated by comma
settings.llama.idx.excluded.force = Force exclude files
settings.llama.idx.excluded.force.desc = If enabled, the exclusion list will be applied even when the data loader for the extension is active.
settings.llama.idx.list = Indexes
settings.llama.idx.react = Use ReAct agent for Tool calls in Chat with Files mode.
settings.llama.idx.react.desc = If enabled, the ReAct agent will be used if the option "+Tools" will be enabled.
settings.llama.idx.recursive = Recursive directory indexing
settings.llama.idx.replace_old = Replace old document versions in the index during re-indexing
settings.llama.idx.replace_old.desc = If enabled, previous versions of documents will be deleted from the index when the newest versions are indexed.
settings.llama.idx.stop.error = Stop indexing when an error occurs
settings.llama.idx.stop.error.desc = If enabled, indexing will be stopped when any error occurs.
settings.llama.idx.storage = Vector Store
settings.llama.idx.storage.args = Vector Store (**kwargs)
settings.llama.idx.storage.args.desc = Additional keyword arguments (**kwargs), such as API keys, for the Vector Store provider. These arguments will be passed to the provider; please refer to the LlamaIndex API reference for a list of required arguments for the specified Vector Store.
settings.lock_modes = Lock incompatible modes
settings.max_output_tokens = Max output tokens
settings.max_requests_limit = RPM limit
settings.max_requests_limit.desc = Specify the limit of maximum requests per minute (RPM), 0 = no limit
settings.max_total_tokens = Max total tokens
settings.notepad.num = Number of notepads
settings.organization_key = OpenAI ORGANIZATION KEY
settings.personalize.about = About You
settings.personalize.about.desc = Provide information about yourself, e.g., "My name is... I'm 30 years old, I'm interested in..." This will be included in the model's system prompt.\nWARNING: Please do not use AI as a "friend". Real-life friendship is better than using an AI as a friendship replacement. DO NOT become emotionally involved in interactions with an AI.
settings.personalize.modes = Enable in Modes
settings.personalize.modes.desc = Select the modes where the personalized "about" prompt will be used.
settings.presence_penalty = Presence Penalty
settings.prompt.agent.continue = Agent: continue [Legacy]
settings.prompt.agent.continue.always = Agent: continue (always, more steps) [Legacy]
settings.prompt.agent.continue.always.desc = Prompt sent to always automatically continue the conversation (more reasoning)
settings.prompt.agent.continue.desc = Prompt sent to automatically continue the conversation
settings.prompt.agent.continue.llama = Agent: continue (always, more steps) [LlamaIndex agents]
settings.prompt.agent.continue.llama.desc = Prompt sent to always automatically continue the conversation (more reasoning)
settings.prompt.agent.goal = Agent: goal update [Legacy]
settings.prompt.agent.goal.desc = Prompt to instruct how to update the current goal status
settings.prompt.agent.instruction = Agent: system instruction [Legacy]
settings.prompt.agent.instruction.desc = Prompt to instruct how to handle autonomous mode
settings.prompt.agent.llama.eval = Agent: evaluation prompt in loop [LlamaIndex] - % score
settings.prompt.agent.llama.eval.complete = Agent: evaluation prompt in loop [LlamaIndex] - % complete
settings.prompt.agent.llama.eval.complete.desc = Prompt used to response evaluation when Loop / evaluate option is enabled (percent)
settings.prompt.agent.llama.eval.desc = Prompt used to response evaluation when Loop / evaluate option is enabled (score)
settings.prompt.cmd = Command execute: instruction
settings.prompt.cmd.desc = Placeholders: {schema}, {extra}
settings.prompt.cmd.extra = Command execute: extra footer (non-Assistant modes)
settings.prompt.cmd.extra.assistants = Command execute: extra footer (Assistant mode only)
settings.prompt.cmd.extra.assistants.desc = Additional instructions to separate local commands from the remote environment that is already configured in the Assistants.
settings.prompt.ctx.auto_summary.system = Context: auto-summary (system prompt)
settings.prompt.ctx.auto_summary.user = Context: auto-summary (user message)
settings.prompt.ctx.auto_summary.user.desc = Placeholders: {input}, {output}
settings.prompt.expert = Expert: Master prompt
settings.prompt.expert.desc = Instruction (system prompt) for Master expert on how to handle slave experts. Instructions for slave experts are given from their presets.
settings.prompt.img = Image generation
settings.prompt.img.desc = Prompt for generating prompts for image model (if raw-mode is disabled). Image / Video modes only.
settings.prompt.video = Video generation
settings.prompt.video.desc = Prompt for generating prompts for video model (if raw-mode is disabled). Image / Videos mode only.
settings.remote_tools.anthropic.web_search = Web Search
settings.remote_tools.anthropic.web_search.desc = Enable Web Search remote tool.
settings.remote_tools.code_interpreter = Code Interpreter
settings.remote_tools.code_interpreter.desc = Enable `code_interpreter` remote tool - Responses API only.
settings.remote_tools.file_search = File search
settings.remote_tools.file_search.args = File search vector store IDs
settings.remote_tools.file_search.args.desc = Vector store IDs, separated by comma (,)
settings.remote_tools.file_search.desc = Enable `file_search` remote tool - Responses API only.
settings.remote_tools.google.code_interpreter = Code Interpreter
settings.remote_tools.google.code_interpreter.desc = Enable Code Interpreter remote tool.
settings.remote_tools.google.url_ctx = URL Context
settings.remote_tools.google.url_ctx.desc = Enable URL Context remote tool.
settings.remote_tools.google.web_search = Google Search
settings.remote_tools.google.web_search.desc = Enable Google Search remote tool.
settings.remote_tools.image = Image generation
settings.remote_tools.image.desc = Enable `image_generation` remote tool - Responses API only.
settings.remote_tools.mcp = Remote MCP
settings.remote_tools.mcp.args = Remote MCP configuration
settings.remote_tools.mcp.args.desc = Configuration in JSON format (will be used in request)
settings.remote_tools.mcp.desc = Enable `mcp` remote tool - Responses API only.
settings.remote_tools.web_search = Web Search
settings.remote_tools.web_search.desc = Enable `web_search` remote tool - Responses API only.
settings.remote_tools.xai.mode = Live Search mode
settings.remote_tools.xai.mode.desc = Select mode: auto|on|off
settings.remote_tools.xai.sources.news = Source: News
settings.remote_tools.xai.sources.news.desc = Enable News in Live Search
settings.remote_tools.xai.sources.web = Source: Web
settings.remote_tools.xai.sources.web.desc = Enable Web in Live Search
settings.remote_tools.xai.sources.x = Source: X / Twitter
settings.remote_tools.xai.sources.x.desc = Enable X / Twitter in Live Search
settings.render.code_syntax = Code syntax highlight
settings.render.code_syntax.disabled = Disable syntax highlight
settings.render.code_syntax.final_max_chars = Max chars to highlight (static)
settings.render.code_syntax.final_max_chars.desc = Syntax highlight:  max chars to highlight in static content, 0 to disable
settings.render.code_syntax.final_max_lines = Max lines to highlight (static)
settings.render.code_syntax.final_max_lines.desc = Syntax highlight:  max lines to highlight in static content, 0 to disable
settings.render.code_syntax.stream_max_lines = Max lines to highlight (real-time)
settings.render.code_syntax.stream_max_lines.desc = Syntax highlight: max lines to highlight in stream, 0 to disable
settings.render.code_syntax.stream_n_chars = Highlight every N chars (real-time)
settings.render.code_syntax.stream_n_chars.desc = Syntax highlight: highlight every N chars in stream
settings.render.code_syntax.stream_n_line = Highlight every N line (real-time)
settings.render.code_syntax.stream_n_line.desc = Syntax highlight: highlight every N line in stream
settings.render.engine = Rendering engine
settings.render.memory.limit = Memory Limit
settings.render.memory.limit.desc = Renderer memory limit; set to 0 to disable. If > 0, the app will try to free memory after the limit is reached. Accepted formats: 3.5GB, 2GB, 2048MB, 1_000_000. Minimum: 2GB.
settings.render.msg.user.collapse.px = Auto-collapse user message (px)
settings.render.msg.user.collapse.px.desc = Auto-collapse user message after N pixels of height, set to 0 to disable auto-collapse
settings.render.open_gl = OpenGL hardware acceleration
settings.render.plain = Disable markdown formatting in output (RAW plain text mode)
settings.render.web.only.desc = WebEngine / Chromium rendering engine only
settings.restart.required = Restart of the application is required for this option to take effect.
settings.section.access = Accessibility
settings.section.agent = Agents and experts
settings.section.agent.autonomous = Autonomous
settings.section.agent.experts = Experts
settings.section.agent.llama = Agents
settings.section.api_keys = API Keys
settings.section.api_keys.anthropic = Anthropic
settings.section.api_keys.azure_openai = Azure OpenAI
settings.section.api_keys.deepseek = DeepSeek
settings.section.api_keys.google = Google
settings.section.api_keys.huggingface = HuggingFace
settings.section.api_keys.mistral_ai = Mistral AI
settings.section.api_keys.openai = OpenAI
settings.section.api_keys.openrouter = OpenRouter
settings.section.api_keys.perplexity = Perplexity
settings.section.api_keys.voyage = VoyageAI
settings.section.api_keys.xai = xAI
settings.section.audio = Audio
settings.section.audio.cache = Cache
settings.section.audio.device = Devices
settings.section.audio.options = Options
settings.section.ctx = Context
settings.section.debug = Debug
settings.section.files = Files and attachments
settings.section.general = General
settings.section.images = Images and video
settings.section.images.image = Image
settings.section.images.video = Video
settings.section.layout = Layout
settings.section.layout.code_syntax = Code syntax
settings.section.llama_index = Indexes / LlamaIndex
settings.section.llama-index.chat = Chat
settings.section.llama-index.data_loaders = Data loaders
settings.section.llama-index.embeddings = Embeddings
settings.section.llama-index.indexing = Indexing
settings.section.llama-index.store = Vector Store
settings.section.llama-index.update = Update
settings.section.model = Models
settings.section.personalize = Personalize
settings.section.prompts = Prompts
settings.section.remote_tools = Remote tools
settings.section.remote_tools.Anthropic = Anthropic
settings.section.remote_tools.google = Google
settings.section.remote_tools.openai = OpenAI
settings.section.remote_tools.xAI = xAI
settings.section.tab.general = General
settings.section.updates = Updates
settings.section.vision = Vision and camera
settings.section.vision.camera = Camera
settings.store_history = Store history
settings.store_history_time = Store time in history
settings.temperature = Temperature
settings.theme.markdown = Use theme colors in chat window
settings.theme.style = Style (chat)
settings.top_p = Top-p
settings.upload.data_dir = Store images, captures, and uploads in the data directory
settings.upload.data_dir.desc = Enable to store everything in a single data directory
settings.upload.store = Store attachments in the workdir upload directory
settings.upload.store.desc = Enable to store a local copy of uploaded attachments for future use
settings.use_context = Use context (memory)
settings.video.aspect_ratio = Aspect ratio
settings.video.aspect_ratio.desc = Frame aspect ratio (e.g., 16:9, 9:16, 1:1); availability depends on the selected model
settings.video.duration = Video duration
settings.video.duration.desc = Clip length in seconds; limits may vary by model
settings.video.fps = FPS
settings.video.fps.desc = Frames per second (e.g., 24, 25, 30); may be rounded or ignored by the model
settings.video.generate_audio = Generate audio
settings.video.generate_audio.desc = Include synthesized background audio if supported by the model
settings.video.negative_prompt = Negative prompt
settings.video.negative_prompt.desc = Words or phrases to avoid in the output (comma-separated)
settings.video.prompt_model = Prompt enhancement model
settings.video.prompt_model.desc = LLM used to refine your prompt before video generation (not the video model)
settings.video.resolution = Video resolution
settings.video.resolution.desc = Target output resolution (e.g., 720p, 1080p); availability depends on the model
settings.video.seed = Seed
settings.video.seed.desc = Optional random seed for reproducible results; leave empty for random
settings.vision.capture.auto = Auto capture
settings.vision.capture.enabled = Camera
settings.vision.capture.height = Capture height (in pixels)
settings.vision.capture.idx = Camera Device
settings.vision.capture.idx.desc = Select a camera device for real-time video capture
settings.vision.capture.quality = Capture quality (%)
settings.vision.capture.width = Capture width (in pixels)
settings.zero.limit.desc = Set to 0 to disable the limit.
settings.zoom = Chat output window zoom
speech.enable = Speak
speech.listening = Speak now...
status.agent.reasoning = Please wait... reasoning...
status.assistant.deleted = Assistant deleted
status.assistant.saved = Assistant updated
status.audio.start = Generating audio, please wait...
status.audio.stopped = Stopped audio playback.
status.audio.too_short = Audio record is too short. Try again.
status.cmd.wait = Executing command... please wait...
status.deleted = Deleted
status.error = Oops... an error occurred :(
status.evaluating = Please wait... evaluating...
status.finished = Finished.
status.img.generated = Image has been generated.
status.img.saved = Image has been saved.
status.loading = Loading... Please wait
status.preset.cleared = Preset has been cleared.
status.preset.deleted = Preset has been deleted.
status.preset.duplicated = Preset has been duplicated.
status.preset.empty_id = WARNING: Preset ID (filename) is empty! Aborting...
status.preset.saved = Preset has been saved.
status.reloading = Reloading... Please wait
status.reloading.profile.begin = Reloading components... please wait...
status.reloading.profile.end = [OK] Components reloaded successfully.
status.saved = Saved
status.sending = Please wait...
status.started = Ready
status.starting = Starting...
status.stopped = Stopped.
status.tokens = Tokens
status.uploaded = Files have been uploaded
status.uploading = Uploading files...
tab.close_all.confirm = Are you sure you want to close all tabs?
text.context_menu.audio.read = Read (speech synthesis)
text.context_menu.copy_to = Copy to...
text.context_menu.copy_to.calendar = Calendar
text.context_menu.copy_to.input = Input
text.context_menu.copy_to.notepad = Notepad
text.context_menu.copy_to.python.code = Python Interpreter (Code/history)
text.context_menu.copy_to.python.input = Python Interpreter (Input)
text.context_menu.copy_to.translator_left = Translator (left)
text.context_menu.copy_to.translator_right = Translator (right)
text.context_menu.find = Find...
theme.dark = Dark
theme.light = Light
tip.input.attachments = Here you can add attachments to the message you are sending. You can send text files, code files, PDFs, documents, spreadsheets, and others - they will be used as additional context in the conversation. You can also send images or captured photos from a camera for analysis.
tip.input.attachments.ctx = Below are the uploaded and indexed attachments available to use as additional context for the entire discussion above. Options: Full context - attachs the entire content from the attachment in the input prompt, RAG - queries the indexed attachment for additional context, Summary - attachs a summary of the added content in the prompt, Off - disables additional context. **WARNING:** using Full context mode may consume a lot of tokens (as the raw content from the attachment will be attached to the input prompt)!
tip.input.attachments.uploaded = Here is a list of files uploaded to the server in Assistant mode. These files are located on a remote server, not on your local computer, so the model can use and analyze them using tools available externally on the remote server.
tip.output.tab.calendar = Using the calendar, you can navigate back to selected conversations from a specific day. Click on a day in the calendar to limit the display of chat history to that day. You can also create day notes and assign them colorful labels.
tip.output.tab.draw = You can use the drawing tool for quick sketching or capturing an image from the camera, and then send such images to the AI in Vision mode for analysis. You can capture an image with the camera here or open an image from the disk. When using an image, it will be included in the sent message as an attachment.
tip.output.tab.files = This working files directory is on your disk. The files here are accessible for AI. AI can write and read files, as well as run code from this directory. You can open this directory locally on your system and place any files here. You can also index the files from here with LlamaIndex, so they serve as an additional knowledge source.
tip.output.tab.notepad = The notepad can serve as a tool for taking notes and storing information. You can keep any text here, copy text from the chat window, and all information will be automatically saved. You can create more notepads by creating a new Tab.
tip.tokens.ctx = Context (memory): in use / all - tokens
tip.tokens.input = Tokens: input prompt + system prompt + context + extra + attachments = sum / max
tip.toolbox.assistants = The list of assistants shows the assistants created and operating on the remote server. Any changes will be synchronized with the remote assistant.
tip.toolbox.ctx = Create as many conversation contexts as you need; you can return to them at any time.
tip.toolbox.indexes = By indexing conversations and files, you can expand the available knowledge with your own data and conversation history.
tip.toolbox.mode = You can change the working mode and model in real-time.
tip.toolbox.presets = Create presets with different configurations to quickly switch between various settings, such as the system prompt and others.
tip.toolbox.prompt = The current system prompt can be modified in real-time. To enable tools from plugins, enable the option "+ Tools."
toolbox.agent.auto_stop.label = Auto-stop
toolbox.agent.continue.label = Always continue...
toolbox.agent.iterations.label = Max run steps (iterations, 0 = infinity)
toolbox.agent.llama.loop.enabled.label = Loop
toolbox.agent.llama.loop.label = Loop / evaluate (until score, 0% = infinity)
toolbox.agent.llama.loop.mode.complete = Min. % complete
toolbox.agent.llama.loop.mode.score = Min. % score
toolbox.agent.llama.loop.mode.tooltip = Evaluate task completion / or task result accuracy
toolbox.agent.llama.loop.score.tooltip = Required score to finish, 0% = infinity loop
toolbox.agent.preset.placeholder = System prompt is definable per agent in Agent preset
toolbox.agents.label = Agents
toolbox.assistants.label = Assistants
toolbox.env.label = Env
toolbox.experts.label = Experts
toolbox.img_variants.label = Number of image variants to generate
toolbox.indexes.label = Index
toolbox.llama_index.label = LlamaIndex
toolbox.llama_index.mode.chat = Chat
toolbox.llama_index.mode.label = Mode
toolbox.llama_index.mode.query = Query the Index Only
toolbox.llama_index.mode.retrieval = Retrieve Only
toolbox.mode.label = Mode
toolbox.model.label = Model
toolbox.name.ai = AI Name
toolbox.name.user = User Name
toolbox.presets.label = Presets
toolbox.prompt = System prompt
toolbox.remote_tools.label = Remote tools (OpenAI models only)
toolbox.temperature.label = Temperature
tool.html_canvas.menu.file.clear = Clear
tool.html_canvas.menu.file.open = Open
tool.html_canvas.menu.file.reload = Reload
tool.html_canvas.menu.file.save_as = Save as...
tool.indexer = Indexer...
tool.indexer.alert.no_files = No files or directories selected!
tool.indexer.alert.no_idx = No index selected!
tool.indexer.alert.no_loader = No loader selected!
tool.indexer.confirm.idx = Execute indexing?
tool.indexer.confirm.remove = Remove item from index?
tool.indexer.db.copy = Copy value to clipboard
tool.indexer.db.remove = Delete item
tool.indexer.idx = Index
tool.indexer.idx.btn.add = Add to index
tool.indexer.loaders = Available data loaders
tool.indexer.menu.config.settings = Settings
tool.indexer.menu.file.clear_log = Clear log
tool.indexer.menu.file.remove_idx = Remove index
tool.indexer.option.clear = Clear the files list after indexing
tool.indexer.option.recursive = Recursive (include subdirectories)
tool.indexer.option.replace = Remove the old document version from the index (if it exists)
tool.indexer.status = Output Log (LlamaIndex):
tool.indexer.tab.browser = Browse index
tool.indexer.tab.browse.tip = Browse or remove currently indexed elements (database mapping to the index is displayed here).
tool.indexer.tab.ctx = Context
tool.indexer.tab.ctx.auto_enabled = Auto-index enabled
tool.indexer.tab.ctx.auto.no = NO
tool.indexer.tab.ctx.auto.yes = YES
tool.indexer.tab.ctx.idx.tip = Click to batch re-index the context database:
tool.indexer.tab.ctx.last_auto = Last context database index batch update
tool.indexer.tab.ctx.last_meta_id = Last context meta ID
tool.indexer.tab.ctx.last_meta_ts = Last context meta timestamp
tool.indexer.tab.ctx.tip = You can batch re-index the entire context database here or update the data from the last batch indexing.
tool.indexer.tab.files = Files
tool.indexer.tab.files.path.dir = Select directory:
tool.indexer.tab.files.path.files = Select file(s):
tool.indexer.tab.files.tip = Select file(s) or directory to embed files into the selected index. The data loader will be chosen automatically based on the file extension.
tool.indexer.tab.web = Web
tool.indexer.tab.web.cfg = Configuration (global settings) - Settings -> LlamaIndex -> Data loaders
tool.indexer.tab.web.help = Help
tool.indexer.tab.web.loader = Data type
tool.indexer.tab.web.source = Data source
tool.indexer.tab.web.tip = Select a data loader and define the loader parameters to embed external data from the web.
tool.indexer.title = Indexer
tool.web_browser.security.footer = SECURITY NOTICE: For your protection, avoid using the built-in browser for sensitive or critical tasks. It is intended for basic usage only.
translator.btn.left = Translate >>
translator.btn.right = << Translate
translator.clear.confirm = Clear translator output (both columns)?
translator.clear.left.confirm = Clear translator output (left)?
translator.clear.right.confirm = Clear translator output (right)?
translator.label.lang = Language
translator.label.model = Model
translator.search.auto = --- AUTO DETECT ---
translator.search.placeholder = Search language...
translators.menu.file.clear = Clear
untitled = Untitled
update.current_version = Your version
update.download = Go to download
update.info = New version is available
update.info.none = Your version is up to date
update.info.upgrade = You can upgrade now with:
update.new_version = Newest version
updater.check.launch = Check on launch
update.released = build
update.snap = Go to Snap Store
update.title = Check for updates
vid.status.downloading = Downloading video... please wait...
vid.status.generating = Generating video from
vid.status.prompt.error = Enhancement prompt error occured
vid.status.prompt.wait = Preparing prompt... please wait...
vision.capture.auto = Auto capture
vision.capture.auto.click = Auto-capture is enabled!
vision.capture.auto.label = Auto capture enabled
vision.capture.auto.tooltip = If enabled, the image will be automatically captured with every input sent
vision.capture.enable = Camera
vision.capture.enable.tooltip = Enable / disable image capture from the camera
vision.capture.error = Capture error (no camera?)
vision.capture.label = Click on the image to capture
vision.capture.manual.captured.error = Error in capturing from the camera!
vision.capture.manual.captured.success = Image captured from the camera:
vision.capture.name.prefix = Camera capture:
vision.capture.options.title = Video capture
vision.checkbox.tooltip = If checked, the vision model is active. It will be automatically activated upon image upload. You can deactivate it in real-time.
