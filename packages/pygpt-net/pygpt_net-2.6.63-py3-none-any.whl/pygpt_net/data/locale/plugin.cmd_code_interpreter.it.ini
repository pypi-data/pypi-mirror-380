[LOCALE]
attach_output.description = Allega input/output alla finestra dell'interprete del codice Python.
attach_output.label = Connettiti alla finestra dell'interprete del codice Python
auto_cwd.description = Aggiungi automaticamente la directory di lavoro corrente al comando sys_exec.
auto_cwd.label = Aggiunta automatica della CWD a sys_exec
cmd.clear_python_output.description = Abilita l'esecuzione del comando clear_python_output. Se abilitato, permette di cancellare l'output della finestra dell'interprete del codice Python.
cmd.clear_python_output.label = Abilita: clear_python_output
cmd.code_execute_all.description = Abilita l'esecuzione del comando code_execute_all. Se abilitato, consente l'esecuzione di tutto il codice Python nella finestra dell'interprete.
cmd.code_execute_all.label = Abilita: Genera ed esegui codice Python
cmd.code_execute.description = Abilita l'esecuzione del comando code_execute. Se abilitato, consente l'esecuzione di codice Python (genera ed esegui da file).
cmd.code_execute_file.description = Abilita l'esecuzione del comando code_execute_file. Se abilitato, consente l'esecuzione di codice Python da un file .py esistente.
cmd.code_execute_file.label = Abilita: Esegui codice Python (da file)
cmd.code_execute.label = Abilita: Genera ed esegui codice Python
cmd.get_python_input.description = Abilita l'esecuzione del comando get_python_input. Se abilitato, permette il recupero di tutto il codice di input (dalla sezione di modifica) dalla finestra dell'interprete del codice Python.
cmd.get_python_input.label = Abilita: get_python_input
cmd.get_python_output.description = Abilita l'esecuzione del comando get_python_output. Se abilitato, permette il recupero dell'output dalla finestra dell'interprete del codice Python.
cmd.get_python_output.label = Abilita: get_python_output
cmd.sys_exec.description = Abilita l'esecuzione del comando sys_exec. Se abilitato, fornisce l'esecuzione di comandi di sistema.
cmd.sys_exec.label = Abilita: esecuzione comando di sistema
docker_entrypoint.description = Comando da eseguire all'avvio del contenitore
docker_entrypoint.label = Docker Entrypoint
docker_ports.description = Mappatura delle porte Docker: docker <> host. È possibile definire il protocollo (nella chiave DOCKER) con 8888/tcp o lasciare vuota la parte del protocollo per utilizzare il predefinito (TCP)
docker_ports.label = Docker Ports
docker_volumes.description = Mappatura dei volumi Docker: docker <> host, {workdir} - segnaposto per la directory di lavoro corrente sulla macchina host. Verrà utilizzata la modalità r/w.
docker_volumes.label = Docker Volumes
plugin.description = Fornisce l'esecuzione del codice Python
plugin.name = Interprete del codice (v2)
python_cmd_tpl.description = Modello di comando Python da eseguire, usa {filename} come segnaposto per il nome del file.
python_cmd_tpl.label = Modello di comando Python
sandbox_docker.description = Esegue comandi e codice in un sandbox (container Docker). Docker deve essere installato ed in esecuzione.
sandbox_docker_image.description = Immagine Docker da usare per il sandbox.
sandbox_docker_image.label = Immagine Docker
sandbox_docker.label = Sandbox (container Docker)
