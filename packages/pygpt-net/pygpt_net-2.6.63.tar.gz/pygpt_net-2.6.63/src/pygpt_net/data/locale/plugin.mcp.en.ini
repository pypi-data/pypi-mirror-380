[LOCALE]
plugin.description = Provides access to remote tools via the Model Context Protocol (MCP), including stdio, SSE, and Streamable HTTP transports, with per-server allow/deny filtering, Authorization header support, and a tools cache.
plugin.name = MCP
servers.description = Configure MCP servers. Supported transports: 'stdio: <command ...>' for stdio servers, 'http(s)://...' for Streamable HTTP, and 'http(s)://.../sse' (or 'sse://', 'sse+http(s)://') for SSE. Use 'label' as a short, human-friendly server name used in tool names. Use 'authorization' to send an Authorization header for HTTP/SSE connections. Use 'allowed_commands' (comma-separated) to whitelist tools; if provided, only those tools are exposed. Use 'disabled_commands' to blacklist tools from this server.
servers.label = MCP servers
servers.tooltip = Requires the MCP Python SDK. Install: pip install "mcp[cli]"
tools_cache_enabled.description = Enable an in-memory cache of discovered tools to avoid re-discovery on every prompt.
tools_cache_enabled.label = Cache tools list
tools_cache_enabled.tooltip = If enabled, tool discovery results are cached per server for the TTL duration.
tools_cache_ttl.description = Time-to-live for the tools cache per server.
tools_cache_ttl.label = Cache TTL (seconds)
tools_cache_ttl.tooltip = Set to 0 to disable TTL (not recommended).
