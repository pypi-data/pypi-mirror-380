[LOCALE]
attach_output.description = Anhängen der Ein-/Ausgabe an das Python-Code-Interpreterfenster.
attach_output.label = Verbinde zum Python-Code-Interpreterfenster
auto_cwd.description = Fügt automatisch das aktuelle Arbeitsverzeichnis zum sys_exec-Befehl hinzu.
auto_cwd.label = Automatisches Anhängen von CWD zu sys_exec
cmd.clear_python_output.description = Ermöglicht die Ausführung des Befehls clear_python_output. Wenn aktiviert, erlaubt es, die Ausgabe des Python-Code-Interpreterfensters zu löschen.
cmd.clear_python_output.label = Aktivieren: clear_python_output
cmd.code_execute_all.description = Ermöglicht die Ausführung des Befehls code_execute_all. Wenn aktiviert, ermöglicht es die Ausführung des gesamten Python-Codes im Interpreterfenster.
cmd.code_execute_all.label = Aktivieren: Python-Code generieren und ausführen
cmd.code_execute.description = Ermöglicht die Ausführung des Befehls code_execute. Wenn aktiviert, ermöglicht es die Ausführung von Python-Code (generieren und ausführen aus Datei).
cmd.code_execute_file.description = Ermöglicht die Ausführung des Befehls code_execute_file. Wenn aktiviert, ermöglicht es die Ausführung von Python-Code aus einer vorhandenen .py-Datei.
cmd.code_execute_file.label = Aktivieren: Python-Code ausführen (aus Datei)
cmd.code_execute.label = Aktivieren: Python-Code generieren und ausführen
cmd.get_python_input.description = Ermöglicht die Ausführung des Befehls get_python_input. Wenn aktiviert, erlaubt es, allen Eingabecode (aus dem Bearbeitungsbereich) vom Python-Code-Interpreterfenster abzurufen.
cmd.get_python_input.label = Aktivieren: get_python_input
cmd.get_python_output.description = Ermöglicht die Ausführung des Befehls get_python_output. Wenn aktiviert, erlaubt es, die Ausgabe aus dem Python-Code-Interpreterfenster abzurufen.
cmd.get_python_output.label = Aktivieren: get_python_output
cmd.sys_exec.description = Ermöglicht die Ausführung des Befehls sys_exec. Wenn aktiviert, ermöglicht es die Ausführung von Systembefehlen.
cmd.sys_exec.label = Aktivieren: Systembefehle ausführen
docker_entrypoint.description = Befehl zum Ausführen beim Starten des Containers
docker_entrypoint.label = Docker Entrypoint
docker_ports.description = Docker-Ports-Zuordnung: docker <> host. Sie können das Protokoll (im DOCKER-Schlüssel) mit 8888/tcp definieren oder den Protokollteil leer lassen, um das Standardprotokoll (TCP) zu verwenden
docker_ports.label = Docker Ports
docker_volumes.description = Docker-Volumes-Zuordnung: docker <> host, {workdir} - Platzhalter für das aktuelle Arbeitsverzeichnis auf dem Host. Der Modus r/w wird verwendet.
docker_volumes.label = Docker Volumes
plugin.description = Ermöglicht die Ausführung von Python-Code
plugin.name = Code-Interpreter (v2)
python_cmd_tpl.description = Python-Befehlsvorlage zur Ausführung, benutze {filename} als Platzhalter für den Dateinamen.
python_cmd_tpl.label = Python-Befehlsvorlage
sandbox_docker.description = Führt Befehle und Code in einer Sandbox (Docker-Container) aus. Docker muss installiert sein und ausgeführt werden.
sandbox_docker_image.description = Docker-Image zur Verwendung für die Sandbox.
sandbox_docker_image.label = Docker-Image
sandbox_docker.label = Sandbox (Docker-Container)
