[metadata]
name = dkist-inventory
author = NSO / AURA
author_email = stuart@cadair.com
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
description = A shared library for dataset inventory and asdf generation.
long_description = file: README.rst

[options]
zip_safe = False
packages = find:
include_package_data = True
python_requires = >=3.11
setup_requires = setuptools_scm
install_requires = 
	astropy>=6.1.5
	gwcs>=0.24.0
	sunpy[net,asdf]>=5.0
	numpy>=1.25
	ndcube>=2.1
	packaging
	dkist-fits-specifications>=4.1.1
	scipy>=1.11.0
	dkist>=1.12.0
	sqids>=0.5.1
	pydantic>=2.0

[options.extras_require]
asdf = 
	asdf
test = 
	pytest
	pytest-doctestplus
	pytest-cov
	pytest-xdist
	dkist-data-simulator>=5.4.0
	dkist-header-validator
	pytest-mock
	filelock
docs = 
	sphinx
	sphinx-automodapi

[tool:pytest]
testpaths = "dkist_inventory" "docs"
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst
markers = 
	remote_data: marks this test function as needing remote data.
	use_gwcs_fixture: A meta fixture mark for wrapping a gwcs up as a TransformBuilder
filterwarnings = 
	error
	ignore:ERFA function "d2dtf"*
	ignore:ERFA function "dtf2d"*
	ignore:ERFA function "utctai"*
	ignore:ERFA function "utcut1"*
	ignore:ERFA function "taiutc"*
	ignore:Tried to get polar motions for times after IERS data is valid*
	ignore:numpy.ufunc size changed:RuntimeWarning
	ignore:numpy.ndarray size changed:RuntimeWarning
	ignore:the imp module is deprecated in favour of importlib:DeprecationWarning:ipykernel.iostream
	ignore:'cgi' is deprecated and slated for removal in Python 3.13:DeprecationWarning:zeep.utils
	ignore:\nPyarrow will become a required dependency of pandas in the next major release of pandas:DeprecationWarning
	ignore:--ds and --tiled-ds were not found. Any supplied datasets will not be used.:UserWarning
	ignore:datetime.datetime.utcfromtimestamp.* is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC.*
	ignore:datetime.datetime.utcnow.* is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC.*

[flake8]
exclude = conftest.py,docs/conf.py,setup.py,__init__.py
max-line-length = 100
docstring-convention = numpy

[yapf]
column_limit = 100

[pycodestyle]
max_line_length = 100

[mypy]
allow_redefinition = true

[mypy-asdf.*]
ignore_missing_imports = True

[mypy-astropy.*]
ignore_missing_imports = True

[mypy-dkist.*]
ignore_missing_imports = True

[mypy-gwcs.*]
ignore_missing_imports = True

[mypy-sunpy.*]
ignore_missing_imports = True

[mypy-scipy.*]
ignore_missing_imports = True

[mypy-ndcube.*]
ignore_missing_imports = True

[coverage:run]
omit = 
	dkist_inventory/__init*
	dkist_inventory/conftest.py
	dkist_inventory/*setup_package*
	dkist_inventory/tests/*
	dkist_inventory/*/tests/*
	dkist_inventory/extern/*
	dkist_inventory/version*
	*/dkist_inventory/__init*
	*/dkist_inventory/conftest.py
	*/dkist_inventory/*setup_package*
	*/dkist_inventory/tests/*
	*/dkist_inventory/*/tests/*
	*/dkist_inventory/extern/*
	*/dkist_inventory/version*

[coverage:report]
exclude_lines = 
	pragma: no cover
	except ImportError
	raise AssertionError
	raise NotImplementedError
	def main\(.*\):
	pragma: py{ignore_python_version}
	def _ipython_key_completions_

[egg_info]
tag_build = 
tag_date = 0

