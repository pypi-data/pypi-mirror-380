
.alma8_old_build:
  tags:
    - linux
  image: nexus.synerty.com:5000/peek-alma8-build:${RELEASE_BRANCH}
  before_script:
    - uname -a
    - export ARTIFACTS_DIR="$CI_PROJECT_DIR/packages"
    - export PEEK_PKG_CI_TESTS="true"
    - mkdir -p $ARTIFACTS_DIR

    # Set up pip configuration (from pip_common.sh equivalent)
    - mkdir -p ~/.config/pip
    - export PIP_INDEX="http://${NEXUS_USER}:${NEXUS_PASSWORD}@${NEXUS_URL}/repository/pypi-proxy/pypi"
    - export PIP_INDEX_URL="http://${NEXUS_USER}:${NEXUS_PASSWORD}@${NEXUS_URL}/repository/pypi-proxy/simple"
    - export PIP_TRUSTED_HOST="${NEXUS_URL}"

    # Set up npm configuration for nexus
    - echo "registry=http://${NEXUS_URL}/repository/npm-all/" > ~/.npmrc
    - _nexus_auth_encoded=$(echo -n "${NEXUS_USER}:${NEXUS_PASSWORD}" | base64)
    - echo "//${NEXUS_URL}/repository/npm-all/:_auth=${_nexus_auth_encoded}" >> ~/.npmrc
    - export NG_CLI_ANALYTICS=ci
  
    # Set version variables based on RELEASE_TAG
    - if [ -n "${RELEASE_TAG:-}" ];
      then
         export PACKAGE_VERSION="$(echo ${RELEASE_TAG} | cut -d. -f3)";
      else
         export PACKAGE_VERSION="$(echo ${RELEASE_BRANCH} | cut -d. -f3)";
      fi
    - echo "Version configuration - PACKAGE_VERSION=${PACKAGE_VERSION}"

    # Configuring dropbox URL
    - export DROPBOX_UPLOAD_URL="${DROPBOX_BASE_URL}/${PACKAGE_BRANCH}.${PACKAGE_VERSION}"


.alma8_with_epel:
  tags:
    - linux
  image: nexus.synerty.com:5000/peek-package-alma8-test:${RELEASE_BRANCH}
  before_script:
    - uname -a
    - export ARTIFACTS_DIR="$CI_PROJECT_DIR/packages"
    - export PEEK_PKG_CI_TESTS="true"
    - mkdir -p $ARTIFACTS_DIR

    # Set up pip configuration (from pip_common.sh equivalent)
    - mkdir -p ~/.config/pip
    - export PIP_INDEX="http://${NEXUS_USER}:${NEXUS_PASSWORD}@${NEXUS_URL}/repository/pypi-proxy/pypi"
    - export PIP_INDEX_URL="http://${NEXUS_USER}:${NEXUS_PASSWORD}@${NEXUS_URL}/repository/pypi-proxy/simple"
    - export PIP_TRUSTED_HOST="${NEXUS_URL}"

    # Set up npm configuration for nexus
    - echo "registry=http://${NEXUS_URL}/repository/npm-all/" > ~/.npmrc
    - _nexus_auth_encoded=$(echo -n "${NEXUS_USER}:${NEXUS_PASSWORD}" | base64)
    - echo "//${NEXUS_URL}/repository/npm-all/:_auth=${_nexus_auth_encoded}" >> ~/.npmrc
    - export NG_CLI_ANALYTICS=ci
  
    # Set version variables based on RELEASE_TAG
    - if [ -n "${RELEASE_TAG:-}" ];
      then
         export PACKAGE_VERSION="$(echo ${RELEASE_TAG} | cut -d. -f3)";
      else
         export PACKAGE_VERSION="$(echo ${RELEASE_BRANCH} | cut -d. -f3)";
      fi
    - echo "Version configuration - PACKAGE_VERSION=${PACKAGE_VERSION}"

    # Configuring dropbox URL
    - export DROPBOX_UPLOAD_URL="${DROPBOX_BASE_URL}/${PACKAGE_BRANCH}.${PACKAGE_VERSION}"

.alma9_with_epel:
  tags:
    - linux
  image: nexus.synerty.com:5000/peek-package-alma9-test:${RELEASE_BRANCH}
  before_script:
    - uname -a
    - export ARTIFACTS_DIR="$CI_PROJECT_DIR/packages"
    - export PEEK_PKG_CI_TESTS="true"
    - mkdir -p $ARTIFACTS_DIR

    # Set up pip configuration (from pip_common.sh equivalent)
    - mkdir -p ~/.config/pip
    - export PIP_INDEX="http://${NEXUS_USER}:${NEXUS_PASSWORD}@${NEXUS_URL}/repository/pypi-proxy/pypi"
    - export PIP_INDEX_URL="http://${NEXUS_USER}:${NEXUS_PASSWORD}@${NEXUS_URL}/repository/pypi-proxy/simple"
    - export PIP_TRUSTED_HOST="${NEXUS_URL}"

    # Set up npm configuration for nexus
    - echo "registry=http://${NEXUS_URL}/repository/npm-all/" > ~/.npmrc
    - _nexus_auth_encoded=$(echo -n "${NEXUS_USER}:${NEXUS_PASSWORD}" | base64)
    - echo "//${NEXUS_URL}/repository/npm-all/:_auth=${_nexus_auth_encoded}" >> ~/.npmrc
    - export NG_CLI_ANALYTICS=ci
  
    # Set version variables based on RELEASE_TAG
    - if [ -n "${RELEASE_TAG:-}" ];
      then
         export PACKAGE_VERSION="$(echo ${RELEASE_TAG} | cut -d. -f3)";
      else
         export PACKAGE_VERSION="$(echo ${RELEASE_BRANCH} | cut -d. -f3)";
      fi
    - echo "Version configuration - PACKAGE_VERSION=${PACKAGE_VERSION}"

    # Configuring dropbox URL
    - export DROPBOX_UPLOAD_URL="${DROPBOX_BASE_URL}/${PACKAGE_BRANCH}.${PACKAGE_VERSION}"

.amazonlinux2023_with_epel:
  tags:
    - linux
  image: nexus.synerty.com:5000/peek-package-amzn2023-test:${RELEASE_BRANCH}
  before_script:
    - uname -a
    - export ARTIFACTS_DIR="$CI_PROJECT_DIR/packages"
    - export PEEK_PKG_CI_TESTS="true"
    - mkdir -p $ARTIFACTS_DIR

    # Set up pip configuration (from pip_common.sh equivalent)
    - mkdir -p ~/.config/pip
    - export PIP_INDEX="http://${NEXUS_USER}:${NEXUS_PASSWORD}@${NEXUS_URL}/repository/pypi-proxy/pypi"
    - export PIP_INDEX_URL="http://${NEXUS_USER}:${NEXUS_PASSWORD}@${NEXUS_URL}/repository/pypi-proxy/simple"
    - export PIP_TRUSTED_HOST="${NEXUS_URL}"

    # Set up npm configuration for nexus
    - echo "registry=http://${NEXUS_URL}/repository/npm-all/" > ~/.npmrc
    - _nexus_auth_encoded=$(echo -n "${NEXUS_USER}:${NEXUS_PASSWORD}" | base64)
    - echo "//${NEXUS_URL}/repository/npm-all/:_auth=${_nexus_auth_encoded}" >> ~/.npmrc
    - export NG_CLI_ANALYTICS=ci
  
    # Set version variables based on RELEASE_TAG
    - if [ -n "${RELEASE_TAG:-}" ];
      then
         export PACKAGE_VERSION="$(echo ${RELEASE_TAG} | cut -d. -f3)";
      else
         export PACKAGE_VERSION="$(echo ${RELEASE_BRANCH} | cut -d. -f3)";
      fi
    - echo "Version configuration - PACKAGE_VERSION=${PACKAGE_VERSION}"

    # Configuring dropbox URL
    - export DROPBOX_UPLOAD_URL="${DROPBOX_BASE_URL}/${PACKAGE_BRANCH}.${PACKAGE_VERSION}"

.peek_package_template:
  artifacts:
    expire_in: 4 hours
  variables:
    PKG_BUILD_FOR_RHEL8: "false"
    PKG_BUILD_FOR_RHEL9: "false"
    PKG_BUILD_FOR_AL_2023_7: "false"