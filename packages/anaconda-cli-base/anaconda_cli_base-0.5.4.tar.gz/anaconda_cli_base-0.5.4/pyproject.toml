[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs>=0.3", "setuptools-scm>=7.1"]

[project]
dependencies = [
  "rich",
  "click <8.2",
  "readchar",
  "typer",
  "packaging >=23.0",
  "pydantic-settings >=2.3",
  "tomli"
]
description = "A base CLI entrypoint supporting Anaconda CLI plugins"
dynamic = ["version"]
license = {text = "BSD-3-Clause"}
name = "anaconda-cli-base"
readme = "README.md"
requires-python = ">=3.8"

# If anaconda-client is installed last, which defines the script entrypoint "anaconda"
# this plugin is used to redirect the user back to anaconda-cli-base app.
[project.entry-points."anaconda_cli.main"]
anaconda = "anaconda_cli_base.cli:app"

[project.optional-dependencies]
dev = [
  "mypy",
  "pytest",
  "pytest-cov",
  "pytest-mock",
  "tox",
  "types-requests"
]
publish = [
  "build",
  "twine",
  "wheel"
]

[project.scripts]
anaconda = "anaconda_cli_base.cli:app"

[tool.distutils.bdist_wheel]
universal = true

[tool.hatch.build.hooks.vcs]
version-file = "src/anaconda_cli_base/_version.py"

[tool.hatch.build.targets.sdist]
include = [
  "/src/anaconda_cli_base",
  "/pyproject.toml",
  "/tests",
  "/Makefile",
  "/environment-dev.yml"
]

[tool.hatch.version]
source = "vcs"

[tool.mypy]
disallow_untyped_defs = true
files = [
  "src/**/*.py",
  "tests/**/*.py"
]

[[tool.mypy.overrides]]
ignore_errors = true
module = "*._version"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "binstar_client.*"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "rich_click.*"

[tool.pytest.ini_options]
addopts = [
  "--cov=anaconda_cli_base",
  "--color=yes",
  "--cov-append",
  "--cov-branch",
  "--cov-report=html",
  "--cov-report=html:./cov_html",
  "--cov-report=term-missing",
  "--cov-report=xml",
  "--durations=5",
  "-vv"
]
markers = [
  "integration: Integration tests requiring a browser"
]
norecursedirs = ["env", "envs", ".tox"]

[tool.ruff]
target-version = "py38"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38,py39,py310,py311,py312,mypy
isolated_build = True

[gh-actions]
python =
    3.8: py38, mypy
    3.9: py39, mypy
    3.10: py310, mypy
    3.11: py311
    3.12: py312

[testenv]
deps =
    mypy
    pytest
    pytest-cov
    pytest-mock
    typer !=0.12.2
conda_deps =
    anaconda-client >=1.12.2
conda_channels =
    anaconda-cloud
    defaults
    conda-forge
commands = pytest -m "not integration"

[testenv:mypy]
deps =
    mypy
    pytest
    pytest-cov
    pytest-mock
    types-requests
    typer
    rich
commands = mypy
"""

[tool.vendoring]
destination = "src/anaconda_cli_base/_vendor/"
namespace = "anaconda_cli_base._vendor"
patches-dir = "tools/vendoring/patches"
protected-files = ["__init__.py", "requirements.txt"]
requirements = "src/anaconda_cli_base/_vendor/requirements.txt"

[tool.vendoring.license.directories]
setuptools = "pkg_resources"

[tool.vendoring.license.fallback-urls]
readchar = "https://raw.githubusercontent.com/magmax/python-readchar/master/LICENCE"
